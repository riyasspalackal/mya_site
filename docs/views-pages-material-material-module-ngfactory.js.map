{"version":3,"sources":["./node_modules/@angular/cdk/fesm2015/stepper.js","./node_modules/@angular/cdk/fesm2015/tree.js","./node_modules/@angular/material-moment-adapter/fesm2015/material-moment-adapter.js","./node_modules/@angular/material/bottom-sheet/index.d.ts.MatBottomSheetContainer.html","./node_modules/@angular/material/button-toggle/index.d.ts.MatButtonToggle.html","./node_modules/@angular/material/card/index.d.ts.MatCard.html","./node_modules/@angular/material/card/index.d.ts.MatCardHeader.html","./node_modules/@angular/material/card/index.d.ts.MatCardTitleGroup.html","./node_modules/@angular/material/chips/index.d.ts.MatChipList.html","./node_modules/@angular/material/expansion/index.d.ts.MatExpansionPanel.html","./node_modules/@angular/material/expansion/index.d.ts.MatExpansionPanelHeader.html","./node_modules/@angular/material/fesm2015/bottom-sheet.js","./node_modules/@angular/material/fesm2015/button-toggle.js","./node_modules/@angular/material/fesm2015/chips.js","./node_modules/@angular/material/fesm2015/divider.js","./node_modules/@angular/material/fesm2015/grid-list.js","./node_modules/@angular/material/fesm2015/list.js","./node_modules/@angular/material/fesm2015/sidenav.js","./node_modules/@angular/material/fesm2015/slide-toggle.js","./node_modules/@angular/material/fesm2015/slider.js","./node_modules/@angular/material/fesm2015/stepper.js","./node_modules/@angular/material/fesm2015/toolbar.js","./node_modules/@angular/material/fesm2015/tree.js","./node_modules/@angular/material/grid-list/index.d.ts.MatGridList.html","./node_modules/@angular/material/grid-list/index.d.ts.MatGridTile.html","./node_modules/@angular/material/grid-list/index.d.ts.MatGridTileText.html","./node_modules/@angular/material/list/index.d.ts.MatNavList.html","./node_modules/@angular/material/list/index.d.ts.MatList.html","./node_modules/@angular/material/list/index.d.ts.MatListItem.html","./node_modules/@angular/material/list/index.d.ts.MatListOption.html","./node_modules/@angular/material/list/index.d.ts.MatSelectionList.html","./node_modules/@angular/material/progress-bar/index.d.ts.MatProgressBar.html","./node_modules/@angular/material/sidenav/index.d.ts.MatDrawerContent.html","./node_modules/@angular/material/sidenav/index.d.ts.MatDrawer.html","./node_modules/@angular/material/sidenav/index.d.ts.MatDrawerContainer.html","./node_modules/@angular/material/sidenav/index.d.ts.MatSidenavContent.html","./node_modules/@angular/material/sidenav/index.d.ts.MatSidenav.html","./node_modules/@angular/material/sidenav/index.d.ts.MatSidenavContainer.html","./node_modules/@angular/material/slide-toggle/index.d.ts.MatSlideToggle.html","./node_modules/@angular/material/slider/index.d.ts.MatSlider.html","./node_modules/@angular/material/stepper/index.d.ts.MatStep.html","./node_modules/@angular/material/stepper/index.d.ts.MatHorizontalStepper.html","./node_modules/@angular/material/stepper/index.d.ts.MatVerticalStepper.html","./node_modules/@angular/material/stepper/index.d.ts.MatStepHeader.html","./node_modules/@angular/material/toolbar/index.d.ts.MatToolbar.html","./node_modules/@angular/material/tree/index.d.ts.MatTree.html","./src/app/views/pages/material/buttons-and-indicators/button-toggle/button-toggle.component.html","./src/app/views/pages/material/buttons-and-indicators/button-toggle/button-toggle.component.ts","./src/app/views/pages/material/buttons-and-indicators/button/button.component.html","./src/app/views/pages/material/buttons-and-indicators/button/button.component.ts","./src/app/views/pages/material/buttons-and-indicators/chips/chips.component.html","./src/app/views/pages/material/buttons-and-indicators/chips/chips.component.ts","./src/app/views/pages/material/buttons-and-indicators/icon/icon.component.html","./src/app/views/pages/material/buttons-and-indicators/icon/icon.component.ts","./src/app/views/pages/material/buttons-and-indicators/progress-bar/progress-bar.component.html","./src/app/views/pages/material/buttons-and-indicators/progress-bar/progress-bar.component.ts","./src/app/views/pages/material/buttons-and-indicators/progress-spinner/progress-spinner.component.html","./src/app/views/pages/material/buttons-and-indicators/progress-spinner/progress-spinner.component.ts","./src/app/views/pages/material/buttons-and-indicators/ripples/ripples.component.html","./src/app/views/pages/material/buttons-and-indicators/ripples/ripples.component.ts","./src/app/views/pages/material/data-table/material-table/material-table.component.html","./src/app/views/pages/material/data-table/material-table/material-table.component.ts","./src/app/views/pages/material/data-table/paginator/paginator.component.html","./src/app/views/pages/material/data-table/paginator/paginator.component.ts","./src/app/views/pages/material/data-table/sort-header/sort-header.component.html","./src/app/views/pages/material/data-table/sort-header/sort-header.component.ts","./src/app/views/pages/material/formcontrols/autocomplete/autocomplete.component.html","./src/app/views/pages/material/formcontrols/autocomplete/autocomplete.component.ts","./src/app/views/pages/material/formcontrols/checkbox/checkbox.component.html","./src/app/views/pages/material/formcontrols/checkbox/checkbox.component.ts","./src/app/views/pages/material/formcontrols/datepicker/datepicker.component.html","./src/app/views/pages/material/formcontrols/datepicker/datepicker.component.ts","./src/app/views/pages/material/formcontrols/formfield/formfield.component.html","./src/app/views/pages/material/formcontrols/formfield/formfield.component.ts","./src/app/views/pages/material/formcontrols/input/input.component.html","./src/app/views/pages/material/formcontrols/input/input.component.ts","./src/app/views/pages/material/formcontrols/radiobutton/radiobutton.component.html","./src/app/views/pages/material/formcontrols/radiobutton/radiobutton.component.ts","./src/app/views/pages/material/formcontrols/select/select.component.html","./src/app/views/pages/material/formcontrols/select/select.component.ts","./src/app/views/pages/material/formcontrols/slider/slider.component.html","./src/app/views/pages/material/formcontrols/slider/slider.component.ts","./src/app/views/pages/material/formcontrols/slidertoggle/slidertoggle.component.html","./src/app/views/pages/material/formcontrols/slidertoggle/slidertoggle.component.ts","./src/app/views/pages/material/layout/card/card.component.html","./src/app/views/pages/material/layout/card/card.component.ts","./src/app/views/pages/material/layout/divider/divider.component.html","./src/app/views/pages/material/layout/divider/divider.component.ts","./src/app/views/pages/material/layout/expansion-panel/expansion-panel.component.html","./src/app/views/pages/material/layout/expansion-panel/expansion-panel.component.ts","./src/app/views/pages/material/layout/grid-list/grid-list.component.html","./src/app/views/pages/material/layout/grid-list/grid-list.component.ts","./src/app/views/pages/material/layout/list/list.component.html","./src/app/views/pages/material/layout/list/list.component.ts","./src/app/views/pages/material/layout/material-tabs/material-tabs.component.html","./src/app/views/pages/material/layout/material-tabs/material-tabs.component.ts","./src/app/views/pages/material/layout/stepper/stepper.component.html","./src/app/views/pages/material/layout/stepper/stepper.component.ts","./src/app/views/pages/material/layout/tree/tree.component.html","./src/app/views/pages/material/layout/tree/tree.component.ts","./src/app/views/pages/material/material.component.html","./src/app/views/pages/material/material.component.ts","./src/app/views/pages/material/material.module.ts","./src/app/views/pages/material/navigation/menu/menu.component.html","./src/app/views/pages/material/navigation/menu/menu.component.ts","./src/app/views/pages/material/navigation/sidenav/sidenav.component.html","./src/app/views/pages/material/navigation/sidenav/sidenav.component.ts","./src/app/views/pages/material/navigation/toolbar/toolbar.component.html","./src/app/views/pages/material/navigation/toolbar/toolbar.component.ts","./src/app/views/pages/material/popups-and-modals/bottom-sheet/bottom-sheet-example/bottom-sheet-example.component.html","./src/app/views/pages/material/popups-and-modals/bottom-sheet/bottom-sheet-example/bottom-sheet-example.component.ts","./src/app/views/pages/material/popups-and-modals/bottom-sheet/bottom-sheet.component.html","./src/app/views/pages/material/popups-and-modals/bottom-sheet/bottom-sheet.component.ts","./src/app/views/pages/material/popups-and-modals/dialog/dialog.component.ts.Modal3Component.html","./src/app/views/pages/material/popups-and-modals/dialog/dialog.component.ts.Modal2Component.html","./src/app/views/pages/material/popups-and-modals/dialog/dialog.component.ts.ModalComponent.html","./src/app/views/pages/material/popups-and-modals/dialog/dialog.component.html","./src/app/views/pages/material/popups-and-modals/dialog/dialog.component.ts","./src/app/views/pages/material/popups-and-modals/material-tooltip/material-tooltip.component.html","./src/app/views/pages/material/popups-and-modals/material-tooltip/material-tooltip.component.ts","./src/app/views/pages/material/popups-and-modals/snackbar/pizza-party.component.ts.PizzaPartyComponent.html","./src/app/views/pages/material/popups-and-modals/snackbar/pizza-party.component.ts","./src/app/views/pages/material/popups-and-modals/snackbar/snackbar.component.html","./src/app/views/pages/material/popups-and-modals/snackbar/snackbar.component.ts"],"names":[],"mappings":";;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAoD;AACW;AACqB;AACJ;AACrC;AAC+O;AACvP;AACmB;;AAEtD;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,OAAO,uDAAS;AACrB;AACA;AACA;AACA,iBAAiB;AACjB,aAAa;AACb;AACA;AACA;AACA,KAAK,OAAO,wDAAU;AACtB;AACA,WAAW,EAMV;;AAED;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,OAAO,uDAAS;AACrB;AACA,aAAa;AACb;AACA;AACA;AACA,KAAK,OAAO,yDAAW;AACvB;AACA,WAAW,EAMV;;AAED;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,EAqBV;AACD;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA,mCAAmC,4DAAc;AACjD;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B;AAC3B,WAAW,EAcV;AACD;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,yBAAyB,mFAAqB;AAC9C;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,yBAAyB,mFAAqB;AAC9C;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,kCAAkC,mFAAqB;AACvD;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,4BAA4B,mFAAqB;AACjD;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,OAAO,uDAAS;AACrB;AACA;AACA;AACA,+BAA+B,+DAAiB;AAChD,iCAAiC,qEAAuB;AACxD,aAAa;AACb;AACA;AACA;AACA,KAAK,iCAAiC,OAAO,oDAAM,SAAS,gEAAU;AACtE,gCAAgC;AAChC;AACA,0CAA0C,GAAG;AAC7C,KAAK,gCAAgC,OAAO,sDAAQ,EAAE,GAAG,OAAO,oDAAM,mCAAmC;AACzG;AACA;AACA,iBAAiB,OAAO,0DAAY,yBAAyB;AAC7D,eAAe,OAAO,uDAAS,SAAS,yDAAW,GAAG,eAAe,IAAI;AACzE,mBAAmB,OAAO,mDAAK,EAAE;AACjC,aAAa,OAAO,mDAAK,EAAE;AAC3B,oBAAoB,OAAO,mDAAK,EAAE;AAClC,iBAAiB,OAAO,mDAAK,yBAAyB;AACtD,sBAAsB,OAAO,mDAAK,8BAA8B;AAChE,aAAa,OAAO,mDAAK,EAAE;AAC3B,gBAAgB,OAAO,mDAAK,EAAE;AAC9B,gBAAgB,OAAO,mDAAK,EAAE;AAC9B,iBAAiB,OAAO,mDAAK,EAAE;AAC/B,gBAAgB,OAAO,mDAAK,EAAE;AAC9B;AACA,WAAW,EAsFV;AACD;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB,eAAe,GAAG;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B,4CAAO;AACrC;AACA;AACA;AACA;AACA;AACA,mCAAmC,0DAAY;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,uBAAuB,mFAAqB;AAC5C;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB,yBAAyB,kFAAoB;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,mFAAmF,EAAE;AACrF;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,+BAA+B,iEAAe;AAC9C;AACA;AACA,kCAAkC,EAAE,2BAA2B,+CAAE;AACjE,kBAAkB,gEAAS,2BAA2B,gEAAS;AAC/D;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA,gCAAgC,gEAAS;AACzC,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,iCAAiC,cAAc,GAAG,EAAE;AACpD;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mCAAmC,cAAc,GAAG,EAAE;AACtD;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB,4BAA4B,4EAAc;AAC1C,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA;AACA,yBAAyB,2DAAK,gBAAgB,2DAAK;AACnD;AACA;AACA;AACA,6BAA6B,0DAAI;AACjC;AACA;AACA;AACA,6BAA6B,yDAAG;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA;AACA,2BAA2B,EAAE;AAC7B;AACA,2BAA2B,EAAE;AAC7B;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA,KAAK,OAAO,uDAAS;AACrB;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,KAAK,OAAO,gEAAc,gBAAgB,OAAO,sDAAQ,EAAE,GAAG;AAC9D,KAAK,OAAO,+DAAiB,EAAE;AAC/B,KAAK,OAAO,wDAAU,EAAE;AACxB,KAAK,gCAAgC,OAAO,oDAAM,SAAS,wDAAQ,IAAI;AACvE;AACA;AACA,cAAc,OAAO,6DAAe,mBAAmB,oBAAoB,IAAI;AAC/E,mBAAmB,OAAO,6DAAe,yBAAyB,oBAAoB,IAAI;AAC1F,cAAc,OAAO,mDAAK,EAAE;AAC5B,qBAAqB,OAAO,mDAAK,EAAE;AACnC,gBAAgB,OAAO,mDAAK,EAAE;AAC9B,uBAAuB,OAAO,oDAAM,EAAE;AACtC;AACA,WAAW,EAsFV;AACD;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC;AAChC,WAAW,EAqKV;;AAED;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,OAAO,uDAAS;AACrB;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,YAAY,OAAO,mDAAK,EAAE;AAC1B,oBAAoB,OAAO,0DAAY,oBAAoB;AAC3D;AACA,WAAW,EAQV;AACD;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,OAAO,uDAAS;AACrB;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,YAAY,OAAO,mDAAK,EAAE;AAC1B,oBAAoB,OAAO,0DAAY,oBAAoB;AAC3D;AACA,WAAW,EAQV;;AAED;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA;AACA,KAAK,OAAO,sDAAQ;AACpB,0BAA0B,4DAAU;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;;AAEA;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;;AAEA;AACA;AACA;;AAEyM;AACzM;;;;;;;;;;;;;ACjqCA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAwE;AACN;AACT;AAC+N;AACrO;AACiC;AACnC;;AAEjD;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kCAAkC,uEAAc;AAChD;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA,WAAW,EAwCV;;AAED;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC,yFAAyF;AAC7H;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,WAAW,EAKV;;AAED;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA;AACA;AACA,iBAAiB,yDAAY;AAC7B;AACA;AACA,+BAA+B,2DAAI,KAAK,6DAAM,aAAa,EAAE;AAC7D;AACA,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,WAAW,EAGV;;AAED;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB;AACxB,WAAW,EAqFV;;AAED;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA,sCAAsC,4DAAc;AACpD;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,OAAO,uDAAS;AACrB;AACA,aAAa;AACb;AACA;AACA;AACA,KAAK,OAAO,8DAAgB,EAAE;AAC9B,KAAK,gCAAgC,OAAO,oDAAM,sCAAsC,GAAG,OAAO,sDAAQ,EAAE;AAC5G;AACA,WAAW,EAKV;;AAED;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA,WAAW,EAqBV;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,OAAO,uDAAS;AACrB;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,KAAK,OAAO,yDAAW;AACvB;AACA,WAAW,EAYV;;AAED;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B,4CAAO;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B,oDAAe,EAAE,kCAAkC;AACjF;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA,sBAAsB,yBAAyB;AAC/C;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,oDAAoD,EAAE;AACtD,yBAAyB,EAAE;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,oDAAoD,EAAE;AACtD,yBAAyB,EAAE;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,YAAY,6EAAY;AACxB;AACA;AACA,iBAAiB,yDAAY;AAC7B;AACA;AACA;AACA,yBAAyB,+CAAE;AAC3B;AACA;AACA,qDAAqD,gEAAS;AAC9D;AACA,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB,eAAe,GAAG;AAClB,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,mBAAmB,EAAE;AACrB,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA,iDAAiD,EAAE,kCAAkC,EAAE;AACvF;AACA;AACA,iDAAiD,EAAE;AACnD;AACA;AACA;AACA,2BAA2B,EAAE;AAC7B,2DAA2D,EAAE;AAC7D,+CAA+C,EAAE;AACjD;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wCAAwC,EAAE;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,OAAO,uDAAS;AACrB;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB,+BAA+B,+DAAiB;AAChD;AACA;AACA;AACA;AACA,iCAAiC,qEAAuB;AACxD,aAAa;AACb;AACA;AACA;AACA,KAAK,OAAO,6DAAe,EAAE;AAC7B,KAAK,OAAO,+DAAiB;AAC7B;AACA;AACA,kBAAkB,OAAO,mDAAK,EAAE;AAChC,mBAAmB,OAAO,mDAAK,EAAE;AACjC,eAAe,OAAO,mDAAK,EAAE;AAC7B,mBAAmB,OAAO,uDAAS,6BAA6B,eAAe,IAAI;AACnF,iBAAiB,OAAO,6DAAe;AACvC;AACA;AACA;AACA,iBAAiB,IAAI;AACrB;AACA,WAAW,EAwEV;AACD;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B,4CAAO;AACrC;AACA;AACA;AACA,gCAAgC,4CAAO;AACvC;AACA;AACA;AACA;AACA;AACA,qDAAqD,EAAE;AACvD;AACA;AACA;AACA,gBAAgB;AAChB;AACA,gBAAgB,mBAAmB;AACnC;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA,sDAAsD,EAAE;AACxD;AACA,qBAAqB,yDAAY;AACjC,mCAAmC,gEAAS;AAC5C;AACA,2BAA2B,EAAE;AAC7B,4BAA4B;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,OAAO,uDAAS;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB,aAAa;AACb;AACA;AACA;AACA,KAAK,OAAO,wDAAU,EAAE;AACxB,KAAK;AACL;AACA;AACA,YAAY,OAAO,mDAAK,EAAE;AAC1B;AACA,WAAW,EAuCV;;AAED;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA,iDAAiD,EAAE;AACnD;AACA,iBAAiB,yDAAY;AAC7B,+BAA+B,gEAAS;AACxC;AACA,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA;AACA;AACA,qCAAqC,gEAAS;AAC9C;AACA,oBAAoB;AACpB;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA,KAAK,OAAO,uDAAS;AACrB;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA,qBAAqB,uDAAuD;AAC5E,qBAAqB;AACrB;AACA,aAAa;AACb;AACA;AACA;AACA,KAAK,OAAO,wDAAU,EAAE;AACxB,KAAK,gBAAgB;AACrB,KAAK,OAAO,6DAAe;AAC3B;AACA;AACA,kBAAkB,OAAO,6DAAe;AACxC;AACA;AACA;AACA,iBAAiB,IAAI;AACrB;AACA,WAAW,EAiCV;;AAED;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B,4CAAO;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B,gEAAS;AACtC,wBAAwB;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA,iBAAiB,oBAAoB;AACrC;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,kCAAkC,EAAE,KAAK,kFAAoB;AAC7D;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA,kBAAkB,qBAAqB;AACvC;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA,uBAAuB,kFAAoB;AAC3C;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,8CAA8C,qBAAqB,EAAE,iBAAiB;AACtF;AACA;AACA,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA,uBAAuB,EAAE;AACzB;AACA,uBAAuB,EAAE;AACzB;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,OAAO,uDAAS;AACrB;AACA,aAAa;AACb;AACA;AACA;AACA,KAAK,oBAAoB;AACzB,KAAK,gBAAgB;AACrB,KAAK,OAAO,uDAAS,EAAE;AACvB,KAAK,OAAO,wDAAU,EAAE;AACxB,KAAK,OAAO,gEAAc,gBAAgB,OAAO,sDAAQ,EAAE;AAC3D;AACA;AACA,aAAa,OAAO,mDAAK,iCAAiC;AAC1D,cAAc,OAAO,mDAAK,uCAAuC;AACjE;AACA,WAAW,EA4CV;;AAED;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA,qBAAqB,wBAAwB;AAC7C;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA,0BAA0B,mBAAmB,mFAAqB,QAAQ;AAC1E;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,OAAO,uDAAS,UAAU,kCAAkC;AACjE;AACA;AACA;AACA,KAAK,gBAAgB;AACrB,KAAK;AACL;AACA;AACA,iBAAiB,OAAO,mDAAK,yCAAyC;AACtE,eAAe,OAAO,0DAAY,gCAAgC;AAClE;AACA,WAAW,EAkBV;;AAED;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA,WAAW,EAAE;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,OAAO,sDAAQ;AACpB;AACA;AACA,4BAA4B,8DAAY;AACxC,aAAa;AACb;;AAEA;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;;AAEA;AACA;AACA;;AAE+Z;AAC/Z;;;;;;;;;;;;;AC5iDA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAuF;AACC;AAChD;AACU;;AAElD;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA,WAAW,EAAE;AACb,eAAe,6CAAsB,IAAI,mCAAa;AACtD;AACA,6BAA6B,wBAAwB;AACrD;AACA;AACA,wCAAwC;AACxC,WAAW,EAcV;AACD;AACA;AACA,UAAU;AACV;AACA,4CAA4C,4DAAc;AAC1D;AACA;AACA,CAAC;AACD;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,WAAW,EAAE;AACb,YAAY;AACZ;AACA;AACA,eAAe,EAAE;AACjB;AACA,mBAAmB,YAAY;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC,kEAAW;AAC3C;AACA,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gDAAgD,MAAM;AACtD;AACA;AACA,yCAAyC,KAAK;AAC9C;AACA,mBAAmB,EAAE;AACrB,2CAA2C,oBAAoB;AAC/D;AACA;AACA,yCAAyC,KAAK,0BAA0B,MAAM;AAC9E;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,qCAAqC,QAAQ;AAC7C;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,qCAAqC,SAAS;AAC9C;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,qCAAqC,OAAO;AAC5C;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA,eAAe,iBAAiB;AAChC;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,OAAO,wDAAU;AACtB;AACA;AACA;AACA,KAAK,6BAA6B,OAAO,sDAAQ,EAAE,GAAG,OAAO,oDAAM,SAAS,sEAAe,IAAI,GAAG;AAClG,KAAK,gCAAgC,OAAO,sDAAQ,EAAE,GAAG,OAAO,oDAAM,4CAA4C;AAClH;AACA,WAAW,EAWV;;AAED;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA;AACA,KAAK,OAAO,sDAAQ;AACpB;AACA;AACA,iCAAiC,kEAAW;AAC5C;AACA,+BAA+B,sEAAe;AAC9C;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,KAAK,OAAO,sDAAQ;AACpB;AACA,6BAA6B,UAAU,uEAAgB,gBAAgB;AACvE,aAAa;AACb;;AAEA;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;;AAEA;AACA;AACA;;AAEuK;AACvK;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;qMC5ZA,+eAA6B,yBAAhB,kBAAe,EAA5B,YAA6B,EAAhB,SAAe;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8LCA5B,yZASmC,YAA3B;;wBAA0B;MATlC,wBASmC,KACjC,mKAA6C,IAC3C,0DAAY,IAIhB,mKAA6C,KAC7C,4wBAE+D,iDAA1D,yCAAyD,YADzD,wEAA2B,GADhC,YAE+D,EAA1D,SAAyD,EADzD,SAA2B,mDAfxB,mBAAe,WACf,6CAA0C,YAC1C,mBAA6B,UAC7B,qCAA6B,GAC7B,iCAA0B,GAC1B,mBAA6B,YAC7B,mBAAuC,iBAR/C,YASmC,EAP3B,SAAe,EACf,SAA0C,EAC1C,SAA6B,EAC7B,SAA6B,EAC7B,SAA0B,EAC1B,SAA6B,EAC7B,SAAuC,GAQ/C,4GAE+D;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4FClB/D,0DAAY,GACZ,0DAAqC;;;;;;;kGCDrC,0DAAwD,IACxD,wJAAkC,IAChC,0DAGuC,GAEzC,0DAAY;;;;;;;uGCPZ,uHAAK,IACH,0DAGuC,GAEzC,0DAAyB,GACzB,0DAAY;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;iGCPZ,yJAAmC,8DAAY;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;sLCA/C,0DAAgD,IAChD,sUAMW,YAHN;;wBAAuD;MAH5D,wBAMW,KACT,4JAAsC,IACpC,0DAAY,IACZ,qeAAyC,GAE3C,0DAAoC,iDAFrB,mBAA2B,UAAxC,YAAyC,EAA5B,SAA2B,mDAPvC,mBAAsC,sBAEtC,mBAAkC,YAClC,mBAAS,KALd,YAMW,EAJN,SAAsC,EAEtC,SAAkC,EAClC,SAAS;;;;;;;6GCDd,qLACsC,wDADhC,mBAAwC,sBAA9C,YACsC,EADhC,SAAwC;6GAL9C,gJAA0B,IACxB,0DAAqC,GACrC,0DAA2C,GAC3C,0DAAY,IAEd,gZACsC,iDADS,mBAAqB,gBAApE,YACsC,EADS,SAAqB;;;;;;;;;;;;;;;;;;;;;;;;;ACLpE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA6E;AAC0D;AACwI;AACjL;AACxB;AACW;AAC5B;AACA;AACF;AACT;AACqB;AACjB;;AAE9C;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA,UAAU;AACV;AACA,kCAAkC,4DAAc;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,EAgEV;;AAED;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA,sBAAsB,mEAAO;AAC7B,QAAQ,iEAAK,iBAAiB,iEAAK,EAAE,gCAAgC;AACrE,QAAQ,iEAAK,YAAY,iEAAK,EAAE,8BAA8B;AAC9D,QAAQ,sEAAU,uCAAuC,mEAAO,IAAI,yEAAkB,SAAS,GAAG,sEAAe,oBAAoB;AACrI,QAAQ,sEAAU,oBAAoB,mEAAO,IAAI,yEAAkB,SAAS,GAAG,sEAAe,oBAAoB;AAClH;AACA;;AAEA;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA;AACA;AACA;AACA,sCAAsC,oEAAgB;AACtD;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0CAA0C,0DAAY;AACtD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,sBAAsB,+DAAW,SAAS,+DAAW,QAAQ,+DAAW;AACxE;AACA,oBAAoB;AACpB;AACA;AACA,gGAAgG,+DAAW;AAC3G,+FAA+F,+DAAW;AAC1G,gGAAgG,+DAAW;AAC3G,SAAS;AACT;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA,uBAAuB,EAAE;AACzB;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,uDAAuD,EAAE;AACzD;AACA;AACA;AACA,wBAAwB;AACxB;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,OAAO,uDAAS;AACrB;AACA;AACA,iCAAiC,qEAAuB;AACxD,+BAA+B,+DAAiB;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB,sDAAsD,iBAAiB,gBAAgB,sBAAsB,cAAc,UAAU,gBAAgB,cAAc,sDAAsD,kBAAkB,wGAAwG,2BAA2B,4BAA4B,mCAAmC,gBAAgB,8BAA8B,kCAAkC,gBAAgB,8BAA8B,mCAAmC,gBAAgB,8BAA8B;AAC5nB,aAAa;AACb;AACA;AACA;AACA,KAAK,OAAO,wDAAU,EAAE;AACxB,KAAK,OAAO,+DAAiB,EAAE;AAC/B,KAAK,OAAO,kEAAgB,EAAE;AAC9B,KAAK,OAAO,sEAAkB,EAAE;AAChC,KAAK,gCAAgC,OAAO,sDAAQ,EAAE,GAAG,OAAO,oDAAM,SAAS,wDAAQ,IAAI,GAAG;AAC9F,KAAK;AACL;AACA;AACA,qBAAqB,OAAO,uDAAS,SAAS,mEAAe,GAAG,eAAe,IAAI;AACnF;AACA,WAAW,EAwEV;;AAED;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA;AACA,KAAK,OAAO,sDAAQ;AACpB;AACA,oBAAoB,kEAAa;AACjC,oBAAoB,sEAAe;AACnC,oBAAoB,gEAAY;AAChC;AACA,mDAAmD,sEAAe;AAClE;AACA;AACA,aAAa;AACb;;AAEA;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC,4CAAO;AAC1C;AACA;AACA;AACA,gCAAgC,4CAAO;AACvC;AACA;AACA;AACA,sDAAsD,8DAAM;AAC5D,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA,8EAA8E,4DAAI;AAClF;AACA,oBAAoB;AACpB;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,kBAAkB,8DAAM;AACxB,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA,6EAA6E,4DAAI;AACjF;AACA,oBAAoB;AACpB;AACA;AACA;AACA;AACA,SAAS;AACT,uCAAuC,4DAAI;AAC3C,oBAAoB;AACpB;AACA;AACA;AACA;AACA,SAAS;AACT,QAAQ,kDAAK,+DAA+D,8DAAM;AAClF,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA,mCAAmC,6DAAM;AACzC,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA,8CAA8C,6EAAc,aAAa,EAAE;AAC3E;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA;AACA;AACA,+DAA+D,8DAAM;AACrE,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA,oDAAoD,4DAAI;AACxD,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B;AAC5B;AACA;AACA;AACA,iBAAiB;AACjB;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,WAAW,EA8CV;;AAED;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA,UAAU;AACV;AACA,6CAA6C,4DAAc;AAC3D;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB,eAAe,GAAG;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,8CAA8C,yDAAW;AACzD,+CAA+C,kEAAc,qCAAqC,EAAE,yBAAyB,EAAE;AAC/H;AACA;AACA,aAAa;AACb;AACA;AACA,uBAAuB,EAAE;AACzB,+BAA+B,mEAAe;AAC9C,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,wBAAwB;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB,6BAA6B,kEAAc;AAC3C;AACA;AACA,mBAAmB,EAAE;AACrB,oCAAoC,mEAAe;AACnD,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB,kCAAkC,kEAAa;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA,gDAAgD,gEAAc;AAC9D,gCAAgC,gEAAc;AAC9C;AACA,wBAAwB,+CAAE;AAC1B,aAAa;AACb;AACA,mBAAmB,kEAAc;AACjC;AACA;AACA;AACA,KAAK,OAAO,wDAAU,UAAU,mCAAmC;AACnE;AACA;AACA;AACA,KAAK,OAAO,4DAAO,EAAE;AACrB,KAAK,OAAO,sDAAQ,EAAE;AACtB,KAAK,qCAAqC,OAAO,sDAAQ,EAAE,GAAG,OAAO,sDAAQ,EAAE,GAAG;AAClF,KAAK,OAAO,wDAAQ,gBAAgB,OAAO,sDAAQ,EAAE,GAAG;AACxD,KAAK,2CAA2C,OAAO,sDAAQ,EAAE,GAAG,OAAO,oDAAM,6CAA6C;AAC9H;AACA,0CAA0C,wEAAkB,EAAE,6CAA6C,2BAA2B,8DAAQ,CAAC,4DAAO,GAAG,8DAAQ,CAAC,sDAAQ,GAAG,8DAAQ,sBAAsB,8DAAQ,CAAC,wDAAQ,MAAM,8DAAQ,uCAAuC,EAAE,2DAA2D;AAC9U,WAAW,EA+BV;AACD;AACA;AACA,WAAW,EAAE;AACb,WAAW,GAAG;AACd,YAAY,EAAE;AACd;AACA;AACA,yCAAyC;AACzC;;AAEA;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;;AAEA;AACA;AACA;;AAEqM;AACrM;;;;;;;;;;;;;ACz8BA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAiD;AACa;AACJ;AACkM;AACzM;AAC2C;;AAE9F;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA;AACA;AACA;AACA,0CAA0C;AAC1C,WAAW,EAGV;AACD;AACA;AACA;AACA,UAAU;AACV;AACA,8CAA8C,4DAAc;AAC5D;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA,aAAa,gEAAiB;AAC9B,iBAAiB,gEAAU;AAC3B,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,EAWV;AACD;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA,eAAe,EAAE;AACjB,gDAAgD,mBAAmB;AACnE;AACA;AACA;AACA;AACA;AACA,+BAA+B,0DAAY;AAC3C;AACA;AACA;AACA,0BAA0B,0DAAY;AACtC;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA,gBAAgB,mBAAmB;AACnC;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA,oBAAoB,uBAAuB;AAC3C;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,yBAAyB,mFAAqB;AAC9C;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA,oBAAoB,uBAAuB;AAC3C;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,yBAAyB,mFAAqB;AAC9C;AACA;AACA;AACA,gBAAgB;AAChB;AACA,oBAAoB,uBAAuB;AAC3C;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,yBAAyB,mFAAqB;AAC9C;AACA;AACA,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,mCAAmC,uEAAc;AACjD;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB,4DAA4D,EAAE;AAC9D;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,yBAAyB,EAAE;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,OAAO,uDAAS;AACrB;AACA;AACA;AACA,qBAAqB,2EAA2E;AAChG;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA,aAAa;AACb;AACA;AACA;AACA,KAAK,OAAO,+DAAiB,EAAE;AAC/B,KAAK,gCAAgC,OAAO,sDAAQ,EAAE,GAAG,OAAO,oDAAM,8CAA8C;AACpH;AACA;AACA,sBAAsB,OAAO,6DAAe,SAAS,gEAAU;AAC/D,4BAA4B;AAC5B;AACA;AACA;AACA;AACA;AACA,iBAAiB,IAAI;AACrB,kBAAkB,OAAO,mDAAK,EAAE;AAChC,YAAY,OAAO,mDAAK,EAAE;AAC1B,gBAAgB,OAAO,mDAAK,EAAE;AAC9B,aAAa,OAAO,mDAAK,EAAE;AAC3B,mBAAmB,OAAO,oDAAM,EAAE;AAClC,gBAAgB,OAAO,mDAAK,EAAE;AAC9B,gBAAgB,OAAO,mDAAK,EAAE;AAC9B,cAAc,OAAO,oDAAM,EAAE;AAC7B;AACA,WAAW,EA+EV;AACD;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,kCAAkC,iFAAkB;AACpD;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B,0DAAY;AACtC,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA,oBAAoB,WAAW,QAAQ,SAAS;AAChD;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB,yBAAyB,mFAAqB;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA,yBAAyB,kBAAkB,mFAAqB,QAAQ;AACxE;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA,kDAAkD,mBAAmB;AACrE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,OAAO,uDAAS;AACrB;AACA;AACA,+BAA+B,+DAAiB;AAChD;AACA,iCAAiC,qEAAuB;AACxD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB,iFAAiF,kBAAkB,oBAAoB,mBAAmB,mBAAmB,gBAAgB,kBAAkB,wCAAwC,2GAA2G,kBAAkB,iHAAiH,kBAAkB,qKAAqK,UAAU,4BAA4B,sBAAsB,6DAA6D,cAAc,mBAAmB,mBAAmB,kBAAkB,iCAAiC,mBAAmB,yEAAyE,UAAU,mGAAmG,WAAW,+GAA+G,YAAY,8HAA8H,YAAY,wJAAwJ,WAAW,oBAAoB,+GAA+G,cAAc,iCAAiC,yBAAyB,sBAAsB,qBAAqB,iBAAiB,qBAAqB,iBAAiB,eAAe,kBAAkB,wEAAwE,iBAAiB,eAAe,mCAAmC,sBAAsB,iCAAiC,sBAAsB,oBAAoB,UAAU,MAAM,OAAO,QAAQ,SAAS,kBAAkB,4DAA4D,yBAAyB,sFAAsF,WAAW,SAAS,4HAA4H,yBAAyB,6CAA6C,MAAM,OAAO,QAAQ,SAAS,kBAAkB,oBAAoB,0BAA0B,SAAS,gBAAgB,cAAc,UAAU,SAAS,aAAa,aAAa,WAAW,eAAe,sDAAsD,eAAe,4CAA4C,SAAS;AACnyF,aAAa;AACb;AACA;AACA;AACA,KAAK,2CAA2C,OAAO,sDAAQ,EAAE,GAAG;AACpE,KAAK,OAAO,+DAAiB,EAAE;AAC/B,KAAK,OAAO,wDAAU,EAAE;AACxB,KAAK,OAAO,8DAAY,EAAE;AAC1B,KAAK,6BAA6B,OAAO,uDAAS,uBAAuB,GAAG;AAC5E,KAAK,gCAAgC,OAAO,sDAAQ,EAAE,GAAG,OAAO,oDAAM,8CAA8C;AACpH;AACA;AACA,iBAAiB,OAAO,mDAAK,yBAAyB;AACtD,sBAAsB,OAAO,mDAAK,8BAA8B;AAChE,sBAAsB,OAAO,uDAAS,qBAAqB;AAC3D,UAAU,OAAO,mDAAK,EAAE;AACxB,YAAY,OAAO,mDAAK,EAAE;AAC1B,aAAa,OAAO,mDAAK,EAAE;AAC3B,gBAAgB,OAAO,mDAAK,EAAE;AAC9B,kBAAkB,OAAO,mDAAK,EAAE;AAChC,eAAe,OAAO,mDAAK,EAAE;AAC7B,gBAAgB,OAAO,mDAAK,EAAE;AAC9B,cAAc,OAAO,oDAAM,EAAE;AAC7B;AACA,WAAW,EA8FV;;AAED;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA;AACA,KAAK,OAAO,sDAAQ;AACpB,0BAA0B,sEAAe,EAAE,sEAAe;AAC1D,0BAA0B,sEAAe;AACzC;AACA,aAAa;AACb;;AAEA;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;;AAEA;AACA;AACA;;AAEwM;AACxM;;;;;;;;;;;;;ACr2BA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAwG;AACqK;AACxF;AAC1I;AACmB;AACb;AACX;AACsB;AACiB;AACzB;AACD;AACO;AACa;AACJ;;AAEnE;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB,WAAW,EAMV;AACD;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,EAgBV;AACD;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA,WAAW,EAGV;AACD,WAAW,EAAE;AACb,0BAA0B,4EAAa,CAAC,yEAAU,CAAC,iFAAkB,CAAC,4EAAa;AACnF;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,OAAO,uDAAS;AACrB;AACA,uBAAuB;AACvB,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,OAAO,uDAAS;AACrB;AACA,uBAAuB;AACvB,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB,eAAe,GAAG;AAClB,eAAe,GAAG;AAClB,eAAe,GAAG;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B,4CAAO;AACnC;AACA;AACA;AACA,2BAA2B,4CAAO;AAClC;AACA;AACA;AACA,mCAAmC,0DAAY;AAC/C;AACA;AACA;AACA,6BAA6B,0DAAY;AACzC;AACA;AACA;AACA,2BAA2B,0DAAY;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B,qEAAc;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA,oBAAoB,uBAAuB;AAC3C;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB,6BAA6B,mFAAqB;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA,sBAAsB,qBAAqB;AAC3C;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA,sBAAsB,oDAAoD;AAC1E;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,2BAA2B,mFAAqB;AAChD;AACA;AACA;AACA,gBAAgB;AAChB;AACA,qBAAqB,wBAAwB;AAC7C;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,0BAA0B,mFAAqB;AAC/C;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB,oCAAoC,EAAE;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,6BAA6B,aAAa;AAC1C;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA,gCAAgC,aAAa;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,+BAA+B,aAAa;AAC5C;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,4DAAM;AACvB,iBAAiB,+DAAS;AAC1B;AACA;AACA;AACA;AACA;AACA,iBAAiB,2DAAK;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB,2DAAI;AACtB;AACA,oBAAoB;AACpB;AACA;AACA;AACA,wBAAwB;AACxB;AACA;AACA;AACA,mCAAmC,aAAa;AAChD,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,OAAO,uDAAS;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB,aAAa;AACb;AACA;AACA;AACA,KAAK,OAAO,wDAAU,EAAE;AACxB,KAAK,OAAO,oDAAM,EAAE;AACpB,KAAK,OAAO,8DAAQ,EAAE;AACtB,KAAK,gCAAgC,OAAO,sDAAQ,EAAE,GAAG,OAAO,oDAAM,SAAS,gFAAyB,IAAI,GAAG;AAC/G,KAAK,6BAA6B,OAAO,sDAAQ,EAAE,GAAG,OAAO,oDAAM,SAAS,0FAAqB,IAAI,GAAG;AACxG,KAAK,OAAO,+DAAiB,EAAE;AAC/B,KAAK,6BAA6B,OAAO,uDAAS,uBAAuB,GAAG;AAC5E,KAAK,gCAAgC,OAAO,sDAAQ,EAAE,GAAG,OAAO,oDAAM,SAAS,wDAAQ,IAAI;AAC3F;AACA;AACA,cAAc,OAAO,0DAAY,0BAA0B;AAC3D,oBAAoB,OAAO,0DAAY,gCAAgC;AACvE,kBAAkB,OAAO,0DAAY,SAAS,gEAAU;AACxD,4BAA4B;AAC5B;AACA,yCAAyC;AACzC,gBAAgB,OAAO,mDAAK,EAAE;AAC9B,aAAa,OAAO,mDAAK,EAAE;AAC3B,kBAAkB,OAAO,mDAAK,EAAE;AAChC,iBAAiB,OAAO,mDAAK,EAAE;AAC/B,uBAAuB,OAAO,oDAAM,EAAE;AACtC,iBAAiB,OAAO,oDAAM,EAAE;AAChC,eAAe,OAAO,oDAAM,EAAE;AAC9B;AACA,WAAW,EA6HV;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,OAAO,uDAAS;AACrB;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,KAAK,gBAAgB;AACrB,KAAK,OAAO,wDAAU;AACtB;AACA,WAAW,EAMV;;AAED;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA;AACA;AACA,mCAAmC;AACnC,WAAW,EAMV;AACD;AACA;AACA,UAAU;AACV;AACA,sCAAsC,4DAAc;;AAEpD;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,EAYV;AACD,WAAW,EAAE;AACb,8BAA8B,8EAAe;AAC7C;AACA,WAAW,EAAE;AACb;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,EAWV;AACD;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B,4CAAO;AACrC;AACA;AACA;AACA,qCAAqC,eAAe;AACpD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA,eAAe,EAAE;AACjB;AACA;AACA,mBAAmB,EAAE;AACrB,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B,0DAAY;AACtC;AACA;AACA;AACA;AACA;AACA,+BAA+B,0DAAY;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA,gBAAgB,sCAAsC;AACtD;AACA;AACA,gBAAgB;AAChB;AACA,oBAAoB,uBAAuB;AAC3C;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,yBAAyB,mFAAqB;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA,uBAAuB,0BAA0B;AACjD;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA,iBAAiB,oBAAoB;AACrC;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA,oBAAoB,uBAAuB;AAC3C;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,yBAAyB,mFAAqB;AAC9C;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA,4BAA4B,oCAAoC;AAChE;AACA;AACA;AACA,gBAAgB;AAChB;AACA,oBAAoB,oEAAoE;AACxF;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,yBAAyB,mFAAqB;AAC9C;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA,sBAAsB,yBAAyB;AAC/C;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,2BAA2B,mFAAqB;AAChD;AACA;AACA,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,eAAe,kDAAK;AACpB,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,eAAe,kDAAK;AACpB,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,eAAe,kDAAK;AACpB,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,eAAe,kDAAK;AACpB,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,+BAA+B,iEAAe;AAC9C;AACA;AACA;AACA;AACA;AACA,sBAAsB,gEAAS;AAC/B;AACA,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA;AACA;AACA,qCAAqC,gEAAS;AAC9C,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA,gCAAgC,gEAAS,QAAQ,gEAAS;AAC1D,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B;AAC5B;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,gBAAgB;AAChB;AACA;AACA,mCAAmC,wEAAc;AACjD;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA,4BAA4B,uCAAuC;AACnE;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB,mCAAmC,EAAE;AACrC;AACA,8BAA8B,+DAAS;AACvC;AACA;AACA;AACA;AACA,kCAAkC,0DAAI;AACtC;AACA;AACA;AACA,uCAAuC,yDAAG;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,2BAA2B,EAAE;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB,EAAE;AAClB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,uBAAuB,EAAE;AACzB,oCAAoC,EAAE;AACtC;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB,gBAAgB,EAAE;AAClB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B;AAC5B;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,wBAAwB;AACxB;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,EAAE;AAC7B,4BAA4B;AAC5B;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,oBAAoB;AACpB;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA,uBAAuB,EAAE;AACzB;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB,yCAAyC,EAAE;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,KAAK,OAAO,uDAAS;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB,6BAA6B,UAAU,iFAAmB,4BAA4B;AACtF,+BAA+B,+DAAiB;AAChD,iCAAiC,qEAAuB;AACxD,oCAAoC,kBAAkB,sBAAsB,wCAAwC,wBAAwB,YAAY,wBAAwB,qBAAqB,mBAAmB,yDAAyD,oBAAoB,iBAAiB,mBAAmB,mBAAmB,eAAe,gBAAgB,WAAW,2CAA2C,gBAAgB,eAAe,6CAA6C,WAAW,YAAY,0BAA0B,MAAM,OAAO,QAAQ,SAAS,kBAAkB,sBAAsB,UAAU,aAAa,oBAAoB,wDAAwD,gCAAgC,YAAY,yBAAyB,aAAa,gCAAgC,YAAY,6CAA6C,kBAAkB,mDAAmD,mBAAmB,4CAA4C,UAAU,mHAAmH,eAAe,4GAA4G,cAAc,iBAAiB,oEAAoE,kBAAkB,eAAe,8EAA8E,iBAAiB,gBAAgB,+CAA+C,gBAAgB,mBAAmB,kBAAkB,kBAAkB,yDAAyD,iBAAiB,mBAAmB,wCAAwC,eAAe,mBAAmB,kDAAkD,gBAAgB,kBAAkB,oCAAoC,WAAW,YAAY,iBAAiB,gBAAgB,8CAA8C,gBAAgB,iBAAiB,+EAA+E,WAAW,YAAY,eAAe,+EAA+E,gBAAgB,eAAe,mGAAmG,iBAAiB,cAAc,iBAAiB,MAAM,OAAO,QAAQ,SAAS,kBAAkB,oBAAoB,sBAAsB,gBAAgB,uBAAuB,aAAa,mBAAmB,eAAe,mBAAmB,YAAY,yFAAyF,WAAW,8CAA8C,sBAAsB,uBAAuB,iEAAiE,WAAW,iBAAiB,kBAAkB,uBAAuB,mBAAmB,aAAa,gBAAgB,iBAAiB,qBAAqB,YAAY,WAAW,eAAe;AACnhG,aAAa;AACb;AACA;AACA;AACA,KAAK,OAAO,wDAAU,EAAE;AACxB,KAAK,OAAO,+DAAiB,EAAE;AAC/B,KAAK,OAAO,iEAAc,gBAAgB,OAAO,sDAAQ,EAAE,GAAG;AAC9D,KAAK,OAAO,sDAAM,gBAAgB,OAAO,sDAAQ,EAAE,GAAG;AACtD,KAAK,OAAO,kEAAkB,gBAAgB,OAAO,sDAAQ,EAAE,GAAG;AAClE,KAAK,OAAO,wEAAiB,EAAE;AAC/B,KAAK,OAAO,yDAAS,gBAAgB,OAAO,sDAAQ,EAAE,GAAG,OAAO,kDAAI,EAAE;AACtE;AACA;AACA,yBAAyB,OAAO,mDAAK,EAAE;AACvC,gBAAgB,OAAO,mDAAK,EAAE;AAC9B,mBAAmB,OAAO,mDAAK,EAAE;AACjC,aAAa,OAAO,mDAAK,EAAE;AAC3B,gBAAgB,OAAO,mDAAK,EAAE;AAC9B,mBAAmB,OAAO,mDAAK,EAAE;AACjC,gBAAgB,OAAO,mDAAK,EAAE;AAC9B,uBAAuB,OAAO,mDAAK,+BAA+B;AAClE,kBAAkB,OAAO,mDAAK,EAAE;AAChC,gBAAgB,OAAO,mDAAK,EAAE;AAC9B,cAAc,OAAO,oDAAM,EAAE;AAC7B,mBAAmB,OAAO,oDAAM,EAAE;AAClC,aAAa,OAAO,6DAAe;AACnC;AACA;AACA;AACA,iBAAiB,IAAI;AACrB;AACA,WAAW,EAmLV;;AAED;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA;AACA;AACA,8BAA8B;AAC9B,WAAW,EAWV;AACD;AACA,WAAW,EAAE;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,0DAAY;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yCAAyC,iBAAiB;AAC1D;AACA,yCAAyC,EAAE;AAC3C;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA,qBAAqB,wBAAwB;AAC7C;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA,0BAA0B,mBAAmB,mFAAqB,QAAQ;AAC1E;AACA;AACA,gBAAgB;AAChB;AACA,oBAAoB,sEAAsE;AAC1F;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA,yBAAyB,kBAAkB,mFAAqB,QAAQ;AACxE;AACA;AACA,gBAAgB;AAChB;AACA,iBAAiB,kCAAkC;AACnD;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA;AACA;AACA,uCAAuC,yDAAG,KAAK,4EAAc;AAC7D;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B,6DAA6D;AAC5F;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,YAAY,4EAAc;AAC1B;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA,KAAK,OAAO,uDAAS;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,KAAK,OAAO,wDAAU,EAAE;AACxB,KAAK,gCAAgC,OAAO,oDAAM,sCAAsC;AACxF;AACA;AACA,gBAAgB,OAAO,mDAAK,8BAA8B;AAC1D,iBAAiB,OAAO,mDAAK,oCAAoC;AACjE,yBAAyB,OAAO,mDAAK,4CAA4C;AACjF,eAAe,OAAO,oDAAM,mCAAmC;AAC/D,mBAAmB,OAAO,mDAAK,EAAE;AACjC,UAAU,OAAO,mDAAK,EAAE;AACxB,gBAAgB,OAAO,mDAAK,EAAE;AAC9B;AACA,WAAW,EAyDV;;AAED;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA,WAAW,EAAE;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,2DAAK;AAC7B,CAAC;AACD;AACA;AACA;AACA,KAAK,OAAO,sDAAQ;AACpB;AACA;AACA;AACA,oBAAoB,wEAAiB;AACrC;AACA;AACA,8CAA8C,EAAE;AAChD;AACA;AACA,aAAa;AACb;;AAEA;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;;AAEA;AACA;AACA;;AAEuL;AACvL;;;;;;;;;;;;;ACzqEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAuG;AACzC;AACL;;AAEzD;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AAC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;AACA;AACA,cAAc,OAAO,6DAAe,SAAS,8DAAO,GAAG,oBAAoB,IAAI;AAC/E;AACA,WAAW,EAQV;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,OAAO,uDAAS;AACrB;AACA,uBAAuB;AACvB,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,OAAO,uDAAS;AACrB;AACA,uBAAuB;AACvB,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,OAAO,uDAAS;AACrB;AACA,uBAAuB;AACvB,aAAa;AACb;;AAEA;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB,WAAW,EAWV;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA,oBAAoB,0BAA0B;AAC9C;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,4DAA4D,SAAS;AACrE,mCAAmC,oBAAoB;AACvD;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,uBAAuB,yBAAyB;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,uCAAuC,yBAAyB;AAChE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,uBAAuB,kBAAkB;AACzC;AACA;AACA;AACA;AACA,WAAW,EAqBV;AACD;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,EAKV;;AAED;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB,EAAE;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,YAAY,OAAO,iBAAiB,KAAK,eAAe;AAC3E;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB,EAAE;AAClB;AACA;AACA;AACA;AACA,6CAA6C,SAAS,KAAK,iBAAiB,MAAM,OAAO;AACzF;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB,EAAE;AAClB;AACA;AACA,mBAAmB,SAAS,KAAK,KAAK,OAAO,SAAS,KAAK,iBAAiB;AAC5E;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,kBAAkB,iBAAiB,MAAM,cAAc;AACvD;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,kBAAkB,cAAc,KAAK,gCAAgC;AACrE;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA,yBAAyB,aAAa;AACtC;AACA,WAAW,EA+BV;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,0CAA0C,oBAAoB;AAC9D;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,8BAA8B,sCAAsC,KAAK,qBAAqB;AAC9F;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,WAAW,EAGV;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,qCAAqC,sCAAsC,KAAK,qBAAqB;AACrG;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA,+EAA+E,MAAM;AACrF;AACA;AACA;AACA;AACA,WAAW,EAQV;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,YAAY;AACZ;AACA;AACA,mBAAmB,IAAI;AACvB;AACA;AACA;AACA,WAAW,EAAE;AACb,YAAY;AACZ;AACA;AACA,qDAAqD,MAAM;AAC3D;;AAEA;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA,gBAAgB,mBAAmB;AACnC;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,4CAA4C,kFAAoB;AAChE;AACA;AACA;AACA,gBAAgB;AAChB;AACA,sBAAsB,qBAAqB;AAC3C;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA,2BAA2B,mBAAmB,2BAA2B,EAAE;AAC3E;AACA;AACA,gBAAgB;AAChB;AACA,qBAAqB,wBAAwB;AAC7C;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB,4BAA4B,2BAA2B;AACvD;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,yBAAyB,EAAE;AAC3B;AACA;AACA;AACA;AACA,KAAK,OAAO,uDAAS;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,qBAAqB;AACrB,iCAAiC,qEAAuB;AACxD,+BAA+B,+DAAiB;AAChD,yCAAyC,cAAc,kBAAkB,eAAe,cAAc,kBAAkB,gBAAgB,2BAA2B,MAAM,OAAO,QAAQ,SAAS,kB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CA;AACA;AACA;AACA;AACA;AACA,0CAA0C,gEAAS;AACnD,wBAAwB;AACxB;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA,oBAAoB,gEAAgE;AACpF;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,yBAAyB,mFAAqB;AAC9C;AACA;AACA,gBAAgB;AAChB;AACA;AACA,QAAQ,uEAAQ;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,OAAO,uDAAS;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA,+BAA+B,+DAAiB;AAChD,iCAAiC,qEAAuB;AACxD,aAAa;AACb;AACA;AACA;AACA,KAAK,OAAO,wDAAU,EAAE;AACxB,KAAK,OAAO,+DAAiB,EAAE;AAC/B,KAAK,iCAAiC,OAAO,sDAAQ,EAAE,GAAG;AAC1D,KAAK,8BAA8B,OAAO,sDAAQ,EAAE;AACpD;AACA;AACA,cAAc,OAAO,6DAAe,SAAS,8DAAO,GAAG,oBAAoB,IAAI;AAC/E,eAAe,OAAO,0DAAY,sCAAsC;AACxE,aAAa,OAAO,0DAAY,oCAAoC;AACpE,gBAAgB,OAAO,mDAAK,EAAE;AAC9B;AACA,WAAW,EAoCV;;AAED;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,mCAAmC,iFAAkB;AACrD;AACA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,gCAAgC,iFAAkB;AAClD;AACA;AACA,UAAU;AACV;AACA;AACA,aAAa,gEAAiB;AAC9B,iBAAiB,gEAAU;AAC3B,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,EAWV;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA,iBAAiB,gDAAgD;AACjE;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA,yBAAyB,wBAAwB;AACjD;AACA;AACA,gBAAgB;AAChB;AACA,iBAAiB,oBAAoB;AACrC;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA,oBAAoB,8EAA8E;AAClG;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB,yBAAyB,mFAAqB;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA,oBAAoB,4DAA4D;AAChF;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB,2BAA2B,mFAAqB;AAChD;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,QAAQ,uEAAQ;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB;AACxB;AACA;AACA;AACA,aAAa;AACb;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,OAAO,uDAAS;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA,+BAA+B,+DAAiB;AAChD,iCAAiC,qEAAuB;AACxD,aAAa;AACb;AACA;AACA;AACA,KAAK,OAAO,wDAAU,EAAE;AACxB,KAAK,OAAO,+DAAiB,EAAE;AAC/B,KAAK,uCAAuC,OAAO,oDAAM,SAAS,gEAAU;AAC5E,gCAAgC;AAChC;AACA,gDAAgD;AAChD;AACA;AACA,eAAe,OAAO,0DAAY,sCAAsC;AACxE,aAAa,OAAO,0DAAY,oCAAoC;AACpE,cAAc,OAAO,6DAAe,SAAS,8DAAO,GAAG,oBAAoB,IAAI;AAC/E,aAAa,OAAO,uDAAS,mBAAmB;AAChD,wBAAwB,OAAO,mDAAK,EAAE;AACtC,aAAa,OAAO,mDAAK,EAAE;AAC3B,aAAa,OAAO,mDAAK,EAAE;AAC3B,gBAAgB,OAAO,mDAAK,EAAE;AAC9B,gBAAgB,OAAO,mDAAK,EAAE;AAC9B;AACA,WAAW,EAsEV;AACD;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC,0DAAY;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC,uEAAc;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA,gBAAgB,EAAE;AAClB;AACA;AACA;AACA,8BAA8B,4CAAO;AACrC;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA,eAAe,EAAE;AACjB;AACA;AACA;AACA,gBAAgB;AAChB;AACA,oBAAoB,uBAAuB;AAC3C;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,yBAAyB,mFAAqB;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA,oBAAoB,uBAAuB;AAC3C;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB,yBAAyB,mFAAqB;AAC9C;AACA,gBAAgB,+DAAS;AACzB;AACA;AACA;AACA,uCAAuC,uEAAc;AACrD;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,+BAA+B,iEAAe;AAC9C;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qCAAqC,gEAAS;AAC9C,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA,kCAAkC,gEAAS,QAAQ,gEAAS;AAC5D,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA,0CAA0C,gEAAS;AACnD,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB,EAAE;AAClB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB,4BAA4B,4EAAc;AAC1C;AACA,iBAAiB,2DAAK;AACtB,iBAAiB,2DAAK;AACtB;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,0DAAI;AACrB,iBAAiB,yDAAG;AACpB;AACA,gCAAgC,0DAAI;AACpC;AACA;AACA;AACA;AACA;AACA,gCAAgC,uDAAC,qBAAqB,4EAAc;AACpE;AACA;AACA,+BAA+B,EAAE;AACjC,gCAAgC;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0CAA0C,8DAAQ,gBAAgB,gEAAU;AAC5E;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA,uBAAuB,EAAE;AACzB;AACA,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB,EAAE;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB,wBAAwB;AAC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ACV;AACA,iCAAiC,4DAAc;AAC/C;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA,+BAA+B,oEAAa;AAC5C;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,KAAK,OAAO,uDAAS;AACrB;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB,iCAAiC,qEAAuB;AACxD,+BAA+B,+DAAiB;AAChD,aAAa;AACb;AACA;AACA;AACA,KAAK,OAAO,+DAAiB,EAAE;AAC/B,KAAK,yCAAyC,OAAO,oDAAM,SAAS,gEAAU;AAC9E,gCAAgC;AAChC;AACA,kDAAkD,GAAG;AACrD,KAAK,OAAO,wDAAU,EAAE;AACxB,KAAK,OAAO,uEAAgB,EAAE;AAC9B,KAAK,OAAO,oDAAM;AAClB;AACA,WAAW,EAQV;AACD;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qCAAqC,4CAAO;AAC5C;AACA;AACA;AACA,iCAAiC,4CAAO;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,0DAAY;AACxB;AACA;AACA;AACA,8BAA8B,4CAAO;AACrC;AACA;AACA;AACA;AACA,qCAAqC,0DAAY;AACjD;AACA;AACA;AACA;AACA,gCAAgC,4CAAO;AACvC;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA,4EAA4E,EAAE;AAC9E;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA,yBAAyB,EAAE,KAAK,sDAAS,oDAAoD,8DAAM;AACnG,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA;AACA,yCAAyC,4DAAM,2BAA2B,4EAAc;AACxF,aAAa,IAAI,iEAAS;AAC1B,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA;AACA,wBAAwB;AACxB;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA,gCAAgC,4EAAoB;AACpD,mBAAmB,EAAE;AACrB,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA,mBAAmB,qBAAqB;AACxC;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,gBAAgB;AAChB;AACA,oBAAoB,uBAAuB;AAC3C;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B;AAC1B,gBAAgB;AAChB;AACA,gBAAgB,mBAAmB;AACnC;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA,wBAAwB,2BAA2B;AACnD;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA,6BAA6B,sBAAsB,mFAAqB,QAAQ;AAChF;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA,0BAA0B,mBAAmB,mFAAqB,QAAQ;AAC1E;AACA;AACA;AACA,gBAAgB;AAChB;AACA,kBAAkB,qBAAqB;AACvC;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA,uBAAuB,aAAa,mFAAqB,SAAS;AAClE;AACA;AACA,gBAAgB;AAChB;AACA;AACA,sCAAsC,8DAAM;AAC5C,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA,kBAAkB,2DAAG;AACrB,oBAAoB;AACpB;AACA,eAAe,EAAE;AACjB;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,2CAA2C,8DAAM;AACjD,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA,6EAA6E,2DAAG;AAChF,oBAAoB;AACpB;AACA,eAAe,EAAE;AACjB;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,sCAAsC,8DAAM;AAC5C,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA,mBAAmB,2DAAG;AACtB,oBAAoB;AACpB;AACA,eAAe,EAAE;AACjB;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,2CAA2C,8DAAM;AACjD,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA,kEAAkE,2DAAG;AACrE,oBAAoB;AACpB;AACA,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,GAAG;AAClB;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,GAAG;AAClB,eAAe,GAAG;AAClB;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA,mCAAmC,4DAAI;AACvC,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA;AACA,SAAS;AACT;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,OAAO,uDAAS;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB,iCAAiC,qEAAuB;AACxD,+BAA+B,+DAAiB;AAChD,aAAa;AACb;AACA;AACA;AACA,KAAK,OAAO,wDAAU,EAAE;AACxB,KAAK,OAAO,kEAAgB,EAAE;AAC9B,KAAK,OAAO,8DAAY,EAAE;AAC1B,KAAK,OAAO,8DAAQ,EAAE;AACtB,KAAK,OAAO,oDAAM,EAAE;AACpB,KAAK,gCAAgC,OAAO,sDAAQ,EAAE,GAAG,OAAO,oDAAM,SAAS,wDAAQ,IAAI,GAAG;AAC9F,KAAK,yCAAyC,OAAO,sDAAQ,EAAE,GAAG,OAAO,oDAAM,iCAAiC;AAChH;AACA;AACA,gBAAgB,OAAO,mDAAK,EAAE;AAC9B,YAAY,OAAO,mDAAK,EAAE;AAC1B,oBAAoB,OAAO,mDAAK,EAAE;AAClC,iBAAiB,OAAO,mDAAK,EAAE;AAC/B,cAAc,OAAO,mDAAK,EAAE;AAC5B,uBAAuB,OAAO,yDAAW,yBAAyB;AAClE,oBAAoB,OAAO,oDAAM,EAAE;AACnC,qBAAqB,OAAO,oDAAM,qBAAqB;AACvD,mBAAmB,OAAO,oDAAM,EAAE;AAClC,qBAAqB,OAAO,oDAAM,qBAAqB;AACvD,mBAAmB,OAAO,oDAAM,EAAE;AAClC,yBAAyB,OAAO,oDAAM,8BAA8B;AACpE,+BAA+B,OAAO,0DAAY,2CAA2C;AAC7F,8BAA8B,OAAO,0DAAY,0CAA0C;AAC3F;AACA,WAAW,EA+HV;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB,eAAe,GAAG;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B,uDAAS;AACrC;AACA;AACA;AACA,iCAAiC,0DAAY;AAC7C;AACA;AACA;AACA,8BAA8B,4CAAO;AACrC;AACA;AACA;AACA,mCAAmC,4CAAO;AAC1C;AACA;AACA;AACA;AACA;AACA,gCAAgC;AAChC,yCAAyC,4CAAO;AAChD;AACA;AACA;AACA,6BAA6B,iEAAS;AACtC,wBAAwB;AACxB;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,kBAAkB,iEAAS;AAC3B;AACA,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA,iBAAiB,oBAAoB;AACrC;AACA;AACA,gBAAgB;AAChB;AACA,eAAe,kBAAkB;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA,oBAAoB,uBAAuB;AAC3C;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA,yBAAyB,kBAAkB,mFAAqB,QAAQ;AACxE;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,wDAAwD,mFAAqB;AAC7E;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,kBAAkB,iEAAS,oBAAoB,iEAAS;AACxD;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA;AACA;AACA,SAAS;AACT,mCAAmC,iEAAS;AAC5C,oBAAoB;AACpB;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,kCAAkC,oEAAY;AAC9C,QAAQ,iEAAS;AACjB,oBAAoB;AACpB;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,EAAE;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,EAAE;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC,EAAE;AACrC,qCAAqC,EAAE;AACvC;AACA,oCAAoC;AACpC;AACA;AACA;AACA,wBAAwB;AACxB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,sCAAsC,8DAAM;AAC5C,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA,wDAAwD,iEAAS;AACjE;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,qCAAqC,iEAAS;AAC9C,wBAAwB;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sCAAsC,iEAAS;AAC/C,oBAAoB;AACpB;AACA;AACA,8DAA8D,4DAAI;AAClE,wBAAwB;AACxB;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,qCAAqC,iEAAS,CAAC,kDAAK;AACpD;AACA,wBAAwB;AACxB;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA,8BAA8B,EAAE;AAChC;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,OAAO,uDAAS;AACrB;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;A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CA;AACA;AACA;AACA,yCAAyC;AACzC,WAAW,EAaV;AACD;AACA;AACA,UAAU;AACV;AACA,6CAA6C,4DAAc;AAC3D;AACA;AACA,gBAAgB;AAChB;AACA,YAAY,4BAA4B;AACxC,CAAC;;AAED;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA,WAAW,EAAE;AACb;AACA;AACA;AACA,UAAU;AACV;AACA;AACA,aAAa,gEAAiB;AAC9B,iBAAiB,gEAAU;AAC3B,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,EAWV;AACD;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA,WAAW,EAGV;AACD,WAAW,EAAE;AACb,iCAAiC,4EAAa,CAAC,yEAAU,CAAC,iFAAkB,CAAC,4EAAa;AAC1F;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB,eAAe,GAAG;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA,gBAAgB,EAAE;AAClB;AACA,oBAAoB;AACpB;AACA,eAAe,EAAE;AACjB,6CAA6C,eAAe;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B,0DAAY;AACtC;AACA;AACA;AACA;AACA;AACA,gCAAgC,0DAAY;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B,0DAAY;AAC1C;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA,oBAAoB,uBAAuB;AAC3C;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA,yBAAyB,kBAAkB,mFAAqB,QAAQ;AACxE;AACA;AACA,gBAAgB;AAChB;AACA,mBAAmB,sBAAsB;AACzC;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,wBAAwB,mFAAqB;AAC7C;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA,mBAAmB,WAAW,0BAA0B,QAAQ;AAChE;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B;AAC5B;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KA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BAA2B,6FAA+B,EAAE,iBAAiB;AAC7E;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA,aAAa,gEAAiB;AAC9B,iBAAiB,gEAAU;AAC3B,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,EAWV;AACD;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA,WAAW,EAGV;AACD,WAAW,EAAE;AACb,4BAA4B,4EAAa,CAAC,yEAAU,CAAC,4EAAa;AAClE;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB,eAAe,GAAG;AAClB,eAAe,GAAG;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B,0DAAY;AACtC;AACA;AACA;AACA,yBAAyB,0DAAY;AACrC;AACA;AACA;AACA;AACA;AACA,+BAA+B,0DAAY;AAC3C;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA,eAAe,EAAE;AACjB;AACA;AACA;AACA,sCAAsC,kDAAY;AAClD;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB;AACxB;AACA;AACA,2BAA2B,EAAE;AAC7B;AACA,2BAA2B,EAAE;AAC7B;AACA;AACA;AACA;AACA;AACA,qCAAqC;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA,2BAA2B,EAAE;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA,2BAA2B,EAAE;AAC7B;AACA,2BAA2B,EAAE;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,gBAAgB;AAChB;AACA,kBAAkB,qBAAqB;AACvC;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,uBAAuB,mFAAqB;AAC5C;AACA;AACA;AACA,gBAAgB;AAChB;AACA,eAAe,kBAAkB;AACjC;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,oBAAoB,kFAAoB;AACxC;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA,eAAe,kBAAkB;AACjC;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,oBAAoB,kFAAoB;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA,gBAAgB,mBAAmB;AACnC;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,qBAAqB,kFAAoB;AACzC;AACA,+CAA+C,EAAE;AACjD;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA,sBAAsB,yBAAyB;AAC/C;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA,2BAA2B,oBAAoB,mFAAqB,QAAQ;AAC5E;AACA;AACA;AACA,gBAAgB;AAChB;AACA,wBAAwB,2BAA2B;AACnD;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC,kFAAoB,oBAAoB,EAAE;AAC3E;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,uBAAuB,EAAE;AACzB,wBAAwB,kFAAoB;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA,oBAAoB,uBAAuB;AAC3C;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,yBAAyB,mFAAqB;AAC9C;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gDAAgD,EAAE;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA,mBAAmB,mCAAmC;AACtD;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB,4CAA4C,iBAAiB,UAAU,iBAAiB;AACxF,mBAAmB,EAAE;AACrB;AACA;AACA;AACA,mCAAmC,KAAK,GAAG,KAAK,EAAE,eAAe,cAAc,MAAM;AACrF;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB,4CAA4C,QAAQ,UAAU,QAAQ;AACtE,mBAAmB,EAAE;AACrB;AACA;AACA;AACA,mCAAmC,KAAK,GAAG,KAAK,EAAE,eAAe,cAAc,MAAM;AACrF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA;AACA,qCAAqC,KAAK,GAAG,KAAK,EAAE,OAAO;AAC3D;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB,oDAAoD,SAAS,QAAQ,SAAS;AAC9E,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA,mDAAmD,KAAK,GAAG,KAAK,EAAE,aAAa,IAAI,OAAO;AAC1F;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B,KAAK,QAAQ,eAAe;AACzD;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA;AACA,qCAAqC,KAAK,IAAI,OAAO;AACrD;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,wBAAwB;AACxB;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,6BAA6B,4EAAc;AAC3C;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA,iBAAiB,6DAAO;AACxB;AACA;AACA,iBAAiB,+DAAS;AAC1B;AACA;AACA,iBAAiB,yDAAG;AACpB;AACA;AACA,iBAAiB,0DAAI;AACrB;AACA;AACA,iBAAiB,gEAAU;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,8DAAQ;AACzB;AACA;AACA,iBAAiB,iEAAW;AAC5B;AACA;AACA;AACA,iBAAiB,gEAAU;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA,uBAAuB,EAAE;AACzB;AACA,uBAAuB,EAAE;AACzB;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB;AACA,uBAAuB,EAAE;AACzB;AACA,uBAAuB,EAAE;AACzB;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AAC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ACA;AACA,KAAK,OAAO,wDAAU,UAAU,qBAAqB;AACrD;AACA,0CAA0C,wEAAkB,EAAE,6CAA6C,6BAA6B,EAAE,6CAA6C;AACvL,WAAW,EAYV;AACD;AACA;AACA,WAAW,EAAE;AACb,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA,gBAAgB,sDAAQ,QAAQ,sDAAQ;AACxC;AACA;;AAEA;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA,4BAA4B,kEAAa;AACzC;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,sBAAsB,eAAe;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,OAAO,uDAAS;AACrB;AACA,mNAAmN,OAAO,+aAA+a,gCAAgC,4CAA4C,gCAAgC,0hBAA0hB,OAAO,sFAAsF,qBAAqB,+EAA+E,cAAc;AAC99C;AACA;AACA;AACA,iBAAiB;AACjB,+BAA+B,+DAAiB;AAChD,iCAAiC,qEAAuB;AACxD,2CAA2C,gBAAgB,aAAa,eAAe,kBAAkB,uBAAuB,wCAAwC,6CAA6C,eAAe,eAAe,kBAAkB,YAAY,WAAW,cAAc,kBAAkB,gDAAgD,kBAAkB,QAAQ,SAAS,gCAAgC,yBAAyB,eAAe,YAAY,WAAW,qCAAqC,eAAe,YAAY,WAAW,gBAAgB,qBAAqB,mBAA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;;AAED;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA;AACA,6BAA6B,mEAAc;AAC3C;AACA;AACA,KAAK,OAAO,uDAAS;AACrB;AACA;AACA;AACA,iBAAiB;AACjB;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,iCAAiC,uEAAkB;AACnD;AACA;AACA,KAAK,OAAO,uDAAS;AACrB;AACA;AACA;AACA,iBAAiB;AACjB;AACA,aAAa;AACb;;AAEA;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA;AACA,KAAK,OAAO,sDAAQ;AACpB;AACA,oBAAoB,sEAAe;AACnC,oBAAoB,4DAAY;AAChC,oBAAoB,gEAAY;AAChC,oBAAoB,wEAAe;AACnC,oBAAoB,qEAAgB;AACpC,oBAAoB,oEAAa;AACjC,oBAAoB,sEAAe;AACnC;AACA;AACA,oBAAoB,sEAAe;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uDAAuD,wEAAiB;AACxE,aAAa;AACb;;AAEA;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;;AAEA;AACA;AACA;;AAEgR;AAChR;;;;;;;;;;;;;AC/sBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA2J;AACtF;AACpB;AACN;;AAE3C;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA,WAAW,EAGV;AACD,WAAW,EAAE;AACb,6BAA6B,yEAAU;AACvC;AACA;AACA;AACA,KAAK,OAAO,uDAAS;AACrB;AACA;AACA,uBAAuB,6BAA6B;AACpD,aAAa;AACb;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,aAAa,+DAAS;AACtB;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,OAAO,uDAAS;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB,iCAAiC,qEAAuB;AACxD,+BAA+B,+DAAiB;AAChD,iEAAiE,kBAAkB,yCAAyC,aAAa,sBAAsB,eAAe,WAAW,mBAAmB,mBAAmB,mBAAmB,2BAA2B,aAAa,sBAAsB,sBAAsB,WAAW,2BAA2B,gBAAgB,yCAAyC,YAAY,yBAAyB,2BAA2B,gBAAgB,yCAAyC,aAAa;AAC3iB,aAAa;AACb;AACA;AACA;AACA,KAAK,OAAO,wDAAU,EAAE;AACxB,KAAK,OAAO,8DAAQ,EAAE;AACtB,KAAK,gCAAgC,OAAO,oDAAM,SAAS,wDAAQ,IAAI;AACvE;AACA;AACA,oBAAoB,OAAO,6DAAe,yBAAyB,oBAAoB,IAAI;AAC3F;AACA,WAAW,EAgBV;AACD;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA;AACA,KAAK,OAAO,sDAAQ;AACpB,0BAA0B,sEAAe;AACzC,qDAAqD,sEAAe;AACpE;AACA,aAAa;AACb;;AAEA;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;;AAEA;AACA;AACA;;AAEoF;AACpF;;;;;;;;;;;;;AC9KA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAgM;AACS;AAClH;AACzB;AACR;AACR;AACH;;AAE3C;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA,WAAW,EAAE;AACb,8BAA8B,4EAAa,CAAC,4EAAa,CAAC,6DAAW;AACrE;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,OAAO,uDAAS;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB,6BAA6B,UAAU,6DAAW,4BAA4B;AAC9E,aAAa;AACb;AACA;AACA;AACA,KAAK,OAAO,wDAAU,EAAE;AACxB,KAAK,OAAO,yDAAO,EAAE;AACrB,KAAK,6BAA6B,OAAO,uDAAS,uBAAuB;AACzE;AACA;AACA,YAAY,OAAO,mDAAK,EAAE;AAC1B;AACA,WAAW,EAeV;AACD;AACA;AACA;AACA;AACA,6BAA6B,gEAAc;AAC3C;AACA;AACA,KAAK,OAAO,uDAAS;AACrB;AACA;AACA;AACA;AACA,6BAA6B,UAAU,gEAAc,+BAA+B;AACpF,aAAa;AACb;AACA;AACA,YAAY,OAAO,mDAAK,0BAA0B;AAClD;AACA,WAAW,EAGV;AACD;AACA;AACA;AACA;AACA,gCAAgC,mEAAiB;AACjD;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA,oBAAoB,uBAAuB;AAC3C;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA,yBAAyB,kBAAkB,mFAAqB,QAAQ;AACxE;AACA;AACA,gBAAgB;AAChB;AACA,oBAAoB,4CAA4C;AAChE;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,OAAO,uDAAS;AACrB;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA,qBAAqB,UAAU,mEAAiB,kCAAkC;AAClF,qBAAqB,UAAU,6DAAW,kCAAkC;AAC5E,qBAAqB,UAAU,2EAAyB;AACxD;AACA,aAAa;AACb;AACA;AACA;AACA,KAAK,OAAO,wDAAU,EAAE;AACxB,KAAK,OAAO,yDAAO,EAAE;AACrB,KAAK,OAAO,6DAAe,EAAE;AAC7B,KAAK,6BAA6B,OAAO,uDAAS,uBAAuB;AACzE;AACA;AACA,YAAY,OAAO,mDAAK,gCAAgC;AACxD,gBAAgB,OAAO,mDAAK,EAAE;AAC9B,gBAAgB,OAAO,mDAAK,EAAE;AAC9B;AACA,WAAW,EA8BV;;AAED;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA;AACA;AACA,iCAAiC,oEAAkB;AACnD;AACA;AACA,KAAK,OAAO,uDAAS;AACrB;AACA,6BAA6B,UAAU,oEAAkB,mCAAmC;AAC5F,aAAa;AACb;AACA;AACA,aAAa,OAAO,mDAAK,iCAAiC;AAC1D,cAAc,OAAO,mDAAK,uCAAuC;AACjE;AACA,WAAW,EAWV;;AAED;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,OAAO,uDAAS;AACrB;AACA;AACA,iCAAiC,mEAAiB;AAClD;AACA,qBAAqB;AACrB,aAAa;AACb;AACA;AACA;AACA,KAAK,OAAO,8DAAgB,EAAE;AAC9B,KAAK,gCAAgC,OAAO,oDAAM,SAAS,2EAAyB,IAAI,GAAG,OAAO,sDAAQ,EAAE;AAC5G;AACA,WAAW,EAKV;;AAED;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA;AACA;AACA,sBAAsB,yDAAO;AAC7B;AACA;AACA,KAAK,OAAO,uDAAS;AACrB;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB,+BAA+B,+DAAiB;AAChD;AACA;AACA,iCAAiC,qEAAuB;AACxD,6BAA6B,UAAU,yDAAO,wBAAwB;AACtE,oCAAoC,cAAc,eAAe,aAAa,mBAAmB,gBAAgB,OAAO,qBAAqB,sBAAsB,sBAAsB;AACzL,aAAa;AACb;AACA;AACA,mBAAmB,OAAO,uDAAS,6BAA6B,eAAe,IAAI;AACnF;AACA,WAAW,EAGV;;AAED;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA;AACA;AACA,gCAAgC,mEAAiB;AACjD;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,OAAO,uDAAS;AACrB;AACA,6BAA6B,UAAU,mEAAiB,kCAAkC;AAC1F,aAAa;AACb;AACA;AACA,iBAAiB,OAAO,mDAAK,yCAAyC;AACtE;AACA,WAAW,EAGV;;AAED;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA,WAAW,EAAE;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,OAAO,sDAAQ;AACpB,0BAA0B,+DAAa,EAAE,sEAAe;AACxD;AACA;AACA,aAAa;AACb;;AAEA;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA;AACA,uCAAuC,2DAAI;AAC3C,+BAA+B,EAAE;AACjC,gCAAgC;AAChC;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA,uBAAuB,EAAE;AACzB;AACA,2BAA2B,0BAA0B;AACrD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,WAAW,EASV;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC,mEAAU;AAC9C;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB;AACA;AACA;AACA;AACA;AACA,kCAAkC,oDAAe;AACjD,iCAAiC,oDAAe;AAChD,yBAAyB,oDAAe;AACxC;AACA;AACA,gBAAgB;AAChB;AACA,gBAAgB,yBAAyB;AACzC;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA,eAAe,kDAAK,kBAAkB,0DAAG;AACzC,oBAAoB;AACpB;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,WAAW,EAiBV;;AAED;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA;AACA;A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","file":"views-pages-material-material-module-ngfactory.js","sourcesContent":["import { FocusKeyManager } from '@angular/cdk/a11y';\nimport { Directionality, BidiModule } from '@angular/cdk/bidi';\nimport { coerceBooleanProperty, coerceNumberProperty } from '@angular/cdk/coercion';\nimport { hasModifierKey, SPACE, ENTER, HOME, END } from '@angular/cdk/keycodes';\nimport { DOCUMENT } from '@angular/common';\nimport { Directive, ElementRef, TemplateRef, InjectionToken, Component, ViewEncapsulation, ChangeDetectionStrategy, Inject, forwardRef, Optional, ContentChild, ViewChild, Input, EventEmitter, ChangeDetectorRef, ContentChildren, Output, HostListener, NgModule } from '@angular/core';\nimport { Subject, of } from 'rxjs';\nimport { startWith, takeUntil } from 'rxjs/operators';\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/stepper/step-header.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass CdkStepHeader {\n    /**\n     * @param {?} _elementRef\n     */\n    constructor(_elementRef) {\n        this._elementRef = _elementRef;\n    }\n    /**\n     * Focuses the step header.\n     * @return {?}\n     */\n    focus() {\n        this._elementRef.nativeElement.focus();\n    }\n}\nCdkStepHeader.decorators = [\n    { type: Directive, args: [{\n                selector: '[cdkStepHeader]',\n                host: {\n                    'role': 'tab',\n                },\n            },] }\n];\n/** @nocollapse */\nCdkStepHeader.ctorParameters = () => [\n    { type: ElementRef }\n];\nif (false) {\n    /**\n     * @type {?}\n     * @protected\n     */\n    CdkStepHeader.prototype._elementRef;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/stepper/step-label.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass CdkStepLabel {\n    /**\n     * @param {?} template\n     */\n    constructor(/** @docs-private */ template) {\n        this.template = template;\n    }\n}\nCdkStepLabel.decorators = [\n    { type: Directive, args: [{\n                selector: '[cdkStepLabel]',\n            },] }\n];\n/** @nocollapse */\nCdkStepLabel.ctorParameters = () => [\n    { type: TemplateRef }\n];\nif (false) {\n    /**\n     * \\@docs-private\n     * @type {?}\n     */\n    CdkStepLabel.prototype.template;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/stepper/stepper.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Used to generate unique ID for each stepper component.\n * @type {?}\n */\nlet nextId = 0;\n/**\n * Change event emitted on selection changes.\n */\nclass StepperSelectionEvent {\n}\nif (false) {\n    /**\n     * Index of the step now selected.\n     * @type {?}\n     */\n    StepperSelectionEvent.prototype.selectedIndex;\n    /**\n     * Index of the step previously selected.\n     * @type {?}\n     */\n    StepperSelectionEvent.prototype.previouslySelectedIndex;\n    /**\n     * The step instance now selected.\n     * @type {?}\n     */\n    StepperSelectionEvent.prototype.selectedStep;\n    /**\n     * The step instance previously selected.\n     * @type {?}\n     */\n    StepperSelectionEvent.prototype.previouslySelectedStep;\n}\n/**\n * Enum to represent the different states of the steps.\n * @type {?}\n */\nconst STEP_STATE = {\n    NUMBER: 'number',\n    EDIT: 'edit',\n    DONE: 'done',\n    ERROR: 'error'\n};\n/**\n * InjectionToken that can be used to specify the global stepper options.\n * @type {?}\n */\nconst STEPPER_GLOBAL_OPTIONS = new InjectionToken('STEPPER_GLOBAL_OPTIONS');\n/**\n * InjectionToken that can be used to specify the global stepper options.\n * @deprecated Use `STEPPER_GLOBAL_OPTIONS` instead.\n * \\@breaking-change 8.0.0.\n * @type {?}\n */\nconst MAT_STEPPER_GLOBAL_OPTIONS = STEPPER_GLOBAL_OPTIONS;\n/**\n * Configurable options for stepper.\n * @record\n */\nfunction StepperOptions() { }\nif (false) {\n    /**\n     * Whether the stepper should display an error state or not.\n     * Default behavior is assumed to be false.\n     * @type {?|undefined}\n     */\n    StepperOptions.prototype.showError;\n    /**\n     * Whether the stepper should display the default indicator type\n     * or not.\n     * Default behavior is assumed to be true.\n     * @type {?|undefined}\n     */\n    StepperOptions.prototype.displayDefaultIndicatorType;\n}\nclass CdkStep {\n    /**\n     * \\@breaking-change 8.0.0 remove the `?` after `stepperOptions`\n     * @param {?} _stepper\n     * @param {?=} stepperOptions\n     */\n    constructor(_stepper, stepperOptions) {\n        this._stepper = _stepper;\n        /**\n         * Whether user has seen the expanded step content or not.\n         */\n        this.interacted = false;\n        this._editable = true;\n        this._optional = false;\n        this._completedOverride = null;\n        this._customError = null;\n        this._stepperOptions = stepperOptions ? stepperOptions : {};\n        this._displayDefaultIndicatorType = this._stepperOptions.displayDefaultIndicatorType !== false;\n        this._showError = !!this._stepperOptions.showError;\n    }\n    /**\n     * Whether the user can return to this step once it has been marked as completed.\n     * @return {?}\n     */\n    get editable() {\n        return this._editable;\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set editable(value) {\n        this._editable = coerceBooleanProperty(value);\n    }\n    /**\n     * Whether the completion of step is optional.\n     * @return {?}\n     */\n    get optional() {\n        return this._optional;\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set optional(value) {\n        this._optional = coerceBooleanProperty(value);\n    }\n    /**\n     * Whether step is marked as completed.\n     * @return {?}\n     */\n    get completed() {\n        return this._completedOverride == null ? this._getDefaultCompleted() : this._completedOverride;\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set completed(value) {\n        this._completedOverride = coerceBooleanProperty(value);\n    }\n    /**\n     * @private\n     * @return {?}\n     */\n    _getDefaultCompleted() {\n        return this.stepControl ? this.stepControl.valid && this.interacted : this.interacted;\n    }\n    /**\n     * Whether step has an error.\n     * @return {?}\n     */\n    get hasError() {\n        return this._customError == null ? this._getDefaultError() : this._customError;\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set hasError(value) {\n        this._customError = coerceBooleanProperty(value);\n    }\n    /**\n     * @private\n     * @return {?}\n     */\n    _getDefaultError() {\n        return this.stepControl && this.stepControl.invalid && this.interacted;\n    }\n    /**\n     * Selects this step component.\n     * @return {?}\n     */\n    select() {\n        this._stepper.selected = this;\n    }\n    /**\n     * Resets the step to its initial state. Note that this includes resetting form data.\n     * @return {?}\n     */\n    reset() {\n        this.interacted = false;\n        if (this._completedOverride != null) {\n            this._completedOverride = false;\n        }\n        if (this._customError != null) {\n            this._customError = false;\n        }\n        if (this.stepControl) {\n            this.stepControl.reset();\n        }\n    }\n    /**\n     * @return {?}\n     */\n    ngOnChanges() {\n        // Since basically all inputs of the MatStep get proxied through the view down to the\n        // underlying MatStepHeader, we have to make sure that change detection runs correctly.\n        this._stepper._stateChanged();\n    }\n}\nCdkStep.decorators = [\n    { type: Component, args: [{\n                selector: 'cdk-step',\n                exportAs: 'cdkStep',\n                template: '<ng-template><ng-content></ng-content></ng-template>',\n                encapsulation: ViewEncapsulation.None,\n                changeDetection: ChangeDetectionStrategy.OnPush\n            }] }\n];\n/** @nocollapse */\nCdkStep.ctorParameters = () => [\n    { type: CdkStepper, decorators: [{ type: Inject, args: [forwardRef((/**\n                     * @return {?}\n                     */\n                    () => CdkStepper)),] }] },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [STEPPER_GLOBAL_OPTIONS,] }] }\n];\nCdkStep.propDecorators = {\n    stepLabel: [{ type: ContentChild, args: [CdkStepLabel,] }],\n    content: [{ type: ViewChild, args: [TemplateRef, { static: true },] }],\n    stepControl: [{ type: Input }],\n    label: [{ type: Input }],\n    errorMessage: [{ type: Input }],\n    ariaLabel: [{ type: Input, args: ['aria-label',] }],\n    ariaLabelledby: [{ type: Input, args: ['aria-labelledby',] }],\n    state: [{ type: Input }],\n    editable: [{ type: Input }],\n    optional: [{ type: Input }],\n    completed: [{ type: Input }],\n    hasError: [{ type: Input }]\n};\nif (false) {\n    /** @type {?} */\n    CdkStep.ngAcceptInputType_editable;\n    /** @type {?} */\n    CdkStep.ngAcceptInputType_hasError;\n    /** @type {?} */\n    CdkStep.ngAcceptInputType_optional;\n    /** @type {?} */\n    CdkStep.ngAcceptInputType_completed;\n    /**\n     * @type {?}\n     * @private\n     */\n    CdkStep.prototype._stepperOptions;\n    /** @type {?} */\n    CdkStep.prototype._showError;\n    /** @type {?} */\n    CdkStep.prototype._displayDefaultIndicatorType;\n    /**\n     * Template for step label if it exists.\n     * @type {?}\n     */\n    CdkStep.prototype.stepLabel;\n    /**\n     * Template for step content.\n     * @type {?}\n     */\n    CdkStep.prototype.content;\n    /**\n     * The top level abstract control of the step.\n     * @type {?}\n     */\n    CdkStep.prototype.stepControl;\n    /**\n     * Whether user has seen the expanded step content or not.\n     * @type {?}\n     */\n    CdkStep.prototype.interacted;\n    /**\n     * Plain text label of the step.\n     * @type {?}\n     */\n    CdkStep.prototype.label;\n    /**\n     * Error message to display when there's an error.\n     * @type {?}\n     */\n    CdkStep.prototype.errorMessage;\n    /**\n     * Aria label for the tab.\n     * @type {?}\n     */\n    CdkStep.prototype.ariaLabel;\n    /**\n     * Reference to the element that the tab is labelled by.\n     * Will be cleared if `aria-label` is set at the same time.\n     * @type {?}\n     */\n    CdkStep.prototype.ariaLabelledby;\n    /**\n     * State of the step.\n     * @type {?}\n     */\n    CdkStep.prototype.state;\n    /**\n     * @type {?}\n     * @private\n     */\n    CdkStep.prototype._editable;\n    /**\n     * @type {?}\n     * @private\n     */\n    CdkStep.prototype._optional;\n    /** @type {?} */\n    CdkStep.prototype._completedOverride;\n    /**\n     * @type {?}\n     * @private\n     */\n    CdkStep.prototype._customError;\n    /**\n     * @type {?}\n     * @private\n     */\n    CdkStep.prototype._stepper;\n}\nclass CdkStepper {\n    /**\n     * @param {?} _dir\n     * @param {?} _changeDetectorRef\n     * @param {?=} _elementRef\n     * @param {?=} _document\n     */\n    constructor(_dir, _changeDetectorRef, _elementRef, _document) {\n        this._dir = _dir;\n        this._changeDetectorRef = _changeDetectorRef;\n        this._elementRef = _elementRef;\n        /**\n         * Emits when the component is destroyed.\n         */\n        this._destroyed = new Subject();\n        this._linear = false;\n        this._selectedIndex = 0;\n        /**\n         * Event emitted when the selected step has changed.\n         */\n        this.selectionChange = new EventEmitter();\n        this._orientation = 'horizontal';\n        this._groupId = nextId++;\n        this._document = _document;\n    }\n    /**\n     * The list of step components that the stepper is holding.\n     * @return {?}\n     */\n    get steps() {\n        return this._steps;\n    }\n    /**\n     * Whether the validity of previous steps should be checked or not.\n     * @return {?}\n     */\n    get linear() {\n        return this._linear;\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set linear(value) {\n        this._linear = coerceBooleanProperty(value);\n    }\n    /**\n     * The index of the selected step.\n     * @return {?}\n     */\n    get selectedIndex() {\n        return this._selectedIndex;\n    }\n    /**\n     * @param {?} index\n     * @return {?}\n     */\n    set selectedIndex(index) {\n        /** @type {?} */\n        const newIndex = coerceNumberProperty(index);\n        if (this.steps) {\n            // Ensure that the index can't be out of bounds.\n            if (newIndex < 0 || newIndex > this.steps.length - 1) {\n                throw Error('cdkStepper: Cannot assign out-of-bounds value to `selectedIndex`.');\n            }\n            if (this._selectedIndex != newIndex && !this._anyControlsInvalidOrPending(newIndex) &&\n                (newIndex >= this._selectedIndex || this.steps.toArray()[newIndex].editable)) {\n                this._updateSelectedItemIndex(index);\n            }\n        }\n        else {\n            this._selectedIndex = newIndex;\n        }\n    }\n    /**\n     * The step that is selected.\n     * @return {?}\n     */\n    get selected() {\n        // @breaking-change 8.0.0 Change return type to `CdkStep | undefined`.\n        return this.steps ? this.steps.toArray()[this.selectedIndex] : (/** @type {?} */ (undefined));\n    }\n    /**\n     * @param {?} step\n     * @return {?}\n     */\n    set selected(step) {\n        this.selectedIndex = this.steps ? this.steps.toArray().indexOf(step) : -1;\n    }\n    /**\n     * @return {?}\n     */\n    ngAfterViewInit() {\n        // Note that while the step headers are content children by default, any components that\n        // extend this one might have them as view children. We initialize the keyboard handling in\n        // AfterViewInit so we're guaranteed for both view and content children to be defined.\n        this._keyManager = new FocusKeyManager(this._stepHeader)\n            .withWrap()\n            .withVerticalOrientation(this._orientation === 'vertical');\n        (this._dir ? ((/** @type {?} */ (this._dir.change))) : of())\n            .pipe(startWith(this._layoutDirection()), takeUntil(this._destroyed))\n            .subscribe((/**\n         * @param {?} direction\n         * @return {?}\n         */\n        direction => this._keyManager.withHorizontalOrientation(direction)));\n        this._keyManager.updateActiveItem(this._selectedIndex);\n        this.steps.changes.pipe(takeUntil(this._destroyed)).subscribe((/**\n         * @return {?}\n         */\n        () => {\n            if (!this.selected) {\n                this._selectedIndex = Math.max(this._selectedIndex - 1, 0);\n            }\n        }));\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this._destroyed.next();\n        this._destroyed.complete();\n    }\n    /**\n     * Selects and focuses the next step in list.\n     * @return {?}\n     */\n    next() {\n        this.selectedIndex = Math.min(this._selectedIndex + 1, this.steps.length - 1);\n    }\n    /**\n     * Selects and focuses the previous step in list.\n     * @return {?}\n     */\n    previous() {\n        this.selectedIndex = Math.max(this._selectedIndex - 1, 0);\n    }\n    /**\n     * Resets the stepper to its initial state. Note that this includes clearing form data.\n     * @return {?}\n     */\n    reset() {\n        this._updateSelectedItemIndex(0);\n        this.steps.forEach((/**\n         * @param {?} step\n         * @return {?}\n         */\n        step => step.reset()));\n        this._stateChanged();\n    }\n    /**\n     * Returns a unique id for each step label element.\n     * @param {?} i\n     * @return {?}\n     */\n    _getStepLabelId(i) {\n        return `cdk-step-label-${this._groupId}-${i}`;\n    }\n    /**\n     * Returns unique id for each step content element.\n     * @param {?} i\n     * @return {?}\n     */\n    _getStepContentId(i) {\n        return `cdk-step-content-${this._groupId}-${i}`;\n    }\n    /**\n     * Marks the component to be change detected.\n     * @return {?}\n     */\n    _stateChanged() {\n        this._changeDetectorRef.markForCheck();\n    }\n    /**\n     * Returns position state of the step with the given index.\n     * @param {?} index\n     * @return {?}\n     */\n    _getAnimationDirection(index) {\n        /** @type {?} */\n        const position = index - this._selectedIndex;\n        if (position < 0) {\n            return this._layoutDirection() === 'rtl' ? 'next' : 'previous';\n        }\n        else if (position > 0) {\n            return this._layoutDirection() === 'rtl' ? 'previous' : 'next';\n        }\n        return 'current';\n    }\n    /**\n     * Returns the type of icon to be displayed.\n     * @param {?} index\n     * @param {?=} state\n     * @return {?}\n     */\n    _getIndicatorType(index, state = STEP_STATE.NUMBER) {\n        /** @type {?} */\n        const step = this.steps.toArray()[index];\n        /** @type {?} */\n        const isCurrentStep = this._isCurrentStep(index);\n        return step._displayDefaultIndicatorType ? this._getDefaultIndicatorLogic(step, isCurrentStep) :\n            this._getGuidelineLogic(step, isCurrentStep, state);\n    }\n    /**\n     * @private\n     * @param {?} step\n     * @param {?} isCurrentStep\n     * @return {?}\n     */\n    _getDefaultIndicatorLogic(step, isCurrentStep) {\n        if (step._showError && step.hasError && !isCurrentStep) {\n            return STEP_STATE.ERROR;\n        }\n        else if (!step.completed || isCurrentStep) {\n            return STEP_STATE.NUMBER;\n        }\n        else {\n            return step.editable ? STEP_STATE.EDIT : STEP_STATE.DONE;\n        }\n    }\n    /**\n     * @private\n     * @param {?} step\n     * @param {?} isCurrentStep\n     * @param {?=} state\n     * @return {?}\n     */\n    _getGuidelineLogic(step, isCurrentStep, state = STEP_STATE.NUMBER) {\n        if (step._showError && step.hasError && !isCurrentStep) {\n            return STEP_STATE.ERROR;\n        }\n        else if (step.completed && !isCurrentStep) {\n            return STEP_STATE.DONE;\n        }\n        else if (step.completed && isCurrentStep) {\n            return state;\n        }\n        else if (step.editable && isCurrentStep) {\n            return STEP_STATE.EDIT;\n        }\n        else {\n            return state;\n        }\n    }\n    /**\n     * @private\n     * @param {?} index\n     * @return {?}\n     */\n    _isCurrentStep(index) {\n        return this._selectedIndex === index;\n    }\n    /**\n     * Returns the index of the currently-focused step header.\n     * @return {?}\n     */\n    _getFocusIndex() {\n        return this._keyManager ? this._keyManager.activeItemIndex : this._selectedIndex;\n    }\n    /**\n     * @private\n     * @param {?} newIndex\n     * @return {?}\n     */\n    _updateSelectedItemIndex(newIndex) {\n        /** @type {?} */\n        const stepsArray = this.steps.toArray();\n        this.selectionChange.emit({\n            selectedIndex: newIndex,\n            previouslySelectedIndex: this._selectedIndex,\n            selectedStep: stepsArray[newIndex],\n            previouslySelectedStep: stepsArray[this._selectedIndex],\n        });\n        // If focus is inside the stepper, move it to the next header, otherwise it may become\n        // lost when the active step content is hidden. We can't be more granular with the check\n        // (e.g. checking whether focus is inside the active step), because we don't have a\n        // reference to the elements that are rendering out the content.\n        this._containsFocus() ? this._keyManager.setActiveItem(newIndex) :\n            this._keyManager.updateActiveItem(newIndex);\n        this._selectedIndex = newIndex;\n        this._stateChanged();\n    }\n    /**\n     * @param {?} event\n     * @return {?}\n     */\n    _onKeydown(event) {\n        /** @type {?} */\n        const hasModifier = hasModifierKey(event);\n        /** @type {?} */\n        const keyCode = event.keyCode;\n        /** @type {?} */\n        const manager = this._keyManager;\n        if (manager.activeItemIndex != null && !hasModifier &&\n            (keyCode === SPACE || keyCode === ENTER)) {\n            this.selectedIndex = manager.activeItemIndex;\n            event.preventDefault();\n        }\n        else if (keyCode === HOME) {\n            manager.setFirstItemActive();\n            event.preventDefault();\n        }\n        else if (keyCode === END) {\n            manager.setLastItemActive();\n            event.preventDefault();\n        }\n        else {\n            manager.onKeydown(event);\n        }\n    }\n    /**\n     * @private\n     * @param {?} index\n     * @return {?}\n     */\n    _anyControlsInvalidOrPending(index) {\n        /** @type {?} */\n        const steps = this.steps.toArray();\n        steps[this._selectedIndex].interacted = true;\n        if (this._linear && index >= 0) {\n            return steps.slice(0, index).some((/**\n             * @param {?} step\n             * @return {?}\n             */\n            step => {\n                /** @type {?} */\n                const control = step.stepControl;\n                /** @type {?} */\n                const isIncomplete = control ? (control.invalid || control.pending || !step.interacted) : !step.completed;\n                return isIncomplete && !step.optional && !step._completedOverride;\n            }));\n        }\n        return false;\n    }\n    /**\n     * @private\n     * @return {?}\n     */\n    _layoutDirection() {\n        return this._dir && this._dir.value === 'rtl' ? 'rtl' : 'ltr';\n    }\n    /**\n     * Checks whether the stepper contains the focused element.\n     * @private\n     * @return {?}\n     */\n    _containsFocus() {\n        if (!this._document || !this._elementRef) {\n            return false;\n        }\n        /** @type {?} */\n        const stepperElement = this._elementRef.nativeElement;\n        /** @type {?} */\n        const focusedElement = this._document.activeElement;\n        return stepperElement === focusedElement || stepperElement.contains(focusedElement);\n    }\n}\nCdkStepper.decorators = [\n    { type: Directive, args: [{\n                selector: '[cdkStepper]',\n                exportAs: 'cdkStepper',\n            },] }\n];\n/** @nocollapse */\nCdkStepper.ctorParameters = () => [\n    { type: Directionality, decorators: [{ type: Optional }] },\n    { type: ChangeDetectorRef },\n    { type: ElementRef },\n    { type: undefined, decorators: [{ type: Inject, args: [DOCUMENT,] }] }\n];\nCdkStepper.propDecorators = {\n    _steps: [{ type: ContentChildren, args: [CdkStep, { descendants: true },] }],\n    _stepHeader: [{ type: ContentChildren, args: [CdkStepHeader, { descendants: true },] }],\n    linear: [{ type: Input }],\n    selectedIndex: [{ type: Input }],\n    selected: [{ type: Input }],\n    selectionChange: [{ type: Output }]\n};\nif (false) {\n    /** @type {?} */\n    CdkStepper.ngAcceptInputType_editable;\n    /** @type {?} */\n    CdkStepper.ngAcceptInputType_optional;\n    /** @type {?} */\n    CdkStepper.ngAcceptInputType_completed;\n    /** @type {?} */\n    CdkStepper.ngAcceptInputType_hasError;\n    /** @type {?} */\n    CdkStepper.ngAcceptInputType_linear;\n    /** @type {?} */\n    CdkStepper.ngAcceptInputType_selectedIndex;\n    /**\n     * Emits when the component is destroyed.\n     * @type {?}\n     * @protected\n     */\n    CdkStepper.prototype._destroyed;\n    /**\n     * Used for managing keyboard focus.\n     * @type {?}\n     * @private\n     */\n    CdkStepper.prototype._keyManager;\n    /**\n     * \\@breaking-change 8.0.0 Remove `| undefined` once the `_document`\n     * constructor param is required.\n     * @type {?}\n     * @private\n     */\n    CdkStepper.prototype._document;\n    /**\n     * The list of step components that the stepper is holding.\n     * @deprecated use `steps` instead\n     * \\@breaking-change 9.0.0 remove this property\n     * @type {?}\n     */\n    CdkStepper.prototype._steps;\n    /**\n     * The list of step headers of the steps in the stepper.\n     * @deprecated Type to be changed to `QueryList<CdkStepHeader>`.\n     * \\@breaking-change 8.0.0\n     * @type {?}\n     */\n    CdkStepper.prototype._stepHeader;\n    /**\n     * @type {?}\n     * @private\n     */\n    CdkStepper.prototype._linear;\n    /**\n     * @type {?}\n     * @private\n     */\n    CdkStepper.prototype._selectedIndex;\n    /**\n     * Event emitted when the selected step has changed.\n     * @type {?}\n     */\n    CdkStepper.prototype.selectionChange;\n    /**\n     * Used to track unique ID for each stepper component.\n     * @type {?}\n     */\n    CdkStepper.prototype._groupId;\n    /**\n     * @type {?}\n     * @protected\n     */\n    CdkStepper.prototype._orientation;\n    /**\n     * @type {?}\n     * @private\n     */\n    CdkStepper.prototype._dir;\n    /**\n     * @type {?}\n     * @private\n     */\n    CdkStepper.prototype._changeDetectorRef;\n    /**\n     * @type {?}\n     * @private\n     */\n    CdkStepper.prototype._elementRef;\n}\n/**\n * Simplified representation of an \"AbstractControl\" from \\@angular/forms.\n * Used to avoid having to bring in \\@angular/forms for a single optional interface.\n * \\@docs-private\n * @record\n */\nfunction AbstractControlLike() { }\nif (false) {\n    /** @type {?} */\n    AbstractControlLike.prototype.asyncValidator;\n    /** @type {?} */\n    AbstractControlLike.prototype.dirty;\n    /** @type {?} */\n    AbstractControlLike.prototype.disabled;\n    /** @type {?} */\n    AbstractControlLike.prototype.enabled;\n    /** @type {?} */\n    AbstractControlLike.prototype.errors;\n    /** @type {?} */\n    AbstractControlLike.prototype.invalid;\n    /** @type {?} */\n    AbstractControlLike.prototype.parent;\n    /** @type {?} */\n    AbstractControlLike.prototype.pending;\n    /** @type {?} */\n    AbstractControlLike.prototype.pristine;\n    /** @type {?} */\n    AbstractControlLike.prototype.root;\n    /** @type {?} */\n    AbstractControlLike.prototype.status;\n    /** @type {?} */\n    AbstractControlLike.prototype.statusChanges;\n    /** @type {?} */\n    AbstractControlLike.prototype.touched;\n    /** @type {?} */\n    AbstractControlLike.prototype.untouched;\n    /** @type {?} */\n    AbstractControlLike.prototype.updateOn;\n    /** @type {?} */\n    AbstractControlLike.prototype.valid;\n    /** @type {?} */\n    AbstractControlLike.prototype.validator;\n    /** @type {?} */\n    AbstractControlLike.prototype.value;\n    /** @type {?} */\n    AbstractControlLike.prototype.valueChanges;\n    /**\n     * @return {?}\n     */\n    AbstractControlLike.prototype.clearAsyncValidators = function () { };\n    /**\n     * @return {?}\n     */\n    AbstractControlLike.prototype.clearValidators = function () { };\n    /**\n     * @param {?=} opts\n     * @return {?}\n     */\n    AbstractControlLike.prototype.disable = function (opts) { };\n    /**\n     * @param {?=} opts\n     * @return {?}\n     */\n    AbstractControlLike.prototype.enable = function (opts) { };\n    /**\n     * @param {?} path\n     * @return {?}\n     */\n    AbstractControlLike.prototype.get = function (path) { };\n    /**\n     * @param {?} errorCode\n     * @param {?=} path\n     * @return {?}\n     */\n    AbstractControlLike.prototype.getError = function (errorCode, path) { };\n    /**\n     * @param {?} errorCode\n     * @param {?=} path\n     * @return {?}\n     */\n    AbstractControlLike.prototype.hasError = function (errorCode, path) { };\n    /**\n     * @return {?}\n     */\n    AbstractControlLike.prototype.markAllAsTouched = function () { };\n    /**\n     * @param {?=} opts\n     * @return {?}\n     */\n    AbstractControlLike.prototype.markAsDirty = function (opts) { };\n    /**\n     * @param {?=} opts\n     * @return {?}\n     */\n    AbstractControlLike.prototype.markAsPending = function (opts) { };\n    /**\n     * @param {?=} opts\n     * @return {?}\n     */\n    AbstractControlLike.prototype.markAsPristine = function (opts) { };\n    /**\n     * @param {?=} opts\n     * @return {?}\n     */\n    AbstractControlLike.prototype.markAsTouched = function (opts) { };\n    /**\n     * @param {?=} opts\n     * @return {?}\n     */\n    AbstractControlLike.prototype.markAsUntouched = function (opts) { };\n    /**\n     * @param {?} value\n     * @param {?=} options\n     * @return {?}\n     */\n    AbstractControlLike.prototype.patchValue = function (value, options) { };\n    /**\n     * @param {?=} value\n     * @param {?=} options\n     * @return {?}\n     */\n    AbstractControlLike.prototype.reset = function (value, options) { };\n    /**\n     * @param {?} newValidator\n     * @return {?}\n     */\n    AbstractControlLike.prototype.setAsyncValidators = function (newValidator) { };\n    /**\n     * @param {?} errors\n     * @param {?=} opts\n     * @return {?}\n     */\n    AbstractControlLike.prototype.setErrors = function (errors, opts) { };\n    /**\n     * @param {?} parent\n     * @return {?}\n     */\n    AbstractControlLike.prototype.setParent = function (parent) { };\n    /**\n     * @param {?} newValidator\n     * @return {?}\n     */\n    AbstractControlLike.prototype.setValidators = function (newValidator) { };\n    /**\n     * @param {?} value\n     * @param {?=} options\n     * @return {?}\n     */\n    AbstractControlLike.prototype.setValue = function (value, options) { };\n    /**\n     * @param {?=} opts\n     * @return {?}\n     */\n    AbstractControlLike.prototype.updateValueAndValidity = function (opts) { };\n    /**\n     * @param {?} value\n     * @param {?=} options\n     * @return {?}\n     */\n    AbstractControlLike.prototype.patchValue = function (value, options) { };\n    /**\n     * @param {?=} formState\n     * @param {?=} options\n     * @return {?}\n     */\n    AbstractControlLike.prototype.reset = function (formState, options) { };\n    /**\n     * @param {?} value\n     * @param {?=} options\n     * @return {?}\n     */\n    AbstractControlLike.prototype.setValue = function (value, options) { };\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/stepper/stepper-button.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Button that moves to the next step in a stepper workflow.\n */\nclass CdkStepperNext {\n    /**\n     * @param {?} _stepper\n     */\n    constructor(_stepper) {\n        this._stepper = _stepper;\n        /**\n         * Type of the next button. Defaults to \"submit\" if not specified.\n         */\n        this.type = 'submit';\n    }\n    // We have to use a `HostListener` here in order to support both Ivy and ViewEngine.\n    // In Ivy the `host` bindings will be merged when this class is extended, whereas in\n    // ViewEngine they're overwritten.\n    // TODO(crisbeto): we move this back into `host` once Ivy is turned on by default.\n    // tslint:disable-next-line:no-host-decorator-in-concrete\n    /**\n     * @return {?}\n     */\n    _handleClick() {\n        this._stepper.next();\n    }\n}\nCdkStepperNext.decorators = [\n    { type: Directive, args: [{\n                selector: 'button[cdkStepperNext]',\n                host: {\n                    '[type]': 'type',\n                }\n            },] }\n];\n/** @nocollapse */\nCdkStepperNext.ctorParameters = () => [\n    { type: CdkStepper }\n];\nCdkStepperNext.propDecorators = {\n    type: [{ type: Input }],\n    _handleClick: [{ type: HostListener, args: ['click',] }]\n};\nif (false) {\n    /**\n     * Type of the next button. Defaults to \"submit\" if not specified.\n     * @type {?}\n     */\n    CdkStepperNext.prototype.type;\n    /** @type {?} */\n    CdkStepperNext.prototype._stepper;\n}\n/**\n * Button that moves to the previous step in a stepper workflow.\n */\nclass CdkStepperPrevious {\n    /**\n     * @param {?} _stepper\n     */\n    constructor(_stepper) {\n        this._stepper = _stepper;\n        /**\n         * Type of the previous button. Defaults to \"button\" if not specified.\n         */\n        this.type = 'button';\n    }\n    // We have to use a `HostListener` here in order to support both Ivy and ViewEngine.\n    // In Ivy the `host` bindings will be merged when this class is extended, whereas in\n    // ViewEngine they're overwritten.\n    // TODO(crisbeto): we move this back into `host` once Ivy is turned on by default.\n    // tslint:disable-next-line:no-host-decorator-in-concrete\n    /**\n     * @return {?}\n     */\n    _handleClick() {\n        this._stepper.previous();\n    }\n}\nCdkStepperPrevious.decorators = [\n    { type: Directive, args: [{\n                selector: 'button[cdkStepperPrevious]',\n                host: {\n                    '[type]': 'type',\n                }\n            },] }\n];\n/** @nocollapse */\nCdkStepperPrevious.ctorParameters = () => [\n    { type: CdkStepper }\n];\nCdkStepperPrevious.propDecorators = {\n    type: [{ type: Input }],\n    _handleClick: [{ type: HostListener, args: ['click',] }]\n};\nif (false) {\n    /**\n     * Type of the previous button. Defaults to \"button\" if not specified.\n     * @type {?}\n     */\n    CdkStepperPrevious.prototype.type;\n    /** @type {?} */\n    CdkStepperPrevious.prototype._stepper;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/stepper/stepper-module.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass CdkStepperModule {\n}\nCdkStepperModule.decorators = [\n    { type: NgModule, args: [{\n                imports: [BidiModule],\n                exports: [\n                    CdkStep,\n                    CdkStepper,\n                    CdkStepHeader,\n                    CdkStepLabel,\n                    CdkStepperNext,\n                    CdkStepperPrevious,\n                ],\n                declarations: [\n                    CdkStep,\n                    CdkStepper,\n                    CdkStepHeader,\n                    CdkStepLabel,\n                    CdkStepperNext,\n                    CdkStepperPrevious,\n                ]\n            },] }\n];\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/stepper/public-api.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { CdkStep, CdkStepHeader, CdkStepLabel, CdkStepper, CdkStepperModule, CdkStepperNext, CdkStepperPrevious, MAT_STEPPER_GLOBAL_OPTIONS, STEPPER_GLOBAL_OPTIONS, STEP_STATE, StepperSelectionEvent };\n//# sourceMappingURL=stepper.js.map\n","import { SelectionModel, isDataSource } from '@angular/cdk/collections';\nimport { isObservable, Subject, BehaviorSubject, of } from 'rxjs';\nimport { take, filter, takeUntil } from 'rxjs/operators';\nimport { InjectionToken, Directive, ViewContainerRef, Inject, Optional, TemplateRef, Component, ViewEncapsulation, ChangeDetectionStrategy, IterableDiffers, ChangeDetectorRef, Input, ViewChild, ContentChildren, ElementRef, Renderer2, HostListener, NgModule } from '@angular/core';\nimport { Directionality } from '@angular/cdk/bidi';\nimport { coerceNumberProperty, coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { FocusMonitor } from '@angular/cdk/a11y';\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/tree/control/base-tree-control.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Base tree control. It has basic toggle/expand/collapse operations on a single data node.\n * @abstract\n * @template T\n */\nclass BaseTreeControl {\n    constructor() {\n        /**\n         * A selection model with multi-selection to track expansion status.\n         */\n        this.expansionModel = new SelectionModel(true);\n    }\n    /**\n     * Toggles one single data node's expanded/collapsed state.\n     * @param {?} dataNode\n     * @return {?}\n     */\n    toggle(dataNode) {\n        this.expansionModel.toggle(dataNode);\n    }\n    /**\n     * Expands one single data node.\n     * @param {?} dataNode\n     * @return {?}\n     */\n    expand(dataNode) {\n        this.expansionModel.select(dataNode);\n    }\n    /**\n     * Collapses one single data node.\n     * @param {?} dataNode\n     * @return {?}\n     */\n    collapse(dataNode) {\n        this.expansionModel.deselect(dataNode);\n    }\n    /**\n     * Whether a given data node is expanded or not. Returns true if the data node is expanded.\n     * @param {?} dataNode\n     * @return {?}\n     */\n    isExpanded(dataNode) {\n        return this.expansionModel.isSelected(dataNode);\n    }\n    /**\n     * Toggles a subtree rooted at `node` recursively.\n     * @param {?} dataNode\n     * @return {?}\n     */\n    toggleDescendants(dataNode) {\n        this.expansionModel.isSelected(dataNode)\n            ? this.collapseDescendants(dataNode)\n            : this.expandDescendants(dataNode);\n    }\n    /**\n     * Collapse all dataNodes in the tree.\n     * @return {?}\n     */\n    collapseAll() {\n        this.expansionModel.clear();\n    }\n    /**\n     * Expands a subtree rooted at given data node recursively.\n     * @param {?} dataNode\n     * @return {?}\n     */\n    expandDescendants(dataNode) {\n        /** @type {?} */\n        let toBeProcessed = [dataNode];\n        toBeProcessed.push(...this.getDescendants(dataNode));\n        this.expansionModel.select(...toBeProcessed);\n    }\n    /**\n     * Collapses a subtree rooted at given data node recursively.\n     * @param {?} dataNode\n     * @return {?}\n     */\n    collapseDescendants(dataNode) {\n        /** @type {?} */\n        let toBeProcessed = [dataNode];\n        toBeProcessed.push(...this.getDescendants(dataNode));\n        this.expansionModel.deselect(...toBeProcessed);\n    }\n}\nif (false) {\n    /**\n     * Saved data node for `expandAll` action.\n     * @type {?}\n     */\n    BaseTreeControl.prototype.dataNodes;\n    /**\n     * A selection model with multi-selection to track expansion status.\n     * @type {?}\n     */\n    BaseTreeControl.prototype.expansionModel;\n    /**\n     * Get depth of a given data node, return the level number. This is for flat tree node.\n     * @type {?}\n     */\n    BaseTreeControl.prototype.getLevel;\n    /**\n     * Whether the data node is expandable. Returns true if expandable.\n     * This is for flat tree node.\n     * @type {?}\n     */\n    BaseTreeControl.prototype.isExpandable;\n    /**\n     * Gets a stream that emits whenever the given data node's children change.\n     * @type {?}\n     */\n    BaseTreeControl.prototype.getChildren;\n    /**\n     * Gets a list of descendent data nodes of a subtree rooted at given data node recursively.\n     * @abstract\n     * @param {?} dataNode\n     * @return {?}\n     */\n    BaseTreeControl.prototype.getDescendants = function (dataNode) { };\n    /**\n     * Expands all data nodes in the tree.\n     * @abstract\n     * @return {?}\n     */\n    BaseTreeControl.prototype.expandAll = function () { };\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/tree/control/flat-tree-control.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Flat tree control. Able to expand/collapse a subtree recursively for flattened tree.\n * @template T\n */\nclass FlatTreeControl extends BaseTreeControl {\n    /**\n     * Construct with flat tree data node functions getLevel and isExpandable.\n     * @param {?} getLevel\n     * @param {?} isExpandable\n     */\n    constructor(getLevel, isExpandable) {\n        super();\n        this.getLevel = getLevel;\n        this.isExpandable = isExpandable;\n    }\n    /**\n     * Gets a list of the data node's subtree of descendent data nodes.\n     *\n     * To make this working, the `dataNodes` of the TreeControl must be flattened tree nodes\n     * with correct levels.\n     * @param {?} dataNode\n     * @return {?}\n     */\n    getDescendants(dataNode) {\n        /** @type {?} */\n        const startIndex = this.dataNodes.indexOf(dataNode);\n        /** @type {?} */\n        const results = [];\n        // Goes through flattened tree nodes in the `dataNodes` array, and get all descendants.\n        // The level of descendants of a tree node must be greater than the level of the given\n        // tree node.\n        // If we reach a node whose level is equal to the level of the tree node, we hit a sibling.\n        // If we reach a node whose level is greater than the level of the tree node, we hit a\n        // sibling of an ancestor.\n        for (let i = startIndex + 1; i < this.dataNodes.length && this.getLevel(dataNode) < this.getLevel(this.dataNodes[i]); i++) {\n            results.push(this.dataNodes[i]);\n        }\n        return results;\n    }\n    /**\n     * Expands all data nodes in the tree.\n     *\n     * To make this working, the `dataNodes` variable of the TreeControl must be set to all flattened\n     * data nodes of the tree.\n     * @return {?}\n     */\n    expandAll() {\n        this.expansionModel.select(...this.dataNodes);\n    }\n}\nif (false) {\n    /** @type {?} */\n    FlatTreeControl.prototype.getLevel;\n    /** @type {?} */\n    FlatTreeControl.prototype.isExpandable;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/tree/control/nested-tree-control.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Nested tree control. Able to expand/collapse a subtree recursively for NestedNode type.\n * @template T\n */\nclass NestedTreeControl extends BaseTreeControl {\n    /**\n     * Construct with nested tree function getChildren.\n     * @param {?} getChildren\n     */\n    constructor(getChildren) {\n        super();\n        this.getChildren = getChildren;\n    }\n    /**\n     * Expands all dataNodes in the tree.\n     *\n     * To make this working, the `dataNodes` variable of the TreeControl must be set to all root level\n     * data nodes of the tree.\n     * @return {?}\n     */\n    expandAll() {\n        this.expansionModel.clear();\n        /** @type {?} */\n        const allNodes = this.dataNodes.reduce((/**\n         * @param {?} accumulator\n         * @param {?} dataNode\n         * @return {?}\n         */\n        (accumulator, dataNode) => [...accumulator, ...this.getDescendants(dataNode), dataNode]), []);\n        this.expansionModel.select(...allNodes);\n    }\n    /**\n     * Gets a list of descendant dataNodes of a subtree rooted at given data node recursively.\n     * @param {?} dataNode\n     * @return {?}\n     */\n    getDescendants(dataNode) {\n        /** @type {?} */\n        const descendants = [];\n        this._getDescendants(descendants, dataNode);\n        // Remove the node itself\n        return descendants.splice(1);\n    }\n    /**\n     * A helper function to get descendants recursively.\n     * @protected\n     * @param {?} descendants\n     * @param {?} dataNode\n     * @return {?}\n     */\n    _getDescendants(descendants, dataNode) {\n        descendants.push(dataNode);\n        /** @type {?} */\n        const childrenNodes = this.getChildren(dataNode);\n        if (Array.isArray(childrenNodes)) {\n            childrenNodes.forEach((/**\n             * @param {?} child\n             * @return {?}\n             */\n            (child) => this._getDescendants(descendants, child)));\n        }\n        else if (isObservable(childrenNodes)) {\n            // TypeScript as of version 3.5 doesn't seem to treat `Boolean` like a function that\n            // returns a `boolean` specifically in the context of `filter`, so we manually clarify that.\n            childrenNodes.pipe(take(1), filter((/** @type {?} */ (Boolean))))\n                .subscribe((/**\n             * @param {?} children\n             * @return {?}\n             */\n            children => {\n                for (const child of children) {\n                    this._getDescendants(descendants, child);\n                }\n            }));\n        }\n    }\n}\nif (false) {\n    /** @type {?} */\n    NestedTreeControl.prototype.getChildren;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/tree/control/tree-control.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Tree control interface. User can implement TreeControl to expand/collapse dataNodes in the tree.\n * The CDKTree will use this TreeControl to expand/collapse a node.\n * User can also use it outside the `<cdk-tree>` to control the expansion status of the tree.\n * @record\n * @template T\n */\nfunction TreeControl() { }\nif (false) {\n    /**\n     * The saved tree nodes data for `expandAll` action.\n     * @type {?}\n     */\n    TreeControl.prototype.dataNodes;\n    /**\n     * The expansion model\n     * @type {?}\n     */\n    TreeControl.prototype.expansionModel;\n    /**\n     * Get depth of a given data node, return the level number. This is for flat tree node.\n     * @type {?}\n     */\n    TreeControl.prototype.getLevel;\n    /**\n     * Whether the data node is expandable. Returns true if expandable.\n     * This is for flat tree node.\n     * @type {?}\n     */\n    TreeControl.prototype.isExpandable;\n    /**\n     * Gets a stream that emits whenever the given data node's children change.\n     * @type {?}\n     */\n    TreeControl.prototype.getChildren;\n    /**\n     * Whether the data node is expanded or collapsed. Return true if it's expanded.\n     * @param {?} dataNode\n     * @return {?}\n     */\n    TreeControl.prototype.isExpanded = function (dataNode) { };\n    /**\n     * Get all descendants of a data node\n     * @param {?} dataNode\n     * @return {?}\n     */\n    TreeControl.prototype.getDescendants = function (dataNode) { };\n    /**\n     * Expand or collapse data node\n     * @param {?} dataNode\n     * @return {?}\n     */\n    TreeControl.prototype.toggle = function (dataNode) { };\n    /**\n     * Expand one data node\n     * @param {?} dataNode\n     * @return {?}\n     */\n    TreeControl.prototype.expand = function (dataNode) { };\n    /**\n     * Collapse one data node\n     * @param {?} dataNode\n     * @return {?}\n     */\n    TreeControl.prototype.collapse = function (dataNode) { };\n    /**\n     * Expand all the dataNodes in the tree\n     * @return {?}\n     */\n    TreeControl.prototype.expandAll = function () { };\n    /**\n     * Collapse all the dataNodes in the tree\n     * @return {?}\n     */\n    TreeControl.prototype.collapseAll = function () { };\n    /**\n     * Toggle a data node by expand/collapse it and all its descendants\n     * @param {?} dataNode\n     * @return {?}\n     */\n    TreeControl.prototype.toggleDescendants = function (dataNode) { };\n    /**\n     * Expand a data node and all its descendants\n     * @param {?} dataNode\n     * @return {?}\n     */\n    TreeControl.prototype.expandDescendants = function (dataNode) { };\n    /**\n     * Collapse a data node and all its descendants\n     * @param {?} dataNode\n     * @return {?}\n     */\n    TreeControl.prototype.collapseDescendants = function (dataNode) { };\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/tree/outlet.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Injection token used to provide a `CdkTreeNode` to its outlet.\n * Used primarily to avoid circular imports.\n * \\@docs-private\n * @type {?}\n */\nconst CDK_TREE_NODE_OUTLET_NODE = new InjectionToken('CDK_TREE_NODE_OUTLET_NODE');\n/**\n * Outlet for nested CdkNode. Put `[cdkTreeNodeOutlet]` on a tag to place children dataNodes\n * inside the outlet.\n */\nclass CdkTreeNodeOutlet {\n    /**\n     * @param {?} viewContainer\n     * @param {?=} _node\n     */\n    constructor(viewContainer, _node) {\n        this.viewContainer = viewContainer;\n        this._node = _node;\n    }\n}\nCdkTreeNodeOutlet.decorators = [\n    { type: Directive, args: [{\n                selector: '[cdkTreeNodeOutlet]'\n            },] }\n];\n/** @nocollapse */\nCdkTreeNodeOutlet.ctorParameters = () => [\n    { type: ViewContainerRef },\n    { type: undefined, decorators: [{ type: Inject, args: [CDK_TREE_NODE_OUTLET_NODE,] }, { type: Optional }] }\n];\nif (false) {\n    /** @type {?} */\n    CdkTreeNodeOutlet.prototype.viewContainer;\n    /** @type {?} */\n    CdkTreeNodeOutlet.prototype._node;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/tree/node.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Context provided to the tree node component.\n * @template T\n */\nclass CdkTreeNodeOutletContext {\n    /**\n     * @param {?} data\n     */\n    constructor(data) {\n        this.$implicit = data;\n    }\n}\nif (false) {\n    /**\n     * Data for the node.\n     * @type {?}\n     */\n    CdkTreeNodeOutletContext.prototype.$implicit;\n    /**\n     * Depth of the node.\n     * @type {?}\n     */\n    CdkTreeNodeOutletContext.prototype.level;\n    /**\n     * Index location of the node.\n     * @type {?}\n     */\n    CdkTreeNodeOutletContext.prototype.index;\n    /**\n     * Length of the number of total dataNodes.\n     * @type {?}\n     */\n    CdkTreeNodeOutletContext.prototype.count;\n}\n/**\n * Data node definition for the CdkTree.\n * Captures the node's template and a when predicate that describes when this node should be used.\n * @template T\n */\nclass CdkTreeNodeDef {\n    /**\n     * \\@docs-private\n     * @param {?} template\n     */\n    constructor(template) {\n        this.template = template;\n    }\n}\nCdkTreeNodeDef.decorators = [\n    { type: Directive, args: [{\n                selector: '[cdkTreeNodeDef]',\n                inputs: [\n                    'when: cdkTreeNodeDefWhen'\n                ],\n            },] }\n];\n/** @nocollapse */\nCdkTreeNodeDef.ctorParameters = () => [\n    { type: TemplateRef }\n];\nif (false) {\n    /**\n     * Function that should return true if this node template should be used for the provided node\n     * data and index. If left undefined, this node will be considered the default node template to\n     * use when no other when functions return true for the data.\n     * For every node, there must be at least one when function that passes or an undefined to\n     * default.\n     * @type {?}\n     */\n    CdkTreeNodeDef.prototype.when;\n    /** @type {?} */\n    CdkTreeNodeDef.prototype.template;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/tree/tree-errors.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Returns an error to be thrown when there is no usable data.\n * \\@docs-private\n * @return {?}\n */\nfunction getTreeNoValidDataSourceError() {\n    return Error(`A valid data source must be provided.`);\n}\n/**\n * Returns an error to be thrown when there are multiple nodes that are missing a when function.\n * \\@docs-private\n * @return {?}\n */\nfunction getTreeMultipleDefaultNodeDefsError() {\n    return Error(`There can only be one default row without a when predicate function.`);\n}\n/**\n * Returns an error to be thrown when there are no matching node defs for a particular set of data.\n * \\@docs-private\n * @return {?}\n */\nfunction getTreeMissingMatchingNodeDefError() {\n    return Error(`Could not find a matching node definition for the provided node data.`);\n}\n/**\n * Returns an error to be thrown when there are tree control.\n * \\@docs-private\n * @return {?}\n */\nfunction getTreeControlMissingError() {\n    return Error(`Could not find a tree control for the tree.`);\n}\n/**\n * Returns an error to be thrown when tree control did not implement functions for flat/nested node.\n * \\@docs-private\n * @return {?}\n */\nfunction getTreeControlFunctionsMissingError() {\n    return Error(`Could not find functions for nested/flat tree in tree control.`);\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/tree/tree.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * CDK tree component that connects with a data source to retrieve data of type `T` and renders\n * dataNodes with hierarchy. Updates the dataNodes when new data is provided by the data source.\n * @template T\n */\nclass CdkTree {\n    /**\n     * @param {?} _differs\n     * @param {?} _changeDetectorRef\n     */\n    constructor(_differs, _changeDetectorRef) {\n        this._differs = _differs;\n        this._changeDetectorRef = _changeDetectorRef;\n        /**\n         * Subject that emits when the component has been destroyed.\n         */\n        this._onDestroy = new Subject();\n        /**\n         * Level of nodes\n         */\n        this._levels = new Map();\n        // TODO(tinayuangao): Setup a listener for scrolling, emit the calculated view to viewChange.\n        //     Remove the MAX_VALUE in viewChange\n        /**\n         * Stream containing the latest information on what rows are being displayed on screen.\n         * Can be used by the data source to as a heuristic of what data should be provided.\n         */\n        this.viewChange = new BehaviorSubject({ start: 0, end: Number.MAX_VALUE });\n    }\n    /**\n     * Provides a stream containing the latest data array to render. Influenced by the tree's\n     * stream of view window (what dataNodes are currently on screen).\n     * Data source can be an observable of data array, or a data array to render.\n     * @return {?}\n     */\n    get dataSource() { return this._dataSource; }\n    /**\n     * @param {?} dataSource\n     * @return {?}\n     */\n    set dataSource(dataSource) {\n        if (this._dataSource !== dataSource) {\n            this._switchDataSource(dataSource);\n        }\n    }\n    /**\n     * @return {?}\n     */\n    ngOnInit() {\n        this._dataDiffer = this._differs.find([]).create(this.trackBy);\n        if (!this.treeControl) {\n            throw getTreeControlMissingError();\n        }\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this._nodeOutlet.viewContainer.clear();\n        this._onDestroy.next();\n        this._onDestroy.complete();\n        if (this._dataSource && typeof ((/** @type {?} */ (this._dataSource))).disconnect === 'function') {\n            ((/** @type {?} */ (this.dataSource))).disconnect(this);\n        }\n        if (this._dataSubscription) {\n            this._dataSubscription.unsubscribe();\n            this._dataSubscription = null;\n        }\n    }\n    /**\n     * @return {?}\n     */\n    ngAfterContentChecked() {\n        /** @type {?} */\n        const defaultNodeDefs = this._nodeDefs.filter((/**\n         * @param {?} def\n         * @return {?}\n         */\n        def => !def.when));\n        if (defaultNodeDefs.length > 1) {\n            throw getTreeMultipleDefaultNodeDefsError();\n        }\n        this._defaultNodeDef = defaultNodeDefs[0];\n        if (this.dataSource && this._nodeDefs && !this._dataSubscription) {\n            this._observeRenderChanges();\n        }\n    }\n    // TODO(tinayuangao): Work on keyboard traversal and actions, make sure it's working for RTL\n    //     and nested trees.\n    /**\n     * Switch to the provided data source by resetting the data and unsubscribing from the current\n     * render change subscription if one exists. If the data source is null, interpret this by\n     * clearing the node outlet. Otherwise start listening for new data.\n     * @private\n     * @param {?} dataSource\n     * @return {?}\n     */\n    _switchDataSource(dataSource) {\n        if (this._dataSource && typeof ((/** @type {?} */ (this._dataSource))).disconnect === 'function') {\n            ((/** @type {?} */ (this.dataSource))).disconnect(this);\n        }\n        if (this._dataSubscription) {\n            this._dataSubscription.unsubscribe();\n            this._dataSubscription = null;\n        }\n        // Remove the all dataNodes if there is now no data source\n        if (!dataSource) {\n            this._nodeOutlet.viewContainer.clear();\n        }\n        this._dataSource = dataSource;\n        if (this._nodeDefs) {\n            this._observeRenderChanges();\n        }\n    }\n    /**\n     * Set up a subscription for the data provided by the data source.\n     * @private\n     * @return {?}\n     */\n    _observeRenderChanges() {\n        /** @type {?} */\n        let dataStream;\n        if (isDataSource(this._dataSource)) {\n            dataStream = this._dataSource.connect(this);\n        }\n        else if (isObservable(this._dataSource)) {\n            dataStream = this._dataSource;\n        }\n        else if (Array.isArray(this._dataSource)) {\n            dataStream = of(this._dataSource);\n        }\n        if (dataStream) {\n            this._dataSubscription = dataStream.pipe(takeUntil(this._onDestroy))\n                .subscribe((/**\n             * @param {?} data\n             * @return {?}\n             */\n            data => this.renderNodeChanges(data)));\n        }\n        else {\n            throw getTreeNoValidDataSourceError();\n        }\n    }\n    /**\n     * Check for changes made in the data and render each change (node added/removed/moved).\n     * @param {?} data\n     * @param {?=} dataDiffer\n     * @param {?=} viewContainer\n     * @param {?=} parentData\n     * @return {?}\n     */\n    renderNodeChanges(data, dataDiffer = this._dataDiffer, viewContainer = this._nodeOutlet.viewContainer, parentData) {\n        /** @type {?} */\n        const changes = dataDiffer.diff(data);\n        if (!changes) {\n            return;\n        }\n        changes.forEachOperation((/**\n         * @param {?} item\n         * @param {?} adjustedPreviousIndex\n         * @param {?} currentIndex\n         * @return {?}\n         */\n        (item, adjustedPreviousIndex, currentIndex) => {\n            if (item.previousIndex == null) {\n                this.insertNode(data[(/** @type {?} */ (currentIndex))], (/** @type {?} */ (currentIndex)), viewContainer, parentData);\n            }\n            else if (currentIndex == null) {\n                viewContainer.remove((/** @type {?} */ (adjustedPreviousIndex)));\n                this._levels.delete(item.item);\n            }\n            else {\n                /** @type {?} */\n                const view = viewContainer.get((/** @type {?} */ (adjustedPreviousIndex)));\n                viewContainer.move((/** @type {?} */ (view)), currentIndex);\n            }\n        }));\n        this._changeDetectorRef.detectChanges();\n    }\n    /**\n     * Finds the matching node definition that should be used for this node data. If there is only\n     * one node definition, it is returned. Otherwise, find the node definition that has a when\n     * predicate that returns true with the data. If none return true, return the default node\n     * definition.\n     * @param {?} data\n     * @param {?} i\n     * @return {?}\n     */\n    _getNodeDef(data, i) {\n        if (this._nodeDefs.length === 1) {\n            return this._nodeDefs.first;\n        }\n        /** @type {?} */\n        const nodeDef = this._nodeDefs.find((/**\n         * @param {?} def\n         * @return {?}\n         */\n        def => def.when && def.when(i, data))) || this._defaultNodeDef;\n        if (!nodeDef) {\n            throw getTreeMissingMatchingNodeDefError();\n        }\n        return nodeDef;\n    }\n    /**\n     * Create the embedded view for the data node template and place it in the correct index location\n     * within the data node view container.\n     * @param {?} nodeData\n     * @param {?} index\n     * @param {?=} viewContainer\n     * @param {?=} parentData\n     * @return {?}\n     */\n    insertNode(nodeData, index, viewContainer, parentData) {\n        /** @type {?} */\n        const node = this._getNodeDef(nodeData, index);\n        // Node context that will be provided to created embedded view\n        /** @type {?} */\n        const context = new CdkTreeNodeOutletContext(nodeData);\n        // If the tree is flat tree, then use the `getLevel` function in flat tree control\n        // Otherwise, use the level of parent node.\n        if (this.treeControl.getLevel) {\n            context.level = this.treeControl.getLevel(nodeData);\n        }\n        else if (typeof parentData !== 'undefined' && this._levels.has(parentData)) {\n            context.level = (/** @type {?} */ (this._levels.get(parentData))) + 1;\n        }\n        else {\n            context.level = 0;\n        }\n        this._levels.set(nodeData, context.level);\n        // Use default tree nodeOutlet, or nested node's nodeOutlet\n        /** @type {?} */\n        const container = viewContainer ? viewContainer : this._nodeOutlet.viewContainer;\n        container.createEmbeddedView(node.template, context, index);\n        // Set the data to just created `CdkTreeNode`.\n        // The `CdkTreeNode` created from `createEmbeddedView` will be saved in static variable\n        //     `mostRecentTreeNode`. We get it from static variable and pass the node data to it.\n        if (CdkTreeNode.mostRecentTreeNode) {\n            CdkTreeNode.mostRecentTreeNode.data = nodeData;\n        }\n    }\n}\nCdkTree.decorators = [\n    { type: Component, args: [{\n                selector: 'cdk-tree',\n                exportAs: 'cdkTree',\n                template: `<ng-container cdkTreeNodeOutlet></ng-container>`,\n                host: {\n                    'class': 'cdk-tree',\n                    'role': 'tree',\n                },\n                encapsulation: ViewEncapsulation.None,\n                // The \"OnPush\" status for the `CdkTree` component is effectively a noop, so we are removing it.\n                // The view for `CdkTree` consists entirely of templates declared in other views. As they are\n                // declared elsewhere, they are checked when their declaration points are checked.\n                // tslint:disable-next-line:validate-decorators\n                changeDetection: ChangeDetectionStrategy.Default\n            }] }\n];\n/** @nocollapse */\nCdkTree.ctorParameters = () => [\n    { type: IterableDiffers },\n    { type: ChangeDetectorRef }\n];\nCdkTree.propDecorators = {\n    dataSource: [{ type: Input }],\n    treeControl: [{ type: Input }],\n    trackBy: [{ type: Input }],\n    _nodeOutlet: [{ type: ViewChild, args: [CdkTreeNodeOutlet, { static: true },] }],\n    _nodeDefs: [{ type: ContentChildren, args: [CdkTreeNodeDef, {\n                    // We need to use `descendants: true`, because Ivy will no longer match\n                    // indirect descendants if it's left as false.\n                    descendants: true\n                },] }]\n};\nif (false) {\n    /**\n     * Subject that emits when the component has been destroyed.\n     * @type {?}\n     * @private\n     */\n    CdkTree.prototype._onDestroy;\n    /**\n     * Differ used to find the changes in the data provided by the data source.\n     * @type {?}\n     * @private\n     */\n    CdkTree.prototype._dataDiffer;\n    /**\n     * Stores the node definition that does not have a when predicate.\n     * @type {?}\n     * @private\n     */\n    CdkTree.prototype._defaultNodeDef;\n    /**\n     * Data subscription\n     * @type {?}\n     * @private\n     */\n    CdkTree.prototype._dataSubscription;\n    /**\n     * Level of nodes\n     * @type {?}\n     * @private\n     */\n    CdkTree.prototype._levels;\n    /**\n     * @type {?}\n     * @private\n     */\n    CdkTree.prototype._dataSource;\n    /**\n     * The tree controller\n     * @type {?}\n     */\n    CdkTree.prototype.treeControl;\n    /**\n     * Tracking function that will be used to check the differences in data changes. Used similarly\n     * to `ngFor` `trackBy` function. Optimize node operations by identifying a node based on its data\n     * relative to the function to know if a node should be added/removed/moved.\n     * Accepts a function that takes two parameters, `index` and `item`.\n     * @type {?}\n     */\n    CdkTree.prototype.trackBy;\n    /** @type {?} */\n    CdkTree.prototype._nodeOutlet;\n    /**\n     * The tree node template for the tree\n     * @type {?}\n     */\n    CdkTree.prototype._nodeDefs;\n    /**\n     * Stream containing the latest information on what rows are being displayed on screen.\n     * Can be used by the data source to as a heuristic of what data should be provided.\n     * @type {?}\n     */\n    CdkTree.prototype.viewChange;\n    /**\n     * @type {?}\n     * @private\n     */\n    CdkTree.prototype._differs;\n    /**\n     * @type {?}\n     * @private\n     */\n    CdkTree.prototype._changeDetectorRef;\n}\n/**\n * Tree node for CdkTree. It contains the data in the tree node.\n * @template T\n */\nclass CdkTreeNode {\n    /**\n     * @param {?} _elementRef\n     * @param {?} _tree\n     */\n    constructor(_elementRef, _tree) {\n        this._elementRef = _elementRef;\n        this._tree = _tree;\n        /**\n         * Subject that emits when the component has been destroyed.\n         */\n        this._destroyed = new Subject();\n        /**\n         * Emits when the node's data has changed.\n         */\n        this._dataChanges = new Subject();\n        /**\n         * The role of the node should be 'group' if it's an internal node,\n         * and 'treeitem' if it's a leaf node.\n         */\n        this.role = 'treeitem';\n        CdkTreeNode.mostRecentTreeNode = (/** @type {?} */ (this));\n    }\n    /**\n     * The tree node's data.\n     * @return {?}\n     */\n    get data() { return this._data; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set data(value) {\n        if (value !== this._data) {\n            this._data = value;\n            this._setRoleFromData();\n            this._dataChanges.next();\n        }\n    }\n    /**\n     * @return {?}\n     */\n    get isExpanded() {\n        return this._tree.treeControl.isExpanded(this._data);\n    }\n    /**\n     * @return {?}\n     */\n    get level() {\n        return this._tree.treeControl.getLevel ? this._tree.treeControl.getLevel(this._data) : 0;\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        // If this is the last tree node being destroyed,\n        // clear out the reference to avoid leaking memory.\n        if (CdkTreeNode.mostRecentTreeNode === this) {\n            CdkTreeNode.mostRecentTreeNode = null;\n        }\n        this._dataChanges.complete();\n        this._destroyed.next();\n        this._destroyed.complete();\n    }\n    /**\n     * Focuses the menu item. Implements for FocusableOption.\n     * @return {?}\n     */\n    focus() {\n        this._elementRef.nativeElement.focus();\n    }\n    /**\n     * @protected\n     * @return {?}\n     */\n    _setRoleFromData() {\n        if (this._tree.treeControl.isExpandable) {\n            this.role = this._tree.treeControl.isExpandable(this._data) ? 'group' : 'treeitem';\n        }\n        else {\n            if (!this._tree.treeControl.getChildren) {\n                throw getTreeControlFunctionsMissingError();\n            }\n            /** @type {?} */\n            const childrenNodes = this._tree.treeControl.getChildren(this._data);\n            if (Array.isArray(childrenNodes)) {\n                this._setRoleFromChildren((/** @type {?} */ (childrenNodes)));\n            }\n            else if (isObservable(childrenNodes)) {\n                childrenNodes.pipe(takeUntil(this._destroyed))\n                    .subscribe((/**\n                 * @param {?} children\n                 * @return {?}\n                 */\n                children => this._setRoleFromChildren(children)));\n            }\n        }\n    }\n    /**\n     * @protected\n     * @param {?} children\n     * @return {?}\n     */\n    _setRoleFromChildren(children) {\n        this.role = children && children.length ? 'group' : 'treeitem';\n    }\n}\n/**\n * The most recently created `CdkTreeNode`. We save it in static variable so we can retrieve it\n * in `CdkTree` and set the data to it.\n */\nCdkTreeNode.mostRecentTreeNode = null;\nCdkTreeNode.decorators = [\n    { type: Directive, args: [{\n                selector: 'cdk-tree-node',\n                exportAs: 'cdkTreeNode',\n                host: {\n                    '[attr.aria-expanded]': 'isExpanded',\n                    '[attr.aria-level]': 'role === \"treeitem\" ? level : null',\n                    '[attr.role]': 'role',\n                    'class': 'cdk-tree-node',\n                },\n            },] }\n];\n/** @nocollapse */\nCdkTreeNode.ctorParameters = () => [\n    { type: ElementRef },\n    { type: CdkTree }\n];\nCdkTreeNode.propDecorators = {\n    role: [{ type: Input }]\n};\nif (false) {\n    /**\n     * The most recently created `CdkTreeNode`. We save it in static variable so we can retrieve it\n     * in `CdkTree` and set the data to it.\n     * @type {?}\n     */\n    CdkTreeNode.mostRecentTreeNode;\n    /**\n     * Subject that emits when the component has been destroyed.\n     * @type {?}\n     * @protected\n     */\n    CdkTreeNode.prototype._destroyed;\n    /**\n     * Emits when the node's data has changed.\n     * @type {?}\n     */\n    CdkTreeNode.prototype._dataChanges;\n    /**\n     * @type {?}\n     * @protected\n     */\n    CdkTreeNode.prototype._data;\n    /**\n     * The role of the node should be 'group' if it's an internal node,\n     * and 'treeitem' if it's a leaf node.\n     * @type {?}\n     */\n    CdkTreeNode.prototype.role;\n    /**\n     * @type {?}\n     * @protected\n     */\n    CdkTreeNode.prototype._elementRef;\n    /**\n     * @type {?}\n     * @protected\n     */\n    CdkTreeNode.prototype._tree;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/tree/nested-node.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Nested node is a child of `<cdk-tree>`. It works with nested tree.\n * By using `cdk-nested-tree-node` component in tree node template, children of the parent node will\n * be added in the `cdkTreeNodeOutlet` in tree node template.\n * The children of node will be automatically added to `cdkTreeNodeOutlet`.\n * @template T\n */\nclass CdkNestedTreeNode extends CdkTreeNode {\n    /**\n     * @param {?} _elementRef\n     * @param {?} _tree\n     * @param {?} _differs\n     */\n    constructor(_elementRef, _tree, _differs) {\n        super(_elementRef, _tree);\n        this._elementRef = _elementRef;\n        this._tree = _tree;\n        this._differs = _differs;\n    }\n    /**\n     * @return {?}\n     */\n    ngAfterContentInit() {\n        this._dataDiffer = this._differs.find([]).create(this._tree.trackBy);\n        if (!this._tree.treeControl.getChildren) {\n            throw getTreeControlFunctionsMissingError();\n        }\n        /** @type {?} */\n        const childrenNodes = this._tree.treeControl.getChildren(this.data);\n        if (Array.isArray(childrenNodes)) {\n            this.updateChildrenNodes((/** @type {?} */ (childrenNodes)));\n        }\n        else if (isObservable(childrenNodes)) {\n            childrenNodes.pipe(takeUntil(this._destroyed))\n                .subscribe((/**\n             * @param {?} result\n             * @return {?}\n             */\n            result => this.updateChildrenNodes(result)));\n        }\n        this.nodeOutlet.changes.pipe(takeUntil(this._destroyed))\n            .subscribe((/**\n         * @return {?}\n         */\n        () => this.updateChildrenNodes()));\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this._clear();\n        super.ngOnDestroy();\n    }\n    /**\n     * Add children dataNodes to the NodeOutlet\n     * @protected\n     * @param {?=} children\n     * @return {?}\n     */\n    updateChildrenNodes(children) {\n        /** @type {?} */\n        const outlet = this._getNodeOutlet();\n        if (children) {\n            this._children = children;\n        }\n        if (outlet && this._children) {\n            /** @type {?} */\n            const viewContainer = outlet.viewContainer;\n            this._tree.renderNodeChanges(this._children, this._dataDiffer, viewContainer, this._data);\n        }\n        else {\n            // Reset the data differ if there's no children nodes displayed\n            this._dataDiffer.diff([]);\n        }\n    }\n    /**\n     * Clear the children dataNodes.\n     * @protected\n     * @return {?}\n     */\n    _clear() {\n        /** @type {?} */\n        const outlet = this._getNodeOutlet();\n        if (outlet) {\n            outlet.viewContainer.clear();\n            this._dataDiffer.diff([]);\n        }\n    }\n    /**\n     * Gets the outlet for the current node.\n     * @private\n     * @return {?}\n     */\n    _getNodeOutlet() {\n        /** @type {?} */\n        const outlets = this.nodeOutlet;\n        // Note that since we use `descendants: true` on the query, we have to ensure\n        // that we don't pick up the outlet of a child node by accident.\n        return outlets && outlets.find((/**\n         * @param {?} outlet\n         * @return {?}\n         */\n        outlet => !outlet._node || outlet._node === this));\n    }\n}\nCdkNestedTreeNode.decorators = [\n    { type: Directive, args: [{\n                selector: 'cdk-nested-tree-node',\n                exportAs: 'cdkNestedTreeNode',\n                host: {\n                    '[attr.aria-expanded]': 'isExpanded',\n                    '[attr.role]': 'role',\n                    'class': 'cdk-tree-node cdk-nested-tree-node',\n                },\n                providers: [\n                    { provide: CdkTreeNode, useExisting: CdkNestedTreeNode },\n                    { provide: CDK_TREE_NODE_OUTLET_NODE, useExisting: CdkNestedTreeNode }\n                ]\n            },] }\n];\n/** @nocollapse */\nCdkNestedTreeNode.ctorParameters = () => [\n    { type: ElementRef },\n    { type: CdkTree },\n    { type: IterableDiffers }\n];\nCdkNestedTreeNode.propDecorators = {\n    nodeOutlet: [{ type: ContentChildren, args: [CdkTreeNodeOutlet, {\n                    // We need to use `descendants: true`, because Ivy will no longer match\n                    // indirect descendants if it's left as false.\n                    descendants: true\n                },] }]\n};\nif (false) {\n    /**\n     * Differ used to find the changes in the data provided by the data source.\n     * @type {?}\n     * @private\n     */\n    CdkNestedTreeNode.prototype._dataDiffer;\n    /**\n     * The children data dataNodes of current node. They will be placed in `CdkTreeNodeOutlet`.\n     * @type {?}\n     * @protected\n     */\n    CdkNestedTreeNode.prototype._children;\n    /**\n     * The children node placeholder.\n     * @type {?}\n     */\n    CdkNestedTreeNode.prototype.nodeOutlet;\n    /**\n     * @type {?}\n     * @protected\n     */\n    CdkNestedTreeNode.prototype._elementRef;\n    /**\n     * @type {?}\n     * @protected\n     */\n    CdkNestedTreeNode.prototype._tree;\n    /**\n     * @type {?}\n     * @protected\n     */\n    CdkNestedTreeNode.prototype._differs;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/tree/padding.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Regex used to split a string on its CSS units.\n * @type {?}\n */\nconst cssUnitPattern = /([A-Za-z%]+)$/;\n/**\n * Indent for the children tree dataNodes.\n * This directive will add left-padding to the node to show hierarchy.\n * @template T\n */\nclass CdkTreeNodePadding {\n    /**\n     * @param {?} _treeNode\n     * @param {?} _tree\n     * @param {?} _renderer\n     * @param {?} _element\n     * @param {?} _dir\n     */\n    constructor(_treeNode, _tree, \n    /**\n     * @deprecated _renderer parameter no longer being used. To be removed.\n     * @breaking-change 11.0.0\n     */\n    _renderer, _element, _dir) {\n        this._treeNode = _treeNode;\n        this._tree = _tree;\n        this._element = _element;\n        this._dir = _dir;\n        /**\n         * Subject that emits when the component has been destroyed.\n         */\n        this._destroyed = new Subject();\n        /**\n         * CSS units used for the indentation value.\n         */\n        this.indentUnits = 'px';\n        this._indent = 40;\n        this._setPadding();\n        if (_dir) {\n            _dir.change.pipe(takeUntil(this._destroyed)).subscribe((/**\n             * @return {?}\n             */\n            () => this._setPadding(true)));\n        }\n        // In Ivy the indentation binding might be set before the tree node's data has been added,\n        // which means that we'll miss the first render. We have to subscribe to changes in the\n        // data to ensure that everything is up to date.\n        _treeNode._dataChanges.subscribe((/**\n         * @return {?}\n         */\n        () => this._setPadding()));\n    }\n    /**\n     * The level of depth of the tree node. The padding will be `level * indent` pixels.\n     * @return {?}\n     */\n    get level() { return this._level; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set level(value) {\n        // Set to null as the fallback value so that _setPadding can fall back to the node level if the\n        // consumer set the directive as `cdkTreeNodePadding=\"\"`. We still want to take this value if\n        // they set 0 explicitly.\n        this._level = (/** @type {?} */ (coerceNumberProperty(value, null)));\n        this._setPadding();\n    }\n    /**\n     * The indent for each level. Can be a number or a CSS string.\n     * Default number 40px from material design menu sub-menu spec.\n     * @return {?}\n     */\n    get indent() { return this._indent; }\n    /**\n     * @param {?} indent\n     * @return {?}\n     */\n    set indent(indent) {\n        /** @type {?} */\n        let value = indent;\n        /** @type {?} */\n        let units = 'px';\n        if (typeof indent === 'string') {\n            /** @type {?} */\n            const parts = indent.split(cssUnitPattern);\n            value = parts[0];\n            units = parts[1] || units;\n        }\n        this.indentUnits = units;\n        this._indent = coerceNumberProperty(value);\n        this._setPadding();\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this._destroyed.next();\n        this._destroyed.complete();\n    }\n    /**\n     * The padding indent value for the tree node. Returns a string with px numbers if not null.\n     * @return {?}\n     */\n    _paddingIndent() {\n        /** @type {?} */\n        const nodeLevel = (this._treeNode.data && this._tree.treeControl.getLevel)\n            ? this._tree.treeControl.getLevel(this._treeNode.data)\n            : null;\n        /** @type {?} */\n        const level = this._level == null ? nodeLevel : this._level;\n        return typeof level === 'number' ? `${level * this._indent}${this.indentUnits}` : null;\n    }\n    /**\n     * @param {?=} forceChange\n     * @return {?}\n     */\n    _setPadding(forceChange = false) {\n        /** @type {?} */\n        const padding = this._paddingIndent();\n        if (padding !== this._currentPadding || forceChange) {\n            /** @type {?} */\n            const element = this._element.nativeElement;\n            /** @type {?} */\n            const paddingProp = this._dir && this._dir.value === 'rtl' ? 'paddingRight' : 'paddingLeft';\n            /** @type {?} */\n            const resetProp = paddingProp === 'paddingLeft' ? 'paddingRight' : 'paddingLeft';\n            element.style[paddingProp] = padding || '';\n            element.style[resetProp] = '';\n            this._currentPadding = padding;\n        }\n    }\n}\nCdkTreeNodePadding.decorators = [\n    { type: Directive, args: [{\n                selector: '[cdkTreeNodePadding]',\n            },] }\n];\n/** @nocollapse */\nCdkTreeNodePadding.ctorParameters = () => [\n    { type: CdkTreeNode },\n    { type: CdkTree },\n    { type: Renderer2 },\n    { type: ElementRef },\n    { type: Directionality, decorators: [{ type: Optional }] }\n];\nCdkTreeNodePadding.propDecorators = {\n    level: [{ type: Input, args: ['cdkTreeNodePadding',] }],\n    indent: [{ type: Input, args: ['cdkTreeNodePaddingIndent',] }]\n};\nif (false) {\n    /** @type {?} */\n    CdkTreeNodePadding.ngAcceptInputType_level;\n    /**\n     * Current padding value applied to the element. Used to avoid unnecessarily hitting the DOM.\n     * @type {?}\n     * @private\n     */\n    CdkTreeNodePadding.prototype._currentPadding;\n    /**\n     * Subject that emits when the component has been destroyed.\n     * @type {?}\n     * @private\n     */\n    CdkTreeNodePadding.prototype._destroyed;\n    /**\n     * CSS units used for the indentation value.\n     * @type {?}\n     */\n    CdkTreeNodePadding.prototype.indentUnits;\n    /** @type {?} */\n    CdkTreeNodePadding.prototype._level;\n    /** @type {?} */\n    CdkTreeNodePadding.prototype._indent;\n    /**\n     * @type {?}\n     * @private\n     */\n    CdkTreeNodePadding.prototype._treeNode;\n    /**\n     * @type {?}\n     * @private\n     */\n    CdkTreeNodePadding.prototype._tree;\n    /**\n     * @type {?}\n     * @private\n     */\n    CdkTreeNodePadding.prototype._element;\n    /**\n     * @type {?}\n     * @private\n     */\n    CdkTreeNodePadding.prototype._dir;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/tree/toggle.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Node toggle to expand/collapse the node.\n * @template T\n */\nclass CdkTreeNodeToggle {\n    /**\n     * @param {?} _tree\n     * @param {?} _treeNode\n     */\n    constructor(_tree, _treeNode) {\n        this._tree = _tree;\n        this._treeNode = _treeNode;\n        this._recursive = false;\n    }\n    /**\n     * Whether expand/collapse the node recursively.\n     * @return {?}\n     */\n    get recursive() { return this._recursive; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set recursive(value) { this._recursive = coerceBooleanProperty(value); }\n    // We have to use a `HostListener` here in order to support both Ivy and ViewEngine.\n    // In Ivy the `host` bindings will be merged when this class is extended, whereas in\n    // ViewEngine they're overwritten.\n    // TODO(crisbeto): we move this back into `host` once Ivy is turned on by default.\n    // tslint:disable-next-line:no-host-decorator-in-concrete\n    /**\n     * @param {?} event\n     * @return {?}\n     */\n    _toggle(event) {\n        this.recursive\n            ? this._tree.treeControl.toggleDescendants(this._treeNode.data)\n            : this._tree.treeControl.toggle(this._treeNode.data);\n        event.stopPropagation();\n    }\n}\nCdkTreeNodeToggle.decorators = [\n    { type: Directive, args: [{ selector: '[cdkTreeNodeToggle]' },] }\n];\n/** @nocollapse */\nCdkTreeNodeToggle.ctorParameters = () => [\n    { type: CdkTree },\n    { type: CdkTreeNode }\n];\nCdkTreeNodeToggle.propDecorators = {\n    recursive: [{ type: Input, args: ['cdkTreeNodeToggleRecursive',] }],\n    _toggle: [{ type: HostListener, args: ['click', ['$event'],] }]\n};\nif (false) {\n    /** @type {?} */\n    CdkTreeNodeToggle.ngAcceptInputType_recursive;\n    /**\n     * @type {?}\n     * @protected\n     */\n    CdkTreeNodeToggle.prototype._recursive;\n    /**\n     * @type {?}\n     * @protected\n     */\n    CdkTreeNodeToggle.prototype._tree;\n    /**\n     * @type {?}\n     * @protected\n     */\n    CdkTreeNodeToggle.prototype._treeNode;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/tree/tree-module.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/** @type {?} */\nconst EXPORTED_DECLARATIONS = [\n    CdkNestedTreeNode,\n    CdkTreeNodeDef,\n    CdkTreeNodePadding,\n    CdkTreeNodeToggle,\n    CdkTree,\n    CdkTreeNode,\n    CdkTreeNodeOutlet,\n];\nclass CdkTreeModule {\n}\nCdkTreeModule.decorators = [\n    { type: NgModule, args: [{\n                exports: EXPORTED_DECLARATIONS,\n                declarations: EXPORTED_DECLARATIONS,\n                providers: [FocusMonitor, CdkTreeNodeDef]\n            },] }\n];\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/tree/public-api.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { BaseTreeControl, CDK_TREE_NODE_OUTLET_NODE, CdkNestedTreeNode, CdkTree, CdkTreeModule, CdkTreeNode, CdkTreeNodeDef, CdkTreeNodeOutlet, CdkTreeNodeOutletContext, CdkTreeNodePadding, CdkTreeNodeToggle, FlatTreeControl, NestedTreeControl, getTreeControlFunctionsMissingError, getTreeControlMissingError, getTreeMissingMatchingNodeDefError, getTreeMultipleDefaultNodeDefsError, getTreeNoValidDataSourceError };\n//# sourceMappingURL=tree.js.map\n","import { InjectionToken, Injectable, Optional, Inject, NgModule } from '@angular/core';\nimport { DateAdapter, MAT_DATE_LOCALE, MAT_DATE_FORMATS } from '@angular/material/core';\nimport * as _rollupMoment from 'moment';\nimport _rollupMoment__default, {  } from 'moment';\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material-moment-adapter/adapter/moment-date-adapter.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/** @type {?} */\nconst moment = _rollupMoment__default || _rollupMoment;\n/**\n * Configurable options for {\\@see MomentDateAdapter}.\n * @record\n */\nfunction MatMomentDateAdapterOptions() { }\nif (false) {\n    /**\n     * When enabled, the dates have to match the format exactly.\n     * See https://momentjs.com/guides/#/parsing/strict-mode/.\n     * @type {?|undefined}\n     */\n    MatMomentDateAdapterOptions.prototype.strict;\n    /**\n     * Turns the use of utc dates on or off.\n     * Changing this will change how Angular Material components like DatePicker output dates.\n     * {\\@default false}\n     * @type {?|undefined}\n     */\n    MatMomentDateAdapterOptions.prototype.useUtc;\n}\n/**\n * InjectionToken for moment date adapter to configure options.\n * @type {?}\n */\nconst MAT_MOMENT_DATE_ADAPTER_OPTIONS = new InjectionToken('MAT_MOMENT_DATE_ADAPTER_OPTIONS', {\n    providedIn: 'root',\n    factory: MAT_MOMENT_DATE_ADAPTER_OPTIONS_FACTORY\n});\n/**\n * \\@docs-private\n * @return {?}\n */\nfunction MAT_MOMENT_DATE_ADAPTER_OPTIONS_FACTORY() {\n    return {\n        useUtc: false\n    };\n}\n/**\n * Creates an array and fills it with values.\n * @template T\n * @param {?} length\n * @param {?} valueFunction\n * @return {?}\n */\nfunction range(length, valueFunction) {\n    /** @type {?} */\n    const valuesArray = Array(length);\n    for (let i = 0; i < length; i++) {\n        valuesArray[i] = valueFunction(i);\n    }\n    return valuesArray;\n}\n/**\n * Adapts Moment.js Dates for use with Angular Material.\n */\nclass MomentDateAdapter extends DateAdapter {\n    /**\n     * @param {?} dateLocale\n     * @param {?=} _options\n     */\n    constructor(dateLocale, _options) {\n        super();\n        this._options = _options;\n        this.setLocale(dateLocale || moment.locale());\n    }\n    /**\n     * @param {?} locale\n     * @return {?}\n     */\n    setLocale(locale) {\n        super.setLocale(locale);\n        /** @type {?} */\n        let momentLocaleData = moment.localeData(locale);\n        this._localeData = {\n            firstDayOfWeek: momentLocaleData.firstDayOfWeek(),\n            longMonths: momentLocaleData.months(),\n            shortMonths: momentLocaleData.monthsShort(),\n            dates: range(31, (/**\n             * @param {?} i\n             * @return {?}\n             */\n            (i) => this.createDate(2017, 0, i + 1).format('D'))),\n            longDaysOfWeek: momentLocaleData.weekdays(),\n            shortDaysOfWeek: momentLocaleData.weekdaysShort(),\n            narrowDaysOfWeek: momentLocaleData.weekdaysMin(),\n        };\n    }\n    /**\n     * @param {?} date\n     * @return {?}\n     */\n    getYear(date) {\n        return this.clone(date).year();\n    }\n    /**\n     * @param {?} date\n     * @return {?}\n     */\n    getMonth(date) {\n        return this.clone(date).month();\n    }\n    /**\n     * @param {?} date\n     * @return {?}\n     */\n    getDate(date) {\n        return this.clone(date).date();\n    }\n    /**\n     * @param {?} date\n     * @return {?}\n     */\n    getDayOfWeek(date) {\n        return this.clone(date).day();\n    }\n    /**\n     * @param {?} style\n     * @return {?}\n     */\n    getMonthNames(style) {\n        // Moment.js doesn't support narrow month names, so we just use short if narrow is requested.\n        return style == 'long' ? this._localeData.longMonths : this._localeData.shortMonths;\n    }\n    /**\n     * @return {?}\n     */\n    getDateNames() {\n        return this._localeData.dates;\n    }\n    /**\n     * @param {?} style\n     * @return {?}\n     */\n    getDayOfWeekNames(style) {\n        if (style == 'long') {\n            return this._localeData.longDaysOfWeek;\n        }\n        if (style == 'short') {\n            return this._localeData.shortDaysOfWeek;\n        }\n        return this._localeData.narrowDaysOfWeek;\n    }\n    /**\n     * @param {?} date\n     * @return {?}\n     */\n    getYearName(date) {\n        return this.clone(date).format('YYYY');\n    }\n    /**\n     * @return {?}\n     */\n    getFirstDayOfWeek() {\n        return this._localeData.firstDayOfWeek;\n    }\n    /**\n     * @param {?} date\n     * @return {?}\n     */\n    getNumDaysInMonth(date) {\n        return this.clone(date).daysInMonth();\n    }\n    /**\n     * @param {?} date\n     * @return {?}\n     */\n    clone(date) {\n        return date.clone().locale(this.locale);\n    }\n    /**\n     * @param {?} year\n     * @param {?} month\n     * @param {?} date\n     * @return {?}\n     */\n    createDate(year, month, date) {\n        // Moment.js will create an invalid date if any of the components are out of bounds, but we\n        // explicitly check each case so we can throw more descriptive errors.\n        if (month < 0 || month > 11) {\n            throw Error(`Invalid month index \"${month}\". Month index has to be between 0 and 11.`);\n        }\n        if (date < 1) {\n            throw Error(`Invalid date \"${date}\". Date has to be greater than 0.`);\n        }\n        /** @type {?} */\n        const result = this._createMoment({ year, month, date }).locale(this.locale);\n        // If the result isn't valid, the date must have been out of bounds for this month.\n        if (!result.isValid()) {\n            throw Error(`Invalid date \"${date}\" for month with index \"${month}\".`);\n        }\n        return result;\n    }\n    /**\n     * @return {?}\n     */\n    today() {\n        return this._createMoment().locale(this.locale);\n    }\n    /**\n     * @param {?} value\n     * @param {?} parseFormat\n     * @return {?}\n     */\n    parse(value, parseFormat) {\n        if (value && typeof value == 'string') {\n            return this._createMoment(value, parseFormat, this.locale);\n        }\n        return value ? this._createMoment(value).locale(this.locale) : null;\n    }\n    /**\n     * @param {?} date\n     * @param {?} displayFormat\n     * @return {?}\n     */\n    format(date, displayFormat) {\n        date = this.clone(date);\n        if (!this.isValid(date)) {\n            throw Error('MomentDateAdapter: Cannot format invalid date.');\n        }\n        return date.format(displayFormat);\n    }\n    /**\n     * @param {?} date\n     * @param {?} years\n     * @return {?}\n     */\n    addCalendarYears(date, years) {\n        return this.clone(date).add({ years });\n    }\n    /**\n     * @param {?} date\n     * @param {?} months\n     * @return {?}\n     */\n    addCalendarMonths(date, months) {\n        return this.clone(date).add({ months });\n    }\n    /**\n     * @param {?} date\n     * @param {?} days\n     * @return {?}\n     */\n    addCalendarDays(date, days) {\n        return this.clone(date).add({ days });\n    }\n    /**\n     * @param {?} date\n     * @return {?}\n     */\n    toIso8601(date) {\n        return this.clone(date).format();\n    }\n    /**\n     * Returns the given value if given a valid Moment or null. Deserializes valid ISO 8601 strings\n     * (https://www.ietf.org/rfc/rfc3339.txt) and valid Date objects into valid Moments and empty\n     * string into null. Returns an invalid date for all other values.\n     * @param {?} value\n     * @return {?}\n     */\n    deserialize(value) {\n        /** @type {?} */\n        let date;\n        if (value instanceof Date) {\n            date = this._createMoment(value).locale(this.locale);\n        }\n        else if (this.isDateInstance(value)) {\n            // Note: assumes that cloning also sets the correct locale.\n            return this.clone(value);\n        }\n        if (typeof value === 'string') {\n            if (!value) {\n                return null;\n            }\n            date = this._createMoment(value, moment.ISO_8601).locale(this.locale);\n        }\n        if (date && this.isValid(date)) {\n            return this._createMoment(date).locale(this.locale);\n        }\n        return super.deserialize(value);\n    }\n    /**\n     * @param {?} obj\n     * @return {?}\n     */\n    isDateInstance(obj) {\n        return moment.isMoment(obj);\n    }\n    /**\n     * @param {?} date\n     * @return {?}\n     */\n    isValid(date) {\n        return this.clone(date).isValid();\n    }\n    /**\n     * @return {?}\n     */\n    invalid() {\n        return moment.invalid();\n    }\n    /**\n     * Creates a Moment instance while respecting the current UTC settings.\n     * @private\n     * @param {?} date\n     * @param {?=} format\n     * @param {?=} locale\n     * @return {?}\n     */\n    _createMoment(date, format, locale) {\n        const { strict, useUtc } = this._options || {};\n        return useUtc\n            ? moment.utc(date, format, locale, strict)\n            : moment(date, format, locale, strict);\n    }\n}\nMomentDateAdapter.decorators = [\n    { type: Injectable }\n];\n/** @nocollapse */\nMomentDateAdapter.ctorParameters = () => [\n    { type: String, decorators: [{ type: Optional }, { type: Inject, args: [MAT_DATE_LOCALE,] }] },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [MAT_MOMENT_DATE_ADAPTER_OPTIONS,] }] }\n];\nif (false) {\n    /**\n     * @type {?}\n     * @private\n     */\n    MomentDateAdapter.prototype._localeData;\n    /**\n     * @type {?}\n     * @private\n     */\n    MomentDateAdapter.prototype._options;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material-moment-adapter/adapter/moment-date-formats.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** @type {?} */\nconst MAT_MOMENT_DATE_FORMATS = {\n    parse: {\n        dateInput: 'l',\n    },\n    display: {\n        dateInput: 'l',\n        monthYearLabel: 'MMM YYYY',\n        dateA11yLabel: 'LL',\n        monthYearA11yLabel: 'MMMM YYYY',\n    },\n};\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material-moment-adapter/adapter/index.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass MomentDateModule {\n}\nMomentDateModule.decorators = [\n    { type: NgModule, args: [{\n                providers: [\n                    {\n                        provide: DateAdapter,\n                        useClass: MomentDateAdapter,\n                        deps: [MAT_DATE_LOCALE, MAT_MOMENT_DATE_ADAPTER_OPTIONS]\n                    }\n                ],\n            },] }\n];\nconst ɵ0 = MAT_MOMENT_DATE_FORMATS;\nclass MatMomentDateModule {\n}\nMatMomentDateModule.decorators = [\n    { type: NgModule, args: [{\n                imports: [MomentDateModule],\n                providers: [{ provide: MAT_DATE_FORMATS, useValue: ɵ0 }],\n            },] }\n];\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material-moment-adapter/public-api.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MAT_MOMENT_DATE_ADAPTER_OPTIONS, MAT_MOMENT_DATE_ADAPTER_OPTIONS_FACTORY, MAT_MOMENT_DATE_FORMATS, MatMomentDateModule, MomentDateAdapter, MomentDateModule };\n//# sourceMappingURL=material-moment-adapter.js.map\n","<ng-template cdkPortalOutlet></ng-template>\r\n","<button #button class=\"mat-button-toggle-button mat-focus-indicator\"\n        type=\"button\"\n        [id]=\"buttonId\"\n        [attr.tabindex]=\"disabled ? -1 : tabIndex\"\n        [attr.aria-pressed]=\"checked\"\n        [disabled]=\"disabled || null\"\n        [attr.name]=\"name || null\"\n        [attr.aria-label]=\"ariaLabel\"\n        [attr.aria-labelledby]=\"ariaLabelledby\"\n        (click)=\"_onButtonClick()\">\n  <div class=\"mat-button-toggle-label-content\">\n    <ng-content></ng-content>\n  </div>\n</button>\n\n<div class=\"mat-button-toggle-focus-overlay\"></div>\n<div class=\"mat-button-toggle-ripple\" matRipple\n     [matRippleTrigger]=\"button\"\n     [matRippleDisabled]=\"this.disableRipple || this.disabled\">\n</div>\n","<ng-content></ng-content>\n<ng-content select=\"mat-card-footer\"></ng-content>\n","<ng-content select=\"[mat-card-avatar], [matCardAvatar]\"></ng-content>\n<div class=\"mat-card-header-text\">\n  <ng-content\n      select=\"mat-card-title, mat-card-subtitle,\n      [mat-card-title], [mat-card-subtitle],\n      [matCardTitle], [matCardSubtitle]\"></ng-content>\n</div>\n<ng-content></ng-content>\n","<div>\n  <ng-content\n      select=\"mat-card-title, mat-card-subtitle,\n      [mat-card-title], [mat-card-subtitle],\n      [matCardTitle], [matCardSubtitle]\"></ng-content>\n</div>\n<ng-content select=\"img\"></ng-content>\n<ng-content></ng-content>\n","<div class=\"mat-chip-list-wrapper\"><ng-content></ng-content></div>","<ng-content select=\"mat-expansion-panel-header\"></ng-content>\n<div class=\"mat-expansion-panel-content\"\n     role=\"region\"\n     [@bodyExpansion]=\"_getExpandedState()\"\n     (@bodyExpansion.done)=\"_bodyAnimationDone.next($event)\"\n     [attr.aria-labelledby]=\"_headerId\"\n     [id]=\"id\"\n     #body>\n  <div class=\"mat-expansion-panel-body\">\n    <ng-content></ng-content>\n    <ng-template [cdkPortalOutlet]=\"_portal\"></ng-template>\n  </div>\n  <ng-content select=\"mat-action-row\"></ng-content>\n</div>\n","<span class=\"mat-content\">\n  <ng-content select=\"mat-panel-title\"></ng-content>\n  <ng-content select=\"mat-panel-description\"></ng-content>\n  <ng-content></ng-content>\n</span>\n<span [@indicatorRotate]=\"_getExpandedState()\" *ngIf=\"_showToggle()\"\n      class=\"mat-expansion-indicator\"></span>\n","import { OverlayModule, OverlayConfig, Overlay } from '@angular/cdk/overlay';\nimport { BasePortalOutlet, CdkPortalOutlet, PortalModule, TemplatePortal, ComponentPortal, PortalInjector } from '@angular/cdk/portal';\nimport { InjectionToken, EventEmitter, Component, ChangeDetectionStrategy, ViewEncapsulation, ElementRef, ChangeDetectorRef, Optional, Inject, ViewChild, NgModule, TemplateRef, Injectable, Injector, SkipSelf, ɵɵdefineInjectable, ɵɵinject, INJECTOR } from '@angular/core';\nimport { AnimationDurations, AnimationCurves, MatCommonModule } from '@angular/material/core';\nimport { Breakpoints, BreakpointObserver } from '@angular/cdk/layout';\nimport { trigger, state, style, transition, animate } from '@angular/animations';\nimport { DOCUMENT, Location } from '@angular/common';\nimport { FocusTrapFactory } from '@angular/cdk/a11y';\nimport { Directionality } from '@angular/cdk/bidi';\nimport { Subject, merge, of } from 'rxjs';\nimport { ESCAPE, hasModifierKey } from '@angular/cdk/keycodes';\nimport { filter, take } from 'rxjs/operators';\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/bottom-sheet/bottom-sheet-config.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Injection token that can be used to access the data that was passed in to a bottom sheet.\n * @type {?}\n */\nconst MAT_BOTTOM_SHEET_DATA = new InjectionToken('MatBottomSheetData');\n/**\n * Configuration used when opening a bottom sheet.\n * @template D\n */\nclass MatBottomSheetConfig {\n    constructor() {\n        /**\n         * Data being injected into the child component.\n         */\n        this.data = null;\n        /**\n         * Whether the bottom sheet has a backdrop.\n         */\n        this.hasBackdrop = true;\n        /**\n         * Whether the user can use escape or clicking outside to close the bottom sheet.\n         */\n        this.disableClose = false;\n        /**\n         * Aria label to assign to the bottom sheet element.\n         */\n        this.ariaLabel = null;\n        /**\n         * Whether the bottom sheet should close when the user goes backwards/forwards in history.\n         * Note that this usually doesn't include clicking on links (unless the user is using\n         * the `HashLocationStrategy`).\n         */\n        this.closeOnNavigation = true;\n        // Note that this is disabled by default, because while the a11y recommendations are to focus\n        // the first focusable element, doing so prevents screen readers from reading out the\n        // rest of the bottom sheet content.\n        /**\n         * Whether the bottom sheet should focus the first focusable element on open.\n         */\n        this.autoFocus = false;\n        /**\n         * Whether the bottom sheet should restore focus to the\n         * previously-focused element, after it's closed.\n         */\n        this.restoreFocus = true;\n    }\n}\nif (false) {\n    /**\n     * The view container to place the overlay for the bottom sheet into.\n     * @type {?}\n     */\n    MatBottomSheetConfig.prototype.viewContainerRef;\n    /**\n     * Extra CSS classes to be added to the bottom sheet container.\n     * @type {?}\n     */\n    MatBottomSheetConfig.prototype.panelClass;\n    /**\n     * Text layout direction for the bottom sheet.\n     * @type {?}\n     */\n    MatBottomSheetConfig.prototype.direction;\n    /**\n     * Data being injected into the child component.\n     * @type {?}\n     */\n    MatBottomSheetConfig.prototype.data;\n    /**\n     * Whether the bottom sheet has a backdrop.\n     * @type {?}\n     */\n    MatBottomSheetConfig.prototype.hasBackdrop;\n    /**\n     * Custom class for the backdrop.\n     * @type {?}\n     */\n    MatBottomSheetConfig.prototype.backdropClass;\n    /**\n     * Whether the user can use escape or clicking outside to close the bottom sheet.\n     * @type {?}\n     */\n    MatBottomSheetConfig.prototype.disableClose;\n    /**\n     * Aria label to assign to the bottom sheet element.\n     * @type {?}\n     */\n    MatBottomSheetConfig.prototype.ariaLabel;\n    /**\n     * Whether the bottom sheet should close when the user goes backwards/forwards in history.\n     * Note that this usually doesn't include clicking on links (unless the user is using\n     * the `HashLocationStrategy`).\n     * @type {?}\n     */\n    MatBottomSheetConfig.prototype.closeOnNavigation;\n    /**\n     * Whether the bottom sheet should focus the first focusable element on open.\n     * @type {?}\n     */\n    MatBottomSheetConfig.prototype.autoFocus;\n    /**\n     * Whether the bottom sheet should restore focus to the\n     * previously-focused element, after it's closed.\n     * @type {?}\n     */\n    MatBottomSheetConfig.prototype.restoreFocus;\n    /**\n     * Scroll strategy to be used for the bottom sheet.\n     * @type {?}\n     */\n    MatBottomSheetConfig.prototype.scrollStrategy;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/bottom-sheet/bottom-sheet-animations.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Animations used by the Material bottom sheet.\n * @type {?}\n */\nconst matBottomSheetAnimations = {\n    /**\n     * Animation that shows and hides a bottom sheet.\n     */\n    bottomSheetState: trigger('state', [\n        state('void, hidden', style({ transform: 'translateY(100%)' })),\n        state('visible', style({ transform: 'translateY(0%)' })),\n        transition('visible => void, visible => hidden', animate(`${AnimationDurations.COMPLEX} ${AnimationCurves.ACCELERATION_CURVE}`)),\n        transition('void => visible', animate(`${AnimationDurations.EXITING} ${AnimationCurves.DECELERATION_CURVE}`)),\n    ])\n};\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/bottom-sheet/bottom-sheet-container.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n// TODO(crisbeto): consolidate some logic between this, MatDialog and MatSnackBar\n/**\n * Internal component that wraps user-provided bottom sheet content.\n * \\@docs-private\n */\nclass MatBottomSheetContainer extends BasePortalOutlet {\n    /**\n     * @param {?} _elementRef\n     * @param {?} _changeDetectorRef\n     * @param {?} _focusTrapFactory\n     * @param {?} breakpointObserver\n     * @param {?} document\n     * @param {?} bottomSheetConfig\n     */\n    constructor(_elementRef, _changeDetectorRef, _focusTrapFactory, breakpointObserver, document, bottomSheetConfig) {\n        super();\n        this._elementRef = _elementRef;\n        this._changeDetectorRef = _changeDetectorRef;\n        this._focusTrapFactory = _focusTrapFactory;\n        this.bottomSheetConfig = bottomSheetConfig;\n        /**\n         * The state of the bottom sheet animations.\n         */\n        this._animationState = 'void';\n        /**\n         * Emits whenever the state of the animation changes.\n         */\n        this._animationStateChanged = new EventEmitter();\n        /**\n         * Element that was focused before the bottom sheet was opened.\n         */\n        this._elementFocusedBeforeOpened = null;\n        /**\n         * Attaches a DOM portal to the bottom sheet container.\n         * @deprecated To be turned into a method.\n         * \\@breaking-change 10.0.0\n         */\n        this.attachDomPortal = (/**\n         * @param {?} portal\n         * @return {?}\n         */\n        (portal) => {\n            this._validatePortalAttached();\n            this._setPanelClass();\n            this._savePreviouslyFocusedElement();\n            return this._portalOutlet.attachDomPortal(portal);\n        });\n        this._document = document;\n        this._breakpointSubscription = breakpointObserver\n            .observe([Breakpoints.Medium, Breakpoints.Large, Breakpoints.XLarge])\n            .subscribe((/**\n         * @return {?}\n         */\n        () => {\n            this._toggleClass('mat-bottom-sheet-container-medium', breakpointObserver.isMatched(Breakpoints.Medium));\n            this._toggleClass('mat-bottom-sheet-container-large', breakpointObserver.isMatched(Breakpoints.Large));\n            this._toggleClass('mat-bottom-sheet-container-xlarge', breakpointObserver.isMatched(Breakpoints.XLarge));\n        }));\n    }\n    /**\n     * Attach a component portal as content to this bottom sheet container.\n     * @template T\n     * @param {?} portal\n     * @return {?}\n     */\n    attachComponentPortal(portal) {\n        this._validatePortalAttached();\n        this._setPanelClass();\n        this._savePreviouslyFocusedElement();\n        return this._portalOutlet.attachComponentPortal(portal);\n    }\n    /**\n     * Attach a template portal as content to this bottom sheet container.\n     * @template C\n     * @param {?} portal\n     * @return {?}\n     */\n    attachTemplatePortal(portal) {\n        this._validatePortalAttached();\n        this._setPanelClass();\n        this._savePreviouslyFocusedElement();\n        return this._portalOutlet.attachTemplatePortal(portal);\n    }\n    /**\n     * Begin animation of bottom sheet entrance into view.\n     * @return {?}\n     */\n    enter() {\n        if (!this._destroyed) {\n            this._animationState = 'visible';\n            this._changeDetectorRef.detectChanges();\n        }\n    }\n    /**\n     * Begin animation of the bottom sheet exiting from view.\n     * @return {?}\n     */\n    exit() {\n        if (!this._destroyed) {\n            this._animationState = 'hidden';\n            this._changeDetectorRef.markForCheck();\n        }\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this._breakpointSubscription.unsubscribe();\n        this._destroyed = true;\n    }\n    /**\n     * @param {?} event\n     * @return {?}\n     */\n    _onAnimationDone(event) {\n        if (event.toState === 'hidden') {\n            this._restoreFocus();\n        }\n        else if (event.toState === 'visible') {\n            this._trapFocus();\n        }\n        this._animationStateChanged.emit(event);\n    }\n    /**\n     * @param {?} event\n     * @return {?}\n     */\n    _onAnimationStart(event) {\n        this._animationStateChanged.emit(event);\n    }\n    /**\n     * @private\n     * @param {?} cssClass\n     * @param {?} add\n     * @return {?}\n     */\n    _toggleClass(cssClass, add) {\n        /** @type {?} */\n        const classList = this._elementRef.nativeElement.classList;\n        add ? classList.add(cssClass) : classList.remove(cssClass);\n    }\n    /**\n     * @private\n     * @return {?}\n     */\n    _validatePortalAttached() {\n        if (this._portalOutlet.hasAttached()) {\n            throw Error('Attempting to attach bottom sheet content after content is already attached');\n        }\n    }\n    /**\n     * @private\n     * @return {?}\n     */\n    _setPanelClass() {\n        /** @type {?} */\n        const element = this._elementRef.nativeElement;\n        /** @type {?} */\n        const panelClass = this.bottomSheetConfig.panelClass;\n        if (Array.isArray(panelClass)) {\n            // Note that we can't use a spread here, because IE doesn't support multiple arguments.\n            panelClass.forEach((/**\n             * @param {?} cssClass\n             * @return {?}\n             */\n            cssClass => element.classList.add(cssClass)));\n        }\n        else if (panelClass) {\n            element.classList.add(panelClass);\n        }\n    }\n    /**\n     * Moves the focus inside the focus trap.\n     * @private\n     * @return {?}\n     */\n    _trapFocus() {\n        /** @type {?} */\n        const element = this._elementRef.nativeElement;\n        if (!this._focusTrap) {\n            this._focusTrap = this._focusTrapFactory.create(element);\n        }\n        if (this.bottomSheetConfig.autoFocus) {\n            this._focusTrap.focusInitialElementWhenReady();\n        }\n        else {\n            /** @type {?} */\n            const activeElement = this._document.activeElement;\n            // Otherwise ensure that focus is on the container. It's possible that a different\n            // component tried to move focus while the open animation was running. See:\n            // https://github.com/angular/components/issues/16215. Note that we only want to do this\n            // if the focus isn't inside the bottom sheet already, because it's possible that the\n            // consumer turned off `autoFocus` in order to move focus themselves.\n            if (activeElement !== element && !element.contains(activeElement)) {\n                element.focus();\n            }\n        }\n    }\n    /**\n     * Restores focus to the element that was focused before the bottom sheet was opened.\n     * @private\n     * @return {?}\n     */\n    _restoreFocus() {\n        /** @type {?} */\n        const toFocus = this._elementFocusedBeforeOpened;\n        // We need the extra check, because IE can set the `activeElement` to null in some cases.\n        if (this.bottomSheetConfig.restoreFocus && toFocus && typeof toFocus.focus === 'function') {\n            /** @type {?} */\n            const activeElement = this._document.activeElement;\n            /** @type {?} */\n            const element = this._elementRef.nativeElement;\n            // Make sure that focus is still inside the bottom sheet or is on the body (usually because a\n            // non-focusable element like the backdrop was clicked) before moving it. It's possible that\n            // the consumer moved it themselves before the animation was done, in which case we shouldn't\n            // do anything.\n            if (!activeElement || activeElement === this._document.body || activeElement === element ||\n                element.contains(activeElement)) {\n                toFocus.focus();\n            }\n        }\n        if (this._focusTrap) {\n            this._focusTrap.destroy();\n        }\n    }\n    /**\n     * Saves a reference to the element that was focused before the bottom sheet was opened.\n     * @private\n     * @return {?}\n     */\n    _savePreviouslyFocusedElement() {\n        this._elementFocusedBeforeOpened = (/** @type {?} */ (this._document.activeElement));\n        // The `focus` method isn't available during server-side rendering.\n        if (this._elementRef.nativeElement.focus) {\n            Promise.resolve().then((/**\n             * @return {?}\n             */\n            () => this._elementRef.nativeElement.focus()));\n        }\n    }\n}\nMatBottomSheetContainer.decorators = [\n    { type: Component, args: [{\n                selector: 'mat-bottom-sheet-container',\n                template: \"<ng-template cdkPortalOutlet></ng-template>\\r\\n\",\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                encapsulation: ViewEncapsulation.None,\n                animations: [matBottomSheetAnimations.bottomSheetState],\n                host: {\n                    'class': 'mat-bottom-sheet-container',\n                    'tabindex': '-1',\n                    'role': 'dialog',\n                    'aria-modal': 'true',\n                    '[attr.aria-label]': 'bottomSheetConfig?.ariaLabel',\n                    '[@state]': '_animationState',\n                    '(@state.start)': '_onAnimationStart($event)',\n                    '(@state.done)': '_onAnimationDone($event)'\n                },\n                styles: [\".mat-bottom-sheet-container{padding:8px 16px;min-width:100vw;box-sizing:border-box;display:block;outline:0;max-height:80vh;overflow:auto}.cdk-high-contrast-active .mat-bottom-sheet-container{outline:1px solid}.mat-bottom-sheet-container-xlarge,.mat-bottom-sheet-container-large,.mat-bottom-sheet-container-medium{border-top-left-radius:4px;border-top-right-radius:4px}.mat-bottom-sheet-container-medium{min-width:384px;max-width:calc(100vw - 128px)}.mat-bottom-sheet-container-large{min-width:512px;max-width:calc(100vw - 256px)}.mat-bottom-sheet-container-xlarge{min-width:576px;max-width:calc(100vw - 384px)}\\n\"]\n            }] }\n];\n/** @nocollapse */\nMatBottomSheetContainer.ctorParameters = () => [\n    { type: ElementRef },\n    { type: ChangeDetectorRef },\n    { type: FocusTrapFactory },\n    { type: BreakpointObserver },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [DOCUMENT,] }] },\n    { type: MatBottomSheetConfig }\n];\nMatBottomSheetContainer.propDecorators = {\n    _portalOutlet: [{ type: ViewChild, args: [CdkPortalOutlet, { static: true },] }]\n};\nif (false) {\n    /**\n     * @type {?}\n     * @private\n     */\n    MatBottomSheetContainer.prototype._breakpointSubscription;\n    /**\n     * The portal outlet inside of this container into which the content will be loaded.\n     * @type {?}\n     */\n    MatBottomSheetContainer.prototype._portalOutlet;\n    /**\n     * The state of the bottom sheet animations.\n     * @type {?}\n     */\n    MatBottomSheetContainer.prototype._animationState;\n    /**\n     * Emits whenever the state of the animation changes.\n     * @type {?}\n     */\n    MatBottomSheetContainer.prototype._animationStateChanged;\n    /**\n     * The class that traps and manages focus within the bottom sheet.\n     * @type {?}\n     * @private\n     */\n    MatBottomSheetContainer.prototype._focusTrap;\n    /**\n     * Element that was focused before the bottom sheet was opened.\n     * @type {?}\n     * @private\n     */\n    MatBottomSheetContainer.prototype._elementFocusedBeforeOpened;\n    /**\n     * Server-side rendering-compatible reference to the global document object.\n     * @type {?}\n     * @private\n     */\n    MatBottomSheetContainer.prototype._document;\n    /**\n     * Whether the component has been destroyed.\n     * @type {?}\n     * @private\n     */\n    MatBottomSheetContainer.prototype._destroyed;\n    /**\n     * Attaches a DOM portal to the bottom sheet container.\n     * @deprecated To be turned into a method.\n     * \\@breaking-change 10.0.0\n     * @type {?}\n     */\n    MatBottomSheetContainer.prototype.attachDomPortal;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatBottomSheetContainer.prototype._elementRef;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatBottomSheetContainer.prototype._changeDetectorRef;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatBottomSheetContainer.prototype._focusTrapFactory;\n    /**\n     * The bottom sheet configuration.\n     * @type {?}\n     */\n    MatBottomSheetContainer.prototype.bottomSheetConfig;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/bottom-sheet/bottom-sheet-module.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass MatBottomSheetModule {\n}\nMatBottomSheetModule.decorators = [\n    { type: NgModule, args: [{\n                imports: [\n                    OverlayModule,\n                    MatCommonModule,\n                    PortalModule,\n                ],\n                exports: [MatBottomSheetContainer, MatCommonModule],\n                declarations: [MatBottomSheetContainer],\n                entryComponents: [MatBottomSheetContainer],\n            },] }\n];\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/bottom-sheet/bottom-sheet-ref.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Reference to a bottom sheet dispatched from the bottom sheet service.\n * @template T, R\n */\nclass MatBottomSheetRef {\n    /**\n     * @param {?} containerInstance\n     * @param {?} _overlayRef\n     * @param {?=} _location\n     */\n    constructor(containerInstance, _overlayRef, \n    // @breaking-change 8.0.0 `_location` parameter to be removed.\n    _location) {\n        this._overlayRef = _overlayRef;\n        /**\n         * Subject for notifying the user that the bottom sheet has been dismissed.\n         */\n        this._afterDismissed = new Subject();\n        /**\n         * Subject for notifying the user that the bottom sheet has opened and appeared.\n         */\n        this._afterOpened = new Subject();\n        this.containerInstance = containerInstance;\n        this.disableClose = containerInstance.bottomSheetConfig.disableClose;\n        // Emit when opening animation completes\n        containerInstance._animationStateChanged.pipe(filter((/**\n         * @param {?} event\n         * @return {?}\n         */\n        event => event.phaseName === 'done' && event.toState === 'visible')), take(1))\n            .subscribe((/**\n         * @return {?}\n         */\n        () => {\n            this._afterOpened.next();\n            this._afterOpened.complete();\n        }));\n        // Dispose overlay when closing animation is complete\n        containerInstance._animationStateChanged\n            .pipe(filter((/**\n         * @param {?} event\n         * @return {?}\n         */\n        event => event.phaseName === 'done' && event.toState === 'hidden')), take(1))\n            .subscribe((/**\n         * @return {?}\n         */\n        () => {\n            clearTimeout(this._closeFallbackTimeout);\n            _overlayRef.dispose();\n        }));\n        _overlayRef.detachments().pipe(take(1)).subscribe((/**\n         * @return {?}\n         */\n        () => {\n            this._afterDismissed.next(this._result);\n            this._afterDismissed.complete();\n        }));\n        merge(_overlayRef.backdropClick(), _overlayRef.keydownEvents().pipe(filter((/**\n         * @param {?} event\n         * @return {?}\n         */\n        event => event.keyCode === ESCAPE)))).subscribe((/**\n         * @param {?} event\n         * @return {?}\n         */\n        event => {\n            if (!this.disableClose &&\n                (event.type !== 'keydown' || !hasModifierKey((/** @type {?} */ (event))))) {\n                event.preventDefault();\n                this.dismiss();\n            }\n        }));\n    }\n    /**\n     * Dismisses the bottom sheet.\n     * @param {?=} result Data to be passed back to the bottom sheet opener.\n     * @return {?}\n     */\n    dismiss(result) {\n        if (!this._afterDismissed.closed) {\n            // Transition the backdrop in parallel to the bottom sheet.\n            this.containerInstance._animationStateChanged.pipe(filter((/**\n             * @param {?} event\n             * @return {?}\n             */\n            event => event.phaseName === 'start')), take(1)).subscribe((/**\n             * @param {?} event\n             * @return {?}\n             */\n            event => {\n                // The logic that disposes of the overlay depends on the exit animation completing, however\n                // it isn't guaranteed if the parent view is destroyed while it's running. Add a fallback\n                // timeout which will clean everything up if the animation hasn't fired within the specified\n                // amount of time plus 100ms. We don't need to run this outside the NgZone, because for the\n                // vast majority of cases the timeout will have been cleared before it has fired.\n                this._closeFallbackTimeout = setTimeout((/**\n                 * @return {?}\n                 */\n                () => {\n                    this._overlayRef.dispose();\n                }), event.totalTime + 100);\n                this._overlayRef.detachBackdrop();\n            }));\n            this._result = result;\n            this.containerInstance.exit();\n        }\n    }\n    /**\n     * Gets an observable that is notified when the bottom sheet is finished closing.\n     * @return {?}\n     */\n    afterDismissed() {\n        return this._afterDismissed.asObservable();\n    }\n    /**\n     * Gets an observable that is notified when the bottom sheet has opened and appeared.\n     * @return {?}\n     */\n    afterOpened() {\n        return this._afterOpened.asObservable();\n    }\n    /**\n     * Gets an observable that emits when the overlay's backdrop has been clicked.\n     * @return {?}\n     */\n    backdropClick() {\n        return this._overlayRef.backdropClick();\n    }\n    /**\n     * Gets an observable that emits when keydown events are targeted on the overlay.\n     * @return {?}\n     */\n    keydownEvents() {\n        return this._overlayRef.keydownEvents();\n    }\n}\nif (false) {\n    /**\n     * Instance of the component making up the content of the bottom sheet.\n     * @type {?}\n     */\n    MatBottomSheetRef.prototype.instance;\n    /**\n     * Instance of the component into which the bottom sheet content is projected.\n     * \\@docs-private\n     * @type {?}\n     */\n    MatBottomSheetRef.prototype.containerInstance;\n    /**\n     * Whether the user is allowed to close the bottom sheet.\n     * @type {?}\n     */\n    MatBottomSheetRef.prototype.disableClose;\n    /**\n     * Subject for notifying the user that the bottom sheet has been dismissed.\n     * @type {?}\n     * @private\n     */\n    MatBottomSheetRef.prototype._afterDismissed;\n    /**\n     * Subject for notifying the user that the bottom sheet has opened and appeared.\n     * @type {?}\n     * @private\n     */\n    MatBottomSheetRef.prototype._afterOpened;\n    /**\n     * Result to be passed down to the `afterDismissed` stream.\n     * @type {?}\n     * @private\n     */\n    MatBottomSheetRef.prototype._result;\n    /**\n     * Handle to the timeout that's running as a fallback in case the exit animation doesn't fire.\n     * @type {?}\n     * @private\n     */\n    MatBottomSheetRef.prototype._closeFallbackTimeout;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatBottomSheetRef.prototype._overlayRef;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/bottom-sheet/bottom-sheet.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Injection token that can be used to specify default bottom sheet options.\n * @type {?}\n */\nconst MAT_BOTTOM_SHEET_DEFAULT_OPTIONS = new InjectionToken('mat-bottom-sheet-default-options');\n/**\n * Service to trigger Material Design bottom sheets.\n */\nclass MatBottomSheet {\n    /**\n     * @param {?} _overlay\n     * @param {?} _injector\n     * @param {?} _parentBottomSheet\n     * @param {?=} _location\n     * @param {?=} _defaultOptions\n     */\n    constructor(_overlay, _injector, _parentBottomSheet, _location, _defaultOptions) {\n        this._overlay = _overlay;\n        this._injector = _injector;\n        this._parentBottomSheet = _parentBottomSheet;\n        this._location = _location;\n        this._defaultOptions = _defaultOptions;\n        this._bottomSheetRefAtThisLevel = null;\n    }\n    /**\n     * Reference to the currently opened bottom sheet.\n     * @return {?}\n     */\n    get _openedBottomSheetRef() {\n        /** @type {?} */\n        const parent = this._parentBottomSheet;\n        return parent ? parent._openedBottomSheetRef : this._bottomSheetRefAtThisLevel;\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set _openedBottomSheetRef(value) {\n        if (this._parentBottomSheet) {\n            this._parentBottomSheet._openedBottomSheetRef = value;\n        }\n        else {\n            this._bottomSheetRefAtThisLevel = value;\n        }\n    }\n    /**\n     * @template T, D, R\n     * @param {?} componentOrTemplateRef\n     * @param {?=} config\n     * @return {?}\n     */\n    open(componentOrTemplateRef, config) {\n        /** @type {?} */\n        const _config = _applyConfigDefaults(this._defaultOptions || new MatBottomSheetConfig(), config);\n        /** @type {?} */\n        const overlayRef = this._createOverlay(_config);\n        /** @type {?} */\n        const container = this._attachContainer(overlayRef, _config);\n        /** @type {?} */\n        const ref = new MatBottomSheetRef(container, overlayRef, this._location);\n        if (componentOrTemplateRef instanceof TemplateRef) {\n            container.attachTemplatePortal(new TemplatePortal(componentOrTemplateRef, (/** @type {?} */ (null)), (/** @type {?} */ ({\n                $implicit: _config.data,\n                bottomSheetRef: ref\n            }))));\n        }\n        else {\n            /** @type {?} */\n            const portal = new ComponentPortal(componentOrTemplateRef, undefined, this._createInjector(_config, ref));\n            /** @type {?} */\n            const contentRef = container.attachComponentPortal(portal);\n            ref.instance = contentRef.instance;\n        }\n        // When the bottom sheet is dismissed, clear the reference to it.\n        ref.afterDismissed().subscribe((/**\n         * @return {?}\n         */\n        () => {\n            // Clear the bottom sheet ref if it hasn't already been replaced by a newer one.\n            if (this._openedBottomSheetRef == ref) {\n                this._openedBottomSheetRef = null;\n            }\n        }));\n        if (this._openedBottomSheetRef) {\n            // If a bottom sheet is already in view, dismiss it and enter the\n            // new bottom sheet after exit animation is complete.\n            this._openedBottomSheetRef.afterDismissed().subscribe((/**\n             * @return {?}\n             */\n            () => ref.containerInstance.enter()));\n            this._openedBottomSheetRef.dismiss();\n        }\n        else {\n            // If no bottom sheet is in view, enter the new bottom sheet.\n            ref.containerInstance.enter();\n        }\n        this._openedBottomSheetRef = ref;\n        return ref;\n    }\n    /**\n     * Dismisses the currently-visible bottom sheet.\n     * @template R\n     * @param {?=} result Data to pass to the bottom sheet instance.\n     * @return {?}\n     */\n    dismiss(result) {\n        if (this._openedBottomSheetRef) {\n            this._openedBottomSheetRef.dismiss(result);\n        }\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        if (this._bottomSheetRefAtThisLevel) {\n            this._bottomSheetRefAtThisLevel.dismiss();\n        }\n    }\n    /**\n     * Attaches the bottom sheet container component to the overlay.\n     * @private\n     * @param {?} overlayRef\n     * @param {?} config\n     * @return {?}\n     */\n    _attachContainer(overlayRef, config) {\n        /** @type {?} */\n        const userInjector = config && config.viewContainerRef && config.viewContainerRef.injector;\n        /** @type {?} */\n        const injector = new PortalInjector(userInjector || this._injector, new WeakMap([\n            [MatBottomSheetConfig, config]\n        ]));\n        /** @type {?} */\n        const containerPortal = new ComponentPortal(MatBottomSheetContainer, config.viewContainerRef, injector);\n        /** @type {?} */\n        const containerRef = overlayRef.attach(containerPortal);\n        return containerRef.instance;\n    }\n    /**\n     * Creates a new overlay and places it in the correct location.\n     * @private\n     * @param {?} config The user-specified bottom sheet config.\n     * @return {?}\n     */\n    _createOverlay(config) {\n        /** @type {?} */\n        const overlayConfig = new OverlayConfig({\n            direction: config.direction,\n            hasBackdrop: config.hasBackdrop,\n            disposeOnNavigation: config.closeOnNavigation,\n            maxWidth: '100%',\n            scrollStrategy: config.scrollStrategy || this._overlay.scrollStrategies.block(),\n            positionStrategy: this._overlay.position().global().centerHorizontally().bottom('0')\n        });\n        if (config.backdropClass) {\n            overlayConfig.backdropClass = config.backdropClass;\n        }\n        return this._overlay.create(overlayConfig);\n    }\n    /**\n     * Creates an injector to be used inside of a bottom sheet component.\n     * @private\n     * @template T\n     * @param {?} config Config that was used to create the bottom sheet.\n     * @param {?} bottomSheetRef Reference to the bottom sheet.\n     * @return {?}\n     */\n    _createInjector(config, bottomSheetRef) {\n        /** @type {?} */\n        const userInjector = config && config.viewContainerRef && config.viewContainerRef.injector;\n        /** @type {?} */\n        const injectionTokens = new WeakMap([\n            [MatBottomSheetRef, bottomSheetRef],\n            [MAT_BOTTOM_SHEET_DATA, config.data]\n        ]);\n        if (config.direction &&\n            (!userInjector || !userInjector.get(Directionality, null))) {\n            injectionTokens.set(Directionality, {\n                value: config.direction,\n                change: of()\n            });\n        }\n        return new PortalInjector(userInjector || this._injector, injectionTokens);\n    }\n}\nMatBottomSheet.decorators = [\n    { type: Injectable, args: [{ providedIn: MatBottomSheetModule },] }\n];\n/** @nocollapse */\nMatBottomSheet.ctorParameters = () => [\n    { type: Overlay },\n    { type: Injector },\n    { type: MatBottomSheet, decorators: [{ type: Optional }, { type: SkipSelf }] },\n    { type: Location, decorators: [{ type: Optional }] },\n    { type: MatBottomSheetConfig, decorators: [{ type: Optional }, { type: Inject, args: [MAT_BOTTOM_SHEET_DEFAULT_OPTIONS,] }] }\n];\n/** @nocollapse */ MatBottomSheet.ɵprov = ɵɵdefineInjectable({ factory: function MatBottomSheet_Factory() { return new MatBottomSheet(ɵɵinject(Overlay), ɵɵinject(INJECTOR), ɵɵinject(MatBottomSheet, 12), ɵɵinject(Location, 8), ɵɵinject(MAT_BOTTOM_SHEET_DEFAULT_OPTIONS, 8)); }, token: MatBottomSheet, providedIn: MatBottomSheetModule });\nif (false) {\n    /**\n     * @type {?}\n     * @private\n     */\n    MatBottomSheet.prototype._bottomSheetRefAtThisLevel;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatBottomSheet.prototype._overlay;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatBottomSheet.prototype._injector;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatBottomSheet.prototype._parentBottomSheet;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatBottomSheet.prototype._location;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatBottomSheet.prototype._defaultOptions;\n}\n/**\n * Applies default options to the bottom sheet config.\n * @param {?} defaults Object containing the default values to which to fall back.\n * @param {?=} config The configuration to which the defaults will be applied.\n * @return {?} The new configuration object with defaults applied.\n */\nfunction _applyConfigDefaults(defaults, config) {\n    return Object.assign(Object.assign({}, defaults), config);\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/bottom-sheet/public-api.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MAT_BOTTOM_SHEET_DATA, MAT_BOTTOM_SHEET_DEFAULT_OPTIONS, MatBottomSheet, MatBottomSheetConfig, MatBottomSheetContainer, MatBottomSheetModule, MatBottomSheetRef, matBottomSheetAnimations };\n//# sourceMappingURL=bottom-sheet.js.map\n","import { FocusMonitor } from '@angular/cdk/a11y';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { SelectionModel } from '@angular/cdk/collections';\nimport { InjectionToken, forwardRef, EventEmitter, Directive, ChangeDetectorRef, Optional, Inject, ContentChildren, Input, Output, Component, ViewEncapsulation, ChangeDetectionStrategy, ElementRef, Attribute, ViewChild, NgModule } from '@angular/core';\nimport { NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { mixinDisableRipple, MatCommonModule, MatRippleModule } from '@angular/material/core';\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/button-toggle/button-toggle.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Represents the default options for the button toggle that can be configured\n * using the `MAT_BUTTON_TOGGLE_DEFAULT_OPTIONS` injection token.\n * @record\n */\nfunction MatButtonToggleDefaultOptions() { }\nif (false) {\n    /** @type {?|undefined} */\n    MatButtonToggleDefaultOptions.prototype.appearance;\n}\n/**\n * Injection token that can be used to configure the\n * default options for all button toggles within an app.\n * @type {?}\n */\nconst MAT_BUTTON_TOGGLE_DEFAULT_OPTIONS = new InjectionToken('MAT_BUTTON_TOGGLE_DEFAULT_OPTIONS');\n/**\n * Provider Expression that allows mat-button-toggle-group to register as a ControlValueAccessor.\n * This allows it to support [(ngModel)].\n * \\@docs-private\n * @type {?}\n */\nconst MAT_BUTTON_TOGGLE_GROUP_VALUE_ACCESSOR = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef((/**\n     * @return {?}\n     */\n    () => MatButtonToggleGroup)),\n    multi: true\n};\n/**\n * @deprecated Use `MatButtonToggleGroup` instead.\n * \\@breaking-change 8.0.0\n */\nclass MatButtonToggleGroupMultiple {\n}\n/** @type {?} */\nlet _uniqueIdCounter = 0;\n/**\n * Change event object emitted by MatButtonToggle.\n */\nclass MatButtonToggleChange {\n    /**\n     * @param {?} source\n     * @param {?} value\n     */\n    constructor(source, value) {\n        this.source = source;\n        this.value = value;\n    }\n}\nif (false) {\n    /**\n     * The MatButtonToggle that emits the event.\n     * @type {?}\n     */\n    MatButtonToggleChange.prototype.source;\n    /**\n     * The value assigned to the MatButtonToggle.\n     * @type {?}\n     */\n    MatButtonToggleChange.prototype.value;\n}\n/**\n * Exclusive selection button toggle group that behaves like a radio-button group.\n */\nclass MatButtonToggleGroup {\n    /**\n     * @param {?} _changeDetector\n     * @param {?=} defaultOptions\n     */\n    constructor(_changeDetector, defaultOptions) {\n        this._changeDetector = _changeDetector;\n        this._vertical = false;\n        this._multiple = false;\n        this._disabled = false;\n        /**\n         * The method to be called in order to update ngModel.\n         * Now `ngModel` binding is not supported in multiple selection mode.\n         */\n        this._controlValueAccessorChangeFn = (/**\n         * @return {?}\n         */\n        () => { });\n        /**\n         * onTouch function registered via registerOnTouch (ControlValueAccessor).\n         */\n        this._onTouched = (/**\n         * @return {?}\n         */\n        () => { });\n        this._name = `mat-button-toggle-group-${_uniqueIdCounter++}`;\n        /**\n         * Event that emits whenever the value of the group changes.\n         * Used to facilitate two-way data binding.\n         * \\@docs-private\n         */\n        this.valueChange = new EventEmitter();\n        /**\n         * Event emitted when the group's value changes.\n         */\n        this.change = new EventEmitter();\n        this.appearance =\n            defaultOptions && defaultOptions.appearance ? defaultOptions.appearance : 'standard';\n    }\n    /**\n     * `name` attribute for the underlying `input` element.\n     * @return {?}\n     */\n    get name() { return this._name; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set name(value) {\n        this._name = value;\n        if (this._buttonToggles) {\n            this._buttonToggles.forEach((/**\n             * @param {?} toggle\n             * @return {?}\n             */\n            toggle => {\n                toggle.name = this._name;\n                toggle._markForCheck();\n            }));\n        }\n    }\n    /**\n     * Whether the toggle group is vertical.\n     * @return {?}\n     */\n    get vertical() { return this._vertical; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set vertical(value) {\n        this._vertical = coerceBooleanProperty(value);\n    }\n    /**\n     * Value of the toggle group.\n     * @return {?}\n     */\n    get value() {\n        /** @type {?} */\n        const selected = this._selectionModel ? this._selectionModel.selected : [];\n        if (this.multiple) {\n            return selected.map((/**\n             * @param {?} toggle\n             * @return {?}\n             */\n            toggle => toggle.value));\n        }\n        return selected[0] ? selected[0].value : undefined;\n    }\n    /**\n     * @param {?} newValue\n     * @return {?}\n     */\n    set value(newValue) {\n        this._setSelectionByValue(newValue);\n        this.valueChange.emit(this.value);\n    }\n    /**\n     * Selected button toggles in the group.\n     * @return {?}\n     */\n    get selected() {\n        /** @type {?} */\n        const selected = this._selectionModel ? this._selectionModel.selected : [];\n        return this.multiple ? selected : (selected[0] || null);\n    }\n    /**\n     * Whether multiple button toggles can be selected.\n     * @return {?}\n     */\n    get multiple() { return this._multiple; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set multiple(value) {\n        this._multiple = coerceBooleanProperty(value);\n    }\n    /**\n     * Whether multiple button toggle group is disabled.\n     * @return {?}\n     */\n    get disabled() { return this._disabled; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set disabled(value) {\n        this._disabled = coerceBooleanProperty(value);\n        if (this._buttonToggles) {\n            this._buttonToggles.forEach((/**\n             * @param {?} toggle\n             * @return {?}\n             */\n            toggle => toggle._markForCheck()));\n        }\n    }\n    /**\n     * @return {?}\n     */\n    ngOnInit() {\n        this._selectionModel = new SelectionModel(this.multiple, undefined, false);\n    }\n    /**\n     * @return {?}\n     */\n    ngAfterContentInit() {\n        this._selectionModel.select(...this._buttonToggles.filter((/**\n         * @param {?} toggle\n         * @return {?}\n         */\n        toggle => toggle.checked)));\n    }\n    /**\n     * Sets the model value. Implemented as part of ControlValueAccessor.\n     * @param {?} value Value to be set to the model.\n     * @return {?}\n     */\n    writeValue(value) {\n        this.value = value;\n        this._changeDetector.markForCheck();\n    }\n    // Implemented as part of ControlValueAccessor.\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    registerOnChange(fn) {\n        this._controlValueAccessorChangeFn = fn;\n    }\n    // Implemented as part of ControlValueAccessor.\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    registerOnTouched(fn) {\n        this._onTouched = fn;\n    }\n    // Implemented as part of ControlValueAccessor.\n    /**\n     * @param {?} isDisabled\n     * @return {?}\n     */\n    setDisabledState(isDisabled) {\n        this.disabled = isDisabled;\n    }\n    /**\n     * Dispatch change event with current selection and group value.\n     * @return {?}\n     */\n    _emitChangeEvent() {\n        /** @type {?} */\n        const selected = this.selected;\n        /** @type {?} */\n        const source = Array.isArray(selected) ? selected[selected.length - 1] : selected;\n        /** @type {?} */\n        const event = new MatButtonToggleChange((/** @type {?} */ (source)), this.value);\n        this._controlValueAccessorChangeFn(event.value);\n        this.change.emit(event);\n    }\n    /**\n     * Syncs a button toggle's selected state with the model value.\n     * @param {?} toggle Toggle to be synced.\n     * @param {?} select Whether the toggle should be selected.\n     * @param {?=} isUserInput Whether the change was a result of a user interaction.\n     * @param {?=} deferEvents Whether to defer emitting the change events.\n     * @return {?}\n     */\n    _syncButtonToggle(toggle, select, isUserInput = false, deferEvents = false) {\n        // Deselect the currently-selected toggle, if we're in single-selection\n        // mode and the button being toggled isn't selected at the moment.\n        if (!this.multiple && this.selected && !toggle.checked) {\n            ((/** @type {?} */ (this.selected))).checked = false;\n        }\n        if (this._selectionModel) {\n            if (select) {\n                this._selectionModel.select(toggle);\n            }\n            else {\n                this._selectionModel.deselect(toggle);\n            }\n        }\n        else {\n            deferEvents = true;\n        }\n        // We need to defer in some cases in order to avoid \"changed after checked errors\", however\n        // the side-effect is that we may end up updating the model value out of sequence in others\n        // The `deferEvents` flag allows us to decide whether to do it on a case-by-case basis.\n        if (deferEvents) {\n            Promise.resolve((/**\n             * @return {?}\n             */\n            () => this._updateModelValue(isUserInput)));\n        }\n        else {\n            this._updateModelValue(isUserInput);\n        }\n    }\n    /**\n     * Checks whether a button toggle is selected.\n     * @param {?} toggle\n     * @return {?}\n     */\n    _isSelected(toggle) {\n        return this._selectionModel && this._selectionModel.isSelected(toggle);\n    }\n    /**\n     * Determines whether a button toggle should be checked on init.\n     * @param {?} toggle\n     * @return {?}\n     */\n    _isPrechecked(toggle) {\n        if (typeof this._rawValue === 'undefined') {\n            return false;\n        }\n        if (this.multiple && Array.isArray(this._rawValue)) {\n            return this._rawValue.some((/**\n             * @param {?} value\n             * @return {?}\n             */\n            value => toggle.value != null && value === toggle.value));\n        }\n        return toggle.value === this._rawValue;\n    }\n    /**\n     * Updates the selection state of the toggles in the group based on a value.\n     * @private\n     * @param {?} value\n     * @return {?}\n     */\n    _setSelectionByValue(value) {\n        this._rawValue = value;\n        if (!this._buttonToggles) {\n            return;\n        }\n        if (this.multiple && value) {\n            if (!Array.isArray(value)) {\n                throw Error('Value must be an array in multiple-selection mode.');\n            }\n            this._clearSelection();\n            value.forEach((/**\n             * @param {?} currentValue\n             * @return {?}\n             */\n            (currentValue) => this._selectValue(currentValue)));\n        }\n        else {\n            this._clearSelection();\n            this._selectValue(value);\n        }\n    }\n    /**\n     * Clears the selected toggles.\n     * @private\n     * @return {?}\n     */\n    _clearSelection() {\n        this._selectionModel.clear();\n        this._buttonToggles.forEach((/**\n         * @param {?} toggle\n         * @return {?}\n         */\n        toggle => toggle.checked = false));\n    }\n    /**\n     * Selects a value if there's a toggle that corresponds to it.\n     * @private\n     * @param {?} value\n     * @return {?}\n     */\n    _selectValue(value) {\n        /** @type {?} */\n        const correspondingOption = this._buttonToggles.find((/**\n         * @param {?} toggle\n         * @return {?}\n         */\n        toggle => {\n            return toggle.value != null && toggle.value === value;\n        }));\n        if (correspondingOption) {\n            correspondingOption.checked = true;\n            this._selectionModel.select(correspondingOption);\n        }\n    }\n    /**\n     * Syncs up the group's value with the model and emits the change event.\n     * @private\n     * @param {?} isUserInput\n     * @return {?}\n     */\n    _updateModelValue(isUserInput) {\n        // Only emit the change event for user input.\n        if (isUserInput) {\n            this._emitChangeEvent();\n        }\n        // Note: we emit this one no matter whether it was a user interaction, because\n        // it is used by Angular to sync up the two-way data binding.\n        this.valueChange.emit(this.value);\n    }\n}\nMatButtonToggleGroup.decorators = [\n    { type: Directive, args: [{\n                selector: 'mat-button-toggle-group',\n                providers: [\n                    MAT_BUTTON_TOGGLE_GROUP_VALUE_ACCESSOR,\n                    { provide: MatButtonToggleGroupMultiple, useExisting: MatButtonToggleGroup },\n                ],\n                host: {\n                    'role': 'group',\n                    'class': 'mat-button-toggle-group',\n                    '[attr.aria-disabled]': 'disabled',\n                    '[class.mat-button-toggle-vertical]': 'vertical',\n                    '[class.mat-button-toggle-group-appearance-standard]': 'appearance === \"standard\"',\n                },\n                exportAs: 'matButtonToggleGroup',\n            },] }\n];\n/** @nocollapse */\nMatButtonToggleGroup.ctorParameters = () => [\n    { type: ChangeDetectorRef },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [MAT_BUTTON_TOGGLE_DEFAULT_OPTIONS,] }] }\n];\nMatButtonToggleGroup.propDecorators = {\n    _buttonToggles: [{ type: ContentChildren, args: [forwardRef((/**\n                 * @return {?}\n                 */\n                () => MatButtonToggle)), {\n                    // Note that this would technically pick up toggles\n                    // from nested groups, but that's not a case that we support.\n                    descendants: true\n                },] }],\n    appearance: [{ type: Input }],\n    name: [{ type: Input }],\n    vertical: [{ type: Input }],\n    value: [{ type: Input }],\n    valueChange: [{ type: Output }],\n    multiple: [{ type: Input }],\n    disabled: [{ type: Input }],\n    change: [{ type: Output }]\n};\nif (false) {\n    /** @type {?} */\n    MatButtonToggleGroup.ngAcceptInputType_disabled;\n    /** @type {?} */\n    MatButtonToggleGroup.ngAcceptInputType_multiple;\n    /** @type {?} */\n    MatButtonToggleGroup.ngAcceptInputType_vertical;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatButtonToggleGroup.prototype._vertical;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatButtonToggleGroup.prototype._multiple;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatButtonToggleGroup.prototype._disabled;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatButtonToggleGroup.prototype._selectionModel;\n    /**\n     * Reference to the raw value that the consumer tried to assign. The real\n     * value will exclude any values from this one that don't correspond to a\n     * toggle. Useful for the cases where the value is assigned before the toggles\n     * have been initialized or at the same that they're being swapped out.\n     * @type {?}\n     * @private\n     */\n    MatButtonToggleGroup.prototype._rawValue;\n    /**\n     * The method to be called in order to update ngModel.\n     * Now `ngModel` binding is not supported in multiple selection mode.\n     * @type {?}\n     */\n    MatButtonToggleGroup.prototype._controlValueAccessorChangeFn;\n    /**\n     * onTouch function registered via registerOnTouch (ControlValueAccessor).\n     * @type {?}\n     */\n    MatButtonToggleGroup.prototype._onTouched;\n    /**\n     * Child button toggle buttons.\n     * @type {?}\n     */\n    MatButtonToggleGroup.prototype._buttonToggles;\n    /**\n     * The appearance for all the buttons in the group.\n     * @type {?}\n     */\n    MatButtonToggleGroup.prototype.appearance;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatButtonToggleGroup.prototype._name;\n    /**\n     * Event that emits whenever the value of the group changes.\n     * Used to facilitate two-way data binding.\n     * \\@docs-private\n     * @type {?}\n     */\n    MatButtonToggleGroup.prototype.valueChange;\n    /**\n     * Event emitted when the group's value changes.\n     * @type {?}\n     */\n    MatButtonToggleGroup.prototype.change;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatButtonToggleGroup.prototype._changeDetector;\n}\n// Boilerplate for applying mixins to the MatButtonToggle class.\n/**\n * \\@docs-private\n */\nclass MatButtonToggleBase {\n}\n/** @type {?} */\nconst _MatButtonToggleMixinBase = mixinDisableRipple(MatButtonToggleBase);\n/**\n * Single button inside of a toggle group.\n */\nclass MatButtonToggle extends _MatButtonToggleMixinBase {\n    /**\n     * @param {?} toggleGroup\n     * @param {?} _changeDetectorRef\n     * @param {?} _elementRef\n     * @param {?} _focusMonitor\n     * @param {?} defaultTabIndex\n     * @param {?=} defaultOptions\n     */\n    constructor(toggleGroup, _changeDetectorRef, _elementRef, _focusMonitor, \n    // @breaking-change 8.0.0 `defaultTabIndex` to be made a required parameter.\n    defaultTabIndex, defaultOptions) {\n        super();\n        this._changeDetectorRef = _changeDetectorRef;\n        this._elementRef = _elementRef;\n        this._focusMonitor = _focusMonitor;\n        this._isSingleSelector = false;\n        this._checked = false;\n        /**\n         * Users can specify the `aria-labelledby` attribute which will be forwarded to the input element\n         */\n        this.ariaLabelledby = null;\n        this._disabled = false;\n        /**\n         * Event emitted when the group value changes.\n         */\n        this.change = new EventEmitter();\n        /** @type {?} */\n        const parsedTabIndex = Number(defaultTabIndex);\n        this.tabIndex = (parsedTabIndex || parsedTabIndex === 0) ? parsedTabIndex : null;\n        this.buttonToggleGroup = toggleGroup;\n        this.appearance =\n            defaultOptions && defaultOptions.appearance ? defaultOptions.appearance : 'standard';\n    }\n    /**\n     * Unique ID for the underlying `button` element.\n     * @return {?}\n     */\n    get buttonId() { return `${this.id}-button`; }\n    /**\n     * The appearance style of the button.\n     * @return {?}\n     */\n    get appearance() {\n        return this.buttonToggleGroup ? this.buttonToggleGroup.appearance : this._appearance;\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set appearance(value) {\n        this._appearance = value;\n    }\n    /**\n     * Whether the button is checked.\n     * @return {?}\n     */\n    get checked() {\n        return this.buttonToggleGroup ? this.buttonToggleGroup._isSelected(this) : this._checked;\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set checked(value) {\n        /** @type {?} */\n        const newValue = coerceBooleanProperty(value);\n        if (newValue !== this._checked) {\n            this._checked = newValue;\n            if (this.buttonToggleGroup) {\n                this.buttonToggleGroup._syncButtonToggle(this, this._checked);\n            }\n            this._changeDetectorRef.markForCheck();\n        }\n    }\n    /**\n     * Whether the button is disabled.\n     * @return {?}\n     */\n    get disabled() {\n        return this._disabled || (this.buttonToggleGroup && this.buttonToggleGroup.disabled);\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set disabled(value) { this._disabled = coerceBooleanProperty(value); }\n    /**\n     * @return {?}\n     */\n    ngOnInit() {\n        this._isSingleSelector = this.buttonToggleGroup && !this.buttonToggleGroup.multiple;\n        this._type = this._isSingleSelector ? 'radio' : 'checkbox';\n        this.id = this.id || `mat-button-toggle-${_uniqueIdCounter++}`;\n        if (this._isSingleSelector) {\n            this.name = this.buttonToggleGroup.name;\n        }\n        if (this.buttonToggleGroup && this.buttonToggleGroup._isPrechecked(this)) {\n            this.checked = true;\n        }\n        this._focusMonitor.monitor(this._elementRef, true);\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        /** @type {?} */\n        const group = this.buttonToggleGroup;\n        this._focusMonitor.stopMonitoring(this._elementRef);\n        // Remove the toggle from the selection once it's destroyed. Needs to happen\n        // on the next tick in order to avoid \"changed after checked\" errors.\n        if (group && group._isSelected(this)) {\n            group._syncButtonToggle(this, false, false, true);\n        }\n    }\n    /**\n     * Focuses the button.\n     * @param {?=} options\n     * @return {?}\n     */\n    focus(options) {\n        this._buttonElement.nativeElement.focus(options);\n    }\n    /**\n     * Checks the button toggle due to an interaction with the underlying native button.\n     * @return {?}\n     */\n    _onButtonClick() {\n        /** @type {?} */\n        const newChecked = this._isSingleSelector ? true : !this._checked;\n        if (newChecked !== this._checked) {\n            this._checked = newChecked;\n            if (this.buttonToggleGroup) {\n                this.buttonToggleGroup._syncButtonToggle(this, this._checked, true);\n                this.buttonToggleGroup._onTouched();\n            }\n        }\n        // Emit a change event when it's the single selector\n        this.change.emit(new MatButtonToggleChange(this, this.value));\n    }\n    /**\n     * Marks the button toggle as needing checking for change detection.\n     * This method is exposed because the parent button toggle group will directly\n     * update bound properties of the radio button.\n     * @return {?}\n     */\n    _markForCheck() {\n        // When the group value changes, the button will not be notified.\n        // Use `markForCheck` to explicit update button toggle's status.\n        this._changeDetectorRef.markForCheck();\n    }\n}\nMatButtonToggle.decorators = [\n    { type: Component, args: [{\n                selector: 'mat-button-toggle',\n                template: \"<button #button class=\\\"mat-button-toggle-button mat-focus-indicator\\\"\\n        type=\\\"button\\\"\\n        [id]=\\\"buttonId\\\"\\n        [attr.tabindex]=\\\"disabled ? -1 : tabIndex\\\"\\n        [attr.aria-pressed]=\\\"checked\\\"\\n        [disabled]=\\\"disabled || null\\\"\\n        [attr.name]=\\\"name || null\\\"\\n        [attr.aria-label]=\\\"ariaLabel\\\"\\n        [attr.aria-labelledby]=\\\"ariaLabelledby\\\"\\n        (click)=\\\"_onButtonClick()\\\">\\n  <div class=\\\"mat-button-toggle-label-content\\\">\\n    <ng-content></ng-content>\\n  </div>\\n</button>\\n\\n<div class=\\\"mat-button-toggle-focus-overlay\\\"></div>\\n<div class=\\\"mat-button-toggle-ripple\\\" matRipple\\n     [matRippleTrigger]=\\\"button\\\"\\n     [matRippleDisabled]=\\\"this.disableRipple || this.disabled\\\">\\n</div>\\n\",\n                encapsulation: ViewEncapsulation.None,\n                exportAs: 'matButtonToggle',\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                inputs: ['disableRipple'],\n                host: {\n                    '[class.mat-button-toggle-standalone]': '!buttonToggleGroup',\n                    '[class.mat-button-toggle-checked]': 'checked',\n                    '[class.mat-button-toggle-disabled]': 'disabled',\n                    '[class.mat-button-toggle-appearance-standard]': 'appearance === \"standard\"',\n                    'class': 'mat-button-toggle',\n                    // Always reset the tabindex to -1 so it doesn't conflict with the one on the `button`,\n                    // but can still receive focus from things like cdkFocusInitial.\n                    '[attr.tabindex]': '-1',\n                    '[attr.id]': 'id',\n                    '[attr.name]': 'null',\n                    '(focus)': 'focus()',\n                },\n                styles: [\".mat-button-toggle-standalone,.mat-button-toggle-group{position:relative;display:inline-flex;flex-direction:row;white-space:nowrap;overflow:hidden;border-radius:2px;-webkit-tap-highlight-color:transparent}.cdk-high-contrast-active .mat-button-toggle-standalone,.cdk-high-contrast-active .mat-button-toggle-group{outline:solid 1px}.mat-button-toggle-standalone.mat-button-toggle-appearance-standard,.mat-button-toggle-group-appearance-standard{border-radius:4px}.cdk-high-contrast-active .mat-button-toggle-standalone.mat-button-toggle-appearance-standard,.cdk-high-contrast-active .mat-button-toggle-group-appearance-standard{outline:0}.mat-button-toggle-vertical{flex-direction:column}.mat-button-toggle-vertical .mat-button-toggle-label-content{display:block}.mat-button-toggle{white-space:nowrap;position:relative}.mat-button-toggle .mat-icon svg{vertical-align:top}.mat-button-toggle.cdk-keyboard-focused .mat-button-toggle-focus-overlay{opacity:1}.cdk-high-contrast-active .mat-button-toggle.cdk-keyboard-focused .mat-button-toggle-focus-overlay{opacity:.5}.mat-button-toggle-appearance-standard:not(.mat-button-toggle-disabled):hover .mat-button-toggle-focus-overlay{opacity:.04}.mat-button-toggle-appearance-standard.cdk-keyboard-focused:not(.mat-button-toggle-disabled) .mat-button-toggle-focus-overlay{opacity:.12}.cdk-high-contrast-active .mat-button-toggle-appearance-standard.cdk-keyboard-focused:not(.mat-button-toggle-disabled) .mat-button-toggle-focus-overlay{opacity:.5}@media(hover: none){.mat-button-toggle-appearance-standard:not(.mat-button-toggle-disabled):hover .mat-button-toggle-focus-overlay{display:none}}.mat-button-toggle-label-content{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;display:inline-block;line-height:36px;padding:0 16px;position:relative}.mat-button-toggle-appearance-standard .mat-button-toggle-label-content{line-height:48px;padding:0 12px}.mat-button-toggle-label-content>*{vertical-align:middle}.mat-button-toggle-focus-overlay{border-radius:inherit;pointer-events:none;opacity:0;top:0;left:0;right:0;bottom:0;position:absolute}.mat-button-toggle-checked .mat-button-toggle-focus-overlay{border-bottom:solid 36px}.cdk-high-contrast-active .mat-button-toggle-checked .mat-button-toggle-focus-overlay{opacity:.5;height:0}.cdk-high-contrast-active .mat-button-toggle-checked.mat-button-toggle-appearance-standard .mat-button-toggle-focus-overlay{border-bottom:solid 48px}.mat-button-toggle .mat-button-toggle-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none}.mat-button-toggle-button{border:0;background:none;color:inherit;padding:0;margin:0;font:inherit;outline:none;width:100%;cursor:pointer}.mat-button-toggle-disabled .mat-button-toggle-button{cursor:default}.mat-button-toggle-button::-moz-focus-inner{border:0}\\n\"]\n            }] }\n];\n/** @nocollapse */\nMatButtonToggle.ctorParameters = () => [\n    { type: MatButtonToggleGroup, decorators: [{ type: Optional }] },\n    { type: ChangeDetectorRef },\n    { type: ElementRef },\n    { type: FocusMonitor },\n    { type: String, decorators: [{ type: Attribute, args: ['tabindex',] }] },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [MAT_BUTTON_TOGGLE_DEFAULT_OPTIONS,] }] }\n];\nMatButtonToggle.propDecorators = {\n    ariaLabel: [{ type: Input, args: ['aria-label',] }],\n    ariaLabelledby: [{ type: Input, args: ['aria-labelledby',] }],\n    _buttonElement: [{ type: ViewChild, args: ['button',] }],\n    id: [{ type: Input }],\n    name: [{ type: Input }],\n    value: [{ type: Input }],\n    tabIndex: [{ type: Input }],\n    appearance: [{ type: Input }],\n    checked: [{ type: Input }],\n    disabled: [{ type: Input }],\n    change: [{ type: Output }]\n};\nif (false) {\n    /** @type {?} */\n    MatButtonToggle.ngAcceptInputType_checked;\n    /** @type {?} */\n    MatButtonToggle.ngAcceptInputType_disabled;\n    /** @type {?} */\n    MatButtonToggle.ngAcceptInputType_vertical;\n    /** @type {?} */\n    MatButtonToggle.ngAcceptInputType_multiple;\n    /** @type {?} */\n    MatButtonToggle.ngAcceptInputType_disableRipple;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatButtonToggle.prototype._isSingleSelector;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatButtonToggle.prototype._checked;\n    /**\n     * Attached to the aria-label attribute of the host element. In most cases, aria-labelledby will\n     * take precedence so this may be omitted.\n     * @type {?}\n     */\n    MatButtonToggle.prototype.ariaLabel;\n    /**\n     * Users can specify the `aria-labelledby` attribute which will be forwarded to the input element\n     * @type {?}\n     */\n    MatButtonToggle.prototype.ariaLabelledby;\n    /**\n     * Type of the button toggle. Either 'radio' or 'checkbox'.\n     * @type {?}\n     */\n    MatButtonToggle.prototype._type;\n    /** @type {?} */\n    MatButtonToggle.prototype._buttonElement;\n    /**\n     * The parent button toggle group (exclusive selection). Optional.\n     * @type {?}\n     */\n    MatButtonToggle.prototype.buttonToggleGroup;\n    /**\n     * The unique ID for this button toggle.\n     * @type {?}\n     */\n    MatButtonToggle.prototype.id;\n    /**\n     * HTML's 'name' attribute used to group radios for unique selection.\n     * @type {?}\n     */\n    MatButtonToggle.prototype.name;\n    /**\n     * MatButtonToggleGroup reads this to assign its own value.\n     * @type {?}\n     */\n    MatButtonToggle.prototype.value;\n    /**\n     * Tabindex for the toggle.\n     * @type {?}\n     */\n    MatButtonToggle.prototype.tabIndex;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatButtonToggle.prototype._appearance;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatButtonToggle.prototype._disabled;\n    /**\n     * Event emitted when the group value changes.\n     * @type {?}\n     */\n    MatButtonToggle.prototype.change;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatButtonToggle.prototype._changeDetectorRef;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatButtonToggle.prototype._elementRef;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatButtonToggle.prototype._focusMonitor;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/button-toggle/button-toggle-module.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass MatButtonToggleModule {\n}\nMatButtonToggleModule.decorators = [\n    { type: NgModule, args: [{\n                imports: [MatCommonModule, MatRippleModule],\n                exports: [MatCommonModule, MatButtonToggleGroup, MatButtonToggle],\n                declarations: [MatButtonToggleGroup, MatButtonToggle],\n            },] }\n];\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/button-toggle/public-api.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MAT_BUTTON_TOGGLE_DEFAULT_OPTIONS, MAT_BUTTON_TOGGLE_GROUP_VALUE_ACCESSOR, MatButtonToggle, MatButtonToggleChange, MatButtonToggleGroup, MatButtonToggleGroupMultiple, MatButtonToggleModule };\n//# sourceMappingURL=button-toggle.js.map\n","import { SPACE, BACKSPACE, DELETE, HOME, END, TAB, hasModifierKey, ENTER } from '@angular/cdk/keycodes';\nimport { Directive, EventEmitter, ElementRef, NgZone, Optional, Inject, ChangeDetectorRef, Attribute, ContentChild, forwardRef, Input, Output, InjectionToken, Component, ViewEncapsulation, ChangeDetectionStrategy, Self, ContentChildren, NgModule } from '@angular/core';\nimport { mixinTabIndex, mixinColor, mixinDisableRipple, mixinDisabled, RippleRenderer, MAT_RIPPLE_GLOBAL_OPTIONS, mixinErrorState, ErrorStateMatcher } from '@angular/material/core';\nimport { DOCUMENT } from '@angular/common';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { Platform } from '@angular/cdk/platform';\nimport { Subject, merge } from 'rxjs';\nimport { take, takeUntil, startWith } from 'rxjs/operators';\nimport { ANIMATION_MODULE_TYPE } from '@angular/platform-browser/animations';\nimport { FocusKeyManager } from '@angular/cdk/a11y';\nimport { Directionality } from '@angular/cdk/bidi';\nimport { SelectionModel } from '@angular/cdk/collections';\nimport { NgForm, FormGroupDirective, NgControl } from '@angular/forms';\nimport { MatFormFieldControl } from '@angular/material/form-field';\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/chips/chip.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Represents an event fired on an individual `mat-chip`.\n * @record\n */\nfunction MatChipEvent() { }\nif (false) {\n    /**\n     * The chip the event was fired on.\n     * @type {?}\n     */\n    MatChipEvent.prototype.chip;\n}\n/**\n * Event object emitted by MatChip when selected or deselected.\n */\nclass MatChipSelectionChange {\n    /**\n     * @param {?} source\n     * @param {?} selected\n     * @param {?=} isUserInput\n     */\n    constructor(source, selected, isUserInput = false) {\n        this.source = source;\n        this.selected = selected;\n        this.isUserInput = isUserInput;\n    }\n}\nif (false) {\n    /**\n     * Reference to the chip that emitted the event.\n     * @type {?}\n     */\n    MatChipSelectionChange.prototype.source;\n    /**\n     * Whether the chip that emitted the event is selected.\n     * @type {?}\n     */\n    MatChipSelectionChange.prototype.selected;\n    /**\n     * Whether the selection change was a result of a user interaction.\n     * @type {?}\n     */\n    MatChipSelectionChange.prototype.isUserInput;\n}\n// Boilerplate for applying mixins to MatChip.\n/**\n * \\@docs-private\n */\nclass MatChipBase {\n    /**\n     * @param {?} _elementRef\n     */\n    constructor(_elementRef) {\n        this._elementRef = _elementRef;\n    }\n}\nif (false) {\n    /** @type {?} */\n    MatChipBase.prototype._elementRef;\n}\n/** @type {?} */\nconst _MatChipMixinBase = mixinTabIndex(mixinColor(mixinDisableRipple(mixinDisabled(MatChipBase)), 'primary'), -1);\n/**\n * Dummy directive to add CSS class to chip avatar.\n * \\@docs-private\n */\nclass MatChipAvatar {\n}\nMatChipAvatar.decorators = [\n    { type: Directive, args: [{\n                selector: 'mat-chip-avatar, [matChipAvatar]',\n                host: { 'class': 'mat-chip-avatar' }\n            },] }\n];\n/**\n * Dummy directive to add CSS class to chip trailing icon.\n * \\@docs-private\n */\nclass MatChipTrailingIcon {\n}\nMatChipTrailingIcon.decorators = [\n    { type: Directive, args: [{\n                selector: 'mat-chip-trailing-icon, [matChipTrailingIcon]',\n                host: { 'class': 'mat-chip-trailing-icon' }\n            },] }\n];\n/**\n * Material design styled Chip component. Used inside the MatChipList component.\n */\nclass MatChip extends _MatChipMixinBase {\n    /**\n     * @param {?} _elementRef\n     * @param {?} _ngZone\n     * @param {?} platform\n     * @param {?} globalRippleOptions\n     * @param {?=} animationMode\n     * @param {?=} _changeDetectorRef\n     * @param {?=} tabIndex\n     * @param {?=} _document\n     */\n    constructor(_elementRef, _ngZone, platform, globalRippleOptions, \n    // @breaking-change 8.0.0 `animationMode` parameter to become required.\n    animationMode, _changeDetectorRef, tabIndex, \n    // @breaking-change 11.0.0 `_document` parameter to become required.\n    _document) {\n        super(_elementRef);\n        this._elementRef = _elementRef;\n        this._ngZone = _ngZone;\n        this._changeDetectorRef = _changeDetectorRef;\n        /**\n         * Whether the chip has focus.\n         */\n        this._hasFocus = false;\n        /**\n         * Whether the chip list is selectable\n         */\n        this.chipListSelectable = true;\n        /**\n         * Whether the chip list is in multi-selection mode.\n         */\n        this._chipListMultiple = false;\n        this._selected = false;\n        this._selectable = true;\n        this._removable = true;\n        /**\n         * Emits when the chip is focused.\n         */\n        this._onFocus = new Subject();\n        /**\n         * Emits when the chip is blured.\n         */\n        this._onBlur = new Subject();\n        /**\n         * Emitted when the chip is selected or deselected.\n         */\n        this.selectionChange = new EventEmitter();\n        /**\n         * Emitted when the chip is destroyed.\n         */\n        this.destroyed = new EventEmitter();\n        /**\n         * Emitted when a chip is to be removed.\n         */\n        this.removed = new EventEmitter();\n        this._addHostClassName();\n        // Dynamically create the ripple target, append it within the chip, and use it as the\n        // chip's ripple target. Adding the class '.mat-chip-ripple' ensures that it will have\n        // the proper styles.\n        this._chipRippleTarget = (_document || document).createElement('div');\n        this._chipRippleTarget.classList.add('mat-chip-ripple');\n        this._elementRef.nativeElement.appendChild(this._chipRippleTarget);\n        this._chipRipple = new RippleRenderer(this, _ngZone, this._chipRippleTarget, platform);\n        this._chipRipple.setupTriggerEvents(_elementRef);\n        this.rippleConfig = globalRippleOptions || {};\n        this._animationsDisabled = animationMode === 'NoopAnimations';\n        this.tabIndex = tabIndex != null ? (parseInt(tabIndex) || -1) : -1;\n    }\n    /**\n     * Whether ripples are disabled on interaction\n     * \\@docs-private\n     * @return {?}\n     */\n    get rippleDisabled() {\n        return this.disabled || this.disableRipple || !!this.rippleConfig.disabled;\n    }\n    /**\n     * Whether the chip is selected.\n     * @return {?}\n     */\n    get selected() { return this._selected; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set selected(value) {\n        /** @type {?} */\n        const coercedValue = coerceBooleanProperty(value);\n        if (coercedValue !== this._selected) {\n            this._selected = coercedValue;\n            this._dispatchSelectionChange();\n        }\n    }\n    /**\n     * The value of the chip. Defaults to the content inside `<mat-chip>` tags.\n     * @return {?}\n     */\n    get value() {\n        return this._value !== undefined\n            ? this._value\n            : this._elementRef.nativeElement.textContent;\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set value(value) { this._value = value; }\n    /**\n     * Whether or not the chip is selectable. When a chip is not selectable,\n     * changes to its selected state are always ignored. By default a chip is\n     * selectable, and it becomes non-selectable if its parent chip list is\n     * not selectable.\n     * @return {?}\n     */\n    get selectable() { return this._selectable && this.chipListSelectable; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set selectable(value) {\n        this._selectable = coerceBooleanProperty(value);\n    }\n    /**\n     * Determines whether or not the chip displays the remove styling and emits (removed) events.\n     * @return {?}\n     */\n    get removable() { return this._removable; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set removable(value) {\n        this._removable = coerceBooleanProperty(value);\n    }\n    /**\n     * The ARIA selected applied to the chip.\n     * @return {?}\n     */\n    get ariaSelected() {\n        // Remove the `aria-selected` when the chip is deselected in single-selection mode, because\n        // it adds noise to NVDA users where \"not selected\" will be read out for each chip.\n        return this.selectable && (this._chipListMultiple || this.selected) ?\n            this.selected.toString() : null;\n    }\n    /**\n     * @return {?}\n     */\n    _addHostClassName() {\n        /** @type {?} */\n        const basicChipAttrName = 'mat-basic-chip';\n        /** @type {?} */\n        const element = (/** @type {?} */ (this._elementRef.nativeElement));\n        if (element.hasAttribute(basicChipAttrName) ||\n            element.tagName.toLowerCase() === basicChipAttrName) {\n            element.classList.add(basicChipAttrName);\n            return;\n        }\n        else {\n            element.classList.add('mat-standard-chip');\n        }\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this.destroyed.emit({ chip: this });\n        this._chipRipple._removeTriggerEvents();\n    }\n    /**\n     * Selects the chip.\n     * @return {?}\n     */\n    select() {\n        if (!this._selected) {\n            this._selected = true;\n            this._dispatchSelectionChange();\n            this._markForCheck();\n        }\n    }\n    /**\n     * Deselects the chip.\n     * @return {?}\n     */\n    deselect() {\n        if (this._selected) {\n            this._selected = false;\n            this._dispatchSelectionChange();\n            this._markForCheck();\n        }\n    }\n    /**\n     * Select this chip and emit selected event\n     * @return {?}\n     */\n    selectViaInteraction() {\n        if (!this._selected) {\n            this._selected = true;\n            this._dispatchSelectionChange(true);\n            this._markForCheck();\n        }\n    }\n    /**\n     * Toggles the current selected state of this chip.\n     * @param {?=} isUserInput\n     * @return {?}\n     */\n    toggleSelected(isUserInput = false) {\n        this._selected = !this.selected;\n        this._dispatchSelectionChange(isUserInput);\n        this._markForCheck();\n        return this.selected;\n    }\n    /**\n     * Allows for programmatic focusing of the chip.\n     * @return {?}\n     */\n    focus() {\n        if (!this._hasFocus) {\n            this._elementRef.nativeElement.focus();\n            this._onFocus.next({ chip: this });\n        }\n        this._hasFocus = true;\n    }\n    /**\n     * Allows for programmatic removal of the chip. Called by the MatChipList when the DELETE or\n     * BACKSPACE keys are pressed.\n     *\n     * Informs any listeners of the removal request. Does not remove the chip from the DOM.\n     * @return {?}\n     */\n    remove() {\n        if (this.removable) {\n            this.removed.emit({ chip: this });\n        }\n    }\n    /**\n     * Handles click events on the chip.\n     * @param {?} event\n     * @return {?}\n     */\n    _handleClick(event) {\n        if (this.disabled) {\n            event.preventDefault();\n        }\n        else {\n            event.stopPropagation();\n        }\n    }\n    /**\n     * Handle custom key presses.\n     * @param {?} event\n     * @return {?}\n     */\n    _handleKeydown(event) {\n        if (this.disabled) {\n            return;\n        }\n        switch (event.keyCode) {\n            case DELETE:\n            case BACKSPACE:\n                // If we are removable, remove the focused chip\n                this.remove();\n                // Always prevent so page navigation does not occur\n                event.preventDefault();\n                break;\n            case SPACE:\n                // If we are selectable, toggle the focused chip\n                if (this.selectable) {\n                    this.toggleSelected(true);\n                }\n                // Always prevent space from scrolling the page since the list has focus\n                event.preventDefault();\n                break;\n        }\n    }\n    /**\n     * @return {?}\n     */\n    _blur() {\n        // When animations are enabled, Angular may end up removing the chip from the DOM a little\n        // earlier than usual, causing it to be blurred and throwing off the logic in the chip list\n        // that moves focus not the next item. To work around the issue, we defer marking the chip\n        // as not focused until the next time the zone stabilizes.\n        this._ngZone.onStable\n            .asObservable()\n            .pipe(take(1))\n            .subscribe((/**\n         * @return {?}\n         */\n        () => {\n            this._ngZone.run((/**\n             * @return {?}\n             */\n            () => {\n                this._hasFocus = false;\n                this._onBlur.next({ chip: this });\n            }));\n        }));\n    }\n    /**\n     * @private\n     * @param {?=} isUserInput\n     * @return {?}\n     */\n    _dispatchSelectionChange(isUserInput = false) {\n        this.selectionChange.emit({\n            source: this,\n            isUserInput,\n            selected: this._selected\n        });\n    }\n    /**\n     * @private\n     * @return {?}\n     */\n    _markForCheck() {\n        // @breaking-change 9.0.0 Remove this method once the _changeDetectorRef is a required param.\n        if (this._changeDetectorRef) {\n            this._changeDetectorRef.markForCheck();\n        }\n    }\n}\nMatChip.decorators = [\n    { type: Directive, args: [{\n                selector: `mat-basic-chip, [mat-basic-chip], mat-chip, [mat-chip]`,\n                inputs: ['color', 'disabled', 'disableRipple', 'tabIndex'],\n                exportAs: 'matChip',\n                host: {\n                    'class': 'mat-chip mat-focus-indicator',\n                    '[attr.tabindex]': 'disabled ? null : tabIndex',\n                    'role': 'option',\n                    '[class.mat-chip-selected]': 'selected',\n                    '[class.mat-chip-with-avatar]': 'avatar',\n                    '[class.mat-chip-with-trailing-icon]': 'trailingIcon || removeIcon',\n                    '[class.mat-chip-disabled]': 'disabled',\n                    '[class._mat-animation-noopable]': '_animationsDisabled',\n                    '[attr.disabled]': 'disabled || null',\n                    '[attr.aria-disabled]': 'disabled.toString()',\n                    '[attr.aria-selected]': 'ariaSelected',\n                    '(click)': '_handleClick($event)',\n                    '(keydown)': '_handleKeydown($event)',\n                    '(focus)': 'focus()',\n                    '(blur)': '_blur()',\n                },\n            },] }\n];\n/** @nocollapse */\nMatChip.ctorParameters = () => [\n    { type: ElementRef },\n    { type: NgZone },\n    { type: Platform },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [MAT_RIPPLE_GLOBAL_OPTIONS,] }] },\n    { type: String, decorators: [{ type: Optional }, { type: Inject, args: [ANIMATION_MODULE_TYPE,] }] },\n    { type: ChangeDetectorRef },\n    { type: String, decorators: [{ type: Attribute, args: ['tabindex',] }] },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [DOCUMENT,] }] }\n];\nMatChip.propDecorators = {\n    avatar: [{ type: ContentChild, args: [MatChipAvatar,] }],\n    trailingIcon: [{ type: ContentChild, args: [MatChipTrailingIcon,] }],\n    removeIcon: [{ type: ContentChild, args: [forwardRef((/**\n                 * @return {?}\n                 */\n                () => MatChipRemove)),] }],\n    selected: [{ type: Input }],\n    value: [{ type: Input }],\n    selectable: [{ type: Input }],\n    removable: [{ type: Input }],\n    selectionChange: [{ type: Output }],\n    destroyed: [{ type: Output }],\n    removed: [{ type: Output }]\n};\nif (false) {\n    /** @type {?} */\n    MatChip.ngAcceptInputType_selected;\n    /** @type {?} */\n    MatChip.ngAcceptInputType_selectable;\n    /** @type {?} */\n    MatChip.ngAcceptInputType_removable;\n    /** @type {?} */\n    MatChip.ngAcceptInputType_disabled;\n    /** @type {?} */\n    MatChip.ngAcceptInputType_disableRipple;\n    /**\n     * Reference to the RippleRenderer for the chip.\n     * @type {?}\n     * @private\n     */\n    MatChip.prototype._chipRipple;\n    /**\n     * Reference to the element that acts as the chip's ripple target. This element is\n     * dynamically added as a child node of the chip. The chip itself cannot be used as the\n     * ripple target because it must be the host of the focus indicator.\n     * @type {?}\n     * @private\n     */\n    MatChip.prototype._chipRippleTarget;\n    /**\n     * Ripple configuration for ripples that are launched on pointer down. The ripple config\n     * is set to the global ripple options since we don't have any configurable options for\n     * the chip ripples.\n     * \\@docs-private\n     * @type {?}\n     */\n    MatChip.prototype.rippleConfig;\n    /**\n     * Whether the chip has focus.\n     * @type {?}\n     */\n    MatChip.prototype._hasFocus;\n    /**\n     * Whether animations for the chip are enabled.\n     * @type {?}\n     */\n    MatChip.prototype._animationsDisabled;\n    /**\n     * Whether the chip list is selectable\n     * @type {?}\n     */\n    MatChip.prototype.chipListSelectable;\n    /**\n     * Whether the chip list is in multi-selection mode.\n     * @type {?}\n     */\n    MatChip.prototype._chipListMultiple;\n    /**\n     * The chip avatar\n     * @type {?}\n     */\n    MatChip.prototype.avatar;\n    /**\n     * The chip's trailing icon.\n     * @type {?}\n     */\n    MatChip.prototype.trailingIcon;\n    /**\n     * The chip's remove toggler.\n     * @type {?}\n     */\n    MatChip.prototype.removeIcon;\n    /**\n     * @type {?}\n     * @protected\n     */\n    MatChip.prototype._selected;\n    /**\n     * @type {?}\n     * @protected\n     */\n    MatChip.prototype._value;\n    /**\n     * @type {?}\n     * @protected\n     */\n    MatChip.prototype._selectable;\n    /**\n     * @type {?}\n     * @protected\n     */\n    MatChip.prototype._removable;\n    /**\n     * Emits when the chip is focused.\n     * @type {?}\n     */\n    MatChip.prototype._onFocus;\n    /**\n     * Emits when the chip is blured.\n     * @type {?}\n     */\n    MatChip.prototype._onBlur;\n    /**\n     * Emitted when the chip is selected or deselected.\n     * @type {?}\n     */\n    MatChip.prototype.selectionChange;\n    /**\n     * Emitted when the chip is destroyed.\n     * @type {?}\n     */\n    MatChip.prototype.destroyed;\n    /**\n     * Emitted when a chip is to be removed.\n     * @type {?}\n     */\n    MatChip.prototype.removed;\n    /** @type {?} */\n    MatChip.prototype._elementRef;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatChip.prototype._ngZone;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatChip.prototype._changeDetectorRef;\n}\n/**\n * Applies proper (click) support and adds styling for use with the Material Design \"cancel\" icon\n * available at https://material.io/icons/#ic_cancel.\n *\n * Example:\n *\n *     `<mat-chip>\n *       <mat-icon matChipRemove>cancel</mat-icon>\n *     </mat-chip>`\n *\n * You *may* use a custom icon, but you may need to override the `mat-chip-remove` positioning\n * styles to properly center the icon within the chip.\n */\nclass MatChipRemove {\n    /**\n     * @param {?} _parentChip\n     * @param {?=} elementRef\n     */\n    constructor(_parentChip, \n    // @breaking-change 11.0.0 `elementRef` parameter to be made required.\n    elementRef) {\n        this._parentChip = _parentChip;\n        // @breaking-change 11.0.0 Remove null check for `elementRef`.\n        if (elementRef && elementRef.nativeElement.nodeName === 'BUTTON') {\n            elementRef.nativeElement.setAttribute('type', 'button');\n        }\n    }\n    /**\n     * Calls the parent chip's public `remove()` method if applicable.\n     * @param {?} event\n     * @return {?}\n     */\n    _handleClick(event) {\n        /** @type {?} */\n        const parentChip = this._parentChip;\n        if (parentChip.removable && !parentChip.disabled) {\n            parentChip.remove();\n        }\n        // We need to stop event propagation because otherwise the event will bubble up to the\n        // form field and cause the `onContainerClick` method to be invoked. This method would then\n        // reset the focused chip that has been focused after chip removal. Usually the parent\n        // the parent click listener of the `MatChip` would prevent propagation, but it can happen\n        // that the chip is being removed before the event bubbles up.\n        event.stopPropagation();\n    }\n}\nMatChipRemove.decorators = [\n    { type: Directive, args: [{\n                selector: '[matChipRemove]',\n                host: {\n                    'class': 'mat-chip-remove mat-chip-trailing-icon',\n                    '(click)': '_handleClick($event)',\n                }\n            },] }\n];\n/** @nocollapse */\nMatChipRemove.ctorParameters = () => [\n    { type: MatChip },\n    { type: ElementRef }\n];\nif (false) {\n    /**\n     * @type {?}\n     * @protected\n     */\n    MatChipRemove.prototype._parentChip;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/chips/chip-default-options.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Default options, for the chips module, that can be overridden.\n * @record\n */\nfunction MatChipsDefaultOptions() { }\nif (false) {\n    /**\n     * The list of key codes that will trigger a chipEnd event.\n     * @type {?}\n     */\n    MatChipsDefaultOptions.prototype.separatorKeyCodes;\n}\n/**\n * Injection token to be used to override the default options for the chips module.\n * @type {?}\n */\nconst MAT_CHIPS_DEFAULT_OPTIONS = new InjectionToken('mat-chips-default-options');\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/chips/chip-list.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n// Boilerplate for applying mixins to MatChipList.\n/**\n * \\@docs-private\n */\nclass MatChipListBase {\n    /**\n     * @param {?} _defaultErrorStateMatcher\n     * @param {?} _parentForm\n     * @param {?} _parentFormGroup\n     * @param {?} ngControl\n     */\n    constructor(_defaultErrorStateMatcher, _parentForm, _parentFormGroup, ngControl) {\n        this._defaultErrorStateMatcher = _defaultErrorStateMatcher;\n        this._parentForm = _parentForm;\n        this._parentFormGroup = _parentFormGroup;\n        this.ngControl = ngControl;\n    }\n}\nif (false) {\n    /** @type {?} */\n    MatChipListBase.prototype._defaultErrorStateMatcher;\n    /** @type {?} */\n    MatChipListBase.prototype._parentForm;\n    /** @type {?} */\n    MatChipListBase.prototype._parentFormGroup;\n    /**\n     * \\@docs-private\n     * @type {?}\n     */\n    MatChipListBase.prototype.ngControl;\n}\n/** @type {?} */\nconst _MatChipListMixinBase = mixinErrorState(MatChipListBase);\n// Increasing integer for generating unique ids for chip-list components.\n/** @type {?} */\nlet nextUniqueId = 0;\n/**\n * Change event object that is emitted when the chip list value has changed.\n */\nclass MatChipListChange {\n    /**\n     * @param {?} source\n     * @param {?} value\n     */\n    constructor(source, value) {\n        this.source = source;\n        this.value = value;\n    }\n}\nif (false) {\n    /**\n     * Chip list that emitted the event.\n     * @type {?}\n     */\n    MatChipListChange.prototype.source;\n    /**\n     * Value of the chip list when the event was emitted.\n     * @type {?}\n     */\n    MatChipListChange.prototype.value;\n}\n/**\n * A material design chips component (named ChipList for its similarity to the List component).\n */\nclass MatChipList extends _MatChipListMixinBase {\n    /**\n     * @param {?} _elementRef\n     * @param {?} _changeDetectorRef\n     * @param {?} _dir\n     * @param {?} _parentForm\n     * @param {?} _parentFormGroup\n     * @param {?} _defaultErrorStateMatcher\n     * @param {?} ngControl\n     */\n    constructor(_elementRef, _changeDetectorRef, _dir, _parentForm, _parentFormGroup, _defaultErrorStateMatcher, ngControl) {\n        super(_defaultErrorStateMatcher, _parentForm, _parentFormGroup, ngControl);\n        this._elementRef = _elementRef;\n        this._changeDetectorRef = _changeDetectorRef;\n        this._dir = _dir;\n        this.ngControl = ngControl;\n        /**\n         * Implemented as part of MatFormFieldControl.\n         * \\@docs-private\n         */\n        this.controlType = 'mat-chip-list';\n        /**\n         * When a chip is destroyed, we store the index of the destroyed chip until the chips\n         * query list notifies about the update. This is necessary because we cannot determine an\n         * appropriate chip that should receive focus until the array of chips updated completely.\n         */\n        this._lastDestroyedChipIndex = null;\n        /**\n         * Subject that emits when the component has been destroyed.\n         */\n        this._destroyed = new Subject();\n        /**\n         * Uid of the chip list\n         */\n        this._uid = `mat-chip-list-${nextUniqueId++}`;\n        /**\n         * Tab index for the chip list.\n         */\n        this._tabIndex = 0;\n        /**\n         * User defined tab index.\n         * When it is not null, use user defined tab index. Otherwise use _tabIndex\n         */\n        this._userTabIndex = null;\n        /**\n         * Function when touched\n         */\n        this._onTouched = (/**\n         * @return {?}\n         */\n        () => { });\n        /**\n         * Function when changed\n         */\n        this._onChange = (/**\n         * @return {?}\n         */\n        () => { });\n        this._multiple = false;\n        this._compareWith = (/**\n         * @param {?} o1\n         * @param {?} o2\n         * @return {?}\n         */\n        (o1, o2) => o1 === o2);\n        this._required = false;\n        this._disabled = false;\n        /**\n         * Orientation of the chip list.\n         */\n        this.ariaOrientation = 'horizontal';\n        this._selectable = true;\n        /**\n         * Event emitted when the selected chip list value has been changed by the user.\n         */\n        this.change = new EventEmitter();\n        /**\n         * Event that emits whenever the raw value of the chip-list changes. This is here primarily\n         * to facilitate the two-way binding for the `value` input.\n         * \\@docs-private\n         */\n        this.valueChange = new EventEmitter();\n        if (this.ngControl) {\n            this.ngControl.valueAccessor = this;\n        }\n    }\n    /**\n     * The array of selected chips inside chip list.\n     * @return {?}\n     */\n    get selected() {\n        return this.multiple ? this._selectionModel.selected : this._selectionModel.selected[0];\n    }\n    /**\n     * The ARIA role applied to the chip list.\n     * @return {?}\n     */\n    get role() { return this.empty ? null : 'listbox'; }\n    /**\n     * Whether the user should be allowed to select multiple chips.\n     * @return {?}\n     */\n    get multiple() { return this._multiple; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set multiple(value) {\n        this._multiple = coerceBooleanProperty(value);\n        this._syncChipsState();\n    }\n    /**\n     * A function to compare the option values with the selected values. The first argument\n     * is a value from an option. The second is a value from the selection. A boolean\n     * should be returned.\n     * @return {?}\n     */\n    get compareWith() { return this._compareWith; }\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    set compareWith(fn) {\n        this._compareWith = fn;\n        if (this._selectionModel) {\n            // A different comparator means the selection could change.\n            this._initializeSelection();\n        }\n    }\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * \\@docs-private\n     * @return {?}\n     */\n    get value() { return this._value; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set value(value) {\n        this.writeValue(value);\n        this._value = value;\n    }\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * \\@docs-private\n     * @return {?}\n     */\n    get id() {\n        return this._chipInput ? this._chipInput.id : this._uid;\n    }\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * \\@docs-private\n     * @return {?}\n     */\n    get required() { return this._required; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set required(value) {\n        this._required = coerceBooleanProperty(value);\n        this.stateChanges.next();\n    }\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * \\@docs-private\n     * @return {?}\n     */\n    get placeholder() {\n        return this._chipInput ? this._chipInput.placeholder : this._placeholder;\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set placeholder(value) {\n        this._placeholder = value;\n        this.stateChanges.next();\n    }\n    /**\n     * Whether any chips or the matChipInput inside of this chip-list has focus.\n     * @return {?}\n     */\n    get focused() {\n        return (this._chipInput && this._chipInput.focused) || this._hasFocusedChip();\n    }\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * \\@docs-private\n     * @return {?}\n     */\n    get empty() {\n        return (!this._chipInput || this._chipInput.empty) && this.chips.length === 0;\n    }\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * \\@docs-private\n     * @return {?}\n     */\n    get shouldLabelFloat() { return !this.empty || this.focused; }\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * \\@docs-private\n     * @return {?}\n     */\n    get disabled() { return this.ngControl ? !!this.ngControl.disabled : this._disabled; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set disabled(value) {\n        this._disabled = coerceBooleanProperty(value);\n        this._syncChipsState();\n    }\n    /**\n     * Whether or not this chip list is selectable. When a chip list is not selectable,\n     * the selected states for all the chips inside the chip list are always ignored.\n     * @return {?}\n     */\n    get selectable() { return this._selectable; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set selectable(value) {\n        this._selectable = coerceBooleanProperty(value);\n        if (this.chips) {\n            this.chips.forEach((/**\n             * @param {?} chip\n             * @return {?}\n             */\n            chip => chip.chipListSelectable = this._selectable));\n        }\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set tabIndex(value) {\n        this._userTabIndex = value;\n        this._tabIndex = value;\n    }\n    /**\n     * Combined stream of all of the child chips' selection change events.\n     * @return {?}\n     */\n    get chipSelectionChanges() {\n        return merge(...this.chips.map((/**\n         * @param {?} chip\n         * @return {?}\n         */\n        chip => chip.selectionChange)));\n    }\n    /**\n     * Combined stream of all of the child chips' focus change events.\n     * @return {?}\n     */\n    get chipFocusChanges() {\n        return merge(...this.chips.map((/**\n         * @param {?} chip\n         * @return {?}\n         */\n        chip => chip._onFocus)));\n    }\n    /**\n     * Combined stream of all of the child chips' blur change events.\n     * @return {?}\n     */\n    get chipBlurChanges() {\n        return merge(...this.chips.map((/**\n         * @param {?} chip\n         * @return {?}\n         */\n        chip => chip._onBlur)));\n    }\n    /**\n     * Combined stream of all of the child chips' remove change events.\n     * @return {?}\n     */\n    get chipRemoveChanges() {\n        return merge(...this.chips.map((/**\n         * @param {?} chip\n         * @return {?}\n         */\n        chip => chip.destroyed)));\n    }\n    /**\n     * @return {?}\n     */\n    ngAfterContentInit() {\n        this._keyManager = new FocusKeyManager(this.chips)\n            .withWrap()\n            .withVerticalOrientation()\n            .withHorizontalOrientation(this._dir ? this._dir.value : 'ltr');\n        if (this._dir) {\n            this._dir.change\n                .pipe(takeUntil(this._destroyed))\n                .subscribe((/**\n             * @param {?} dir\n             * @return {?}\n             */\n            dir => this._keyManager.withHorizontalOrientation(dir)));\n        }\n        this._keyManager.tabOut.pipe(takeUntil(this._destroyed)).subscribe((/**\n         * @return {?}\n         */\n        () => {\n            this._allowFocusEscape();\n        }));\n        // When the list changes, re-subscribe\n        this.chips.changes.pipe(startWith(null), takeUntil(this._destroyed)).subscribe((/**\n         * @return {?}\n         */\n        () => {\n            if (this.disabled) {\n                // Since this happens after the content has been\n                // checked, we need to defer it to the next tick.\n                Promise.resolve().then((/**\n                 * @return {?}\n                 */\n                () => {\n                    this._syncChipsState();\n                }));\n            }\n            this._resetChips();\n            // Reset chips selected/deselected status\n            this._initializeSelection();\n            // Check to see if we need to update our tab index\n            this._updateTabIndex();\n            // Check to see if we have a destroyed chip and need to refocus\n            this._updateFocusForDestroyedChips();\n            this.stateChanges.next();\n        }));\n    }\n    /**\n     * @return {?}\n     */\n    ngOnInit() {\n        this._selectionModel = new SelectionModel(this.multiple, undefined, false);\n        this.stateChanges.next();\n    }\n    /**\n     * @return {?}\n     */\n    ngDoCheck() {\n        if (this.ngControl) {\n            // We need to re-evaluate this on every change detection cycle, because there are some\n            // error triggers that we can't subscribe to (e.g. parent form submissions). This means\n            // that whatever logic is in here has to be super lean or we risk destroying the performance.\n            this.updateErrorState();\n        }\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this._destroyed.next();\n        this._destroyed.complete();\n        this.stateChanges.complete();\n        this._dropSubscriptions();\n    }\n    /**\n     * Associates an HTML input element with this chip list.\n     * @param {?} inputElement\n     * @return {?}\n     */\n    registerInput(inputElement) {\n        this._chipInput = inputElement;\n    }\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * \\@docs-private\n     * @param {?} ids\n     * @return {?}\n     */\n    setDescribedByIds(ids) { this._ariaDescribedby = ids.join(' '); }\n    // Implemented as part of ControlValueAccessor.\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    writeValue(value) {\n        if (this.chips) {\n            this._setSelectionByValue(value, false);\n        }\n    }\n    // Implemented as part of ControlValueAccessor.\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    registerOnChange(fn) {\n        this._onChange = fn;\n    }\n    // Implemented as part of ControlValueAccessor.\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    registerOnTouched(fn) {\n        this._onTouched = fn;\n    }\n    // Implemented as part of ControlValueAccessor.\n    /**\n     * @param {?} isDisabled\n     * @return {?}\n     */\n    setDisabledState(isDisabled) {\n        this.disabled = isDisabled;\n        this.stateChanges.next();\n    }\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * \\@docs-private\n     * @param {?} event\n     * @return {?}\n     */\n    onContainerClick(event) {\n        if (!this._originatesFromChip(event)) {\n            this.focus();\n        }\n    }\n    /**\n     * Focuses the first non-disabled chip in this chip list, or the associated input when there\n     * are no eligible chips.\n     * @param {?=} options\n     * @return {?}\n     */\n    focus(options) {\n        if (this.disabled) {\n            return;\n        }\n        // TODO: ARIA says this should focus the first `selected` chip if any are selected.\n        // Focus on first element if there's no chipInput inside chip-list\n        if (this._chipInput && this._chipInput.focused) {\n            // do nothing\n        }\n        else if (this.chips.length > 0) {\n            this._keyManager.setFirstItemActive();\n            this.stateChanges.next();\n        }\n        else {\n            this._focusInput(options);\n            this.stateChanges.next();\n        }\n    }\n    /**\n     * Attempt to focus an input if we have one.\n     * @param {?=} options\n     * @return {?}\n     */\n    _focusInput(options) {\n        if (this._chipInput) {\n            this._chipInput.focus(options);\n        }\n    }\n    /**\n     * Pass events to the keyboard manager. Available here for tests.\n     * @param {?} event\n     * @return {?}\n     */\n    _keydown(event) {\n        /** @type {?} */\n        const target = (/** @type {?} */ (event.target));\n        // If they are on an empty input and hit backspace, focus the last chip\n        if (event.keyCode === BACKSPACE && this._isInputEmpty(target)) {\n            this._keyManager.setLastItemActive();\n            event.preventDefault();\n        }\n        else if (target && target.classList.contains('mat-chip')) {\n            if (event.keyCode === HOME) {\n                this._keyManager.setFirstItemActive();\n                event.preventDefault();\n            }\n            else if (event.keyCode === END) {\n                this._keyManager.setLastItemActive();\n                event.preventDefault();\n            }\n            else {\n                this._keyManager.onKeydown(event);\n            }\n            this.stateChanges.next();\n        }\n    }\n    /**\n     * Check the tab index as you should not be allowed to focus an empty list.\n     * @protected\n     * @return {?}\n     */\n    _updateTabIndex() {\n        // If we have 0 chips, we should not allow keyboard focus\n        this._tabIndex = this._userTabIndex || (this.chips.length === 0 ? -1 : 0);\n    }\n    /**\n     * If the amount of chips changed, we need to update the\n     * key manager state and focus the next closest chip.\n     * @protected\n     * @return {?}\n     */\n    _updateFocusForDestroyedChips() {\n        // Move focus to the closest chip. If no other chips remain, focus the chip-list itself.\n        if (this._lastDestroyedChipIndex != null) {\n            if (this.chips.length) {\n                /** @type {?} */\n                const newChipIndex = Math.min(this._lastDestroyedChipIndex, this.chips.length - 1);\n                this._keyManager.setActiveItem(newChipIndex);\n            }\n            else {\n                this.focus();\n            }\n        }\n        this._lastDestroyedChipIndex = null;\n    }\n    /**\n     * Utility to ensure all indexes are valid.\n     *\n     * @private\n     * @param {?} index The index to be checked.\n     * @return {?} True if the index is valid for our list of chips.\n     */\n    _isValidIndex(index) {\n        return index >= 0 && index < this.chips.length;\n    }\n    /**\n     * @private\n     * @param {?} element\n     * @return {?}\n     */\n    _isInputEmpty(element) {\n        if (element && element.nodeName.toLowerCase() === 'input') {\n            /** @type {?} */\n            let input = (/** @type {?} */ (element));\n            return !input.value;\n        }\n        return false;\n    }\n    /**\n     * @param {?} value\n     * @param {?=} isUserInput\n     * @return {?}\n     */\n    _setSelectionByValue(value, isUserInput = true) {\n        this._clearSelection();\n        this.chips.forEach((/**\n         * @param {?} chip\n         * @return {?}\n         */\n        chip => chip.deselect()));\n        if (Array.isArray(value)) {\n            value.forEach((/**\n             * @param {?} currentValue\n             * @return {?}\n             */\n            currentValue => this._selectValue(currentValue, isUserInput)));\n            this._sortValues();\n        }\n        else {\n            /** @type {?} */\n            const correspondingChip = this._selectValue(value, isUserInput);\n            // Shift focus to the active item. Note that we shouldn't do this in multiple\n            // mode, because we don't know what chip the user interacted with last.\n            if (correspondingChip) {\n                if (isUserInput) {\n                    this._keyManager.setActiveItem(correspondingChip);\n                }\n            }\n        }\n    }\n    /**\n     * Finds and selects the chip based on its value.\n     * @private\n     * @param {?} value\n     * @param {?=} isUserInput\n     * @return {?} Chip that has the corresponding value.\n     */\n    _selectValue(value, isUserInput = true) {\n        /** @type {?} */\n        const correspondingChip = this.chips.find((/**\n         * @param {?} chip\n         * @return {?}\n         */\n        chip => {\n            return chip.value != null && this._compareWith(chip.value, value);\n        }));\n        if (correspondingChip) {\n            isUserInput ? correspondingChip.selectViaInteraction() : correspondingChip.select();\n            this._selectionModel.select(correspondingChip);\n        }\n        return correspondingChip;\n    }\n    /**\n     * @private\n     * @return {?}\n     */\n    _initializeSelection() {\n        // Defer setting the value in order to avoid the \"Expression\n        // has changed after it was checked\" errors from Angular.\n        Promise.resolve().then((/**\n         * @return {?}\n         */\n        () => {\n            if (this.ngControl || this._value) {\n                this._setSelectionByValue(this.ngControl ? this.ngControl.value : this._value, false);\n                this.stateChanges.next();\n            }\n        }));\n    }\n    /**\n     * Deselects every chip in the list.\n     * @private\n     * @param {?=} skip Chip that should not be deselected.\n     * @return {?}\n     */\n    _clearSelection(skip) {\n        this._selectionModel.clear();\n        this.chips.forEach((/**\n         * @param {?} chip\n         * @return {?}\n         */\n        chip => {\n            if (chip !== skip) {\n                chip.deselect();\n            }\n        }));\n        this.stateChanges.next();\n    }\n    /**\n     * Sorts the model values, ensuring that they keep the same\n     * order that they have in the panel.\n     * @private\n     * @return {?}\n     */\n    _sortValues() {\n        if (this._multiple) {\n            this._selectionModel.clear();\n            this.chips.forEach((/**\n             * @param {?} chip\n             * @return {?}\n             */\n            chip => {\n                if (chip.selected) {\n                    this._selectionModel.select(chip);\n                }\n            }));\n            this.stateChanges.next();\n        }\n    }\n    /**\n     * Emits change event to set the model value.\n     * @private\n     * @param {?=} fallbackValue\n     * @return {?}\n     */\n    _propagateChanges(fallbackValue) {\n        /** @type {?} */\n        let valueToEmit = null;\n        if (Array.isArray(this.selected)) {\n            valueToEmit = this.selected.map((/**\n             * @param {?} chip\n             * @return {?}\n             */\n            chip => chip.value));\n        }\n        else {\n            valueToEmit = this.selected ? this.selected.value : fallbackValue;\n        }\n        this._value = valueToEmit;\n        this.change.emit(new MatChipListChange(this, valueToEmit));\n        this.valueChange.emit(valueToEmit);\n        this._onChange(valueToEmit);\n        this._changeDetectorRef.markForCheck();\n    }\n    /**\n     * When blurred, mark the field as touched when focus moved outside the chip list.\n     * @return {?}\n     */\n    _blur() {\n        if (!this._hasFocusedChip()) {\n            this._keyManager.setActiveItem(-1);\n        }\n        if (!this.disabled) {\n            if (this._chipInput) {\n                // If there's a chip input, we should check whether the focus moved to chip input.\n                // If the focus is not moved to chip input, mark the field as touched. If the focus moved\n                // to chip input, do nothing.\n                // Timeout is needed to wait for the focus() event trigger on chip input.\n                setTimeout((/**\n                 * @return {?}\n                 */\n                () => {\n                    if (!this.focused) {\n                        this._markAsTouched();\n                    }\n                }));\n            }\n            else {\n                // If there's no chip input, then mark the field as touched.\n                this._markAsTouched();\n            }\n        }\n    }\n    /**\n     * Mark the field as touched\n     * @return {?}\n     */\n    _markAsTouched() {\n        this._onTouched();\n        this._changeDetectorRef.markForCheck();\n        this.stateChanges.next();\n    }\n    /**\n     * Removes the `tabindex` from the chip list and resets it back afterwards, allowing the\n     * user to tab out of it. This prevents the list from capturing focus and redirecting\n     * it back to the first chip, creating a focus trap, if it user tries to tab away.\n     * @return {?}\n     */\n    _allowFocusEscape() {\n        if (this._tabIndex !== -1) {\n            this._tabIndex = -1;\n            setTimeout((/**\n             * @return {?}\n             */\n            () => {\n                this._tabIndex = this._userTabIndex || 0;\n                this._changeDetectorRef.markForCheck();\n            }));\n        }\n    }\n    /**\n     * @private\n     * @return {?}\n     */\n    _resetChips() {\n        this._dropSubscriptions();\n        this._listenToChipsFocus();\n        this._listenToChipsSelection();\n        this._listenToChipsRemoved();\n    }\n    /**\n     * @private\n     * @return {?}\n     */\n    _dropSubscriptions() {\n        if (this._chipFocusSubscription) {\n            this._chipFocusSubscription.unsubscribe();\n            this._chipFocusSubscription = null;\n        }\n        if (this._chipBlurSubscription) {\n            this._chipBlurSubscription.unsubscribe();\n            this._chipBlurSubscription = null;\n        }\n        if (this._chipSelectionSubscription) {\n            this._chipSelectionSubscription.unsubscribe();\n            this._chipSelectionSubscription = null;\n        }\n        if (this._chipRemoveSubscription) {\n            this._chipRemoveSubscription.unsubscribe();\n            this._chipRemoveSubscription = null;\n        }\n    }\n    /**\n     * Listens to user-generated selection events on each chip.\n     * @private\n     * @return {?}\n     */\n    _listenToChipsSelection() {\n        this._chipSelectionSubscription = this.chipSelectionChanges.subscribe((/**\n         * @param {?} event\n         * @return {?}\n         */\n        event => {\n            event.source.selected\n                ? this._selectionModel.select(event.source)\n                : this._selectionModel.deselect(event.source);\n            // For single selection chip list, make sure the deselected value is unselected.\n            if (!this.multiple) {\n                this.chips.forEach((/**\n                 * @param {?} chip\n                 * @return {?}\n                 */\n                chip => {\n                    if (!this._selectionModel.isSelected(chip) && chip.selected) {\n                        chip.deselect();\n                    }\n                }));\n            }\n            if (event.isUserInput) {\n                this._propagateChanges();\n            }\n        }));\n    }\n    /**\n     * Listens to user-generated selection events on each chip.\n     * @private\n     * @return {?}\n     */\n    _listenToChipsFocus() {\n        this._chipFocusSubscription = this.chipFocusChanges.subscribe((/**\n         * @param {?} event\n         * @return {?}\n         */\n        event => {\n            /** @type {?} */\n            let chipIndex = this.chips.toArray().indexOf(event.chip);\n            if (this._isValidIndex(chipIndex)) {\n                this._keyManager.updateActiveItem(chipIndex);\n            }\n            this.stateChanges.next();\n        }));\n        this._chipBlurSubscription = this.chipBlurChanges.subscribe((/**\n         * @return {?}\n         */\n        () => {\n            this._blur();\n            this.stateChanges.next();\n        }));\n    }\n    /**\n     * @private\n     * @return {?}\n     */\n    _listenToChipsRemoved() {\n        this._chipRemoveSubscription = this.chipRemoveChanges.subscribe((/**\n         * @param {?} event\n         * @return {?}\n         */\n        event => {\n            /** @type {?} */\n            const chip = event.chip;\n            /** @type {?} */\n            const chipIndex = this.chips.toArray().indexOf(event.chip);\n            // In case the chip that will be removed is currently focused, we temporarily store\n            // the index in order to be able to determine an appropriate sibling chip that will\n            // receive focus.\n            if (this._isValidIndex(chipIndex) && chip._hasFocus) {\n                this._lastDestroyedChipIndex = chipIndex;\n            }\n        }));\n    }\n    /**\n     * Checks whether an event comes from inside a chip element.\n     * @private\n     * @param {?} event\n     * @return {?}\n     */\n    _originatesFromChip(event) {\n        /** @type {?} */\n        let currentElement = (/** @type {?} */ (event.target));\n        while (currentElement && currentElement !== this._elementRef.nativeElement) {\n            if (currentElement.classList.contains('mat-chip')) {\n                return true;\n            }\n            currentElement = currentElement.parentElement;\n        }\n        return false;\n    }\n    /**\n     * Checks whether any of the chips is focused.\n     * @private\n     * @return {?}\n     */\n    _hasFocusedChip() {\n        return this.chips.some((/**\n         * @param {?} chip\n         * @return {?}\n         */\n        chip => chip._hasFocus));\n    }\n    /**\n     * Syncs the list's state with the individual chips.\n     * @private\n     * @return {?}\n     */\n    _syncChipsState() {\n        if (this.chips) {\n            this.chips.forEach((/**\n             * @param {?} chip\n             * @return {?}\n             */\n            chip => {\n                chip.disabled = this._disabled;\n                chip._chipListMultiple = this.multiple;\n            }));\n        }\n    }\n}\nMatChipList.decorators = [\n    { type: Component, args: [{\n                selector: 'mat-chip-list',\n                template: `<div class=\"mat-chip-list-wrapper\"><ng-content></ng-content></div>`,\n                exportAs: 'matChipList',\n                host: {\n                    '[attr.tabindex]': 'disabled ? null : _tabIndex',\n                    '[attr.aria-describedby]': '_ariaDescribedby || null',\n                    '[attr.aria-required]': 'role ? required : null',\n                    '[attr.aria-disabled]': 'disabled.toString()',\n                    '[attr.aria-invalid]': 'errorState',\n                    '[attr.aria-multiselectable]': 'multiple',\n                    '[attr.role]': 'role',\n                    '[class.mat-chip-list-disabled]': 'disabled',\n                    '[class.mat-chip-list-invalid]': 'errorState',\n                    '[class.mat-chip-list-required]': 'required',\n                    '[attr.aria-orientation]': 'ariaOrientation',\n                    'class': 'mat-chip-list',\n                    '(focus)': 'focus()',\n                    '(blur)': '_blur()',\n                    '(keydown)': '_keydown($event)',\n                    '[id]': '_uid',\n                },\n                providers: [{ provide: MatFormFieldControl, useExisting: MatChipList }],\n                encapsulation: ViewEncapsulation.None,\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                styles: [\".mat-chip{position:relative;box-sizing:border-box;-webkit-tap-highlight-color:transparent;transform:translateZ(0);border:none;-webkit-appearance:none;-moz-appearance:none}.mat-standard-chip{transition:box-shadow 280ms cubic-bezier(0.4, 0, 0.2, 1);display:inline-flex;padding:7px 12px;border-radius:16px;align-items:center;cursor:default;min-height:32px;height:1px}._mat-animation-noopable.mat-standard-chip{transition:none;animation:none}.mat-standard-chip .mat-chip-remove.mat-icon{width:18px;height:18px}.mat-standard-chip::after{top:0;left:0;right:0;bottom:0;position:absolute;border-radius:inherit;opacity:0;content:\\\"\\\";pointer-events:none;transition:opacity 200ms cubic-bezier(0.35, 0, 0.25, 1)}.mat-standard-chip:hover::after{opacity:.12}.mat-standard-chip:focus{outline:none}.mat-standard-chip:focus::after{opacity:.16}.cdk-high-contrast-active .mat-standard-chip{outline:solid 1px}.cdk-high-contrast-active .mat-standard-chip:focus{outline:dotted 2px}.mat-standard-chip.mat-chip-disabled::after{opacity:0}.mat-standard-chip.mat-chip-disabled .mat-chip-remove,.mat-standard-chip.mat-chip-disabled .mat-chip-trailing-icon{cursor:default}.mat-standard-chip.mat-chip-with-trailing-icon.mat-chip-with-avatar,.mat-standard-chip.mat-chip-with-avatar{padding-top:0;padding-bottom:0}.mat-standard-chip.mat-chip-with-trailing-icon.mat-chip-with-avatar{padding-right:8px;padding-left:0}[dir=rtl] .mat-standard-chip.mat-chip-with-trailing-icon.mat-chip-with-avatar{padding-left:8px;padding-right:0}.mat-standard-chip.mat-chip-with-trailing-icon{padding-top:7px;padding-bottom:7px;padding-right:8px;padding-left:12px}[dir=rtl] .mat-standard-chip.mat-chip-with-trailing-icon{padding-left:8px;padding-right:12px}.mat-standard-chip.mat-chip-with-avatar{padding-left:0;padding-right:12px}[dir=rtl] .mat-standard-chip.mat-chip-with-avatar{padding-right:0;padding-left:12px}.mat-standard-chip .mat-chip-avatar{width:24px;height:24px;margin-right:8px;margin-left:4px}[dir=rtl] .mat-standard-chip .mat-chip-avatar{margin-left:8px;margin-right:4px}.mat-standard-chip .mat-chip-remove,.mat-standard-chip .mat-chip-trailing-icon{width:18px;height:18px;cursor:pointer}.mat-standard-chip .mat-chip-remove,.mat-standard-chip .mat-chip-trailing-icon{margin-left:8px;margin-right:0}[dir=rtl] .mat-standard-chip .mat-chip-remove,[dir=rtl] .mat-standard-chip .mat-chip-trailing-icon{margin-right:8px;margin-left:0}.mat-chip-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none;border-radius:inherit;overflow:hidden}.mat-chip-list-wrapper{display:flex;flex-direction:row;flex-wrap:wrap;align-items:center;margin:-4px}.mat-chip-list-wrapper input.mat-input-element,.mat-chip-list-wrapper .mat-standard-chip{margin:4px}.mat-chip-list-stacked .mat-chip-list-wrapper{flex-direction:column;align-items:flex-start}.mat-chip-list-stacked .mat-chip-list-wrapper .mat-standard-chip{width:100%}.mat-chip-avatar{border-radius:50%;justify-content:center;align-items:center;display:flex;overflow:hidden;object-fit:cover}input.mat-chip-input{width:150px;margin:4px;flex:1 0 150px}\\n\"]\n            }] }\n];\n/** @nocollapse */\nMatChipList.ctorParameters = () => [\n    { type: ElementRef },\n    { type: ChangeDetectorRef },\n    { type: Directionality, decorators: [{ type: Optional }] },\n    { type: NgForm, decorators: [{ type: Optional }] },\n    { type: FormGroupDirective, decorators: [{ type: Optional }] },\n    { type: ErrorStateMatcher },\n    { type: NgControl, decorators: [{ type: Optional }, { type: Self }] }\n];\nMatChipList.propDecorators = {\n    errorStateMatcher: [{ type: Input }],\n    multiple: [{ type: Input }],\n    compareWith: [{ type: Input }],\n    value: [{ type: Input }],\n    required: [{ type: Input }],\n    placeholder: [{ type: Input }],\n    disabled: [{ type: Input }],\n    ariaOrientation: [{ type: Input, args: ['aria-orientation',] }],\n    selectable: [{ type: Input }],\n    tabIndex: [{ type: Input }],\n    change: [{ type: Output }],\n    valueChange: [{ type: Output }],\n    chips: [{ type: ContentChildren, args: [MatChip, {\n                    // We need to use `descendants: true`, because Ivy will no longer match\n                    // indirect descendants if it's left as false.\n                    descendants: true\n                },] }]\n};\nif (false) {\n    /** @type {?} */\n    MatChipList.ngAcceptInputType_multiple;\n    /** @type {?} */\n    MatChipList.ngAcceptInputType_required;\n    /** @type {?} */\n    MatChipList.ngAcceptInputType_disabled;\n    /** @type {?} */\n    MatChipList.ngAcceptInputType_selectable;\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * \\@docs-private\n     * @type {?}\n     */\n    MatChipList.prototype.controlType;\n    /**\n     * When a chip is destroyed, we store the index of the destroyed chip until the chips\n     * query list notifies about the update. This is necessary because we cannot determine an\n     * appropriate chip that should receive focus until the array of chips updated completely.\n     * @type {?}\n     * @private\n     */\n    MatChipList.prototype._lastDestroyedChipIndex;\n    /**\n     * Subject that emits when the component has been destroyed.\n     * @type {?}\n     * @private\n     */\n    MatChipList.prototype._destroyed;\n    /**\n     * Subscription to focus changes in the chips.\n     * @type {?}\n     * @private\n     */\n    MatChipList.prototype._chipFocusSubscription;\n    /**\n     * Subscription to blur changes in the chips.\n     * @type {?}\n     * @private\n     */\n    MatChipList.prototype._chipBlurSubscription;\n    /**\n     * Subscription to selection changes in chips.\n     * @type {?}\n     * @private\n     */\n    MatChipList.prototype._chipSelectionSubscription;\n    /**\n     * Subscription to remove changes in chips.\n     * @type {?}\n     * @private\n     */\n    MatChipList.prototype._chipRemoveSubscription;\n    /**\n     * The chip input to add more chips\n     * @type {?}\n     * @protected\n     */\n    MatChipList.prototype._chipInput;\n    /**\n     * Uid of the chip list\n     * @type {?}\n     */\n    MatChipList.prototype._uid;\n    /**\n     * The aria-describedby attribute on the chip list for improved a11y.\n     * @type {?}\n     */\n    MatChipList.prototype._ariaDescribedby;\n    /**\n     * Tab index for the chip list.\n     * @type {?}\n     */\n    MatChipList.prototype._tabIndex;\n    /**\n     * User defined tab index.\n     * When it is not null, use user defined tab index. Otherwise use _tabIndex\n     * @type {?}\n     */\n    MatChipList.prototype._userTabIndex;\n    /**\n     * The FocusKeyManager which handles focus.\n     * @type {?}\n     */\n    MatChipList.prototype._keyManager;\n    /**\n     * Function when touched\n     * @type {?}\n     */\n    MatChipList.prototype._onTouched;\n    /**\n     * Function when changed\n     * @type {?}\n     */\n    MatChipList.prototype._onChange;\n    /** @type {?} */\n    MatChipList.prototype._selectionModel;\n    /**\n     * An object used to control when error messages are shown.\n     * @type {?}\n     */\n    MatChipList.prototype.errorStateMatcher;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatChipList.prototype._multiple;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatChipList.prototype._compareWith;\n    /**\n     * @type {?}\n     * @protected\n     */\n    MatChipList.prototype._value;\n    /**\n     * @type {?}\n     * @protected\n     */\n    MatChipList.prototype._required;\n    /**\n     * @type {?}\n     * @protected\n     */\n    MatChipList.prototype._placeholder;\n    /**\n     * @type {?}\n     * @protected\n     */\n    MatChipList.prototype._disabled;\n    /**\n     * Orientation of the chip list.\n     * @type {?}\n     */\n    MatChipList.prototype.ariaOrientation;\n    /**\n     * @type {?}\n     * @protected\n     */\n    MatChipList.prototype._selectable;\n    /**\n     * Event emitted when the selected chip list value has been changed by the user.\n     * @type {?}\n     */\n    MatChipList.prototype.change;\n    /**\n     * Event that emits whenever the raw value of the chip-list changes. This is here primarily\n     * to facilitate the two-way binding for the `value` input.\n     * \\@docs-private\n     * @type {?}\n     */\n    MatChipList.prototype.valueChange;\n    /**\n     * The chip components contained within this chip list.\n     * @type {?}\n     */\n    MatChipList.prototype.chips;\n    /**\n     * @type {?}\n     * @protected\n     */\n    MatChipList.prototype._elementRef;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatChipList.prototype._changeDetectorRef;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatChipList.prototype._dir;\n    /**\n     * \\@docs-private\n     * @type {?}\n     */\n    MatChipList.prototype.ngControl;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/chips/chip-input.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Represents an input event on a `matChipInput`.\n * @record\n */\nfunction MatChipInputEvent() { }\nif (false) {\n    /**\n     * The native `<input>` element that the event is being fired for.\n     * @type {?}\n     */\n    MatChipInputEvent.prototype.input;\n    /**\n     * The value of the input.\n     * @type {?}\n     */\n    MatChipInputEvent.prototype.value;\n}\n// Increasing integer for generating unique ids.\n/** @type {?} */\nlet nextUniqueId$1 = 0;\n/**\n * Directive that adds chip-specific behaviors to an input element inside `<mat-form-field>`.\n * May be placed inside or outside of an `<mat-chip-list>`.\n */\nclass MatChipInput {\n    /**\n     * @param {?} _elementRef\n     * @param {?} _defaultOptions\n     */\n    constructor(_elementRef, _defaultOptions) {\n        this._elementRef = _elementRef;\n        this._defaultOptions = _defaultOptions;\n        /**\n         * Whether the control is focused.\n         */\n        this.focused = false;\n        this._addOnBlur = false;\n        /**\n         * The list of key codes that will trigger a chipEnd event.\n         *\n         * Defaults to `[ENTER]`.\n         */\n        this.separatorKeyCodes = this._defaultOptions.separatorKeyCodes;\n        /**\n         * Emitted when a chip is to be added.\n         */\n        this.chipEnd = new EventEmitter();\n        /**\n         * The input's placeholder text.\n         */\n        this.placeholder = '';\n        /**\n         * Unique id for the input.\n         */\n        this.id = `mat-chip-list-input-${nextUniqueId$1++}`;\n        this._disabled = false;\n        this._inputElement = (/** @type {?} */ (this._elementRef.nativeElement));\n    }\n    /**\n     * Register input for chip list\n     * @param {?} value\n     * @return {?}\n     */\n    set chipList(value) {\n        if (value) {\n            this._chipList = value;\n            this._chipList.registerInput(this);\n        }\n    }\n    /**\n     * Whether or not the chipEnd event will be emitted when the input is blurred.\n     * @return {?}\n     */\n    get addOnBlur() { return this._addOnBlur; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set addOnBlur(value) { this._addOnBlur = coerceBooleanProperty(value); }\n    /**\n     * Whether the input is disabled.\n     * @return {?}\n     */\n    get disabled() { return this._disabled || (this._chipList && this._chipList.disabled); }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set disabled(value) { this._disabled = coerceBooleanProperty(value); }\n    /**\n     * Whether the input is empty.\n     * @return {?}\n     */\n    get empty() { return !this._inputElement.value; }\n    /**\n     * @return {?}\n     */\n    ngOnChanges() {\n        this._chipList.stateChanges.next();\n    }\n    /**\n     * Utility method to make host definition/tests more clear.\n     * @param {?=} event\n     * @return {?}\n     */\n    _keydown(event) {\n        // Allow the user's focus to escape when they're tabbing forward. Note that we don't\n        // want to do this when going backwards, because focus should go back to the first chip.\n        if (event && event.keyCode === TAB && !hasModifierKey(event, 'shiftKey')) {\n            this._chipList._allowFocusEscape();\n        }\n        this._emitChipEnd(event);\n    }\n    /**\n     * Checks to see if the blur should emit the (chipEnd) event.\n     * @return {?}\n     */\n    _blur() {\n        if (this.addOnBlur) {\n            this._emitChipEnd();\n        }\n        this.focused = false;\n        // Blur the chip list if it is not focused\n        if (!this._chipList.focused) {\n            this._chipList._blur();\n        }\n        this._chipList.stateChanges.next();\n    }\n    /**\n     * @return {?}\n     */\n    _focus() {\n        this.focused = true;\n        this._chipList.stateChanges.next();\n    }\n    /**\n     * Checks to see if the (chipEnd) event needs to be emitted.\n     * @param {?=} event\n     * @return {?}\n     */\n    _emitChipEnd(event) {\n        if (!this._inputElement.value && !!event) {\n            this._chipList._keydown(event);\n        }\n        if (!event || this._isSeparatorKey(event)) {\n            this.chipEnd.emit({ input: this._inputElement, value: this._inputElement.value });\n            if (event) {\n                event.preventDefault();\n            }\n        }\n    }\n    /**\n     * @return {?}\n     */\n    _onInput() {\n        // Let chip list know whenever the value changes.\n        this._chipList.stateChanges.next();\n    }\n    /**\n     * Focuses the input.\n     * @param {?=} options\n     * @return {?}\n     */\n    focus(options) {\n        this._inputElement.focus(options);\n    }\n    /**\n     * Checks whether a keycode is one of the configured separators.\n     * @private\n     * @param {?} event\n     * @return {?}\n     */\n    _isSeparatorKey(event) {\n        if (hasModifierKey(event)) {\n            return false;\n        }\n        /** @type {?} */\n        const separators = this.separatorKeyCodes;\n        /** @type {?} */\n        const keyCode = event.keyCode;\n        return Array.isArray(separators) ? separators.indexOf(keyCode) > -1 : separators.has(keyCode);\n    }\n}\nMatChipInput.decorators = [\n    { type: Directive, args: [{\n                selector: 'input[matChipInputFor]',\n                exportAs: 'matChipInput, matChipInputFor',\n                host: {\n                    'class': 'mat-chip-input mat-input-element',\n                    '(keydown)': '_keydown($event)',\n                    '(blur)': '_blur()',\n                    '(focus)': '_focus()',\n                    '(input)': '_onInput()',\n                    '[id]': 'id',\n                    '[attr.disabled]': 'disabled || null',\n                    '[attr.placeholder]': 'placeholder || null',\n                    '[attr.aria-invalid]': '_chipList && _chipList.ngControl ? _chipList.ngControl.invalid : null',\n                    '[attr.aria-required]': '_chipList && _chipList.required || null',\n                }\n            },] }\n];\n/** @nocollapse */\nMatChipInput.ctorParameters = () => [\n    { type: ElementRef },\n    { type: undefined, decorators: [{ type: Inject, args: [MAT_CHIPS_DEFAULT_OPTIONS,] }] }\n];\nMatChipInput.propDecorators = {\n    chipList: [{ type: Input, args: ['matChipInputFor',] }],\n    addOnBlur: [{ type: Input, args: ['matChipInputAddOnBlur',] }],\n    separatorKeyCodes: [{ type: Input, args: ['matChipInputSeparatorKeyCodes',] }],\n    chipEnd: [{ type: Output, args: ['matChipInputTokenEnd',] }],\n    placeholder: [{ type: Input }],\n    id: [{ type: Input }],\n    disabled: [{ type: Input }]\n};\nif (false) {\n    /** @type {?} */\n    MatChipInput.ngAcceptInputType_addOnBlur;\n    /** @type {?} */\n    MatChipInput.ngAcceptInputType_disabled;\n    /**\n     * Whether the control is focused.\n     * @type {?}\n     */\n    MatChipInput.prototype.focused;\n    /** @type {?} */\n    MatChipInput.prototype._chipList;\n    /** @type {?} */\n    MatChipInput.prototype._addOnBlur;\n    /**\n     * The list of key codes that will trigger a chipEnd event.\n     *\n     * Defaults to `[ENTER]`.\n     * @type {?}\n     */\n    MatChipInput.prototype.separatorKeyCodes;\n    /**\n     * Emitted when a chip is to be added.\n     * @type {?}\n     */\n    MatChipInput.prototype.chipEnd;\n    /**\n     * The input's placeholder text.\n     * @type {?}\n     */\n    MatChipInput.prototype.placeholder;\n    /**\n     * Unique id for the input.\n     * @type {?}\n     */\n    MatChipInput.prototype.id;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatChipInput.prototype._disabled;\n    /**\n     * The native input element to which this directive is attached.\n     * @type {?}\n     * @protected\n     */\n    MatChipInput.prototype._inputElement;\n    /**\n     * @type {?}\n     * @protected\n     */\n    MatChipInput.prototype._elementRef;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatChipInput.prototype._defaultOptions;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/chips/chips-module.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/** @type {?} */\nconst CHIP_DECLARATIONS = [\n    MatChipList,\n    MatChip,\n    MatChipInput,\n    MatChipRemove,\n    MatChipAvatar,\n    MatChipTrailingIcon,\n];\nconst ɵ0 = ({\n    separatorKeyCodes: [ENTER]\n});\nclass MatChipsModule {\n}\nMatChipsModule.decorators = [\n    { type: NgModule, args: [{\n                exports: CHIP_DECLARATIONS,\n                declarations: CHIP_DECLARATIONS,\n                providers: [\n                    ErrorStateMatcher,\n                    {\n                        provide: MAT_CHIPS_DEFAULT_OPTIONS,\n                        useValue: (/** @type {?} */ (ɵ0))\n                    }\n                ]\n            },] }\n];\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/chips/public-api.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MAT_CHIPS_DEFAULT_OPTIONS, MatChip, MatChipAvatar, MatChipInput, MatChipList, MatChipListChange, MatChipRemove, MatChipSelectionChange, MatChipTrailingIcon, MatChipsModule };\n//# sourceMappingURL=chips.js.map\n","import { Component, ViewEncapsulation, ChangeDetectionStrategy, Input, NgModule } from '@angular/core';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { MatCommonModule } from '@angular/material/core';\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/divider/divider.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass MatDivider {\n    constructor() {\n        this._vertical = false;\n        this._inset = false;\n    }\n    /**\n     * Whether the divider is vertically aligned.\n     * @return {?}\n     */\n    get vertical() { return this._vertical; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set vertical(value) { this._vertical = coerceBooleanProperty(value); }\n    /**\n     * Whether the divider is an inset divider.\n     * @return {?}\n     */\n    get inset() { return this._inset; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set inset(value) { this._inset = coerceBooleanProperty(value); }\n}\nMatDivider.decorators = [\n    { type: Component, args: [{\n                selector: 'mat-divider',\n                host: {\n                    'role': 'separator',\n                    '[attr.aria-orientation]': 'vertical ? \"vertical\" : \"horizontal\"',\n                    '[class.mat-divider-vertical]': 'vertical',\n                    '[class.mat-divider-horizontal]': '!vertical',\n                    '[class.mat-divider-inset]': 'inset',\n                    'class': 'mat-divider'\n                },\n                template: '',\n                encapsulation: ViewEncapsulation.None,\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                styles: [\".mat-divider{display:block;margin:0;border-top-width:1px;border-top-style:solid}.mat-divider.mat-divider-vertical{border-top:0;border-right-width:1px;border-right-style:solid}.mat-divider.mat-divider-inset{margin-left:80px}[dir=rtl] .mat-divider.mat-divider-inset{margin-left:auto;margin-right:80px}\\n\"]\n            }] }\n];\nMatDivider.propDecorators = {\n    vertical: [{ type: Input }],\n    inset: [{ type: Input }]\n};\nif (false) {\n    /** @type {?} */\n    MatDivider.ngAcceptInputType_vertical;\n    /** @type {?} */\n    MatDivider.ngAcceptInputType_inset;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatDivider.prototype._vertical;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatDivider.prototype._inset;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/divider/divider-module.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass MatDividerModule {\n}\nMatDividerModule.decorators = [\n    { type: NgModule, args: [{\n                imports: [MatCommonModule],\n                exports: [MatDivider, MatCommonModule],\n                declarations: [MatDivider],\n            },] }\n];\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/divider/public-api.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MatDivider, MatDividerModule };\n//# sourceMappingURL=divider.js.map\n","import { InjectionToken, Component, ViewEncapsulation, ChangeDetectionStrategy, ElementRef, Optional, Inject, Input, ContentChildren, Directive, NgModule } from '@angular/core';\nimport { setLines, MatLine, MatLineModule, MatCommonModule } from '@angular/material/core';\nimport { coerceNumberProperty } from '@angular/cdk/coercion';\nimport { Directionality } from '@angular/cdk/bidi';\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/grid-list/grid-list-base.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Injection token used to provide a grid list to a tile and to avoid circular imports.\n * \\@docs-private\n * @type {?}\n */\nconst MAT_GRID_LIST = new InjectionToken('MAT_GRID_LIST');\n/**\n * Base interface for a `MatGridList`.\n * \\@docs-private\n * @record\n */\nfunction MatGridListBase() { }\nif (false) {\n    /** @type {?} */\n    MatGridListBase.prototype.cols;\n    /** @type {?} */\n    MatGridListBase.prototype.gutterSize;\n    /** @type {?} */\n    MatGridListBase.prototype.rowHeight;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/grid-list/grid-tile.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass MatGridTile {\n    /**\n     * @param {?} _element\n     * @param {?=} _gridList\n     */\n    constructor(_element, _gridList) {\n        this._element = _element;\n        this._gridList = _gridList;\n        this._rowspan = 1;\n        this._colspan = 1;\n    }\n    /**\n     * Amount of rows that the grid tile takes up.\n     * @return {?}\n     */\n    get rowspan() { return this._rowspan; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set rowspan(value) { this._rowspan = Math.round(coerceNumberProperty(value)); }\n    /**\n     * Amount of columns that the grid tile takes up.\n     * @return {?}\n     */\n    get colspan() { return this._colspan; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set colspan(value) { this._colspan = Math.round(coerceNumberProperty(value)); }\n    /**\n     * Sets the style of the grid-tile element.  Needs to be set manually to avoid\n     * \"Changed after checked\" errors that would occur with HostBinding.\n     * @param {?} property\n     * @param {?} value\n     * @return {?}\n     */\n    _setStyle(property, value) {\n        ((/** @type {?} */ (this._element.nativeElement.style)))[property] = value;\n    }\n}\nMatGridTile.decorators = [\n    { type: Component, args: [{\n                selector: 'mat-grid-tile',\n                exportAs: 'matGridTile',\n                host: {\n                    'class': 'mat-grid-tile',\n                    // Ensures that the \"rowspan\" and \"colspan\" input value is reflected in\n                    // the DOM. This is needed for the grid-tile harness.\n                    '[attr.rowspan]': 'rowspan',\n                    '[attr.colspan]': 'colspan'\n                },\n                template: \"<!-- TODO(kara): Revisit why this is a figure.-->\\n<figure class=\\\"mat-figure\\\">\\n  <ng-content></ng-content>\\n</figure>\",\n                encapsulation: ViewEncapsulation.None,\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                styles: [\".mat-grid-list{display:block;position:relative}.mat-grid-tile{display:block;position:absolute;overflow:hidden}.mat-grid-tile .mat-figure{top:0;left:0;right:0;bottom:0;position:absolute;display:flex;align-items:center;justify-content:center;height:100%;padding:0;margin:0}.mat-grid-tile .mat-grid-tile-header,.mat-grid-tile .mat-grid-tile-footer{display:flex;align-items:center;height:48px;color:#fff;background:rgba(0,0,0,.38);overflow:hidden;padding:0 16px;position:absolute;left:0;right:0}.mat-grid-tile .mat-grid-tile-header>*,.mat-grid-tile .mat-grid-tile-footer>*{margin:0;padding:0;font-weight:normal;font-size:inherit}.mat-grid-tile .mat-grid-tile-header.mat-2-line,.mat-grid-tile .mat-grid-tile-footer.mat-2-line{height:68px}.mat-grid-tile .mat-grid-list-text{display:flex;flex-direction:column;width:100%;box-sizing:border-box;overflow:hidden}.mat-grid-tile .mat-grid-list-text>*{margin:0;padding:0;font-weight:normal;font-size:inherit}.mat-grid-tile .mat-grid-list-text:empty{display:none}.mat-grid-tile .mat-grid-tile-header{top:0}.mat-grid-tile .mat-grid-tile-footer{bottom:0}.mat-grid-tile .mat-grid-avatar{padding-right:16px}[dir=rtl] .mat-grid-tile .mat-grid-avatar{padding-right:0;padding-left:16px}.mat-grid-tile .mat-grid-avatar:empty{display:none}\\n\"]\n            }] }\n];\n/** @nocollapse */\nMatGridTile.ctorParameters = () => [\n    { type: ElementRef },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [MAT_GRID_LIST,] }] }\n];\nMatGridTile.propDecorators = {\n    rowspan: [{ type: Input }],\n    colspan: [{ type: Input }]\n};\nif (false) {\n    /** @type {?} */\n    MatGridTile.ngAcceptInputType_rowspan;\n    /** @type {?} */\n    MatGridTile.ngAcceptInputType_colspan;\n    /** @type {?} */\n    MatGridTile.prototype._rowspan;\n    /** @type {?} */\n    MatGridTile.prototype._colspan;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatGridTile.prototype._element;\n    /** @type {?} */\n    MatGridTile.prototype._gridList;\n}\nclass MatGridTileText {\n    /**\n     * @param {?} _element\n     */\n    constructor(_element) {\n        this._element = _element;\n    }\n    /**\n     * @return {?}\n     */\n    ngAfterContentInit() {\n        setLines(this._lines, this._element);\n    }\n}\nMatGridTileText.decorators = [\n    { type: Component, args: [{\n                selector: 'mat-grid-tile-header, mat-grid-tile-footer',\n                template: \"<ng-content select=\\\"[mat-grid-avatar], [matGridAvatar]\\\"></ng-content>\\n<div class=\\\"mat-grid-list-text\\\"><ng-content select=\\\"[mat-line], [matLine]\\\"></ng-content></div>\\n<ng-content></ng-content>\\n\",\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                encapsulation: ViewEncapsulation.None\n            }] }\n];\n/** @nocollapse */\nMatGridTileText.ctorParameters = () => [\n    { type: ElementRef }\n];\nMatGridTileText.propDecorators = {\n    _lines: [{ type: ContentChildren, args: [MatLine, { descendants: true },] }]\n};\nif (false) {\n    /** @type {?} */\n    MatGridTileText.prototype._lines;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatGridTileText.prototype._element;\n}\n/**\n * Directive whose purpose is to add the mat- CSS styling to this selector.\n * \\@docs-private\n */\nclass MatGridAvatarCssMatStyler {\n}\nMatGridAvatarCssMatStyler.decorators = [\n    { type: Directive, args: [{\n                selector: '[mat-grid-avatar], [matGridAvatar]',\n                host: { 'class': 'mat-grid-avatar' }\n            },] }\n];\n/**\n * Directive whose purpose is to add the mat- CSS styling to this selector.\n * \\@docs-private\n */\nclass MatGridTileHeaderCssMatStyler {\n}\nMatGridTileHeaderCssMatStyler.decorators = [\n    { type: Directive, args: [{\n                selector: 'mat-grid-tile-header',\n                host: { 'class': 'mat-grid-tile-header' }\n            },] }\n];\n/**\n * Directive whose purpose is to add the mat- CSS styling to this selector.\n * \\@docs-private\n */\nclass MatGridTileFooterCssMatStyler {\n}\nMatGridTileFooterCssMatStyler.decorators = [\n    { type: Directive, args: [{\n                selector: 'mat-grid-tile-footer',\n                host: { 'class': 'mat-grid-tile-footer' }\n            },] }\n];\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/grid-list/tile-coordinator.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Interface describing a tile.\n * \\@docs-private\n * @record\n */\nfunction Tile() { }\nif (false) {\n    /**\n     * Amount of rows that the tile takes up.\n     * @type {?}\n     */\n    Tile.prototype.rowspan;\n    /**\n     * Amount of columns that the tile takes up.\n     * @type {?}\n     */\n    Tile.prototype.colspan;\n}\n/**\n * Class for determining, from a list of tiles, the (row, col) position of each of those tiles\n * in the grid. This is necessary (rather than just rendering the tiles in normal document flow)\n * because the tiles can have a rowspan.\n *\n * The positioning algorithm greedily places each tile as soon as it encounters a gap in the grid\n * large enough to accommodate it so that the tiles still render in the same order in which they\n * are given.\n *\n * The basis of the algorithm is the use of an array to track the already placed tiles. Each\n * element of the array corresponds to a column, and the value indicates how many cells in that\n * column are already occupied; zero indicates an empty cell. Moving \"down\" to the next row\n * decrements each value in the tracking array (indicating that the column is one cell closer to\n * being free).\n *\n * \\@docs-private\n */\nclass TileCoordinator {\n    constructor() {\n        /**\n         * Index at which the search for the next gap will start.\n         */\n        this.columnIndex = 0;\n        /**\n         * The current row index.\n         */\n        this.rowIndex = 0;\n    }\n    /**\n     * Gets the total number of rows occupied by tiles\n     * @return {?}\n     */\n    get rowCount() { return this.rowIndex + 1; }\n    /**\n     * Gets the total span of rows occupied by tiles.\n     * Ex: A list with 1 row that contains a tile with rowspan 2 will have a total rowspan of 2.\n     * @return {?}\n     */\n    get rowspan() {\n        /** @type {?} */\n        const lastRowMax = Math.max(...this.tracker);\n        // if any of the tiles has a rowspan that pushes it beyond the total row count,\n        // add the difference to the rowcount\n        return lastRowMax > 1 ? this.rowCount + lastRowMax - 1 : this.rowCount;\n    }\n    /**\n     * Updates the tile positions.\n     * @param {?} numColumns Amount of columns in the grid.\n     * @param {?} tiles Tiles to be positioned.\n     * @return {?}\n     */\n    update(numColumns, tiles) {\n        this.columnIndex = 0;\n        this.rowIndex = 0;\n        this.tracker = new Array(numColumns);\n        this.tracker.fill(0, 0, this.tracker.length);\n        this.positions = tiles.map((/**\n         * @param {?} tile\n         * @return {?}\n         */\n        tile => this._trackTile(tile)));\n    }\n    /**\n     * Calculates the row and col position of a tile.\n     * @private\n     * @param {?} tile\n     * @return {?}\n     */\n    _trackTile(tile) {\n        // Find a gap large enough for this tile.\n        /** @type {?} */\n        const gapStartIndex = this._findMatchingGap(tile.colspan);\n        // Place tile in the resulting gap.\n        this._markTilePosition(gapStartIndex, tile);\n        // The next time we look for a gap, the search will start at columnIndex, which should be\n        // immediately after the tile that has just been placed.\n        this.columnIndex = gapStartIndex + tile.colspan;\n        return new TilePosition(this.rowIndex, gapStartIndex);\n    }\n    /**\n     * Finds the next available space large enough to fit the tile.\n     * @private\n     * @param {?} tileCols\n     * @return {?}\n     */\n    _findMatchingGap(tileCols) {\n        if (tileCols > this.tracker.length) {\n            throw Error(`mat-grid-list: tile with colspan ${tileCols} is wider than ` +\n                `grid with cols=\"${this.tracker.length}\".`);\n        }\n        // Start index is inclusive, end index is exclusive.\n        /** @type {?} */\n        let gapStartIndex = -1;\n        /** @type {?} */\n        let gapEndIndex = -1;\n        // Look for a gap large enough to fit the given tile. Empty spaces are marked with a zero.\n        do {\n            // If we've reached the end of the row, go to the next row.\n            if (this.columnIndex + tileCols > this.tracker.length) {\n                this._nextRow();\n                gapStartIndex = this.tracker.indexOf(0, this.columnIndex);\n                gapEndIndex = this._findGapEndIndex(gapStartIndex);\n                continue;\n            }\n            gapStartIndex = this.tracker.indexOf(0, this.columnIndex);\n            // If there are no more empty spaces in this row at all, move on to the next row.\n            if (gapStartIndex == -1) {\n                this._nextRow();\n                gapStartIndex = this.tracker.indexOf(0, this.columnIndex);\n                gapEndIndex = this._findGapEndIndex(gapStartIndex);\n                continue;\n            }\n            gapEndIndex = this._findGapEndIndex(gapStartIndex);\n            // If a gap large enough isn't found, we want to start looking immediately after the current\n            // gap on the next iteration.\n            this.columnIndex = gapStartIndex + 1;\n            // Continue iterating until we find a gap wide enough for this tile. Since gapEndIndex is\n            // exclusive, gapEndIndex is 0 means we didn't find a gap and should continue.\n        } while ((gapEndIndex - gapStartIndex < tileCols) || (gapEndIndex == 0));\n        // If we still didn't manage to find a gap, ensure that the index is\n        // at least zero so the tile doesn't get pulled out of the grid.\n        return Math.max(gapStartIndex, 0);\n    }\n    /**\n     * Move \"down\" to the next row.\n     * @private\n     * @return {?}\n     */\n    _nextRow() {\n        this.columnIndex = 0;\n        this.rowIndex++;\n        // Decrement all spaces by one to reflect moving down one row.\n        for (let i = 0; i < this.tracker.length; i++) {\n            this.tracker[i] = Math.max(0, this.tracker[i] - 1);\n        }\n    }\n    /**\n     * Finds the end index (exclusive) of a gap given the index from which to start looking.\n     * The gap ends when a non-zero value is found.\n     * @private\n     * @param {?} gapStartIndex\n     * @return {?}\n     */\n    _findGapEndIndex(gapStartIndex) {\n        for (let i = gapStartIndex + 1; i < this.tracker.length; i++) {\n            if (this.tracker[i] != 0) {\n                return i;\n            }\n        }\n        // The gap ends with the end of the row.\n        return this.tracker.length;\n    }\n    /**\n     * Update the tile tracker to account for the given tile in the given space.\n     * @private\n     * @param {?} start\n     * @param {?} tile\n     * @return {?}\n     */\n    _markTilePosition(start, tile) {\n        for (let i = 0; i < tile.colspan; i++) {\n            this.tracker[start + i] = tile.rowspan;\n        }\n    }\n}\nif (false) {\n    /**\n     * Tracking array (see class description).\n     * @type {?}\n     */\n    TileCoordinator.prototype.tracker;\n    /**\n     * Index at which the search for the next gap will start.\n     * @type {?}\n     */\n    TileCoordinator.prototype.columnIndex;\n    /**\n     * The current row index.\n     * @type {?}\n     */\n    TileCoordinator.prototype.rowIndex;\n    /**\n     * The computed (row, col) position of each tile (the output).\n     * @type {?}\n     */\n    TileCoordinator.prototype.positions;\n}\n/**\n * Simple data structure for tile position (row, col).\n * \\@docs-private\n */\nclass TilePosition {\n    /**\n     * @param {?} row\n     * @param {?} col\n     */\n    constructor(row, col) {\n        this.row = row;\n        this.col = col;\n    }\n}\nif (false) {\n    /** @type {?} */\n    TilePosition.prototype.row;\n    /** @type {?} */\n    TilePosition.prototype.col;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/grid-list/tile-styler.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * RegExp that can be used to check whether a value will\n * be allowed inside a CSS `calc()` expression.\n * @type {?}\n */\nconst cssCalcAllowedValue = /^-?\\d+((\\.\\d+)?[A-Za-z%$]?)+$/;\n/**\n * Sets the style properties for an individual tile, given the position calculated by the\n * Tile Coordinator.\n * \\@docs-private\n * @abstract\n */\nclass TileStyler {\n    constructor() {\n        this._rows = 0;\n        this._rowspan = 0;\n    }\n    /**\n     * Adds grid-list layout info once it is available. Cannot be processed in the constructor\n     * because these properties haven't been calculated by that point.\n     *\n     * @param {?} gutterSize Size of the grid's gutter.\n     * @param {?} tracker Instance of the TileCoordinator.\n     * @param {?} cols Amount of columns in the grid.\n     * @param {?} direction Layout direction of the grid.\n     * @return {?}\n     */\n    init(gutterSize, tracker, cols, direction) {\n        this._gutterSize = normalizeUnits(gutterSize);\n        this._rows = tracker.rowCount;\n        this._rowspan = tracker.rowspan;\n        this._cols = cols;\n        this._direction = direction;\n    }\n    /**\n     * Computes the amount of space a single 1x1 tile would take up (width or height).\n     * Used as a basis for other calculations.\n     * @param {?} sizePercent Percent of the total grid-list space that one 1x1 tile would take up.\n     * @param {?} gutterFraction Fraction of the gutter size taken up by one 1x1 tile.\n     * @return {?} The size of a 1x1 tile as an expression that can be evaluated via CSS calc().\n     */\n    getBaseTileSize(sizePercent, gutterFraction) {\n        // Take the base size percent (as would be if evenly dividing the size between cells),\n        // and then subtracting the size of one gutter. However, since there are no gutters on the\n        // edges, each tile only uses a fraction (gutterShare = numGutters / numCells) of the gutter\n        // size. (Imagine having one gutter per tile, and then breaking up the extra gutter on the\n        // edge evenly among the cells).\n        return `(${sizePercent}% - (${this._gutterSize} * ${gutterFraction}))`;\n    }\n    /**\n     * Gets The horizontal or vertical position of a tile, e.g., the 'top' or 'left' property value.\n     * @param {?} baseSize Base size of a 1x1 tile (as computed in getBaseTileSize).\n     * @param {?} offset Number of tiles that have already been rendered in the row/column.\n     * @return {?} Position of the tile as a CSS calc() expression.\n     */\n    getTilePosition(baseSize, offset) {\n        // The position comes the size of a 1x1 tile plus gutter for each previous tile in the\n        // row/column (offset).\n        return offset === 0 ? '0' : calc(`(${baseSize} + ${this._gutterSize}) * ${offset}`);\n    }\n    /**\n     * Gets the actual size of a tile, e.g., width or height, taking rowspan or colspan into account.\n     * @param {?} baseSize Base size of a 1x1 tile (as computed in getBaseTileSize).\n     * @param {?} span The tile's rowspan or colspan.\n     * @return {?} Size of the tile as a CSS calc() expression.\n     */\n    getTileSize(baseSize, span) {\n        return `(${baseSize} * ${span}) + (${span - 1} * ${this._gutterSize})`;\n    }\n    /**\n     * Sets the style properties to be applied to a tile for the given row and column index.\n     * @param {?} tile Tile to which to apply the styling.\n     * @param {?} rowIndex Index of the tile's row.\n     * @param {?} colIndex Index of the tile's column.\n     * @return {?}\n     */\n    setStyle(tile, rowIndex, colIndex) {\n        // Percent of the available horizontal space that one column takes up.\n        /** @type {?} */\n        let percentWidthPerTile = 100 / this._cols;\n        // Fraction of the vertical gutter size that each column takes up.\n        // For example, if there are 5 columns, each column uses 4/5 = 0.8 times the gutter width.\n        /** @type {?} */\n        let gutterWidthFractionPerTile = (this._cols - 1) / this._cols;\n        this.setColStyles(tile, colIndex, percentWidthPerTile, gutterWidthFractionPerTile);\n        this.setRowStyles(tile, rowIndex, percentWidthPerTile, gutterWidthFractionPerTile);\n    }\n    /**\n     * Sets the horizontal placement of the tile in the list.\n     * @param {?} tile\n     * @param {?} colIndex\n     * @param {?} percentWidth\n     * @param {?} gutterWidth\n     * @return {?}\n     */\n    setColStyles(tile, colIndex, percentWidth, gutterWidth) {\n        // Base horizontal size of a column.\n        /** @type {?} */\n        let baseTileWidth = this.getBaseTileSize(percentWidth, gutterWidth);\n        // The width and horizontal position of each tile is always calculated the same way, but the\n        // height and vertical position depends on the rowMode.\n        /** @type {?} */\n        let side = this._direction === 'rtl' ? 'right' : 'left';\n        tile._setStyle(side, this.getTilePosition(baseTileWidth, colIndex));\n        tile._setStyle('width', calc(this.getTileSize(baseTileWidth, tile.colspan)));\n    }\n    /**\n     * Calculates the total size taken up by gutters across one axis of a list.\n     * @return {?}\n     */\n    getGutterSpan() {\n        return `${this._gutterSize} * (${this._rowspan} - 1)`;\n    }\n    /**\n     * Calculates the total size taken up by tiles across one axis of a list.\n     * @param {?} tileHeight Height of the tile.\n     * @return {?}\n     */\n    getTileSpan(tileHeight) {\n        return `${this._rowspan} * ${this.getTileSize(tileHeight, 1)}`;\n    }\n    /**\n     * Calculates the computed height and returns the correct style property to set.\n     * This method can be implemented by each type of TileStyler.\n     * \\@docs-private\n     * @return {?}\n     */\n    getComputedHeight() { return null; }\n}\nif (false) {\n    /** @type {?} */\n    TileStyler.prototype._gutterSize;\n    /** @type {?} */\n    TileStyler.prototype._rows;\n    /** @type {?} */\n    TileStyler.prototype._rowspan;\n    /** @type {?} */\n    TileStyler.prototype._cols;\n    /** @type {?} */\n    TileStyler.prototype._direction;\n    /**\n     * Sets the vertical placement of the tile in the list.\n     * This method will be implemented by each type of TileStyler.\n     * \\@docs-private\n     * @abstract\n     * @param {?} tile\n     * @param {?} rowIndex\n     * @param {?} percentWidth\n     * @param {?} gutterWidth\n     * @return {?}\n     */\n    TileStyler.prototype.setRowStyles = function (tile, rowIndex, percentWidth, gutterWidth) { };\n    /**\n     * Called when the tile styler is swapped out with a different one. To be used for cleanup.\n     * \\@docs-private\n     * @abstract\n     * @param {?} list Grid list that the styler was attached to.\n     * @return {?}\n     */\n    TileStyler.prototype.reset = function (list) { };\n}\n/**\n * This type of styler is instantiated when the user passes in a fixed row height.\n * Example `<mat-grid-list cols=\"3\" rowHeight=\"100px\">`\n * \\@docs-private\n */\nclass FixedTileStyler extends TileStyler {\n    /**\n     * @param {?} fixedRowHeight\n     */\n    constructor(fixedRowHeight) {\n        super();\n        this.fixedRowHeight = fixedRowHeight;\n    }\n    /**\n     * @param {?} gutterSize\n     * @param {?} tracker\n     * @param {?} cols\n     * @param {?} direction\n     * @return {?}\n     */\n    init(gutterSize, tracker, cols, direction) {\n        super.init(gutterSize, tracker, cols, direction);\n        this.fixedRowHeight = normalizeUnits(this.fixedRowHeight);\n        if (!cssCalcAllowedValue.test(this.fixedRowHeight)) {\n            throw Error(`Invalid value \"${this.fixedRowHeight}\" set as rowHeight.`);\n        }\n    }\n    /**\n     * @param {?} tile\n     * @param {?} rowIndex\n     * @return {?}\n     */\n    setRowStyles(tile, rowIndex) {\n        tile._setStyle('top', this.getTilePosition(this.fixedRowHeight, rowIndex));\n        tile._setStyle('height', calc(this.getTileSize(this.fixedRowHeight, tile.rowspan)));\n    }\n    /**\n     * @return {?}\n     */\n    getComputedHeight() {\n        return [\n            'height', calc(`${this.getTileSpan(this.fixedRowHeight)} + ${this.getGutterSpan()}`)\n        ];\n    }\n    /**\n     * @param {?} list\n     * @return {?}\n     */\n    reset(list) {\n        list._setListStyle(['height', null]);\n        if (list._tiles) {\n            list._tiles.forEach((/**\n             * @param {?} tile\n             * @return {?}\n             */\n            tile => {\n                tile._setStyle('top', null);\n                tile._setStyle('height', null);\n            }));\n        }\n    }\n}\nif (false) {\n    /** @type {?} */\n    FixedTileStyler.prototype.fixedRowHeight;\n}\n/**\n * This type of styler is instantiated when the user passes in a width:height ratio\n * for the row height.  Example `<mat-grid-list cols=\"3\" rowHeight=\"3:1\">`\n * \\@docs-private\n */\nclass RatioTileStyler extends TileStyler {\n    /**\n     * @param {?} value\n     */\n    constructor(value) {\n        super();\n        this._parseRatio(value);\n    }\n    /**\n     * @param {?} tile\n     * @param {?} rowIndex\n     * @param {?} percentWidth\n     * @param {?} gutterWidth\n     * @return {?}\n     */\n    setRowStyles(tile, rowIndex, percentWidth, gutterWidth) {\n        /** @type {?} */\n        let percentHeightPerTile = percentWidth / this.rowHeightRatio;\n        this.baseTileHeight = this.getBaseTileSize(percentHeightPerTile, gutterWidth);\n        // Use padding-top and margin-top to maintain the given aspect ratio, as\n        // a percentage-based value for these properties is applied versus the *width* of the\n        // containing block. See http://www.w3.org/TR/CSS2/box.html#margin-properties\n        tile._setStyle('marginTop', this.getTilePosition(this.baseTileHeight, rowIndex));\n        tile._setStyle('paddingTop', calc(this.getTileSize(this.baseTileHeight, tile.rowspan)));\n    }\n    /**\n     * @return {?}\n     */\n    getComputedHeight() {\n        return [\n            'paddingBottom', calc(`${this.getTileSpan(this.baseTileHeight)} + ${this.getGutterSpan()}`)\n        ];\n    }\n    /**\n     * @param {?} list\n     * @return {?}\n     */\n    reset(list) {\n        list._setListStyle(['paddingBottom', null]);\n        list._tiles.forEach((/**\n         * @param {?} tile\n         * @return {?}\n         */\n        tile => {\n            tile._setStyle('marginTop', null);\n            tile._setStyle('paddingTop', null);\n        }));\n    }\n    /**\n     * @private\n     * @param {?} value\n     * @return {?}\n     */\n    _parseRatio(value) {\n        /** @type {?} */\n        const ratioParts = value.split(':');\n        if (ratioParts.length !== 2) {\n            throw Error(`mat-grid-list: invalid ratio given for row-height: \"${value}\"`);\n        }\n        this.rowHeightRatio = parseFloat(ratioParts[0]) / parseFloat(ratioParts[1]);\n    }\n}\nif (false) {\n    /**\n     * Ratio width:height given by user to determine row height.\n     * @type {?}\n     */\n    RatioTileStyler.prototype.rowHeightRatio;\n    /** @type {?} */\n    RatioTileStyler.prototype.baseTileHeight;\n}\n/**\n * This type of styler is instantiated when the user selects a \"fit\" row height mode.\n * In other words, the row height will reflect the total height of the container divided\n * by the number of rows.  Example `<mat-grid-list cols=\"3\" rowHeight=\"fit\">`\n *\n * \\@docs-private\n */\nclass FitTileStyler extends TileStyler {\n    /**\n     * @param {?} tile\n     * @param {?} rowIndex\n     * @return {?}\n     */\n    setRowStyles(tile, rowIndex) {\n        // Percent of the available vertical space that one row takes up.\n        /** @type {?} */\n        let percentHeightPerTile = 100 / this._rowspan;\n        // Fraction of the horizontal gutter size that each column takes up.\n        /** @type {?} */\n        let gutterHeightPerTile = (this._rows - 1) / this._rows;\n        // Base vertical size of a column.\n        /** @type {?} */\n        let baseTileHeight = this.getBaseTileSize(percentHeightPerTile, gutterHeightPerTile);\n        tile._setStyle('top', this.getTilePosition(baseTileHeight, rowIndex));\n        tile._setStyle('height', calc(this.getTileSize(baseTileHeight, tile.rowspan)));\n    }\n    /**\n     * @param {?} list\n     * @return {?}\n     */\n    reset(list) {\n        if (list._tiles) {\n            list._tiles.forEach((/**\n             * @param {?} tile\n             * @return {?}\n             */\n            tile => {\n                tile._setStyle('top', null);\n                tile._setStyle('height', null);\n            }));\n        }\n    }\n}\n/**\n * Wraps a CSS string in a calc function\n * @param {?} exp\n * @return {?}\n */\nfunction calc(exp) {\n    return `calc(${exp})`;\n}\n/**\n * Appends pixels to a CSS string if no units are given.\n * @param {?} value\n * @return {?}\n */\nfunction normalizeUnits(value) {\n    return value.match(/([A-Za-z%]+)$/) ? value : `${value}px`;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/grid-list/grid-list.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n// TODO(kara): Conditional (responsive) column count / row size.\n// TODO(kara): Re-layout on window resize / media change (debounced).\n// TODO(kara): gridTileHeader and gridTileFooter.\n/** @type {?} */\nconst MAT_FIT_MODE = 'fit';\nclass MatGridList {\n    /**\n     * @param {?} _element\n     * @param {?} _dir\n     */\n    constructor(_element, _dir) {\n        this._element = _element;\n        this._dir = _dir;\n        /**\n         * The amount of space between tiles. This will be something like '5px' or '2em'.\n         */\n        this._gutter = '1px';\n    }\n    /**\n     * Amount of columns in the grid list.\n     * @return {?}\n     */\n    get cols() { return this._cols; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set cols(value) {\n        this._cols = Math.max(1, Math.round(coerceNumberProperty(value)));\n    }\n    /**\n     * Size of the grid list's gutter in pixels.\n     * @return {?}\n     */\n    get gutterSize() { return this._gutter; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set gutterSize(value) { this._gutter = `${value == null ? '' : value}`; }\n    /**\n     * Set internal representation of row height from the user-provided value.\n     * @return {?}\n     */\n    get rowHeight() { return this._rowHeight; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set rowHeight(value) {\n        /** @type {?} */\n        const newValue = `${value == null ? '' : value}`;\n        if (newValue !== this._rowHeight) {\n            this._rowHeight = newValue;\n            this._setTileStyler(this._rowHeight);\n        }\n    }\n    /**\n     * @return {?}\n     */\n    ngOnInit() {\n        this._checkCols();\n        this._checkRowHeight();\n    }\n    /**\n     * The layout calculation is fairly cheap if nothing changes, so there's little cost\n     * to run it frequently.\n     * @return {?}\n     */\n    ngAfterContentChecked() {\n        this._layoutTiles();\n    }\n    /**\n     * Throw a friendly error if cols property is missing\n     * @private\n     * @return {?}\n     */\n    _checkCols() {\n        if (!this.cols) {\n            throw Error(`mat-grid-list: must pass in number of columns. ` +\n                `Example: <mat-grid-list cols=\"3\">`);\n        }\n    }\n    /**\n     * Default to equal width:height if rowHeight property is missing\n     * @private\n     * @return {?}\n     */\n    _checkRowHeight() {\n        if (!this._rowHeight) {\n            this._setTileStyler('1:1');\n        }\n    }\n    /**\n     * Creates correct Tile Styler subtype based on rowHeight passed in by user\n     * @private\n     * @param {?} rowHeight\n     * @return {?}\n     */\n    _setTileStyler(rowHeight) {\n        if (this._tileStyler) {\n            this._tileStyler.reset(this);\n        }\n        if (rowHeight === MAT_FIT_MODE) {\n            this._tileStyler = new FitTileStyler();\n        }\n        else if (rowHeight && rowHeight.indexOf(':') > -1) {\n            this._tileStyler = new RatioTileStyler(rowHeight);\n        }\n        else {\n            this._tileStyler = new FixedTileStyler(rowHeight);\n        }\n    }\n    /**\n     * Computes and applies the size and position for all children grid tiles.\n     * @private\n     * @return {?}\n     */\n    _layoutTiles() {\n        if (!this._tileCoordinator) {\n            this._tileCoordinator = new TileCoordinator();\n        }\n        /** @type {?} */\n        const tracker = this._tileCoordinator;\n        /** @type {?} */\n        const tiles = this._tiles.filter((/**\n         * @param {?} tile\n         * @return {?}\n         */\n        tile => !tile._gridList || tile._gridList === this));\n        /** @type {?} */\n        const direction = this._dir ? this._dir.value : 'ltr';\n        this._tileCoordinator.update(this.cols, tiles);\n        this._tileStyler.init(this.gutterSize, tracker, this.cols, direction);\n        tiles.forEach((/**\n         * @param {?} tile\n         * @param {?} index\n         * @return {?}\n         */\n        (tile, index) => {\n            /** @type {?} */\n            const pos = tracker.positions[index];\n            this._tileStyler.setStyle(tile, pos.row, pos.col);\n        }));\n        this._setListStyle(this._tileStyler.getComputedHeight());\n    }\n    /**\n     * Sets style on the main grid-list element, given the style name and value.\n     * @param {?} style\n     * @return {?}\n     */\n    _setListStyle(style) {\n        if (style) {\n            ((/** @type {?} */ (this._element.nativeElement.style)))[style[0]] = style[1];\n        }\n    }\n}\nMatGridList.decorators = [\n    { type: Component, args: [{\n                selector: 'mat-grid-list',\n                exportAs: 'matGridList',\n                template: \"<div>\\n  <ng-content></ng-content>\\n</div>\",\n                host: {\n                    'class': 'mat-grid-list',\n                    // Ensures that the \"cols\" input value is reflected in the DOM. This is\n                    // needed for the grid-list harness.\n                    '[attr.cols]': 'cols',\n                },\n                providers: [{\n                        provide: MAT_GRID_LIST,\n                        useExisting: MatGridList\n                    }],\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                encapsulation: ViewEncapsulation.None,\n                styles: [\".mat-grid-list{display:block;position:relative}.mat-grid-tile{display:block;position:absolute;overflow:hidden}.mat-grid-tile .mat-figure{top:0;left:0;right:0;bottom:0;position:absolute;display:flex;align-items:center;justify-content:center;height:100%;padding:0;margin:0}.mat-grid-tile .mat-grid-tile-header,.mat-grid-tile .mat-grid-tile-footer{display:flex;align-items:center;height:48px;color:#fff;background:rgba(0,0,0,.38);overflow:hidden;padding:0 16px;position:absolute;left:0;right:0}.mat-grid-tile .mat-grid-tile-header>*,.mat-grid-tile .mat-grid-tile-footer>*{margin:0;padding:0;font-weight:normal;font-size:inherit}.mat-grid-tile .mat-grid-tile-header.mat-2-line,.mat-grid-tile .mat-grid-tile-footer.mat-2-line{height:68px}.mat-grid-tile .mat-grid-list-text{display:flex;flex-direction:column;width:100%;box-sizing:border-box;overflow:hidden}.mat-grid-tile .mat-grid-list-text>*{margin:0;padding:0;font-weight:normal;font-size:inherit}.mat-grid-tile .mat-grid-list-text:empty{display:none}.mat-grid-tile .mat-grid-tile-header{top:0}.mat-grid-tile .mat-grid-tile-footer{bottom:0}.mat-grid-tile .mat-grid-avatar{padding-right:16px}[dir=rtl] .mat-grid-tile .mat-grid-avatar{padding-right:0;padding-left:16px}.mat-grid-tile .mat-grid-avatar:empty{display:none}\\n\"]\n            }] }\n];\n/** @nocollapse */\nMatGridList.ctorParameters = () => [\n    { type: ElementRef },\n    { type: Directionality, decorators: [{ type: Optional }] }\n];\nMatGridList.propDecorators = {\n    _tiles: [{ type: ContentChildren, args: [MatGridTile, { descendants: true },] }],\n    cols: [{ type: Input }],\n    gutterSize: [{ type: Input }],\n    rowHeight: [{ type: Input }]\n};\nif (false) {\n    /** @type {?} */\n    MatGridList.ngAcceptInputType_cols;\n    /**\n     * Number of columns being rendered.\n     * @type {?}\n     * @private\n     */\n    MatGridList.prototype._cols;\n    /**\n     * Used for determiningthe position of each tile in the grid.\n     * @type {?}\n     * @private\n     */\n    MatGridList.prototype._tileCoordinator;\n    /**\n     * Row height value passed in by user. This can be one of three types:\n     * - Number value (ex: \"100px\"):  sets a fixed row height to that value\n     * - Ratio value (ex: \"4:3\"): sets the row height based on width:height ratio\n     * - \"Fit\" mode (ex: \"fit\"): sets the row height to total height divided by number of rows\n     * @type {?}\n     * @private\n     */\n    MatGridList.prototype._rowHeight;\n    /**\n     * The amount of space between tiles. This will be something like '5px' or '2em'.\n     * @type {?}\n     * @private\n     */\n    MatGridList.prototype._gutter;\n    /**\n     * Sets position and size styles for a tile\n     * @type {?}\n     * @private\n     */\n    MatGridList.prototype._tileStyler;\n    /**\n     * Query list of tiles that are being rendered.\n     * @type {?}\n     */\n    MatGridList.prototype._tiles;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatGridList.prototype._element;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatGridList.prototype._dir;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/grid-list/grid-list-module.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass MatGridListModule {\n}\nMatGridListModule.decorators = [\n    { type: NgModule, args: [{\n                imports: [MatLineModule, MatCommonModule],\n                exports: [\n                    MatGridList,\n                    MatGridTile,\n                    MatGridTileText,\n                    MatLineModule,\n                    MatCommonModule,\n                    MatGridTileHeaderCssMatStyler,\n                    MatGridTileFooterCssMatStyler,\n                    MatGridAvatarCssMatStyler\n                ],\n                declarations: [\n                    MatGridList,\n                    MatGridTile,\n                    MatGridTileText,\n                    MatGridTileHeaderCssMatStyler,\n                    MatGridTileFooterCssMatStyler,\n                    MatGridAvatarCssMatStyler\n                ],\n            },] }\n];\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/grid-list/public-api.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MatGridAvatarCssMatStyler, MatGridList, MatGridListModule, MatGridTile, MatGridTileFooterCssMatStyler, MatGridTileHeaderCssMatStyler, MatGridTileText, TileCoordinator as ɵTileCoordinator, MAT_GRID_LIST as ɵangular_material_src_material_grid_list_grid_list_a };\n//# sourceMappingURL=grid-list.js.map\n","import { CommonModule } from '@angular/common';\nimport { Component, ViewEncapsulation, ChangeDetectionStrategy, ElementRef, Directive, ChangeDetectorRef, Optional, ContentChildren, ContentChild, Input, forwardRef, Inject, ViewChild, EventEmitter, isDevMode, Attribute, Output, NgModule } from '@angular/core';\nimport { mixinDisabled, mixinDisableRipple, setLines, MatLine, MatLineModule, MatRippleModule, MatCommonModule, MatPseudoCheckboxModule } from '@angular/material/core';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { Subject } from 'rxjs';\nimport { takeUntil, startWith } from 'rxjs/operators';\nimport { FocusKeyManager } from '@angular/cdk/a11y';\nimport { SelectionModel } from '@angular/cdk/collections';\nimport { hasModifierKey, A, END, HOME, ENTER, SPACE, UP_ARROW, DOWN_ARROW } from '@angular/cdk/keycodes';\nimport { NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { MatDividerModule } from '@angular/material/divider';\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/list/list.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n// Boilerplate for applying mixins to MatList.\n/**\n * \\@docs-private\n */\nclass MatListBase {\n}\n/** @type {?} */\nconst _MatListMixinBase = mixinDisabled(mixinDisableRipple(MatListBase));\n// Boilerplate for applying mixins to MatListItem.\n/**\n * \\@docs-private\n */\nclass MatListItemBase {\n}\n/** @type {?} */\nconst _MatListItemMixinBase = mixinDisableRipple(MatListItemBase);\nclass MatNavList extends _MatListMixinBase {\n    constructor() {\n        super(...arguments);\n        /**\n         * Emits when the state of the list changes.\n         */\n        this._stateChanges = new Subject();\n    }\n    /**\n     * @return {?}\n     */\n    ngOnChanges() {\n        this._stateChanges.next();\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this._stateChanges.complete();\n    }\n}\nMatNavList.decorators = [\n    { type: Component, args: [{\n                selector: 'mat-nav-list',\n                exportAs: 'matNavList',\n                host: {\n                    'role': 'navigation',\n                    'class': 'mat-nav-list mat-list-base'\n                },\n                template: \"<ng-content></ng-content>\\n\\n\",\n                inputs: ['disableRipple', 'disabled'],\n                encapsulation: ViewEncapsulation.None,\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                styles: [\".mat-subheader{display:flex;box-sizing:border-box;padding:16px;align-items:center}.mat-list-base .mat-subheader{margin:0}.mat-list-base{padding-top:8px;display:block;-webkit-tap-highlight-color:transparent}.mat-list-base .mat-subheader{height:48px;line-height:16px}.mat-list-base .mat-subheader:first-child{margin-top:-8px}.mat-list-base .mat-list-item,.mat-list-base .mat-list-option{display:block;height:48px;-webkit-tap-highlight-color:transparent;width:100%;padding:0;position:relative}.mat-list-base .mat-list-item .mat-list-item-content,.mat-list-base .mat-list-option .mat-list-item-content{display:flex;flex-direction:row;align-items:center;box-sizing:border-box;padding:0 16px;position:relative;height:inherit}.mat-list-base .mat-list-item .mat-list-item-content-reverse,.mat-list-base .mat-list-option .mat-list-item-content-reverse{display:flex;align-items:center;padding:0 16px;flex-direction:row-reverse;justify-content:space-around}.mat-list-base .mat-list-item .mat-list-item-ripple,.mat-list-base .mat-list-option .mat-list-item-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none}.mat-list-base .mat-list-item.mat-list-item-with-avatar,.mat-list-base .mat-list-option.mat-list-item-with-avatar{height:56px}.mat-list-base .mat-list-item.mat-2-line,.mat-list-base .mat-list-option.mat-2-line{height:72px}.mat-list-base .mat-list-item.mat-3-line,.mat-list-base .mat-list-option.mat-3-line{height:88px}.mat-list-base .mat-list-item.mat-multi-line,.mat-list-base .mat-list-option.mat-multi-line{height:auto}.mat-list-base .mat-list-item.mat-multi-line .mat-list-item-content,.mat-list-base .mat-list-option.mat-multi-line .mat-list-item-content{padding-top:16px;padding-bottom:16px}.mat-list-base .mat-list-item .mat-list-text,.mat-list-base .mat-list-option .mat-list-text{display:flex;flex-direction:column;width:100%;box-sizing:border-box;overflow:hidden;padding:0}.mat-list-base .mat-list-item .mat-list-text>*,.mat-list-base .mat-list-option .mat-list-text>*{margin:0;padding:0;font-weight:normal;font-size:inherit}.mat-list-base .mat-list-item .mat-list-text:empty,.mat-list-base .mat-list-option .mat-list-text:empty{display:none}.mat-list-base .mat-list-item.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,.mat-list-base .mat-list-item.mat-list-option .mat-list-item-content .mat-list-text,.mat-list-base .mat-list-option.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,.mat-list-base .mat-list-option.mat-list-option .mat-list-item-content .mat-list-text{padding-right:0;padding-left:16px}[dir=rtl] .mat-list-base .mat-list-item.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base .mat-list-item.mat-list-option .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base .mat-list-option.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base .mat-list-option.mat-list-option .mat-list-item-content .mat-list-text{padding-right:16px;padding-left:0}.mat-list-base .mat-list-item.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,.mat-list-base .mat-list-item.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base .mat-list-option.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,.mat-list-base .mat-list-option.mat-list-option .mat-list-item-content-reverse .mat-list-text{padding-left:0;padding-right:16px}[dir=rtl] .mat-list-base .mat-list-item.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base .mat-list-item.mat-list-option .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base .mat-list-option.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base .mat-list-option.mat-list-option .mat-list-item-content-reverse .mat-list-text{padding-right:0;padding-left:16px}.mat-list-base .mat-list-item.mat-list-item-with-avatar.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base .mat-list-item.mat-list-item-with-avatar.mat-list-option .mat-list-item-content .mat-list-text,.mat-list-base .mat-list-option.mat-list-item-with-avatar.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base .mat-list-option.mat-list-item-with-avatar.mat-list-option .mat-list-item-content .mat-list-text{padding-right:16px;padding-left:16px}.mat-list-base .mat-list-item .mat-list-avatar,.mat-list-base .mat-list-option .mat-list-avatar{flex-shrink:0;width:40px;height:40px;border-radius:50%;object-fit:cover}.mat-list-base .mat-list-item .mat-list-avatar~.mat-divider-inset,.mat-list-base .mat-list-option .mat-list-avatar~.mat-divider-inset{margin-left:72px;width:calc(100% - 72px)}[dir=rtl] .mat-list-base .mat-list-item .mat-list-avatar~.mat-divider-inset,[dir=rtl] .mat-list-base .mat-list-option .mat-list-avatar~.mat-divider-inset{margin-left:auto;margin-right:72px}.mat-list-base .mat-list-item .mat-list-icon,.mat-list-base .mat-list-option .mat-list-icon{flex-shrink:0;width:24px;height:24px;font-size:24px;box-sizing:content-box;border-radius:50%;padding:4px}.mat-list-base .mat-list-item .mat-list-icon~.mat-divider-inset,.mat-list-base .mat-list-option .mat-list-icon~.mat-divider-inset{margin-left:64px;width:calc(100% - 64px)}[dir=rtl] .mat-list-base .mat-list-item .mat-list-icon~.mat-divider-inset,[dir=rtl] .mat-list-base .mat-list-option .mat-list-icon~.mat-divider-inset{margin-left:auto;margin-right:64px}.mat-list-base .mat-list-item .mat-divider,.mat-list-base .mat-list-option .mat-divider{position:absolute;bottom:0;left:0;width:100%;margin:0}[dir=rtl] .mat-list-base .mat-list-item .mat-divider,[dir=rtl] .mat-list-base .mat-list-option .mat-divider{margin-left:auto;margin-right:0}.mat-list-base .mat-list-item .mat-divider.mat-divider-inset,.mat-list-base .mat-list-option .mat-divider.mat-divider-inset{position:absolute}.mat-list-base[dense]{padding-top:4px;display:block}.mat-list-base[dense] .mat-subheader{height:40px;line-height:8px}.mat-list-base[dense] .mat-subheader:first-child{margin-top:-4px}.mat-list-base[dense] .mat-list-item,.mat-list-base[dense] .mat-list-option{display:block;height:40px;-webkit-tap-highlight-color:transparent;width:100%;padding:0;position:relative}.mat-list-base[dense] .mat-list-item .mat-list-item-content,.mat-list-base[dense] .mat-list-option .mat-list-item-content{display:flex;flex-direction:row;align-items:center;box-sizing:border-box;padding:0 16px;position:relative;height:inherit}.mat-list-base[dense] .mat-list-item .mat-list-item-content-reverse,.mat-list-base[dense] .mat-list-option .mat-list-item-content-reverse{display:flex;align-items:center;padding:0 16px;flex-direction:row-reverse;justify-content:space-around}.mat-list-base[dense] .mat-list-item .mat-list-item-ripple,.mat-list-base[dense] .mat-list-option .mat-list-item-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none}.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar{height:48px}.mat-list-base[dense] .mat-list-item.mat-2-line,.mat-list-base[dense] .mat-list-option.mat-2-line{height:60px}.mat-list-base[dense] .mat-list-item.mat-3-line,.mat-list-base[dense] .mat-list-option.mat-3-line{height:76px}.mat-list-base[dense] .mat-list-item.mat-multi-line,.mat-list-base[dense] .mat-list-option.mat-multi-line{height:auto}.mat-list-base[dense] .mat-list-item.mat-multi-line .mat-list-item-content,.mat-list-base[dense] .mat-list-option.mat-multi-line .mat-list-item-content{padding-top:16px;padding-bottom:16px}.mat-list-base[dense] .mat-list-item .mat-list-text,.mat-list-base[dense] .mat-list-option .mat-list-text{display:flex;flex-direction:column;width:100%;box-sizing:border-box;overflow:hidden;padding:0}.mat-list-base[dense] .mat-list-item .mat-list-text>*,.mat-list-base[dense] .mat-list-option .mat-list-text>*{margin:0;padding:0;font-weight:normal;font-size:inherit}.mat-list-base[dense] .mat-list-item .mat-list-text:empty,.mat-list-base[dense] .mat-list-option .mat-list-text:empty{display:none}.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,.mat-list-base[dense] .mat-list-item.mat-list-option .mat-list-item-content .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-option .mat-list-item-content .mat-list-text{padding-right:0;padding-left:16px}[dir=rtl] .mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-item.mat-list-option .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-option.mat-list-option .mat-list-item-content .mat-list-text{padding-right:16px;padding-left:0}.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,.mat-list-base[dense] .mat-list-item.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-option .mat-list-item-content-reverse .mat-list-text{padding-left:0;padding-right:16px}[dir=rtl] .mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-item.mat-list-option .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-option.mat-list-option .mat-list-item-content-reverse .mat-list-text{padding-right:0;padding-left:16px}.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar.mat-list-option .mat-list-item-content .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar.mat-list-option .mat-list-item-content .mat-list-text{padding-right:16px;padding-left:16px}.mat-list-base[dense] .mat-list-item .mat-list-avatar,.mat-list-base[dense] .mat-list-option .mat-list-avatar{flex-shrink:0;width:36px;height:36px;border-radius:50%;object-fit:cover}.mat-list-base[dense] .mat-list-item .mat-list-avatar~.mat-divider-inset,.mat-list-base[dense] .mat-list-option .mat-list-avatar~.mat-divider-inset{margin-left:68px;width:calc(100% - 68px)}[dir=rtl] .mat-list-base[dense] .mat-list-item .mat-list-avatar~.mat-divider-inset,[dir=rtl] .mat-list-base[dense] .mat-list-option .mat-list-avatar~.mat-divider-inset{margin-left:auto;margin-right:68px}.mat-list-base[dense] .mat-list-item .mat-list-icon,.mat-list-base[dense] .mat-list-option .mat-list-icon{flex-shrink:0;width:20px;height:20px;font-size:20px;box-sizing:content-box;border-radius:50%;padding:4px}.mat-list-base[dense] .mat-list-item .mat-list-icon~.mat-divider-inset,.mat-list-base[dense] .mat-list-option .mat-list-icon~.mat-divider-inset{margin-left:60px;width:calc(100% - 60px)}[dir=rtl] .mat-list-base[dense] .mat-list-item .mat-list-icon~.mat-divider-inset,[dir=rtl] .mat-list-base[dense] .mat-list-option .mat-list-icon~.mat-divider-inset{margin-left:auto;margin-right:60px}.mat-list-base[dense] .mat-list-item .mat-divider,.mat-list-base[dense] .mat-list-option .mat-divider{position:absolute;bottom:0;left:0;width:100%;margin:0}[dir=rtl] .mat-list-base[dense] .mat-list-item .mat-divider,[dir=rtl] .mat-list-base[dense] .mat-list-option .mat-divider{margin-left:auto;margin-right:0}.mat-list-base[dense] .mat-list-item .mat-divider.mat-divider-inset,.mat-list-base[dense] .mat-list-option .mat-divider.mat-divider-inset{position:absolute}.mat-nav-list a{text-decoration:none;color:inherit}.mat-nav-list .mat-list-item{cursor:pointer;outline:none}mat-action-list button{background:none;color:inherit;border:none;font:inherit;outline:inherit;-webkit-tap-highlight-color:transparent;text-align:left}[dir=rtl] mat-action-list button{text-align:right}mat-action-list button::-moz-focus-inner{border:0}mat-action-list .mat-list-item{cursor:pointer;outline:inherit}.mat-list-option:not(.mat-list-item-disabled){cursor:pointer;outline:none}.mat-list-item-disabled{pointer-events:none}.cdk-high-contrast-active .mat-list-item-disabled{opacity:.5}.cdk-high-contrast-active :host .mat-list-item-disabled{opacity:.5}.cdk-high-contrast-active .mat-selection-list:focus{outline-style:dotted}.cdk-high-contrast-active .mat-list-option:hover,.cdk-high-contrast-active .mat-list-option:focus,.cdk-high-contrast-active .mat-nav-list .mat-list-item:hover,.cdk-high-contrast-active .mat-nav-list .mat-list-item:focus,.cdk-high-contrast-active mat-action-list .mat-list-item:hover,.cdk-high-contrast-active mat-action-list .mat-list-item:focus{outline:dotted 1px}.cdk-high-contrast-active .mat-list-single-selected-option::after{content:\\\"\\\";position:absolute;top:50%;right:16px;transform:translateY(-50%);width:10px;height:0;border-bottom:solid 10px;border-radius:10px}.cdk-high-contrast-active [dir=rtl] .mat-list-single-selected-option::after{right:auto;left:16px}@media(hover: none){.mat-list-option:not(.mat-list-item-disabled):hover,.mat-nav-list .mat-list-item:not(.mat-list-item-disabled):hover,.mat-action-list .mat-list-item:not(.mat-list-item-disabled):hover{background:none}}\\n\"]\n            }] }\n];\nif (false) {\n    /** @type {?} */\n    MatNavList.ngAcceptInputType_disableRipple;\n    /** @type {?} */\n    MatNavList.ngAcceptInputType_disabled;\n    /**\n     * Emits when the state of the list changes.\n     * @type {?}\n     */\n    MatNavList.prototype._stateChanges;\n}\nclass MatList extends _MatListMixinBase {\n    /**\n     * @param {?} _elementRef\n     */\n    constructor(_elementRef) {\n        super();\n        this._elementRef = _elementRef;\n        /**\n         * Emits when the state of the list changes.\n         */\n        this._stateChanges = new Subject();\n        if (this._getListType() === 'action-list') {\n            _elementRef.nativeElement.classList.add('mat-action-list');\n        }\n    }\n    /**\n     * @return {?}\n     */\n    _getListType() {\n        /** @type {?} */\n        const nodeName = this._elementRef.nativeElement.nodeName.toLowerCase();\n        if (nodeName === 'mat-list') {\n            return 'list';\n        }\n        if (nodeName === 'mat-action-list') {\n            return 'action-list';\n        }\n        return null;\n    }\n    /**\n     * @return {?}\n     */\n    ngOnChanges() {\n        this._stateChanges.next();\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this._stateChanges.complete();\n    }\n}\nMatList.decorators = [\n    { type: Component, args: [{\n                selector: 'mat-list, mat-action-list',\n                exportAs: 'matList',\n                template: \"<ng-content></ng-content>\\n\\n\",\n                host: {\n                    'class': 'mat-list mat-list-base'\n                },\n                inputs: ['disableRipple', 'disabled'],\n                encapsulation: ViewEncapsulation.None,\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                styles: [\".mat-subheader{display:flex;box-sizing:border-box;padding:16px;align-items:center}.mat-list-base .mat-subheader{margin:0}.mat-list-base{padding-top:8px;display:block;-webkit-tap-highlight-color:transparent}.mat-list-base .mat-subheader{height:48px;line-height:16px}.mat-list-base .mat-subheader:first-child{margin-top:-8px}.mat-list-base .mat-list-item,.mat-list-base .mat-list-option{display:block;height:48px;-webkit-tap-highlight-color:transparent;width:100%;padding:0;position:relative}.mat-list-base .mat-list-item .mat-list-item-content,.mat-list-base .mat-list-option .mat-list-item-content{display:flex;flex-direction:row;align-items:center;box-sizing:border-box;padding:0 16px;position:relative;height:inherit}.mat-list-base .mat-list-item .mat-list-item-content-reverse,.mat-list-base .mat-list-option .mat-list-item-content-reverse{display:flex;align-items:center;padding:0 16px;flex-direction:row-reverse;justify-content:space-around}.mat-list-base .mat-list-item .mat-list-item-ripple,.mat-list-base .mat-list-option .mat-list-item-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none}.mat-list-base .mat-list-item.mat-list-item-with-avatar,.mat-list-base .mat-list-option.mat-list-item-with-avatar{height:56px}.mat-list-base .mat-list-item.mat-2-line,.mat-list-base .mat-list-option.mat-2-line{height:72px}.mat-list-base .mat-list-item.mat-3-line,.mat-list-base .mat-list-option.mat-3-line{height:88px}.mat-list-base .mat-list-item.mat-multi-line,.mat-list-base .mat-list-option.mat-multi-line{height:auto}.mat-list-base .mat-list-item.mat-multi-line .mat-list-item-content,.mat-list-base .mat-list-option.mat-multi-line .mat-list-item-content{padding-top:16px;padding-bottom:16px}.mat-list-base .mat-list-item .mat-list-text,.mat-list-base .mat-list-option .mat-list-text{display:flex;flex-direction:column;width:100%;box-sizing:border-box;overflow:hidden;padding:0}.mat-list-base .mat-list-item .mat-list-text>*,.mat-list-base .mat-list-option .mat-list-text>*{margin:0;padding:0;font-weight:normal;font-size:inherit}.mat-list-base .mat-list-item .mat-list-text:empty,.mat-list-base .mat-list-option .mat-list-text:empty{display:none}.mat-list-base .mat-list-item.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,.mat-list-base .mat-list-item.mat-list-option .mat-list-item-content .mat-list-text,.mat-list-base .mat-list-option.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,.mat-list-base .mat-list-option.mat-list-option .mat-list-item-content .mat-list-text{padding-right:0;padding-left:16px}[dir=rtl] .mat-list-base .mat-list-item.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base .mat-list-item.mat-list-option .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base .mat-list-option.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base .mat-list-option.mat-list-option .mat-list-item-content .mat-list-text{padding-right:16px;padding-left:0}.mat-list-base .mat-list-item.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,.mat-list-base .mat-list-item.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base .mat-list-option.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,.mat-list-base .mat-list-option.mat-list-option .mat-list-item-content-reverse .mat-list-text{padding-left:0;padding-right:16px}[dir=rtl] .mat-list-base .mat-list-item.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base .mat-list-item.mat-list-option .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base .mat-list-option.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base .mat-list-option.mat-list-option .mat-list-item-content-reverse .mat-list-text{padding-right:0;padding-left:16px}.mat-list-base .mat-list-item.mat-list-item-with-avatar.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base .mat-list-item.mat-list-item-with-avatar.mat-list-option .mat-list-item-content .mat-list-text,.mat-list-base .mat-list-option.mat-list-item-with-avatar.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base .mat-list-option.mat-list-item-with-avatar.mat-list-option .mat-list-item-content .mat-list-text{padding-right:16px;padding-left:16px}.mat-list-base .mat-list-item .mat-list-avatar,.mat-list-base .mat-list-option .mat-list-avatar{flex-shrink:0;width:40px;height:40px;border-radius:50%;object-fit:cover}.mat-list-base .mat-list-item .mat-list-avatar~.mat-divider-inset,.mat-list-base .mat-list-option .mat-list-avatar~.mat-divider-inset{margin-left:72px;width:calc(100% - 72px)}[dir=rtl] .mat-list-base .mat-list-item .mat-list-avatar~.mat-divider-inset,[dir=rtl] .mat-list-base .mat-list-option .mat-list-avatar~.mat-divider-inset{margin-left:auto;margin-right:72px}.mat-list-base .mat-list-item .mat-list-icon,.mat-list-base .mat-list-option .mat-list-icon{flex-shrink:0;width:24px;height:24px;font-size:24px;box-sizing:content-box;border-radius:50%;padding:4px}.mat-list-base .mat-list-item .mat-list-icon~.mat-divider-inset,.mat-list-base .mat-list-option .mat-list-icon~.mat-divider-inset{margin-left:64px;width:calc(100% - 64px)}[dir=rtl] .mat-list-base .mat-list-item .mat-list-icon~.mat-divider-inset,[dir=rtl] .mat-list-base .mat-list-option .mat-list-icon~.mat-divider-inset{margin-left:auto;margin-right:64px}.mat-list-base .mat-list-item .mat-divider,.mat-list-base .mat-list-option .mat-divider{position:absolute;bottom:0;left:0;width:100%;margin:0}[dir=rtl] .mat-list-base .mat-list-item .mat-divider,[dir=rtl] .mat-list-base .mat-list-option .mat-divider{margin-left:auto;margin-right:0}.mat-list-base .mat-list-item .mat-divider.mat-divider-inset,.mat-list-base .mat-list-option .mat-divider.mat-divider-inset{position:absolute}.mat-list-base[dense]{padding-top:4px;display:block}.mat-list-base[dense] .mat-subheader{height:40px;line-height:8px}.mat-list-base[dense] .mat-subheader:first-child{margin-top:-4px}.mat-list-base[dense] .mat-list-item,.mat-list-base[dense] .mat-list-option{display:block;height:40px;-webkit-tap-highlight-color:transparent;width:100%;padding:0;position:relative}.mat-list-base[dense] .mat-list-item .mat-list-item-content,.mat-list-base[dense] .mat-list-option .mat-list-item-content{display:flex;flex-direction:row;align-items:center;box-sizing:border-box;padding:0 16px;position:relative;height:inherit}.mat-list-base[dense] .mat-list-item .mat-list-item-content-reverse,.mat-list-base[dense] .mat-list-option .mat-list-item-content-reverse{display:flex;align-items:center;padding:0 16px;flex-direction:row-reverse;justify-content:space-around}.mat-list-base[dense] .mat-list-item .mat-list-item-ripple,.mat-list-base[dense] .mat-list-option .mat-list-item-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none}.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar{height:48px}.mat-list-base[dense] .mat-list-item.mat-2-line,.mat-list-base[dense] .mat-list-option.mat-2-line{height:60px}.mat-list-base[dense] .mat-list-item.mat-3-line,.mat-list-base[dense] .mat-list-option.mat-3-line{height:76px}.mat-list-base[dense] .mat-list-item.mat-multi-line,.mat-list-base[dense] .mat-list-option.mat-multi-line{height:auto}.mat-list-base[dense] .mat-list-item.mat-multi-line .mat-list-item-content,.mat-list-base[dense] .mat-list-option.mat-multi-line .mat-list-item-content{padding-top:16px;padding-bottom:16px}.mat-list-base[dense] .mat-list-item .mat-list-text,.mat-list-base[dense] .mat-list-option .mat-list-text{display:flex;flex-direction:column;width:100%;box-sizing:border-box;overflow:hidden;padding:0}.mat-list-base[dense] .mat-list-item .mat-list-text>*,.mat-list-base[dense] .mat-list-option .mat-list-text>*{margin:0;padding:0;font-weight:normal;font-size:inherit}.mat-list-base[dense] .mat-list-item .mat-list-text:empty,.mat-list-base[dense] .mat-list-option .mat-list-text:empty{display:none}.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,.mat-list-base[dense] .mat-list-item.mat-list-option .mat-list-item-content .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-option .mat-list-item-content .mat-list-text{padding-right:0;padding-left:16px}[dir=rtl] .mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-item.mat-list-option .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-option.mat-list-option .mat-list-item-content .mat-list-text{padding-right:16px;padding-left:0}.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,.mat-list-base[dense] .mat-list-item.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-option .mat-list-item-content-reverse .mat-list-text{padding-left:0;padding-right:16px}[dir=rtl] .mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-item.mat-list-option .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-option.mat-list-option .mat-list-item-content-reverse .mat-list-text{padding-right:0;padding-left:16px}.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar.mat-list-option .mat-list-item-content .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar.mat-list-option .mat-list-item-content .mat-list-text{padding-right:16px;padding-left:16px}.mat-list-base[dense] .mat-list-item .mat-list-avatar,.mat-list-base[dense] .mat-list-option .mat-list-avatar{flex-shrink:0;width:36px;height:36px;border-radius:50%;object-fit:cover}.mat-list-base[dense] .mat-list-item .mat-list-avatar~.mat-divider-inset,.mat-list-base[dense] .mat-list-option .mat-list-avatar~.mat-divider-inset{margin-left:68px;width:calc(100% - 68px)}[dir=rtl] .mat-list-base[dense] .mat-list-item .mat-list-avatar~.mat-divider-inset,[dir=rtl] .mat-list-base[dense] .mat-list-option .mat-list-avatar~.mat-divider-inset{margin-left:auto;margin-right:68px}.mat-list-base[dense] .mat-list-item .mat-list-icon,.mat-list-base[dense] .mat-list-option .mat-list-icon{flex-shrink:0;width:20px;height:20px;font-size:20px;box-sizing:content-box;border-radius:50%;padding:4px}.mat-list-base[dense] .mat-list-item .mat-list-icon~.mat-divider-inset,.mat-list-base[dense] .mat-list-option .mat-list-icon~.mat-divider-inset{margin-left:60px;width:calc(100% - 60px)}[dir=rtl] .mat-list-base[dense] .mat-list-item .mat-list-icon~.mat-divider-inset,[dir=rtl] .mat-list-base[dense] .mat-list-option .mat-list-icon~.mat-divider-inset{margin-left:auto;margin-right:60px}.mat-list-base[dense] .mat-list-item .mat-divider,.mat-list-base[dense] .mat-list-option .mat-divider{position:absolute;bottom:0;left:0;width:100%;margin:0}[dir=rtl] .mat-list-base[dense] .mat-list-item .mat-divider,[dir=rtl] .mat-list-base[dense] .mat-list-option .mat-divider{margin-left:auto;margin-right:0}.mat-list-base[dense] .mat-list-item .mat-divider.mat-divider-inset,.mat-list-base[dense] .mat-list-option .mat-divider.mat-divider-inset{position:absolute}.mat-nav-list a{text-decoration:none;color:inherit}.mat-nav-list .mat-list-item{cursor:pointer;outline:none}mat-action-list button{background:none;color:inherit;border:none;font:inherit;outline:inherit;-webkit-tap-highlight-color:transparent;text-align:left}[dir=rtl] mat-action-list button{text-align:right}mat-action-list button::-moz-focus-inner{border:0}mat-action-list .mat-list-item{cursor:pointer;outline:inherit}.mat-list-option:not(.mat-list-item-disabled){cursor:pointer;outline:none}.mat-list-item-disabled{pointer-events:none}.cdk-high-contrast-active .mat-list-item-disabled{opacity:.5}.cdk-high-contrast-active :host .mat-list-item-disabled{opacity:.5}.cdk-high-contrast-active .mat-selection-list:focus{outline-style:dotted}.cdk-high-contrast-active .mat-list-option:hover,.cdk-high-contrast-active .mat-list-option:focus,.cdk-high-contrast-active .mat-nav-list .mat-list-item:hover,.cdk-high-contrast-active .mat-nav-list .mat-list-item:focus,.cdk-high-contrast-active mat-action-list .mat-list-item:hover,.cdk-high-contrast-active mat-action-list .mat-list-item:focus{outline:dotted 1px}.cdk-high-contrast-active .mat-list-single-selected-option::after{content:\\\"\\\";position:absolute;top:50%;right:16px;transform:translateY(-50%);width:10px;height:0;border-bottom:solid 10px;border-radius:10px}.cdk-high-contrast-active [dir=rtl] .mat-list-single-selected-option::after{right:auto;left:16px}@media(hover: none){.mat-list-option:not(.mat-list-item-disabled):hover,.mat-nav-list .mat-list-item:not(.mat-list-item-disabled):hover,.mat-action-list .mat-list-item:not(.mat-list-item-disabled):hover{background:none}}\\n\"]\n            }] }\n];\n/** @nocollapse */\nMatList.ctorParameters = () => [\n    { type: ElementRef }\n];\nif (false) {\n    /** @type {?} */\n    MatList.ngAcceptInputType_disableRipple;\n    /** @type {?} */\n    MatList.ngAcceptInputType_disabled;\n    /**\n     * Emits when the state of the list changes.\n     * @type {?}\n     */\n    MatList.prototype._stateChanges;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatList.prototype._elementRef;\n}\n/**\n * Directive whose purpose is to add the mat- CSS styling to this selector.\n * \\@docs-private\n */\nclass MatListAvatarCssMatStyler {\n}\nMatListAvatarCssMatStyler.decorators = [\n    { type: Directive, args: [{\n                selector: '[mat-list-avatar], [matListAvatar]',\n                host: { 'class': 'mat-list-avatar' }\n            },] }\n];\n/**\n * Directive whose purpose is to add the mat- CSS styling to this selector.\n * \\@docs-private\n */\nclass MatListIconCssMatStyler {\n}\nMatListIconCssMatStyler.decorators = [\n    { type: Directive, args: [{\n                selector: '[mat-list-icon], [matListIcon]',\n                host: { 'class': 'mat-list-icon' }\n            },] }\n];\n/**\n * Directive whose purpose is to add the mat- CSS styling to this selector.\n * \\@docs-private\n */\nclass MatListSubheaderCssMatStyler {\n}\nMatListSubheaderCssMatStyler.decorators = [\n    { type: Directive, args: [{\n                selector: '[mat-subheader], [matSubheader]',\n                host: { 'class': 'mat-subheader' }\n            },] }\n];\n/**\n * An item within a Material Design list.\n */\nclass MatListItem extends _MatListItemMixinBase {\n    /**\n     * @param {?} _element\n     * @param {?} _changeDetectorRef\n     * @param {?=} navList\n     * @param {?=} list\n     */\n    constructor(_element, _changeDetectorRef, navList, list) {\n        super();\n        this._element = _element;\n        this._isInteractiveList = false;\n        this._destroyed = new Subject();\n        this._disabled = false;\n        this._isInteractiveList = !!(navList || (list && list._getListType() === 'action-list'));\n        this._list = navList || list;\n        // If no type attributed is specified for <button>, set it to \"button\".\n        // If a type attribute is already specified, do nothing.\n        /** @type {?} */\n        const element = this._getHostElement();\n        if (element.nodeName.toLowerCase() === 'button' && !element.hasAttribute('type')) {\n            element.setAttribute('type', 'button');\n        }\n        if (this._list) {\n            // React to changes in the state of the parent list since\n            // some of the item's properties depend on it (e.g. `disableRipple`).\n            this._list._stateChanges.pipe(takeUntil(this._destroyed)).subscribe((/**\n             * @return {?}\n             */\n            () => {\n                _changeDetectorRef.markForCheck();\n            }));\n        }\n    }\n    /**\n     * Whether the option is disabled.\n     * @return {?}\n     */\n    get disabled() { return this._disabled || !!(this._list && this._list.disabled); }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set disabled(value) {\n        this._disabled = coerceBooleanProperty(value);\n    }\n    /**\n     * @return {?}\n     */\n    ngAfterContentInit() {\n        setLines(this._lines, this._element);\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this._destroyed.next();\n        this._destroyed.complete();\n    }\n    /**\n     * Whether this list item should show a ripple effect when clicked.\n     * @return {?}\n     */\n    _isRippleDisabled() {\n        return !this._isInteractiveList || this.disableRipple ||\n            !!(this._list && this._list.disableRipple);\n    }\n    /**\n     * Retrieves the DOM element of the component host.\n     * @return {?}\n     */\n    _getHostElement() {\n        return this._element.nativeElement;\n    }\n}\nMatListItem.decorators = [\n    { type: Component, args: [{\n                selector: 'mat-list-item, a[mat-list-item], button[mat-list-item]',\n                exportAs: 'matListItem',\n                host: {\n                    'class': 'mat-list-item mat-focus-indicator',\n                    '[class.mat-list-item-disabled]': 'disabled',\n                    // @breaking-change 8.0.0 Remove `mat-list-item-avatar` in favor of `mat-list-item-with-avatar`.\n                    '[class.mat-list-item-avatar]': '_avatar || _icon',\n                    '[class.mat-list-item-with-avatar]': '_avatar || _icon',\n                },\n                inputs: ['disableRipple'],\n                template: \"<div class=\\\"mat-list-item-content\\\">\\n  <div class=\\\"mat-list-item-ripple\\\" mat-ripple\\n       [matRippleTrigger]=\\\"_getHostElement()\\\"\\n       [matRippleDisabled]=\\\"_isRippleDisabled()\\\">\\n  </div>\\n\\n  <ng-content select=\\\"[mat-list-avatar], [mat-list-icon], [matListAvatar], [matListIcon]\\\">\\n  </ng-content>\\n\\n  <div class=\\\"mat-list-text\\\"><ng-content select=\\\"[mat-line], [matLine]\\\"></ng-content></div>\\n\\n  <ng-content></ng-content>\\n</div>\\n\",\n                encapsulation: ViewEncapsulation.None,\n                changeDetection: ChangeDetectionStrategy.OnPush\n            }] }\n];\n/** @nocollapse */\nMatListItem.ctorParameters = () => [\n    { type: ElementRef },\n    { type: ChangeDetectorRef },\n    { type: MatNavList, decorators: [{ type: Optional }] },\n    { type: MatList, decorators: [{ type: Optional }] }\n];\nMatListItem.propDecorators = {\n    _lines: [{ type: ContentChildren, args: [MatLine, { descendants: true },] }],\n    _avatar: [{ type: ContentChild, args: [MatListAvatarCssMatStyler,] }],\n    _icon: [{ type: ContentChild, args: [MatListIconCssMatStyler,] }],\n    disabled: [{ type: Input }]\n};\nif (false) {\n    /** @type {?} */\n    MatListItem.ngAcceptInputType_disableRipple;\n    /** @type {?} */\n    MatListItem.ngAcceptInputType_disabled;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatListItem.prototype._isInteractiveList;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatListItem.prototype._list;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatListItem.prototype._destroyed;\n    /** @type {?} */\n    MatListItem.prototype._lines;\n    /** @type {?} */\n    MatListItem.prototype._avatar;\n    /** @type {?} */\n    MatListItem.prototype._icon;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatListItem.prototype._disabled;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatListItem.prototype._element;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/list/selection-list.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * \\@docs-private\n */\nclass MatSelectionListBase {\n}\n/** @type {?} */\nconst _MatSelectionListMixinBase = mixinDisableRipple(MatSelectionListBase);\n/**\n * \\@docs-private\n */\nclass MatListOptionBase {\n}\n/** @type {?} */\nconst _MatListOptionMixinBase = mixinDisableRipple(MatListOptionBase);\n/**\n * \\@docs-private\n * @type {?}\n */\nconst MAT_SELECTION_LIST_VALUE_ACCESSOR = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef((/**\n     * @return {?}\n     */\n    () => MatSelectionList)),\n    multi: true\n};\n/**\n * Change event that is being fired whenever the selected state of an option changes.\n */\nclass MatSelectionListChange {\n    /**\n     * @param {?} source\n     * @param {?} option\n     */\n    constructor(source, option) {\n        this.source = source;\n        this.option = option;\n    }\n}\nif (false) {\n    /**\n     * Reference to the selection list that emitted the event.\n     * @type {?}\n     */\n    MatSelectionListChange.prototype.source;\n    /**\n     * Reference to the option that has been changed.\n     * @type {?}\n     */\n    MatSelectionListChange.prototype.option;\n}\n/**\n * Component for list-options of selection-list. Each list-option can automatically\n * generate a checkbox and can put current item into the selectionModel of selection-list\n * if the current item is selected.\n */\nclass MatListOption extends _MatListOptionMixinBase {\n    /**\n     * @param {?} _element\n     * @param {?} _changeDetector\n     * @param {?} selectionList\n     */\n    constructor(_element, _changeDetector, selectionList) {\n        super();\n        this._element = _element;\n        this._changeDetector = _changeDetector;\n        this.selectionList = selectionList;\n        this._selected = false;\n        this._disabled = false;\n        this._hasFocus = false;\n        /**\n         * Whether the label should appear before or after the checkbox. Defaults to 'after'\n         */\n        this.checkboxPosition = 'after';\n        /**\n         * This is set to true after the first OnChanges cycle so we don't clear the value of `selected`\n         * in the first cycle.\n         */\n        this._inputsInitialized = false;\n    }\n    /**\n     * Theme color of the list option. This sets the color of the checkbox.\n     * @return {?}\n     */\n    get color() { return this._color || this.selectionList.color; }\n    /**\n     * @param {?} newValue\n     * @return {?}\n     */\n    set color(newValue) { this._color = newValue; }\n    /**\n     * Value of the option\n     * @return {?}\n     */\n    get value() { return this._value; }\n    /**\n     * @param {?} newValue\n     * @return {?}\n     */\n    set value(newValue) {\n        if (this.selected && newValue !== this.value && this._inputsInitialized) {\n            this.selected = false;\n        }\n        this._value = newValue;\n    }\n    /**\n     * Whether the option is disabled.\n     * @return {?}\n     */\n    get disabled() { return this._disabled || (this.selectionList && this.selectionList.disabled); }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set disabled(value) {\n        /** @type {?} */\n        const newValue = coerceBooleanProperty(value);\n        if (newValue !== this._disabled) {\n            this._disabled = newValue;\n            this._changeDetector.markForCheck();\n        }\n    }\n    /**\n     * Whether the option is selected.\n     * @return {?}\n     */\n    get selected() { return this.selectionList.selectedOptions.isSelected(this); }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set selected(value) {\n        /** @type {?} */\n        const isSelected = coerceBooleanProperty(value);\n        if (isSelected !== this._selected) {\n            this._setSelected(isSelected);\n            this.selectionList._reportValueChange();\n        }\n    }\n    /**\n     * @return {?}\n     */\n    ngOnInit() {\n        /** @type {?} */\n        const list = this.selectionList;\n        if (list._value && list._value.some((/**\n         * @param {?} value\n         * @return {?}\n         */\n        value => list.compareWith(value, this._value)))) {\n            this._setSelected(true);\n        }\n        /** @type {?} */\n        const wasSelected = this._selected;\n        // List options that are selected at initialization can't be reported properly to the form\n        // control. This is because it takes some time until the selection-list knows about all\n        // available options. Also it can happen that the ControlValueAccessor has an initial value\n        // that should be used instead. Deferring the value change report to the next tick ensures\n        // that the form control value is not being overwritten.\n        Promise.resolve().then((/**\n         * @return {?}\n         */\n        () => {\n            if (this._selected || wasSelected) {\n                this.selected = true;\n                this._changeDetector.markForCheck();\n            }\n        }));\n        this._inputsInitialized = true;\n    }\n    /**\n     * @return {?}\n     */\n    ngAfterContentInit() {\n        setLines(this._lines, this._element);\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        if (this.selected) {\n            // We have to delay this until the next tick in order\n            // to avoid changed after checked errors.\n            Promise.resolve().then((/**\n             * @return {?}\n             */\n            () => {\n                this.selected = false;\n            }));\n        }\n        /** @type {?} */\n        const hadFocus = this._hasFocus;\n        /** @type {?} */\n        const newActiveItem = this.selectionList._removeOptionFromList(this);\n        // Only move focus if this option was focused at the time it was destroyed.\n        if (hadFocus && newActiveItem) {\n            newActiveItem.focus();\n        }\n    }\n    /**\n     * Toggles the selection state of the option.\n     * @return {?}\n     */\n    toggle() {\n        this.selected = !this.selected;\n    }\n    /**\n     * Allows for programmatic focusing of the option.\n     * @return {?}\n     */\n    focus() {\n        this._element.nativeElement.focus();\n    }\n    /**\n     * Returns the list item's text label. Implemented as a part of the FocusKeyManager.\n     * \\@docs-private\n     * @return {?}\n     */\n    getLabel() {\n        return this._text ? (this._text.nativeElement.textContent || '') : '';\n    }\n    /**\n     * Whether this list item should show a ripple effect when clicked.\n     * @return {?}\n     */\n    _isRippleDisabled() {\n        return this.disabled || this.disableRipple || this.selectionList.disableRipple;\n    }\n    /**\n     * @return {?}\n     */\n    _handleClick() {\n        if (!this.disabled && (this.selectionList.multiple || !this.selected)) {\n            this.toggle();\n            // Emit a change event if the selected state of the option changed through user interaction.\n            this.selectionList._emitChangeEvent(this);\n        }\n    }\n    /**\n     * @return {?}\n     */\n    _handleFocus() {\n        this.selectionList._setFocusedOption(this);\n        this._hasFocus = true;\n    }\n    /**\n     * @return {?}\n     */\n    _handleBlur() {\n        this.selectionList._onTouched();\n        this._hasFocus = false;\n    }\n    /**\n     * Retrieves the DOM element of the component host.\n     * @return {?}\n     */\n    _getHostElement() {\n        return this._element.nativeElement;\n    }\n    /**\n     * Sets the selected state of the option. Returns whether the value has changed.\n     * @param {?} selected\n     * @return {?}\n     */\n    _setSelected(selected) {\n        if (selected === this._selected) {\n            return false;\n        }\n        this._selected = selected;\n        if (selected) {\n            this.selectionList.selectedOptions.select(this);\n        }\n        else {\n            this.selectionList.selectedOptions.deselect(this);\n        }\n        this._changeDetector.markForCheck();\n        return true;\n    }\n    /**\n     * Notifies Angular that the option needs to be checked in the next change detection run. Mainly\n     * used to trigger an update of the list option if the disabled state of the selection list\n     * changed.\n     * @return {?}\n     */\n    _markForCheck() {\n        this._changeDetector.markForCheck();\n    }\n}\nMatListOption.decorators = [\n    { type: Component, args: [{\n                selector: 'mat-list-option',\n                exportAs: 'matListOption',\n                inputs: ['disableRipple'],\n                host: {\n                    'role': 'option',\n                    'class': 'mat-list-item mat-list-option mat-focus-indicator',\n                    '(focus)': '_handleFocus()',\n                    '(blur)': '_handleBlur()',\n                    '(click)': '_handleClick()',\n                    '[class.mat-list-item-disabled]': 'disabled',\n                    '[class.mat-list-item-with-avatar]': '_avatar || _icon',\n                    // Manually set the \"primary\" or \"warn\" class if the color has been explicitly\n                    // set to \"primary\" or \"warn\". The pseudo checkbox picks up these classes for\n                    // its theme.\n                    '[class.mat-primary]': 'color === \"primary\"',\n                    // Even though accent is the default, we need to set this class anyway, because the  list might\n                    // be placed inside a parent that has one of the other colors with a higher specificity.\n                    '[class.mat-accent]': 'color !== \"primary\" && color !== \"warn\"',\n                    '[class.mat-warn]': 'color === \"warn\"',\n                    '[class.mat-list-single-selected-option]': 'selected && !selectionList.multiple',\n                    '[attr.aria-selected]': 'selected',\n                    '[attr.aria-disabled]': 'disabled',\n                    '[attr.tabindex]': '-1',\n                },\n                template: \"<div class=\\\"mat-list-item-content\\\"\\n  [class.mat-list-item-content-reverse]=\\\"checkboxPosition == 'after'\\\">\\n\\n  <div mat-ripple\\n    class=\\\"mat-list-item-ripple\\\"\\n    [matRippleTrigger]=\\\"_getHostElement()\\\"\\n    [matRippleDisabled]=\\\"_isRippleDisabled()\\\"></div>\\n\\n  <mat-pseudo-checkbox\\n    *ngIf=\\\"selectionList.multiple\\\"\\n    [state]=\\\"selected ? 'checked' : 'unchecked'\\\"\\n    [disabled]=\\\"disabled\\\"></mat-pseudo-checkbox>\\n\\n  <div class=\\\"mat-list-text\\\" #text><ng-content></ng-content></div>\\n\\n  <ng-content select=\\\"[mat-list-avatar], [mat-list-icon], [matListAvatar], [matListIcon]\\\">\\n  </ng-content>\\n\\n</div>\\n\",\n                encapsulation: ViewEncapsulation.None,\n                changeDetection: ChangeDetectionStrategy.OnPush\n            }] }\n];\n/** @nocollapse */\nMatListOption.ctorParameters = () => [\n    { type: ElementRef },\n    { type: ChangeDetectorRef },\n    { type: MatSelectionList, decorators: [{ type: Inject, args: [forwardRef((/**\n                     * @return {?}\n                     */\n                    () => MatSelectionList)),] }] }\n];\nMatListOption.propDecorators = {\n    _avatar: [{ type: ContentChild, args: [MatListAvatarCssMatStyler,] }],\n    _icon: [{ type: ContentChild, args: [MatListIconCssMatStyler,] }],\n    _lines: [{ type: ContentChildren, args: [MatLine, { descendants: true },] }],\n    _text: [{ type: ViewChild, args: ['text',] }],\n    checkboxPosition: [{ type: Input }],\n    color: [{ type: Input }],\n    value: [{ type: Input }],\n    disabled: [{ type: Input }],\n    selected: [{ type: Input }]\n};\nif (false) {\n    /** @type {?} */\n    MatListOption.ngAcceptInputType_disabled;\n    /** @type {?} */\n    MatListOption.ngAcceptInputType_selected;\n    /** @type {?} */\n    MatListOption.ngAcceptInputType_disableRipple;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatListOption.prototype._selected;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatListOption.prototype._disabled;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatListOption.prototype._hasFocus;\n    /** @type {?} */\n    MatListOption.prototype._avatar;\n    /** @type {?} */\n    MatListOption.prototype._icon;\n    /** @type {?} */\n    MatListOption.prototype._lines;\n    /**\n     * DOM element containing the item's text.\n     * @type {?}\n     */\n    MatListOption.prototype._text;\n    /**\n     * Whether the label should appear before or after the checkbox. Defaults to 'after'\n     * @type {?}\n     */\n    MatListOption.prototype.checkboxPosition;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatListOption.prototype._color;\n    /**\n     * This is set to true after the first OnChanges cycle so we don't clear the value of `selected`\n     * in the first cycle.\n     * @type {?}\n     * @private\n     */\n    MatListOption.prototype._inputsInitialized;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatListOption.prototype._value;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatListOption.prototype._element;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatListOption.prototype._changeDetector;\n    /**\n     * \\@docs-private\n     * @type {?}\n     */\n    MatListOption.prototype.selectionList;\n}\n/**\n * Material Design list component where each item is a selectable option. Behaves as a listbox.\n */\nclass MatSelectionList extends _MatSelectionListMixinBase {\n    /**\n     * @param {?} _element\n     * @param {?} tabIndex\n     * @param {?} _changeDetector\n     */\n    constructor(_element, \n    // @breaking-change 11.0.0 Remove `tabIndex` parameter.\n    tabIndex, _changeDetector) {\n        super();\n        this._element = _element;\n        this._changeDetector = _changeDetector;\n        this._multiple = true;\n        this._contentInitialized = false;\n        /**\n         * Emits a change event whenever the selected state of an option changes.\n         */\n        this.selectionChange = new EventEmitter();\n        /**\n         * Tabindex of the selection list.\n         * \\@breaking-change 11.0.0 Remove `tabIndex` input.\n         */\n        this.tabIndex = 0;\n        /**\n         * Theme color of the selection list. This sets the checkbox color for all list options.\n         */\n        this.color = 'accent';\n        /**\n         * Function used for comparing an option against the selected value when determining which\n         * options should appear as selected. The first argument is the value of an options. The second\n         * one is a value from the selected value. A boolean must be returned.\n         */\n        this.compareWith = (/**\n         * @param {?} a1\n         * @param {?} a2\n         * @return {?}\n         */\n        (a1, a2) => a1 === a2);\n        this._disabled = false;\n        /**\n         * The currently selected options.\n         */\n        this.selectedOptions = new SelectionModel(this._multiple);\n        /**\n         * The tabindex of the selection list.\n         */\n        this._tabIndex = -1;\n        /**\n         * View to model callback that should be called whenever the selected options change.\n         */\n        this._onChange = (/**\n         * @param {?} _\n         * @return {?}\n         */\n        (_) => { });\n        /**\n         * Emits when the list has been destroyed.\n         */\n        this._destroyed = new Subject();\n        /**\n         * View to model callback that should be called if the list or its options lost focus.\n         */\n        this._onTouched = (/**\n         * @return {?}\n         */\n        () => { });\n    }\n    /**\n     * Whether the selection list is disabled.\n     * @return {?}\n     */\n    get disabled() { return this._disabled; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set disabled(value) {\n        this._disabled = coerceBooleanProperty(value);\n        // The `MatSelectionList` and `MatListOption` are using the `OnPush` change detection\n        // strategy. Therefore the options will not check for any changes if the `MatSelectionList`\n        // changed its state. Since we know that a change to `disabled` property of the list affects\n        // the state of the options, we manually mark each option for check.\n        this._markOptionsForCheck();\n    }\n    /**\n     * Whether selection is limited to one or multiple items (default multiple).\n     * @return {?}\n     */\n    get multiple() { return this._multiple; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set multiple(value) {\n        /** @type {?} */\n        const newValue = coerceBooleanProperty(value);\n        if (newValue !== this._multiple) {\n            if (isDevMode() && this._contentInitialized) {\n                throw new Error('Cannot change `multiple` mode of mat-selection-list after initialization.');\n            }\n            this._multiple = newValue;\n            this.selectedOptions = new SelectionModel(this._multiple, this.selectedOptions.selected);\n        }\n    }\n    /**\n     * @return {?}\n     */\n    ngAfterContentInit() {\n        this._contentInitialized = true;\n        this._keyManager = new FocusKeyManager(this.options)\n            .withWrap()\n            .withTypeAhead()\n            // Allow disabled items to be focusable. For accessibility reasons, there must be a way for\n            // screenreader users, that allows reading the different options of the list.\n            .skipPredicate((/**\n         * @return {?}\n         */\n        () => false))\n            .withAllowedModifierKeys(['shiftKey']);\n        if (this._value) {\n            this._setOptionsFromValues(this._value);\n        }\n        // If the user attempts to tab out of the selection list, allow focus to escape.\n        this._keyManager.tabOut.pipe(takeUntil(this._destroyed)).subscribe((/**\n         * @return {?}\n         */\n        () => {\n            this._allowFocusEscape();\n        }));\n        // When the number of options change, update the tabindex of the selection list.\n        this.options.changes.pipe(startWith(null), takeUntil(this._destroyed)).subscribe((/**\n         * @return {?}\n         */\n        () => {\n            this._updateTabIndex();\n        }));\n        // Sync external changes to the model back to the options.\n        this.selectedOptions.changed.pipe(takeUntil(this._destroyed)).subscribe((/**\n         * @param {?} event\n         * @return {?}\n         */\n        event => {\n            if (event.added) {\n                for (let item of event.added) {\n                    item.selected = true;\n                }\n            }\n            if (event.removed) {\n                for (let item of event.removed) {\n                    item.selected = false;\n                }\n            }\n        }));\n    }\n    /**\n     * @param {?} changes\n     * @return {?}\n     */\n    ngOnChanges(changes) {\n        /** @type {?} */\n        const disableRippleChanges = changes['disableRipple'];\n        /** @type {?} */\n        const colorChanges = changes['color'];\n        if ((disableRippleChanges && !disableRippleChanges.firstChange) ||\n            (colorChanges && !colorChanges.firstChange)) {\n            this._markOptionsForCheck();\n        }\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this._destroyed.next();\n        this._destroyed.complete();\n        this._isDestroyed = true;\n    }\n    /**\n     * Focuses the selection list.\n     * @param {?=} options\n     * @return {?}\n     */\n    focus(options) {\n        this._element.nativeElement.focus(options);\n    }\n    /**\n     * Selects all of the options.\n     * @return {?}\n     */\n    selectAll() {\n        this._setAllOptionsSelected(true);\n    }\n    /**\n     * Deselects all of the options.\n     * @return {?}\n     */\n    deselectAll() {\n        this._setAllOptionsSelected(false);\n    }\n    /**\n     * Sets the focused option of the selection-list.\n     * @param {?} option\n     * @return {?}\n     */\n    _setFocusedOption(option) {\n        this._keyManager.updateActiveItem(option);\n    }\n    /**\n     * Removes an option from the selection list and updates the active item.\n     * @param {?} option\n     * @return {?} Currently-active item.\n     */\n    _removeOptionFromList(option) {\n        /** @type {?} */\n        const optionIndex = this._getOptionIndex(option);\n        if (optionIndex > -1 && this._keyManager.activeItemIndex === optionIndex) {\n            // Check whether the option is the last item\n            if (optionIndex > 0) {\n                this._keyManager.updateActiveItem(optionIndex - 1);\n            }\n            else if (optionIndex === 0 && this.options.length > 1) {\n                this._keyManager.updateActiveItem(Math.min(optionIndex + 1, this.options.length - 1));\n            }\n        }\n        return this._keyManager.activeItem;\n    }\n    /**\n     * Passes relevant key presses to our key manager.\n     * @param {?} event\n     * @return {?}\n     */\n    _keydown(event) {\n        /** @type {?} */\n        const keyCode = event.keyCode;\n        /** @type {?} */\n        const manager = this._keyManager;\n        /** @type {?} */\n        const previousFocusIndex = manager.activeItemIndex;\n        /** @type {?} */\n        const hasModifier = hasModifierKey(event);\n        switch (keyCode) {\n            case SPACE:\n            case ENTER:\n                if (!hasModifier && !manager.isTyping()) {\n                    this._toggleFocusedOption();\n                    // Always prevent space from scrolling the page since the list has focus\n                    event.preventDefault();\n                }\n                break;\n            case HOME:\n            case END:\n                if (!hasModifier) {\n                    keyCode === HOME ? manager.setFirstItemActive() : manager.setLastItemActive();\n                    event.preventDefault();\n                }\n                break;\n            default:\n                // The \"A\" key gets special treatment, because it's used for the \"select all\" functionality.\n                if (keyCode === A && this.multiple && hasModifierKey(event, 'ctrlKey') &&\n                    !manager.isTyping()) {\n                    this.options.find((/**\n                     * @param {?} option\n                     * @return {?}\n                     */\n                    option => !option.selected)) ? this.selectAll() : this.deselectAll();\n                    event.preventDefault();\n                }\n                else {\n                    manager.onKeydown(event);\n                }\n        }\n        if (this.multiple && (keyCode === UP_ARROW || keyCode === DOWN_ARROW) && event.shiftKey &&\n            manager.activeItemIndex !== previousFocusIndex) {\n            this._toggleFocusedOption();\n        }\n    }\n    /**\n     * Reports a value change to the ControlValueAccessor\n     * @return {?}\n     */\n    _reportValueChange() {\n        // Stop reporting value changes after the list has been destroyed. This avoids\n        // cases where the list might wrongly reset its value once it is removed, but\n        // the form control is still live.\n        if (this.options && !this._isDestroyed) {\n            /** @type {?} */\n            const value = this._getSelectedOptionValues();\n            this._onChange(value);\n            this._value = value;\n        }\n    }\n    /**\n     * Emits a change event if the selected state of an option changed.\n     * @param {?} option\n     * @return {?}\n     */\n    _emitChangeEvent(option) {\n        this.selectionChange.emit(new MatSelectionListChange(this, option));\n    }\n    /**\n     * When the selection list is focused, we want to move focus to an option within the list. Do this\n     * by setting the appropriate option to be active.\n     * @return {?}\n     */\n    _onFocus() {\n        /** @type {?} */\n        const activeIndex = this._keyManager.activeItemIndex;\n        if (!activeIndex || (activeIndex === -1)) {\n            // If there is no active index, set focus to the first option.\n            this._keyManager.setFirstItemActive();\n        }\n        else {\n            // Otherwise, set focus to the active option.\n            this._keyManager.setActiveItem(activeIndex);\n        }\n    }\n    /**\n     * Implemented as part of ControlValueAccessor.\n     * @param {?} values\n     * @return {?}\n     */\n    writeValue(values) {\n        this._value = values;\n        if (this.options) {\n            this._setOptionsFromValues(values || []);\n        }\n    }\n    /**\n     * Implemented as a part of ControlValueAccessor.\n     * @param {?} isDisabled\n     * @return {?}\n     */\n    setDisabledState(isDisabled) {\n        this.disabled = isDisabled;\n    }\n    /**\n     * Implemented as part of ControlValueAccessor.\n     * @param {?} fn\n     * @return {?}\n     */\n    registerOnChange(fn) {\n        this._onChange = fn;\n    }\n    /**\n     * Implemented as part of ControlValueAccessor.\n     * @param {?} fn\n     * @return {?}\n     */\n    registerOnTouched(fn) {\n        this._onTouched = fn;\n    }\n    /**\n     * Sets the selected options based on the specified values.\n     * @private\n     * @param {?} values\n     * @return {?}\n     */\n    _setOptionsFromValues(values) {\n        this.options.forEach((/**\n         * @param {?} option\n         * @return {?}\n         */\n        option => option._setSelected(false)));\n        values.forEach((/**\n         * @param {?} value\n         * @return {?}\n         */\n        value => {\n            /** @type {?} */\n            const correspondingOption = this.options.find((/**\n             * @param {?} option\n             * @return {?}\n             */\n            option => {\n                // Skip options that are already in the model. This allows us to handle cases\n                // where the same primitive value is selected multiple times.\n                return option.selected ? false : this.compareWith(option.value, value);\n            }));\n            if (correspondingOption) {\n                correspondingOption._setSelected(true);\n            }\n        }));\n    }\n    /**\n     * Returns the values of the selected options.\n     * @private\n     * @return {?}\n     */\n    _getSelectedOptionValues() {\n        return this.options.filter((/**\n         * @param {?} option\n         * @return {?}\n         */\n        option => option.selected)).map((/**\n         * @param {?} option\n         * @return {?}\n         */\n        option => option.value));\n    }\n    /**\n     * Toggles the state of the currently focused option if enabled.\n     * @private\n     * @return {?}\n     */\n    _toggleFocusedOption() {\n        /** @type {?} */\n        let focusedIndex = this._keyManager.activeItemIndex;\n        if (focusedIndex != null && this._isValidIndex(focusedIndex)) {\n            /** @type {?} */\n            let focusedOption = this.options.toArray()[focusedIndex];\n            if (focusedOption && !focusedOption.disabled && (this._multiple || !focusedOption.selected)) {\n                focusedOption.toggle();\n                // Emit a change event because the focused option changed its state through user\n                // interaction.\n                this._emitChangeEvent(focusedOption);\n            }\n        }\n    }\n    /**\n     * Sets the selected state on all of the options\n     * and emits an event if anything changed.\n     * @private\n     * @param {?} isSelected\n     * @return {?}\n     */\n    _setAllOptionsSelected(isSelected) {\n        // Keep track of whether anything changed, because we only want to\n        // emit the changed event when something actually changed.\n        /** @type {?} */\n        let hasChanged = false;\n        this.options.forEach((/**\n         * @param {?} option\n         * @return {?}\n         */\n        option => {\n            if (option._setSelected(isSelected)) {\n                hasChanged = true;\n            }\n        }));\n        if (hasChanged) {\n            this._reportValueChange();\n        }\n    }\n    /**\n     * Utility to ensure all indexes are valid.\n     * @private\n     * @param {?} index The index to be checked.\n     * @return {?} True if the index is valid for our list of options.\n     */\n    _isValidIndex(index) {\n        return index >= 0 && index < this.options.length;\n    }\n    /**\n     * Returns the index of the specified list option.\n     * @private\n     * @param {?} option\n     * @return {?}\n     */\n    _getOptionIndex(option) {\n        return this.options.toArray().indexOf(option);\n    }\n    /**\n     * Marks all the options to be checked in the next change detection run.\n     * @private\n     * @return {?}\n     */\n    _markOptionsForCheck() {\n        if (this.options) {\n            this.options.forEach((/**\n             * @param {?} option\n             * @return {?}\n             */\n            option => option._markForCheck()));\n        }\n    }\n    /**\n     * Removes the tabindex from the selection list and resets it back afterwards, allowing the user\n     * to tab out of it. This prevents the list from capturing focus and redirecting it back within\n     * the list, creating a focus trap if it user tries to tab away.\n     * @private\n     * @return {?}\n     */\n    _allowFocusEscape() {\n        this._tabIndex = -1;\n        setTimeout((/**\n         * @return {?}\n         */\n        () => {\n            this._tabIndex = 0;\n            this._changeDetector.markForCheck();\n        }));\n    }\n    /**\n     * Updates the tabindex based upon if the selection list is empty.\n     * @private\n     * @return {?}\n     */\n    _updateTabIndex() {\n        this._tabIndex = (this.options.length === 0) ? -1 : 0;\n    }\n}\nMatSelectionList.decorators = [\n    { type: Component, args: [{\n                selector: 'mat-selection-list',\n                exportAs: 'matSelectionList',\n                inputs: ['disableRipple'],\n                host: {\n                    'role': 'listbox',\n                    'class': 'mat-selection-list mat-list-base',\n                    '(focus)': '_onFocus()',\n                    '(blur)': '_onTouched()',\n                    '(keydown)': '_keydown($event)',\n                    '[attr.aria-multiselectable]': 'multiple',\n                    '[attr.aria-disabled]': 'disabled.toString()',\n                    '[attr.tabindex]': '_tabIndex',\n                },\n                template: '<ng-content></ng-content>',\n                encapsulation: ViewEncapsulation.None,\n                providers: [MAT_SELECTION_LIST_VALUE_ACCESSOR],\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                styles: [\".mat-subheader{display:flex;box-sizing:border-box;padding:16px;align-items:center}.mat-list-base .mat-subheader{margin:0}.mat-list-base{padding-top:8px;display:block;-webkit-tap-highlight-color:transparent}.mat-list-base .mat-subheader{height:48px;line-height:16px}.mat-list-base .mat-subheader:first-child{margin-top:-8px}.mat-list-base .mat-list-item,.mat-list-base .mat-list-option{display:block;height:48px;-webkit-tap-highlight-color:transparent;width:100%;padding:0;position:relative}.mat-list-base .mat-list-item .mat-list-item-content,.mat-list-base .mat-list-option .mat-list-item-content{display:flex;flex-direction:row;align-items:center;box-sizing:border-box;padding:0 16px;position:relative;height:inherit}.mat-list-base .mat-list-item .mat-list-item-content-reverse,.mat-list-base .mat-list-option .mat-list-item-content-reverse{display:flex;align-items:center;padding:0 16px;flex-direction:row-reverse;justify-content:space-around}.mat-list-base .mat-list-item .mat-list-item-ripple,.mat-list-base .mat-list-option .mat-list-item-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none}.mat-list-base .mat-list-item.mat-list-item-with-avatar,.mat-list-base .mat-list-option.mat-list-item-with-avatar{height:56px}.mat-list-base .mat-list-item.mat-2-line,.mat-list-base .mat-list-option.mat-2-line{height:72px}.mat-list-base .mat-list-item.mat-3-line,.mat-list-base .mat-list-option.mat-3-line{height:88px}.mat-list-base .mat-list-item.mat-multi-line,.mat-list-base .mat-list-option.mat-multi-line{height:auto}.mat-list-base .mat-list-item.mat-multi-line .mat-list-item-content,.mat-list-base .mat-list-option.mat-multi-line .mat-list-item-content{padding-top:16px;padding-bottom:16px}.mat-list-base .mat-list-item .mat-list-text,.mat-list-base .mat-list-option .mat-list-text{display:flex;flex-direction:column;width:100%;box-sizing:border-box;overflow:hidden;padding:0}.mat-list-base .mat-list-item .mat-list-text>*,.mat-list-base .mat-list-option .mat-list-text>*{margin:0;padding:0;font-weight:normal;font-size:inherit}.mat-list-base .mat-list-item .mat-list-text:empty,.mat-list-base .mat-list-option .mat-list-text:empty{display:none}.mat-list-base .mat-list-item.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,.mat-list-base .mat-list-item.mat-list-option .mat-list-item-content .mat-list-text,.mat-list-base .mat-list-option.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,.mat-list-base .mat-list-option.mat-list-option .mat-list-item-content .mat-list-text{padding-right:0;padding-left:16px}[dir=rtl] .mat-list-base .mat-list-item.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base .mat-list-item.mat-list-option .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base .mat-list-option.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base .mat-list-option.mat-list-option .mat-list-item-content .mat-list-text{padding-right:16px;padding-left:0}.mat-list-base .mat-list-item.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,.mat-list-base .mat-list-item.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base .mat-list-option.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,.mat-list-base .mat-list-option.mat-list-option .mat-list-item-content-reverse .mat-list-text{padding-left:0;padding-right:16px}[dir=rtl] .mat-list-base .mat-list-item.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base .mat-list-item.mat-list-option .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base .mat-list-option.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base .mat-list-option.mat-list-option .mat-list-item-content-reverse .mat-list-text{padding-right:0;padding-left:16px}.mat-list-base .mat-list-item.mat-list-item-with-avatar.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base .mat-list-item.mat-list-item-with-avatar.mat-list-option .mat-list-item-content .mat-list-text,.mat-list-base .mat-list-option.mat-list-item-with-avatar.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base .mat-list-option.mat-list-item-with-avatar.mat-list-option .mat-list-item-content .mat-list-text{padding-right:16px;padding-left:16px}.mat-list-base .mat-list-item .mat-list-avatar,.mat-list-base .mat-list-option .mat-list-avatar{flex-shrink:0;width:40px;height:40px;border-radius:50%;object-fit:cover}.mat-list-base .mat-list-item .mat-list-avatar~.mat-divider-inset,.mat-list-base .mat-list-option .mat-list-avatar~.mat-divider-inset{margin-left:72px;width:calc(100% - 72px)}[dir=rtl] .mat-list-base .mat-list-item .mat-list-avatar~.mat-divider-inset,[dir=rtl] .mat-list-base .mat-list-option .mat-list-avatar~.mat-divider-inset{margin-left:auto;margin-right:72px}.mat-list-base .mat-list-item .mat-list-icon,.mat-list-base .mat-list-option .mat-list-icon{flex-shrink:0;width:24px;height:24px;font-size:24px;box-sizing:content-box;border-radius:50%;padding:4px}.mat-list-base .mat-list-item .mat-list-icon~.mat-divider-inset,.mat-list-base .mat-list-option .mat-list-icon~.mat-divider-inset{margin-left:64px;width:calc(100% - 64px)}[dir=rtl] .mat-list-base .mat-list-item .mat-list-icon~.mat-divider-inset,[dir=rtl] .mat-list-base .mat-list-option .mat-list-icon~.mat-divider-inset{margin-left:auto;margin-right:64px}.mat-list-base .mat-list-item .mat-divider,.mat-list-base .mat-list-option .mat-divider{position:absolute;bottom:0;left:0;width:100%;margin:0}[dir=rtl] .mat-list-base .mat-list-item .mat-divider,[dir=rtl] .mat-list-base .mat-list-option .mat-divider{margin-left:auto;margin-right:0}.mat-list-base .mat-list-item .mat-divider.mat-divider-inset,.mat-list-base .mat-list-option .mat-divider.mat-divider-inset{position:absolute}.mat-list-base[dense]{padding-top:4px;display:block}.mat-list-base[dense] .mat-subheader{height:40px;line-height:8px}.mat-list-base[dense] .mat-subheader:first-child{margin-top:-4px}.mat-list-base[dense] .mat-list-item,.mat-list-base[dense] .mat-list-option{display:block;height:40px;-webkit-tap-highlight-color:transparent;width:100%;padding:0;position:relative}.mat-list-base[dense] .mat-list-item .mat-list-item-content,.mat-list-base[dense] .mat-list-option .mat-list-item-content{display:flex;flex-direction:row;align-items:center;box-sizing:border-box;padding:0 16px;position:relative;height:inherit}.mat-list-base[dense] .mat-list-item .mat-list-item-content-reverse,.mat-list-base[dense] .mat-list-option .mat-list-item-content-reverse{display:flex;align-items:center;padding:0 16px;flex-direction:row-reverse;justify-content:space-around}.mat-list-base[dense] .mat-list-item .mat-list-item-ripple,.mat-list-base[dense] .mat-list-option .mat-list-item-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none}.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar{height:48px}.mat-list-base[dense] .mat-list-item.mat-2-line,.mat-list-base[dense] .mat-list-option.mat-2-line{height:60px}.mat-list-base[dense] .mat-list-item.mat-3-line,.mat-list-base[dense] .mat-list-option.mat-3-line{height:76px}.mat-list-base[dense] .mat-list-item.mat-multi-line,.mat-list-base[dense] .mat-list-option.mat-multi-line{height:auto}.mat-list-base[dense] .mat-list-item.mat-multi-line .mat-list-item-content,.mat-list-base[dense] .mat-list-option.mat-multi-line .mat-list-item-content{padding-top:16px;padding-bottom:16px}.mat-list-base[dense] .mat-list-item .mat-list-text,.mat-list-base[dense] .mat-list-option .mat-list-text{display:flex;flex-direction:column;width:100%;box-sizing:border-box;overflow:hidden;padding:0}.mat-list-base[dense] .mat-list-item .mat-list-text>*,.mat-list-base[dense] .mat-list-option .mat-list-text>*{margin:0;padding:0;font-weight:normal;font-size:inherit}.mat-list-base[dense] .mat-list-item .mat-list-text:empty,.mat-list-base[dense] .mat-list-option .mat-list-text:empty{display:none}.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,.mat-list-base[dense] .mat-list-item.mat-list-option .mat-list-item-content .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-option .mat-list-item-content .mat-list-text{padding-right:0;padding-left:16px}[dir=rtl] .mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-item.mat-list-option .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-option.mat-list-option .mat-list-item-content .mat-list-text{padding-right:16px;padding-left:0}.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,.mat-list-base[dense] .mat-list-item.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-option .mat-list-item-content-reverse .mat-list-text{padding-left:0;padding-right:16px}[dir=rtl] .mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-item.mat-list-option .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-option.mat-list-option .mat-list-item-content-reverse .mat-list-text{padding-right:0;padding-left:16px}.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar.mat-list-option .mat-list-item-content .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar.mat-list-option .mat-list-item-content .mat-list-text{padding-right:16px;padding-left:16px}.mat-list-base[dense] .mat-list-item .mat-list-avatar,.mat-list-base[dense] .mat-list-option .mat-list-avatar{flex-shrink:0;width:36px;height:36px;border-radius:50%;object-fit:cover}.mat-list-base[dense] .mat-list-item .mat-list-avatar~.mat-divider-inset,.mat-list-base[dense] .mat-list-option .mat-list-avatar~.mat-divider-inset{margin-left:68px;width:calc(100% - 68px)}[dir=rtl] .mat-list-base[dense] .mat-list-item .mat-list-avatar~.mat-divider-inset,[dir=rtl] .mat-list-base[dense] .mat-list-option .mat-list-avatar~.mat-divider-inset{margin-left:auto;margin-right:68px}.mat-list-base[dense] .mat-list-item .mat-list-icon,.mat-list-base[dense] .mat-list-option .mat-list-icon{flex-shrink:0;width:20px;height:20px;font-size:20px;box-sizing:content-box;border-radius:50%;padding:4px}.mat-list-base[dense] .mat-list-item .mat-list-icon~.mat-divider-inset,.mat-list-base[dense] .mat-list-option .mat-list-icon~.mat-divider-inset{margin-left:60px;width:calc(100% - 60px)}[dir=rtl] .mat-list-base[dense] .mat-list-item .mat-list-icon~.mat-divider-inset,[dir=rtl] .mat-list-base[dense] .mat-list-option .mat-list-icon~.mat-divider-inset{margin-left:auto;margin-right:60px}.mat-list-base[dense] .mat-list-item .mat-divider,.mat-list-base[dense] .mat-list-option .mat-divider{position:absolute;bottom:0;left:0;width:100%;margin:0}[dir=rtl] .mat-list-base[dense] .mat-list-item .mat-divider,[dir=rtl] .mat-list-base[dense] .mat-list-option .mat-divider{margin-left:auto;margin-right:0}.mat-list-base[dense] .mat-list-item .mat-divider.mat-divider-inset,.mat-list-base[dense] .mat-list-option .mat-divider.mat-divider-inset{position:absolute}.mat-nav-list a{text-decoration:none;color:inherit}.mat-nav-list .mat-list-item{cursor:pointer;outline:none}mat-action-list button{background:none;color:inherit;border:none;font:inherit;outline:inherit;-webkit-tap-highlight-color:transparent;text-align:left}[dir=rtl] mat-action-list button{text-align:right}mat-action-list button::-moz-focus-inner{border:0}mat-action-list .mat-list-item{cursor:pointer;outline:inherit}.mat-list-option:not(.mat-list-item-disabled){cursor:pointer;outline:none}.mat-list-item-disabled{pointer-events:none}.cdk-high-contrast-active .mat-list-item-disabled{opacity:.5}.cdk-high-contrast-active :host .mat-list-item-disabled{opacity:.5}.cdk-high-contrast-active .mat-selection-list:focus{outline-style:dotted}.cdk-high-contrast-active .mat-list-option:hover,.cdk-high-contrast-active .mat-list-option:focus,.cdk-high-contrast-active .mat-nav-list .mat-list-item:hover,.cdk-high-contrast-active .mat-nav-list .mat-list-item:focus,.cdk-high-contrast-active mat-action-list .mat-list-item:hover,.cdk-high-contrast-active mat-action-list .mat-list-item:focus{outline:dotted 1px}.cdk-high-contrast-active .mat-list-single-selected-option::after{content:\\\"\\\";position:absolute;top:50%;right:16px;transform:translateY(-50%);width:10px;height:0;border-bottom:solid 10px;border-radius:10px}.cdk-high-contrast-active [dir=rtl] .mat-list-single-selected-option::after{right:auto;left:16px}@media(hover: none){.mat-list-option:not(.mat-list-item-disabled):hover,.mat-nav-list .mat-list-item:not(.mat-list-item-disabled):hover,.mat-action-list .mat-list-item:not(.mat-list-item-disabled):hover{background:none}}\\n\"]\n            }] }\n];\n/** @nocollapse */\nMatSelectionList.ctorParameters = () => [\n    { type: ElementRef },\n    { type: String, decorators: [{ type: Attribute, args: ['tabindex',] }] },\n    { type: ChangeDetectorRef }\n];\nMatSelectionList.propDecorators = {\n    options: [{ type: ContentChildren, args: [MatListOption, { descendants: true },] }],\n    selectionChange: [{ type: Output }],\n    tabIndex: [{ type: Input }],\n    color: [{ type: Input }],\n    compareWith: [{ type: Input }],\n    disabled: [{ type: Input }],\n    multiple: [{ type: Input }]\n};\nif (false) {\n    /** @type {?} */\n    MatSelectionList.ngAcceptInputType_disabled;\n    /** @type {?} */\n    MatSelectionList.ngAcceptInputType_disableRipple;\n    /** @type {?} */\n    MatSelectionList.ngAcceptInputType_multiple;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatSelectionList.prototype._multiple;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatSelectionList.prototype._contentInitialized;\n    /**\n     * The FocusKeyManager which handles focus.\n     * @type {?}\n     */\n    MatSelectionList.prototype._keyManager;\n    /**\n     * The option components contained within this selection-list.\n     * @type {?}\n     */\n    MatSelectionList.prototype.options;\n    /**\n     * Emits a change event whenever the selected state of an option changes.\n     * @type {?}\n     */\n    MatSelectionList.prototype.selectionChange;\n    /**\n     * Tabindex of the selection list.\n     * \\@breaking-change 11.0.0 Remove `tabIndex` input.\n     * @type {?}\n     */\n    MatSelectionList.prototype.tabIndex;\n    /**\n     * Theme color of the selection list. This sets the checkbox color for all list options.\n     * @type {?}\n     */\n    MatSelectionList.prototype.color;\n    /**\n     * Function used for comparing an option against the selected value when determining which\n     * options should appear as selected. The first argument is the value of an options. The second\n     * one is a value from the selected value. A boolean must be returned.\n     * @type {?}\n     */\n    MatSelectionList.prototype.compareWith;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatSelectionList.prototype._disabled;\n    /**\n     * The currently selected options.\n     * @type {?}\n     */\n    MatSelectionList.prototype.selectedOptions;\n    /**\n     * The tabindex of the selection list.\n     * @type {?}\n     */\n    MatSelectionList.prototype._tabIndex;\n    /**\n     * View to model callback that should be called whenever the selected options change.\n     * @type {?}\n     * @private\n     */\n    MatSelectionList.prototype._onChange;\n    /**\n     * Keeps track of the currently-selected value.\n     * @type {?}\n     */\n    MatSelectionList.prototype._value;\n    /**\n     * Emits when the list has been destroyed.\n     * @type {?}\n     * @private\n     */\n    MatSelectionList.prototype._destroyed;\n    /**\n     * View to model callback that should be called if the list or its options lost focus.\n     * @type {?}\n     */\n    MatSelectionList.prototype._onTouched;\n    /**\n     * Whether the list has been destroyed.\n     * @type {?}\n     * @private\n     */\n    MatSelectionList.prototype._isDestroyed;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatSelectionList.prototype._element;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatSelectionList.prototype._changeDetector;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/list/list-module.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass MatListModule {\n}\nMatListModule.decorators = [\n    { type: NgModule, args: [{\n                imports: [MatLineModule, MatRippleModule, MatCommonModule, MatPseudoCheckboxModule, CommonModule],\n                exports: [\n                    MatList,\n                    MatNavList,\n                    MatListItem,\n                    MatListAvatarCssMatStyler,\n                    MatLineModule,\n                    MatCommonModule,\n                    MatListIconCssMatStyler,\n                    MatListSubheaderCssMatStyler,\n                    MatPseudoCheckboxModule,\n                    MatSelectionList,\n                    MatListOption,\n                    MatDividerModule\n                ],\n                declarations: [\n                    MatList,\n                    MatNavList,\n                    MatListItem,\n                    MatListAvatarCssMatStyler,\n                    MatListIconCssMatStyler,\n                    MatListSubheaderCssMatStyler,\n                    MatSelectionList,\n                    MatListOption\n                ],\n            },] }\n];\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/list/public-api.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MAT_SELECTION_LIST_VALUE_ACCESSOR, MatList, MatListAvatarCssMatStyler, MatListIconCssMatStyler, MatListItem, MatListModule, MatListOption, MatListSubheaderCssMatStyler, MatNavList, MatSelectionList, MatSelectionListChange };\n//# sourceMappingURL=list.js.map\n","import { Platform, PlatformModule } from '@angular/cdk/platform';\nimport { CdkScrollable, ScrollDispatcher, ViewportRuler, ScrollingModule } from '@angular/cdk/scrolling';\nimport { DOCUMENT, CommonModule } from '@angular/common';\nimport { InjectionToken, Component, ChangeDetectionStrategy, ViewEncapsulation, ChangeDetectorRef, Inject, forwardRef, ElementRef, NgZone, EventEmitter, Optional, Input, HostBinding, Output, HostListener, QueryList, ContentChildren, ContentChild, ViewChild, NgModule } from '@angular/core';\nimport { MatCommonModule } from '@angular/material/core';\nimport { FocusTrapFactory, FocusMonitor } from '@angular/cdk/a11y';\nimport { Directionality } from '@angular/cdk/bidi';\nimport { coerceBooleanProperty, coerceNumberProperty } from '@angular/cdk/coercion';\nimport { ESCAPE, hasModifierKey } from '@angular/cdk/keycodes';\nimport { Subject, fromEvent, merge } from 'rxjs';\nimport { filter, takeUntil, distinctUntilChanged, map, take, startWith, debounceTime } from 'rxjs/operators';\nimport { trigger, state, style, transition, animate } from '@angular/animations';\nimport { ANIMATION_MODULE_TYPE } from '@angular/platform-browser/animations';\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/sidenav/drawer-animations.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Animations used by the Material drawers.\n * \\@docs-private\n * @type {?}\n */\nconst matDrawerAnimations = {\n    /**\n     * Animation that slides a drawer in and out.\n     */\n    transformDrawer: trigger('transform', [\n        // We remove the `transform` here completely, rather than setting it to zero, because:\n        // 1. Having a transform can cause elements with ripples or an animated\n        //    transform to shift around in Chrome with an RTL layout (see #10023).\n        // 2. 3d transforms causes text to appear blurry on IE and Edge.\n        state('open, open-instant', style({\n            'transform': 'none',\n            'visibility': 'visible',\n        })),\n        state('void', style({\n            // Avoids the shadow showing up when closed in SSR.\n            'box-shadow': 'none',\n            'visibility': 'hidden',\n        })),\n        transition('void => open-instant', animate('0ms')),\n        transition('void <=> open, open-instant => void', animate('400ms cubic-bezier(0.25, 0.8, 0.25, 1)'))\n    ])\n};\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/sidenav/drawer.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Throws an exception when two MatDrawer are matching the same position.\n * \\@docs-private\n * @param {?} position\n * @return {?}\n */\nfunction throwMatDuplicatedDrawerError(position) {\n    throw Error(`A drawer was already declared for 'position=\"${position}\"'`);\n}\n/**\n * Configures whether drawers should use auto sizing by default.\n * @type {?}\n */\nconst MAT_DRAWER_DEFAULT_AUTOSIZE = new InjectionToken('MAT_DRAWER_DEFAULT_AUTOSIZE', {\n    providedIn: 'root',\n    factory: MAT_DRAWER_DEFAULT_AUTOSIZE_FACTORY,\n});\n/**\n * Used to provide a drawer container to a drawer while avoiding circular references.\n * \\@docs-private\n * @type {?}\n */\nconst MAT_DRAWER_CONTAINER = new InjectionToken('MAT_DRAWER_CONTAINER');\n/**\n * \\@docs-private\n * @return {?}\n */\nfunction MAT_DRAWER_DEFAULT_AUTOSIZE_FACTORY() {\n    return false;\n}\nclass MatDrawerContent extends CdkScrollable {\n    /**\n     * @param {?} _changeDetectorRef\n     * @param {?} _container\n     * @param {?} elementRef\n     * @param {?} scrollDispatcher\n     * @param {?} ngZone\n     */\n    constructor(_changeDetectorRef, _container, elementRef, scrollDispatcher, ngZone) {\n        super(elementRef, scrollDispatcher, ngZone);\n        this._changeDetectorRef = _changeDetectorRef;\n        this._container = _container;\n    }\n    /**\n     * @return {?}\n     */\n    ngAfterContentInit() {\n        this._container._contentMarginChanges.subscribe((/**\n         * @return {?}\n         */\n        () => {\n            this._changeDetectorRef.markForCheck();\n        }));\n    }\n}\nMatDrawerContent.decorators = [\n    { type: Component, args: [{\n                selector: 'mat-drawer-content',\n                template: '<ng-content></ng-content>',\n                host: {\n                    'class': 'mat-drawer-content',\n                    '[style.margin-left.px]': '_container._contentMargins.left',\n                    '[style.margin-right.px]': '_container._contentMargins.right',\n                },\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                encapsulation: ViewEncapsulation.None\n            }] }\n];\n/** @nocollapse */\nMatDrawerContent.ctorParameters = () => [\n    { type: ChangeDetectorRef },\n    { type: MatDrawerContainer, decorators: [{ type: Inject, args: [forwardRef((/**\n                     * @return {?}\n                     */\n                    () => MatDrawerContainer)),] }] },\n    { type: ElementRef },\n    { type: ScrollDispatcher },\n    { type: NgZone }\n];\nif (false) {\n    /**\n     * @type {?}\n     * @private\n     */\n    MatDrawerContent.prototype._changeDetectorRef;\n    /** @type {?} */\n    MatDrawerContent.prototype._container;\n}\n/**\n * This component corresponds to a drawer that can be opened on the drawer container.\n */\nclass MatDrawer {\n    /**\n     * @param {?} _elementRef\n     * @param {?} _focusTrapFactory\n     * @param {?} _focusMonitor\n     * @param {?} _platform\n     * @param {?} _ngZone\n     * @param {?} _doc\n     * @param {?=} _container\n     */\n    constructor(_elementRef, _focusTrapFactory, _focusMonitor, _platform, _ngZone, _doc, _container) {\n        this._elementRef = _elementRef;\n        this._focusTrapFactory = _focusTrapFactory;\n        this._focusMonitor = _focusMonitor;\n        this._platform = _platform;\n        this._ngZone = _ngZone;\n        this._doc = _doc;\n        this._container = _container;\n        this._elementFocusedBeforeDrawerWasOpened = null;\n        /**\n         * Whether the drawer is initialized. Used for disabling the initial animation.\n         */\n        this._enableAnimations = false;\n        this._position = 'start';\n        this._mode = 'over';\n        this._disableClose = false;\n        this._opened = false;\n        /**\n         * Emits whenever the drawer has started animating.\n         */\n        this._animationStarted = new Subject();\n        /**\n         * Emits whenever the drawer is done animating.\n         */\n        this._animationEnd = new Subject();\n        /**\n         * Current state of the sidenav animation.\n         */\n        // @HostBinding is used in the class as it is expected to be extended.  Since @Component decorator\n        // metadata is not inherited by child classes, instead the host binding data is defined in a way\n        // that can be inherited.\n        // tslint:disable:no-host-decorator-in-concrete\n        this._animationState = 'void';\n        /**\n         * Event emitted when the drawer open state is changed.\n         */\n        this.openedChange = \n        // Note this has to be async in order to avoid some issues with two-bindings (see #8872).\n        new EventEmitter(/* isAsync */ true);\n        /**\n         * Emits when the component is destroyed.\n         */\n        this._destroyed = new Subject();\n        /**\n         * Event emitted when the drawer's position changes.\n         */\n        // tslint:disable-next-line:no-output-on-prefix\n        this.onPositionChanged = new EventEmitter();\n        /**\n         * An observable that emits when the drawer mode changes. This is used by the drawer container to\n         * to know when to when the mode changes so it can adapt the margins on the content.\n         */\n        this._modeChanged = new Subject();\n        this.openedChange.subscribe((/**\n         * @param {?} opened\n         * @return {?}\n         */\n        (opened) => {\n            if (opened) {\n                if (this._doc) {\n                    this._elementFocusedBeforeDrawerWasOpened = (/** @type {?} */ (this._doc.activeElement));\n                }\n                this._takeFocus();\n            }\n            else {\n                this._restoreFocus();\n            }\n        }));\n        /**\n         * Listen to `keydown` events outside the zone so that change detection is not run every\n         * time a key is pressed. Instead we re-enter the zone only if the `ESC` key is pressed\n         * and we don't have close disabled.\n         */\n        this._ngZone.runOutsideAngular((/**\n         * @return {?}\n         */\n        () => {\n            ((/** @type {?} */ (fromEvent(this._elementRef.nativeElement, 'keydown')))).pipe(filter((/**\n             * @param {?} event\n             * @return {?}\n             */\n            event => {\n                return event.keyCode === ESCAPE && !this.disableClose && !hasModifierKey(event);\n            })), takeUntil(this._destroyed)).subscribe((/**\n             * @param {?} event\n             * @return {?}\n             */\n            event => this._ngZone.run((/**\n             * @return {?}\n             */\n            () => {\n                this.close();\n                event.stopPropagation();\n                event.preventDefault();\n            }))));\n        }));\n        // We need a Subject with distinctUntilChanged, because the `done` event\n        // fires twice on some browsers. See https://github.com/angular/angular/issues/24084\n        this._animationEnd.pipe(distinctUntilChanged((/**\n         * @param {?} x\n         * @param {?} y\n         * @return {?}\n         */\n        (x, y) => {\n            return x.fromState === y.fromState && x.toState === y.toState;\n        }))).subscribe((/**\n         * @param {?} event\n         * @return {?}\n         */\n        (event) => {\n            const { fromState, toState } = event;\n            if ((toState.indexOf('open') === 0 && fromState === 'void') ||\n                (toState === 'void' && fromState.indexOf('open') === 0)) {\n                this.openedChange.emit(this._opened);\n            }\n        }));\n    }\n    /**\n     * The side that the drawer is attached to.\n     * @return {?}\n     */\n    get position() { return this._position; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set position(value) {\n        // Make sure we have a valid value.\n        value = value === 'end' ? 'end' : 'start';\n        if (value != this._position) {\n            this._position = value;\n            this.onPositionChanged.emit();\n        }\n    }\n    /**\n     * Mode of the drawer; one of 'over', 'push' or 'side'.\n     * @return {?}\n     */\n    get mode() { return this._mode; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set mode(value) {\n        this._mode = value;\n        this._updateFocusTrapState();\n        this._modeChanged.next();\n    }\n    /**\n     * Whether the drawer can be closed with the escape key or by clicking on the backdrop.\n     * @return {?}\n     */\n    get disableClose() { return this._disableClose; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set disableClose(value) { this._disableClose = coerceBooleanProperty(value); }\n    /**\n     * Whether the drawer should focus the first focusable element automatically when opened.\n     * Defaults to false in when `mode` is set to `side`, otherwise defaults to `true`. If explicitly\n     * enabled, focus will be moved into the sidenav in `side` mode as well.\n     * @return {?}\n     */\n    get autoFocus() {\n        /** @type {?} */\n        const value = this._autoFocus;\n        // Note that usually we disable auto focusing in `side` mode, because we don't know how the\n        // sidenav is being used, but in some cases it still makes sense to do it. If the consumer\n        // explicitly enabled `autoFocus`, we take it as them always wanting to enable it.\n        return value == null ? this.mode !== 'side' : value;\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set autoFocus(value) { this._autoFocus = coerceBooleanProperty(value); }\n    /**\n     * Whether the drawer is opened. We overload this because we trigger an event when it\n     * starts or end.\n     * @return {?}\n     */\n    get opened() { return this._opened; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set opened(value) { this.toggle(coerceBooleanProperty(value)); }\n    /**\n     * Event emitted when the drawer has been opened.\n     * @return {?}\n     */\n    get _openedStream() {\n        return this.openedChange.pipe(filter((/**\n         * @param {?} o\n         * @return {?}\n         */\n        o => o)), map((/**\n         * @return {?}\n         */\n        () => { })));\n    }\n    /**\n     * Event emitted when the drawer has started opening.\n     * @return {?}\n     */\n    get openedStart() {\n        return this._animationStarted.pipe(filter((/**\n         * @param {?} e\n         * @return {?}\n         */\n        e => e.fromState !== e.toState && e.toState.indexOf('open') === 0)), map((/**\n         * @return {?}\n         */\n        () => { })));\n    }\n    /**\n     * Event emitted when the drawer has been closed.\n     * @return {?}\n     */\n    get _closedStream() {\n        return this.openedChange.pipe(filter((/**\n         * @param {?} o\n         * @return {?}\n         */\n        o => !o)), map((/**\n         * @return {?}\n         */\n        () => { })));\n    }\n    /**\n     * Event emitted when the drawer has started closing.\n     * @return {?}\n     */\n    get closedStart() {\n        return this._animationStarted.pipe(filter((/**\n         * @param {?} e\n         * @return {?}\n         */\n        e => e.fromState !== e.toState && e.toState === 'void')), map((/**\n         * @return {?}\n         */\n        () => { })));\n    }\n    /**\n     * Moves focus into the drawer. Note that this works even if\n     * the focus trap is disabled in `side` mode.\n     * @private\n     * @return {?}\n     */\n    _takeFocus() {\n        if (!this.autoFocus || !this._focusTrap) {\n            return;\n        }\n        this._focusTrap.focusInitialElementWhenReady().then((/**\n         * @param {?} hasMovedFocus\n         * @return {?}\n         */\n        hasMovedFocus => {\n            // If there were no focusable elements, focus the sidenav itself so the keyboard navigation\n            // still works. We need to check that `focus` is a function due to Universal.\n            if (!hasMovedFocus && typeof this._elementRef.nativeElement.focus === 'function') {\n                this._elementRef.nativeElement.focus();\n            }\n        }));\n    }\n    /**\n     * If focus is currently inside the drawer, restores it to where it was before the drawer\n     * opened.\n     * @private\n     * @return {?}\n     */\n    _restoreFocus() {\n        if (!this.autoFocus) {\n            return;\n        }\n        /** @type {?} */\n        const activeEl = this._doc && this._doc.activeElement;\n        if (activeEl && this._elementRef.nativeElement.contains(activeEl)) {\n            // Note that we don't check via `instanceof HTMLElement` so that we can cover SVGs as well.\n            if (this._elementFocusedBeforeDrawerWasOpened) {\n                this._focusMonitor.focusVia(this._elementFocusedBeforeDrawerWasOpened, this._openedVia);\n            }\n            else {\n                this._elementRef.nativeElement.blur();\n            }\n        }\n        this._elementFocusedBeforeDrawerWasOpened = null;\n        this._openedVia = null;\n    }\n    /**\n     * @return {?}\n     */\n    ngAfterContentInit() {\n        this._focusTrap = this._focusTrapFactory.create(this._elementRef.nativeElement);\n        this._updateFocusTrapState();\n    }\n    /**\n     * @return {?}\n     */\n    ngAfterContentChecked() {\n        // Enable the animations after the lifecycle hooks have run, in order to avoid animating\n        // drawers that are open by default. When we're on the server, we shouldn't enable the\n        // animations, because we don't want the drawer to animate the first time the user sees\n        // the page.\n        if (this._platform.isBrowser) {\n            this._enableAnimations = true;\n        }\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        if (this._focusTrap) {\n            this._focusTrap.destroy();\n        }\n        this._animationStarted.complete();\n        this._animationEnd.complete();\n        this._modeChanged.complete();\n        this._destroyed.next();\n        this._destroyed.complete();\n    }\n    /**\n     * Open the drawer.\n     * @param {?=} openedVia Whether the drawer was opened by a key press, mouse click or programmatically.\n     * Used for focus management after the sidenav is closed.\n     * @return {?}\n     */\n    open(openedVia) {\n        return this.toggle(true, openedVia);\n    }\n    /**\n     * Close the drawer.\n     * @return {?}\n     */\n    close() {\n        return this.toggle(false);\n    }\n    /**\n     * Toggle this drawer.\n     * @param {?=} isOpen Whether the drawer should be open.\n     * @param {?=} openedVia Whether the drawer was opened by a key press, mouse click or programmatically.\n     * Used for focus management after the sidenav is closed.\n     * @return {?}\n     */\n    toggle(isOpen = !this.opened, openedVia = 'program') {\n        this._opened = isOpen;\n        if (isOpen) {\n            this._animationState = this._enableAnimations ? 'open' : 'open-instant';\n            this._openedVia = openedVia;\n        }\n        else {\n            this._animationState = 'void';\n            this._restoreFocus();\n        }\n        this._updateFocusTrapState();\n        return new Promise((/**\n         * @param {?} resolve\n         * @return {?}\n         */\n        resolve => {\n            this.openedChange.pipe(take(1)).subscribe((/**\n             * @param {?} open\n             * @return {?}\n             */\n            open => resolve(open ? 'open' : 'close')));\n        }));\n    }\n    /**\n     * @return {?}\n     */\n    get _width() {\n        return this._elementRef.nativeElement ? (this._elementRef.nativeElement.offsetWidth || 0) : 0;\n    }\n    /**\n     * Updates the enabled state of the focus trap.\n     * @private\n     * @return {?}\n     */\n    _updateFocusTrapState() {\n        if (this._focusTrap) {\n            // The focus trap is only enabled when the drawer is open in any mode other than side.\n            this._focusTrap.enabled = this.opened && this.mode !== 'side';\n        }\n    }\n    // We have to use a `HostListener` here in order to support both Ivy and ViewEngine.\n    // In Ivy the `host` bindings will be merged when this class is extended, whereas in\n    // ViewEngine they're overwritten.\n    // TODO(crisbeto): we move this back into `host` once Ivy is turned on by default.\n    // tslint:disable-next-line:no-host-decorator-in-concrete\n    /**\n     * @param {?} event\n     * @return {?}\n     */\n    _animationStartListener(event) {\n        this._animationStarted.next(event);\n    }\n    // We have to use a `HostListener` here in order to support both Ivy and ViewEngine.\n    // In Ivy the `host` bindings will be merged when this class is extended, whereas in\n    // ViewEngine they're overwritten.\n    // TODO(crisbeto): we move this back into `host` once Ivy is turned on by default.\n    // tslint:disable-next-line:no-host-decorator-in-concrete\n    /**\n     * @param {?} event\n     * @return {?}\n     */\n    _animationDoneListener(event) {\n        this._animationEnd.next(event);\n    }\n}\nMatDrawer.decorators = [\n    { type: Component, args: [{\n                selector: 'mat-drawer',\n                exportAs: 'matDrawer',\n                template: \"<div class=\\\"mat-drawer-inner-container\\\">\\r\\n  <ng-content></ng-content>\\r\\n</div>\\r\\n\",\n                animations: [matDrawerAnimations.transformDrawer],\n                host: {\n                    'class': 'mat-drawer',\n                    // must prevent the browser from aligning text based on value\n                    '[attr.align]': 'null',\n                    '[class.mat-drawer-end]': 'position === \"end\"',\n                    '[class.mat-drawer-over]': 'mode === \"over\"',\n                    '[class.mat-drawer-push]': 'mode === \"push\"',\n                    '[class.mat-drawer-side]': 'mode === \"side\"',\n                    '[class.mat-drawer-opened]': 'opened',\n                    'tabIndex': '-1',\n                },\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                encapsulation: ViewEncapsulation.None\n            }] }\n];\n/** @nocollapse */\nMatDrawer.ctorParameters = () => [\n    { type: ElementRef },\n    { type: FocusTrapFactory },\n    { type: FocusMonitor },\n    { type: Platform },\n    { type: NgZone },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [DOCUMENT,] }] },\n    { type: MatDrawerContainer, decorators: [{ type: Optional }, { type: Inject, args: [MAT_DRAWER_CONTAINER,] }] }\n];\nMatDrawer.propDecorators = {\n    position: [{ type: Input }],\n    mode: [{ type: Input }],\n    disableClose: [{ type: Input }],\n    autoFocus: [{ type: Input }],\n    opened: [{ type: Input }],\n    _animationState: [{ type: HostBinding, args: ['@transform',] }],\n    openedChange: [{ type: Output }],\n    _openedStream: [{ type: Output, args: ['opened',] }],\n    openedStart: [{ type: Output }],\n    _closedStream: [{ type: Output, args: ['closed',] }],\n    closedStart: [{ type: Output }],\n    onPositionChanged: [{ type: Output, args: ['positionChanged',] }],\n    _animationStartListener: [{ type: HostListener, args: ['@transform.start', ['$event'],] }],\n    _animationDoneListener: [{ type: HostListener, args: ['@transform.done', ['$event'],] }]\n};\nif (false) {\n    /** @type {?} */\n    MatDrawer.ngAcceptInputType_disableClose;\n    /** @type {?} */\n    MatDrawer.ngAcceptInputType_autoFocus;\n    /** @type {?} */\n    MatDrawer.ngAcceptInputType_opened;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatDrawer.prototype._focusTrap;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatDrawer.prototype._elementFocusedBeforeDrawerWasOpened;\n    /**\n     * Whether the drawer is initialized. Used for disabling the initial animation.\n     * @type {?}\n     * @private\n     */\n    MatDrawer.prototype._enableAnimations;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatDrawer.prototype._position;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatDrawer.prototype._mode;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatDrawer.prototype._disableClose;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatDrawer.prototype._autoFocus;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatDrawer.prototype._opened;\n    /**\n     * How the sidenav was opened (keypress, mouse click etc.)\n     * @type {?}\n     * @private\n     */\n    MatDrawer.prototype._openedVia;\n    /**\n     * Emits whenever the drawer has started animating.\n     * @type {?}\n     */\n    MatDrawer.prototype._animationStarted;\n    /**\n     * Emits whenever the drawer is done animating.\n     * @type {?}\n     */\n    MatDrawer.prototype._animationEnd;\n    /**\n     * Current state of the sidenav animation.\n     * @type {?}\n     */\n    MatDrawer.prototype._animationState;\n    /**\n     * Event emitted when the drawer open state is changed.\n     * @type {?}\n     */\n    MatDrawer.prototype.openedChange;\n    /**\n     * Emits when the component is destroyed.\n     * @type {?}\n     * @private\n     */\n    MatDrawer.prototype._destroyed;\n    /**\n     * Event emitted when the drawer's position changes.\n     * @type {?}\n     */\n    MatDrawer.prototype.onPositionChanged;\n    /**\n     * An observable that emits when the drawer mode changes. This is used by the drawer container to\n     * to know when to when the mode changes so it can adapt the margins on the content.\n     * @type {?}\n     */\n    MatDrawer.prototype._modeChanged;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatDrawer.prototype._elementRef;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatDrawer.prototype._focusTrapFactory;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatDrawer.prototype._focusMonitor;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatDrawer.prototype._platform;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatDrawer.prototype._ngZone;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatDrawer.prototype._doc;\n    /**\n     * @deprecated `_container` parameter to be made required.\n     * \\@breaking-change 10.0.0\n     * @type {?}\n     */\n    MatDrawer.prototype._container;\n}\n/**\n * `<mat-drawer-container>` component.\n *\n * This is the parent component to one or two `<mat-drawer>`s that validates the state internally\n * and coordinates the backdrop and content styling.\n */\nclass MatDrawerContainer {\n    /**\n     * @param {?} _dir\n     * @param {?} _element\n     * @param {?} _ngZone\n     * @param {?} _changeDetectorRef\n     * @param {?} viewportRuler\n     * @param {?=} defaultAutosize\n     * @param {?=} _animationMode\n     */\n    constructor(_dir, _element, _ngZone, _changeDetectorRef, viewportRuler, defaultAutosize = false, _animationMode) {\n        this._dir = _dir;\n        this._element = _element;\n        this._ngZone = _ngZone;\n        this._changeDetectorRef = _changeDetectorRef;\n        this._animationMode = _animationMode;\n        /**\n         * Drawers that belong to this container.\n         */\n        this._drawers = new QueryList();\n        /**\n         * Event emitted when the drawer backdrop is clicked.\n         */\n        this.backdropClick = new EventEmitter();\n        /**\n         * Emits when the component is destroyed.\n         */\n        this._destroyed = new Subject();\n        /**\n         * Emits on every ngDoCheck. Used for debouncing reflows.\n         */\n        this._doCheckSubject = new Subject();\n        /**\n         * Margins to be applied to the content. These are used to push / shrink the drawer content when a\n         * drawer is open. We use margin rather than transform even for push mode because transform breaks\n         * fixed position elements inside of the transformed element.\n         */\n        this._contentMargins = { left: null, right: null };\n        this._contentMarginChanges = new Subject();\n        // If a `Dir` directive exists up the tree, listen direction changes\n        // and update the left/right properties to point to the proper start/end.\n        if (_dir) {\n            _dir.change.pipe(takeUntil(this._destroyed)).subscribe((/**\n             * @return {?}\n             */\n            () => {\n                this._validateDrawers();\n                this.updateContentMargins();\n            }));\n        }\n        // Since the minimum width of the sidenav depends on the viewport width,\n        // we need to recompute the margins if the viewport changes.\n        viewportRuler.change()\n            .pipe(takeUntil(this._destroyed))\n            .subscribe((/**\n         * @return {?}\n         */\n        () => this.updateContentMargins()));\n        this._autosize = defaultAutosize;\n    }\n    /**\n     * The drawer child with the `start` position.\n     * @return {?}\n     */\n    get start() { return this._start; }\n    /**\n     * The drawer child with the `end` position.\n     * @return {?}\n     */\n    get end() { return this._end; }\n    /**\n     * Whether to automatically resize the container whenever\n     * the size of any of its drawers changes.\n     *\n     * **Use at your own risk!** Enabling this option can cause layout thrashing by measuring\n     * the drawers on every change detection cycle. Can be configured globally via the\n     * `MAT_DRAWER_DEFAULT_AUTOSIZE` token.\n     * @return {?}\n     */\n    get autosize() { return this._autosize; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set autosize(value) { this._autosize = coerceBooleanProperty(value); }\n    /**\n     * Whether the drawer container should have a backdrop while one of the sidenavs is open.\n     * If explicitly set to `true`, the backdrop will be enabled for drawers in the `side`\n     * mode as well.\n     * @return {?}\n     */\n    get hasBackdrop() {\n        if (this._backdropOverride == null) {\n            return !this._start || this._start.mode !== 'side' || !this._end || this._end.mode !== 'side';\n        }\n        return this._backdropOverride;\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set hasBackdrop(value) {\n        this._backdropOverride = value == null ? null : coerceBooleanProperty(value);\n    }\n    /**\n     * Reference to the CdkScrollable instance that wraps the scrollable content.\n     * @return {?}\n     */\n    get scrollable() {\n        return this._userContent || this._content;\n    }\n    /**\n     * @return {?}\n     */\n    ngAfterContentInit() {\n        this._allDrawers.changes\n            .pipe(startWith(this._allDrawers), takeUntil(this._destroyed))\n            .subscribe((/**\n         * @param {?} drawer\n         * @return {?}\n         */\n        (drawer) => {\n            // @breaking-change 10.0.0 Remove `_container` check once container parameter is required.\n            this._drawers.reset(drawer.filter((/**\n             * @param {?} item\n             * @return {?}\n             */\n            item => !item._container || item._container === this)));\n            this._drawers.notifyOnChanges();\n        }));\n        this._drawers.changes.pipe(startWith(null)).subscribe((/**\n         * @return {?}\n         */\n        () => {\n            this._validateDrawers();\n            this._drawers.forEach((/**\n             * @param {?} drawer\n             * @return {?}\n             */\n            (drawer) => {\n                this._watchDrawerToggle(drawer);\n                this._watchDrawerPosition(drawer);\n                this._watchDrawerMode(drawer);\n            }));\n            if (!this._drawers.length ||\n                this._isDrawerOpen(this._start) ||\n                this._isDrawerOpen(this._end)) {\n                this.updateContentMargins();\n            }\n            this._changeDetectorRef.markForCheck();\n        }));\n        this._doCheckSubject.pipe(debounceTime(10), // Arbitrary debounce time, less than a frame at 60fps\n        takeUntil(this._destroyed)).subscribe((/**\n         * @return {?}\n         */\n        () => this.updateContentMargins()));\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this._contentMarginChanges.complete();\n        this._doCheckSubject.complete();\n        this._drawers.destroy();\n        this._destroyed.next();\n        this._destroyed.complete();\n    }\n    /**\n     * Calls `open` of both start and end drawers\n     * @return {?}\n     */\n    open() {\n        this._drawers.forEach((/**\n         * @param {?} drawer\n         * @return {?}\n         */\n        drawer => drawer.open()));\n    }\n    /**\n     * Calls `close` of both start and end drawers\n     * @return {?}\n     */\n    close() {\n        this._drawers.forEach((/**\n         * @param {?} drawer\n         * @return {?}\n         */\n        drawer => drawer.close()));\n    }\n    /**\n     * Recalculates and updates the inline styles for the content. Note that this should be used\n     * sparingly, because it causes a reflow.\n     * @return {?}\n     */\n    updateContentMargins() {\n        // 1. For drawers in `over` mode, they don't affect the content.\n        // 2. For drawers in `side` mode they should shrink the content. We do this by adding to the\n        //    left margin (for left drawer) or right margin (for right the drawer).\n        // 3. For drawers in `push` mode the should shift the content without resizing it. We do this by\n        //    adding to the left or right margin and simultaneously subtracting the same amount of\n        //    margin from the other side.\n        /** @type {?} */\n        let left = 0;\n        /** @type {?} */\n        let right = 0;\n        if (this._left && this._left.opened) {\n            if (this._left.mode == 'side') {\n                left += this._left._width;\n            }\n            else if (this._left.mode == 'push') {\n                /** @type {?} */\n                const width = this._left._width;\n                left += width;\n                right -= width;\n            }\n        }\n        if (this._right && this._right.opened) {\n            if (this._right.mode == 'side') {\n                right += this._right._width;\n            }\n            else if (this._right.mode == 'push') {\n                /** @type {?} */\n                const width = this._right._width;\n                right += width;\n                left -= width;\n            }\n        }\n        // If either `right` or `left` is zero, don't set a style to the element. This\n        // allows users to specify a custom size via CSS class in SSR scenarios where the\n        // measured widths will always be zero. Note that we reset to `null` here, rather\n        // than below, in order to ensure that the types in the `if` below are consistent.\n        left = left || (/** @type {?} */ (null));\n        right = right || (/** @type {?} */ (null));\n        if (left !== this._contentMargins.left || right !== this._contentMargins.right) {\n            this._contentMargins = { left, right };\n            // Pull back into the NgZone since in some cases we could be outside. We need to be careful\n            // to do it only when something changed, otherwise we can end up hitting the zone too often.\n            this._ngZone.run((/**\n             * @return {?}\n             */\n            () => this._contentMarginChanges.next(this._contentMargins)));\n        }\n    }\n    /**\n     * @return {?}\n     */\n    ngDoCheck() {\n        // If users opted into autosizing, do a check every change detection cycle.\n        if (this._autosize && this._isPushed()) {\n            // Run outside the NgZone, otherwise the debouncer will throw us into an infinite loop.\n            this._ngZone.runOutsideAngular((/**\n             * @return {?}\n             */\n            () => this._doCheckSubject.next()));\n        }\n    }\n    /**\n     * Subscribes to drawer events in order to set a class on the main container element when the\n     * drawer is open and the backdrop is visible. This ensures any overflow on the container element\n     * is properly hidden.\n     * @private\n     * @param {?} drawer\n     * @return {?}\n     */\n    _watchDrawerToggle(drawer) {\n        drawer._animationStarted.pipe(filter((/**\n         * @param {?} event\n         * @return {?}\n         */\n        (event) => event.fromState !== event.toState)), takeUntil(this._drawers.changes))\n            .subscribe((/**\n         * @param {?} event\n         * @return {?}\n         */\n        (event) => {\n            // Set the transition class on the container so that the animations occur. This should not\n            // be set initially because animations should only be triggered via a change in state.\n            if (event.toState !== 'open-instant' && this._animationMode !== 'NoopAnimations') {\n                this._element.nativeElement.classList.add('mat-drawer-transition');\n            }\n            this.updateContentMargins();\n            this._changeDetectorRef.markForCheck();\n        }));\n        if (drawer.mode !== 'side') {\n            drawer.openedChange.pipe(takeUntil(this._drawers.changes)).subscribe((/**\n             * @return {?}\n             */\n            () => this._setContainerClass(drawer.opened)));\n        }\n    }\n    /**\n     * Subscribes to drawer onPositionChanged event in order to\n     * re-validate drawers when the position changes.\n     * @private\n     * @param {?} drawer\n     * @return {?}\n     */\n    _watchDrawerPosition(drawer) {\n        if (!drawer) {\n            return;\n        }\n        // NOTE: We need to wait for the microtask queue to be empty before validating,\n        // since both drawers may be swapping positions at the same time.\n        drawer.onPositionChanged.pipe(takeUntil(this._drawers.changes)).subscribe((/**\n         * @return {?}\n         */\n        () => {\n            this._ngZone.onMicrotaskEmpty.asObservable().pipe(take(1)).subscribe((/**\n             * @return {?}\n             */\n            () => {\n                this._validateDrawers();\n            }));\n        }));\n    }\n    /**\n     * Subscribes to changes in drawer mode so we can run change detection.\n     * @private\n     * @param {?} drawer\n     * @return {?}\n     */\n    _watchDrawerMode(drawer) {\n        if (drawer) {\n            drawer._modeChanged.pipe(takeUntil(merge(this._drawers.changes, this._destroyed)))\n                .subscribe((/**\n             * @return {?}\n             */\n            () => {\n                this.updateContentMargins();\n                this._changeDetectorRef.markForCheck();\n            }));\n        }\n    }\n    /**\n     * Toggles the 'mat-drawer-opened' class on the main 'mat-drawer-container' element.\n     * @private\n     * @param {?} isAdd\n     * @return {?}\n     */\n    _setContainerClass(isAdd) {\n        /** @type {?} */\n        const classList = this._element.nativeElement.classList;\n        /** @type {?} */\n        const className = 'mat-drawer-container-has-open';\n        if (isAdd) {\n            classList.add(className);\n        }\n        else {\n            classList.remove(className);\n        }\n    }\n    /**\n     * Validate the state of the drawer children components.\n     * @private\n     * @return {?}\n     */\n    _validateDrawers() {\n        this._start = this._end = null;\n        // Ensure that we have at most one start and one end drawer.\n        this._drawers.forEach((/**\n         * @param {?} drawer\n         * @return {?}\n         */\n        drawer => {\n            if (drawer.position == 'end') {\n                if (this._end != null) {\n                    throwMatDuplicatedDrawerError('end');\n                }\n                this._end = drawer;\n            }\n            else {\n                if (this._start != null) {\n                    throwMatDuplicatedDrawerError('start');\n                }\n                this._start = drawer;\n            }\n        }));\n        this._right = this._left = null;\n        // Detect if we're LTR or RTL.\n        if (this._dir && this._dir.value === 'rtl') {\n            this._left = this._end;\n            this._right = this._start;\n        }\n        else {\n            this._left = this._start;\n            this._right = this._end;\n        }\n    }\n    /**\n     * Whether the container is being pushed to the side by one of the drawers.\n     * @private\n     * @return {?}\n     */\n    _isPushed() {\n        return (this._isDrawerOpen(this._start) && this._start.mode != 'over') ||\n            (this._isDrawerOpen(this._end) && this._end.mode != 'over');\n    }\n    /**\n     * @return {?}\n     */\n    _onBackdropClicked() {\n        this.backdropClick.emit();\n        this._closeModalDrawer();\n    }\n    /**\n     * @return {?}\n     */\n    _closeModalDrawer() {\n        // Close all open drawers where closing is not disabled and the mode is not `side`.\n        [this._start, this._end]\n            .filter((/**\n         * @param {?} drawer\n         * @return {?}\n         */\n        drawer => drawer && !drawer.disableClose && this._canHaveBackdrop(drawer)))\n            .forEach((/**\n         * @param {?} drawer\n         * @return {?}\n         */\n        drawer => (/** @type {?} */ (drawer)).close()));\n    }\n    /**\n     * @return {?}\n     */\n    _isShowingBackdrop() {\n        return (this._isDrawerOpen(this._start) && this._canHaveBackdrop(this._start)) ||\n            (this._isDrawerOpen(this._end) && this._canHaveBackdrop(this._end));\n    }\n    /**\n     * @private\n     * @param {?} drawer\n     * @return {?}\n     */\n    _canHaveBackdrop(drawer) {\n        return drawer.mode !== 'side' || !!this._backdropOverride;\n    }\n    /**\n     * @private\n     * @param {?} drawer\n     * @return {?}\n     */\n    _isDrawerOpen(drawer) {\n        return drawer != null && drawer.opened;\n    }\n}\nMatDrawerContainer.decorators = [\n    { type: Component, args: [{\n                selector: 'mat-drawer-container',\n                exportAs: 'matDrawerContainer',\n                template: \"<div class=\\\"mat-drawer-backdrop\\\" (click)=\\\"_onBackdropClicked()\\\" *ngIf=\\\"hasBackdrop\\\"\\n     [class.mat-drawer-shown]=\\\"_isShowingBackdrop()\\\"></div>\\n\\n<ng-content select=\\\"mat-drawer\\\"></ng-content>\\n\\n<ng-content select=\\\"mat-drawer-content\\\">\\n</ng-content>\\n<mat-drawer-content *ngIf=\\\"!_content\\\">\\n  <ng-content></ng-content>\\n</mat-drawer-content>\\n\",\n                host: {\n                    'class': 'mat-drawer-container',\n                    '[class.mat-drawer-container-explicit-backdrop]': '_backdropOverride',\n                },\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                encapsulation: ViewEncapsulation.None,\n                providers: [{\n                        provide: MAT_DRAWER_CONTAINER,\n                        useExisting: MatDrawerContainer\n                    }],\n                styles: [\".mat-drawer-container{position:relative;z-index:1;box-sizing:border-box;-webkit-overflow-scrolling:touch;display:block;overflow:hidden}.mat-drawer-container[fullscreen]{top:0;left:0;right:0;bottom:0;position:absolute}.mat-drawer-container[fullscreen].mat-drawer-container-has-open{overflow:hidden}.mat-drawer-container.mat-drawer-container-explicit-backdrop .mat-drawer-side{z-index:3}.mat-drawer-container.ng-animate-disabled .mat-drawer-backdrop,.mat-drawer-container.ng-animate-disabled .mat-drawer-content,.ng-animate-disabled .mat-drawer-container .mat-drawer-backdrop,.ng-animate-disabled .mat-drawer-container .mat-drawer-content{transition:none}.mat-drawer-backdrop{top:0;left:0;right:0;bottom:0;position:absolute;display:block;z-index:3;visibility:hidden}.mat-drawer-backdrop.mat-drawer-shown{visibility:visible}.mat-drawer-transition .mat-drawer-backdrop{transition-duration:400ms;transition-timing-function:cubic-bezier(0.25, 0.8, 0.25, 1);transition-property:background-color,visibility}.cdk-high-contrast-active .mat-drawer-backdrop{opacity:.5}.mat-drawer-content{position:relative;z-index:1;display:block;height:100%;overflow:auto}.mat-drawer-transition .mat-drawer-content{transition-duration:400ms;transition-timing-function:cubic-bezier(0.25, 0.8, 0.25, 1);transition-property:transform,margin-left,margin-right}.mat-drawer{position:relative;z-index:4;display:block;position:absolute;top:0;bottom:0;z-index:3;outline:0;box-sizing:border-box;overflow-y:auto;transform:translate3d(-100%, 0, 0)}.cdk-high-contrast-active .mat-drawer,.cdk-high-contrast-active [dir=rtl] .mat-drawer.mat-drawer-end{border-right:solid 1px currentColor}.cdk-high-contrast-active [dir=rtl] .mat-drawer,.cdk-high-contrast-active .mat-drawer.mat-drawer-end{border-left:solid 1px currentColor;border-right:none}.mat-drawer.mat-drawer-side{z-index:2}.mat-drawer.mat-drawer-end{right:0;transform:translate3d(100%, 0, 0)}[dir=rtl] .mat-drawer{transform:translate3d(100%, 0, 0)}[dir=rtl] .mat-drawer.mat-drawer-end{left:0;right:auto;transform:translate3d(-100%, 0, 0)}.mat-drawer-inner-container{width:100%;height:100%;overflow:auto;-webkit-overflow-scrolling:touch}.mat-sidenav-fixed{position:fixed}\\n\"]\n            }] }\n];\n/** @nocollapse */\nMatDrawerContainer.ctorParameters = () => [\n    { type: Directionality, decorators: [{ type: Optional }] },\n    { type: ElementRef },\n    { type: NgZone },\n    { type: ChangeDetectorRef },\n    { type: ViewportRuler },\n    { type: undefined, decorators: [{ type: Inject, args: [MAT_DRAWER_DEFAULT_AUTOSIZE,] }] },\n    { type: String, decorators: [{ type: Optional }, { type: Inject, args: [ANIMATION_MODULE_TYPE,] }] }\n];\nMatDrawerContainer.propDecorators = {\n    _allDrawers: [{ type: ContentChildren, args: [MatDrawer, {\n                    // We need to use `descendants: true`, because Ivy will no longer match\n                    // indirect descendants if it's left as false.\n                    descendants: true\n                },] }],\n    _content: [{ type: ContentChild, args: [MatDrawerContent,] }],\n    _userContent: [{ type: ViewChild, args: [MatDrawerContent,] }],\n    autosize: [{ type: Input }],\n    hasBackdrop: [{ type: Input }],\n    backdropClick: [{ type: Output }]\n};\nif (false) {\n    /** @type {?} */\n    MatDrawerContainer.ngAcceptInputType_autosize;\n    /** @type {?} */\n    MatDrawerContainer.ngAcceptInputType_hasBackdrop;\n    /**\n     * All drawers in the container. Includes drawers from inside nested containers.\n     * @type {?}\n     */\n    MatDrawerContainer.prototype._allDrawers;\n    /**\n     * Drawers that belong to this container.\n     * @type {?}\n     */\n    MatDrawerContainer.prototype._drawers;\n    /** @type {?} */\n    MatDrawerContainer.prototype._content;\n    /** @type {?} */\n    MatDrawerContainer.prototype._userContent;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatDrawerContainer.prototype._autosize;\n    /** @type {?} */\n    MatDrawerContainer.prototype._backdropOverride;\n    /**\n     * Event emitted when the drawer backdrop is clicked.\n     * @type {?}\n     */\n    MatDrawerContainer.prototype.backdropClick;\n    /**\n     * The drawer at the start/end position, independent of direction.\n     * @type {?}\n     * @private\n     */\n    MatDrawerContainer.prototype._start;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatDrawerContainer.prototype._end;\n    /**\n     * The drawer at the left/right. When direction changes, these will change as well.\n     * They're used as aliases for the above to set the left/right style properly.\n     * In LTR, _left == _start and _right == _end.\n     * In RTL, _left == _end and _right == _start.\n     * @type {?}\n     * @private\n     */\n    MatDrawerContainer.prototype._left;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatDrawerContainer.prototype._right;\n    /**\n     * Emits when the component is destroyed.\n     * @type {?}\n     * @private\n     */\n    MatDrawerContainer.prototype._destroyed;\n    /**\n     * Emits on every ngDoCheck. Used for debouncing reflows.\n     * @type {?}\n     * @private\n     */\n    MatDrawerContainer.prototype._doCheckSubject;\n    /**\n     * Margins to be applied to the content. These are used to push / shrink the drawer content when a\n     * drawer is open. We use margin rather than transform even for push mode because transform breaks\n     * fixed position elements inside of the transformed element.\n     * @type {?}\n     */\n    MatDrawerContainer.prototype._contentMargins;\n    /** @type {?} */\n    MatDrawerContainer.prototype._contentMarginChanges;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatDrawerContainer.prototype._dir;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatDrawerContainer.prototype._element;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatDrawerContainer.prototype._ngZone;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatDrawerContainer.prototype._changeDetectorRef;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatDrawerContainer.prototype._animationMode;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/sidenav/sidenav.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass MatSidenavContent extends MatDrawerContent {\n    /**\n     * @param {?} changeDetectorRef\n     * @param {?} container\n     * @param {?} elementRef\n     * @param {?} scrollDispatcher\n     * @param {?} ngZone\n     */\n    constructor(changeDetectorRef, container, elementRef, scrollDispatcher, ngZone) {\n        super(changeDetectorRef, container, elementRef, scrollDispatcher, ngZone);\n    }\n}\nMatSidenavContent.decorators = [\n    { type: Component, args: [{\n                selector: 'mat-sidenav-content',\n                template: '<ng-content></ng-content>',\n                host: {\n                    'class': 'mat-drawer-content mat-sidenav-content',\n                    '[style.margin-left.px]': '_container._contentMargins.left',\n                    '[style.margin-right.px]': '_container._contentMargins.right',\n                },\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                encapsulation: ViewEncapsulation.None\n            }] }\n];\n/** @nocollapse */\nMatSidenavContent.ctorParameters = () => [\n    { type: ChangeDetectorRef },\n    { type: MatSidenavContainer, decorators: [{ type: Inject, args: [forwardRef((/**\n                     * @return {?}\n                     */\n                    () => MatSidenavContainer)),] }] },\n    { type: ElementRef },\n    { type: ScrollDispatcher },\n    { type: NgZone }\n];\nclass MatSidenav extends MatDrawer {\n    constructor() {\n        super(...arguments);\n        this._fixedInViewport = false;\n        this._fixedTopGap = 0;\n        this._fixedBottomGap = 0;\n    }\n    /**\n     * Whether the sidenav is fixed in the viewport.\n     * @return {?}\n     */\n    get fixedInViewport() { return this._fixedInViewport; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set fixedInViewport(value) { this._fixedInViewport = coerceBooleanProperty(value); }\n    /**\n     * The gap between the top of the sidenav and the top of the viewport when the sidenav is in fixed\n     * mode.\n     * @return {?}\n     */\n    get fixedTopGap() { return this._fixedTopGap; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set fixedTopGap(value) { this._fixedTopGap = coerceNumberProperty(value); }\n    /**\n     * The gap between the bottom of the sidenav and the bottom of the viewport when the sidenav is in\n     * fixed mode.\n     * @return {?}\n     */\n    get fixedBottomGap() { return this._fixedBottomGap; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set fixedBottomGap(value) { this._fixedBottomGap = coerceNumberProperty(value); }\n}\nMatSidenav.decorators = [\n    { type: Component, args: [{\n                selector: 'mat-sidenav',\n                exportAs: 'matSidenav',\n                template: \"<div class=\\\"mat-drawer-inner-container\\\">\\r\\n  <ng-content></ng-content>\\r\\n</div>\\r\\n\",\n                animations: [matDrawerAnimations.transformDrawer],\n                host: {\n                    'class': 'mat-drawer mat-sidenav',\n                    'tabIndex': '-1',\n                    // must prevent the browser from aligning text based on value\n                    '[attr.align]': 'null',\n                    '[class.mat-drawer-end]': 'position === \"end\"',\n                    '[class.mat-drawer-over]': 'mode === \"over\"',\n                    '[class.mat-drawer-push]': 'mode === \"push\"',\n                    '[class.mat-drawer-side]': 'mode === \"side\"',\n                    '[class.mat-drawer-opened]': 'opened',\n                    '[class.mat-sidenav-fixed]': 'fixedInViewport',\n                    '[style.top.px]': 'fixedInViewport ? fixedTopGap : null',\n                    '[style.bottom.px]': 'fixedInViewport ? fixedBottomGap : null',\n                },\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                encapsulation: ViewEncapsulation.None\n            }] }\n];\nMatSidenav.propDecorators = {\n    fixedInViewport: [{ type: Input }],\n    fixedTopGap: [{ type: Input }],\n    fixedBottomGap: [{ type: Input }]\n};\nif (false) {\n    /** @type {?} */\n    MatSidenav.ngAcceptInputType_fixedInViewport;\n    /** @type {?} */\n    MatSidenav.ngAcceptInputType_fixedTopGap;\n    /** @type {?} */\n    MatSidenav.ngAcceptInputType_fixedBottomGap;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatSidenav.prototype._fixedInViewport;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatSidenav.prototype._fixedTopGap;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatSidenav.prototype._fixedBottomGap;\n}\nclass MatSidenavContainer extends MatDrawerContainer {\n}\nMatSidenavContainer.decorators = [\n    { type: Component, args: [{\n                selector: 'mat-sidenav-container',\n                exportAs: 'matSidenavContainer',\n                template: \"<div class=\\\"mat-drawer-backdrop\\\" (click)=\\\"_onBackdropClicked()\\\" *ngIf=\\\"hasBackdrop\\\"\\n     [class.mat-drawer-shown]=\\\"_isShowingBackdrop()\\\"></div>\\n\\n<ng-content select=\\\"mat-sidenav\\\"></ng-content>\\n\\n<ng-content select=\\\"mat-sidenav-content\\\">\\n</ng-content>\\n<mat-sidenav-content *ngIf=\\\"!_content\\\" cdkScrollable>\\n  <ng-content></ng-content>\\n</mat-sidenav-content>\\n\",\n                host: {\n                    'class': 'mat-drawer-container mat-sidenav-container',\n                    '[class.mat-drawer-container-explicit-backdrop]': '_backdropOverride',\n                },\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                encapsulation: ViewEncapsulation.None,\n                providers: [{\n                        provide: MAT_DRAWER_CONTAINER,\n                        useExisting: MatSidenavContainer\n                    }],\n                styles: [\".mat-drawer-container{position:relative;z-index:1;box-sizing:border-box;-webkit-overflow-scrolling:touch;display:block;overflow:hidden}.mat-drawer-container[fullscreen]{top:0;left:0;right:0;bottom:0;position:absolute}.mat-drawer-container[fullscreen].mat-drawer-container-has-open{overflow:hidden}.mat-drawer-container.mat-drawer-container-explicit-backdrop .mat-drawer-side{z-index:3}.mat-drawer-container.ng-animate-disabled .mat-drawer-backdrop,.mat-drawer-container.ng-animate-disabled .mat-drawer-content,.ng-animate-disabled .mat-drawer-container .mat-drawer-backdrop,.ng-animate-disabled .mat-drawer-container .mat-drawer-content{transition:none}.mat-drawer-backdrop{top:0;left:0;right:0;bottom:0;position:absolute;display:block;z-index:3;visibility:hidden}.mat-drawer-backdrop.mat-drawer-shown{visibility:visible}.mat-drawer-transition .mat-drawer-backdrop{transition-duration:400ms;transition-timing-function:cubic-bezier(0.25, 0.8, 0.25, 1);transition-property:background-color,visibility}.cdk-high-contrast-active .mat-drawer-backdrop{opacity:.5}.mat-drawer-content{position:relative;z-index:1;display:block;height:100%;overflow:auto}.mat-drawer-transition .mat-drawer-content{transition-duration:400ms;transition-timing-function:cubic-bezier(0.25, 0.8, 0.25, 1);transition-property:transform,margin-left,margin-right}.mat-drawer{position:relative;z-index:4;display:block;position:absolute;top:0;bottom:0;z-index:3;outline:0;box-sizing:border-box;overflow-y:auto;transform:translate3d(-100%, 0, 0)}.cdk-high-contrast-active .mat-drawer,.cdk-high-contrast-active [dir=rtl] .mat-drawer.mat-drawer-end{border-right:solid 1px currentColor}.cdk-high-contrast-active [dir=rtl] .mat-drawer,.cdk-high-contrast-active .mat-drawer.mat-drawer-end{border-left:solid 1px currentColor;border-right:none}.mat-drawer.mat-drawer-side{z-index:2}.mat-drawer.mat-drawer-end{right:0;transform:translate3d(100%, 0, 0)}[dir=rtl] .mat-drawer{transform:translate3d(100%, 0, 0)}[dir=rtl] .mat-drawer.mat-drawer-end{left:0;right:auto;transform:translate3d(-100%, 0, 0)}.mat-drawer-inner-container{width:100%;height:100%;overflow:auto;-webkit-overflow-scrolling:touch}.mat-sidenav-fixed{position:fixed}\\n\"]\n            }] }\n];\nMatSidenavContainer.propDecorators = {\n    _allDrawers: [{ type: ContentChildren, args: [MatSidenav, {\n                    // We need to use `descendants: true`, because Ivy will no longer match\n                    // indirect descendants if it's left as false.\n                    descendants: true\n                },] }],\n    _content: [{ type: ContentChild, args: [MatSidenavContent,] }]\n};\nif (false) {\n    /** @type {?} */\n    MatSidenavContainer.ngAcceptInputType_hasBackdrop;\n    /** @type {?} */\n    MatSidenavContainer.prototype._allDrawers;\n    /** @type {?} */\n    MatSidenavContainer.prototype._content;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/sidenav/sidenav-module.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass MatSidenavModule {\n}\nMatSidenavModule.decorators = [\n    { type: NgModule, args: [{\n                imports: [\n                    CommonModule,\n                    MatCommonModule,\n                    ScrollingModule,\n                    PlatformModule,\n                ],\n                exports: [\n                    MatCommonModule,\n                    MatDrawer,\n                    MatDrawerContainer,\n                    MatDrawerContent,\n                    MatSidenav,\n                    MatSidenavContainer,\n                    MatSidenavContent,\n                ],\n                declarations: [\n                    MatDrawer,\n                    MatDrawerContainer,\n                    MatDrawerContent,\n                    MatSidenav,\n                    MatSidenavContainer,\n                    MatSidenavContent,\n                ],\n            },] }\n];\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/sidenav/public-api.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MAT_DRAWER_DEFAULT_AUTOSIZE, MAT_DRAWER_DEFAULT_AUTOSIZE_FACTORY, MatDrawer, MatDrawerContainer, MatDrawerContent, MatSidenav, MatSidenavContainer, MatSidenavContent, MatSidenavModule, matDrawerAnimations, throwMatDuplicatedDrawerError, MAT_DRAWER_CONTAINER as ɵangular_material_src_material_sidenav_sidenav_a };\n//# sourceMappingURL=sidenav.js.map\n","import { ObserversModule } from '@angular/cdk/observers';\nimport { InjectionToken, forwardRef, EventEmitter, Component, ViewEncapsulation, ChangeDetectionStrategy, ElementRef, ChangeDetectorRef, Attribute, NgZone, Inject, Optional, ViewChild, Input, Output, Directive, NgModule } from '@angular/core';\nimport { mixinTabIndex, mixinColor, mixinDisableRipple, mixinDisabled, MatRippleModule, MatCommonModule } from '@angular/material/core';\nimport { FocusMonitor } from '@angular/cdk/a11y';\nimport { Directionality } from '@angular/cdk/bidi';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { NG_VALUE_ACCESSOR, NG_VALIDATORS, CheckboxRequiredValidator } from '@angular/forms';\nimport { ANIMATION_MODULE_TYPE } from '@angular/platform-browser/animations';\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/slide-toggle/slide-toggle-config.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Default `mat-slide-toggle` options that can be overridden.\n * @record\n */\nfunction MatSlideToggleDefaultOptions() { }\nif (false) {\n    /**\n     * Whether toggle action triggers value changes in slide toggle.\n     * @type {?|undefined}\n     */\n    MatSlideToggleDefaultOptions.prototype.disableToggleValue;\n    /**\n     * Whether drag action triggers value changes in slide toggle.\n     * @deprecated No longer being used.\n     * \\@breaking-change 10.0.0\n     * @type {?|undefined}\n     */\n    MatSlideToggleDefaultOptions.prototype.disableDragValue;\n}\n/**\n * Injection token to be used to override the default options for `mat-slide-toggle`.\n * @type {?}\n */\nconst MAT_SLIDE_TOGGLE_DEFAULT_OPTIONS = new InjectionToken('mat-slide-toggle-default-options', {\n    providedIn: 'root',\n    factory: (/**\n     * @return {?}\n     */\n    () => ({ disableToggleValue: false }))\n});\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/slide-toggle/slide-toggle.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n// Increasing integer for generating unique ids for slide-toggle components.\n/** @type {?} */\nlet nextUniqueId = 0;\n/**\n * \\@docs-private\n * @type {?}\n */\nconst MAT_SLIDE_TOGGLE_VALUE_ACCESSOR = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef((/**\n     * @return {?}\n     */\n    () => MatSlideToggle)),\n    multi: true\n};\n/**\n * Change event object emitted by a MatSlideToggle.\n */\nclass MatSlideToggleChange {\n    /**\n     * @param {?} source\n     * @param {?} checked\n     */\n    constructor(source, checked) {\n        this.source = source;\n        this.checked = checked;\n    }\n}\nif (false) {\n    /**\n     * The source MatSlideToggle of the event.\n     * @type {?}\n     */\n    MatSlideToggleChange.prototype.source;\n    /**\n     * The new `checked` value of the MatSlideToggle.\n     * @type {?}\n     */\n    MatSlideToggleChange.prototype.checked;\n}\n// Boilerplate for applying mixins to MatSlideToggle.\n/**\n * \\@docs-private\n */\nclass MatSlideToggleBase {\n    /**\n     * @param {?} _elementRef\n     */\n    constructor(_elementRef) {\n        this._elementRef = _elementRef;\n    }\n}\nif (false) {\n    /** @type {?} */\n    MatSlideToggleBase.prototype._elementRef;\n}\n/** @type {?} */\nconst _MatSlideToggleMixinBase = mixinTabIndex(mixinColor(mixinDisableRipple(mixinDisabled(MatSlideToggleBase)), 'accent'));\n/**\n * Represents a slidable \"switch\" toggle that can be moved between on and off.\n */\nclass MatSlideToggle extends _MatSlideToggleMixinBase {\n    /**\n     * @param {?} elementRef\n     * @param {?} _focusMonitor\n     * @param {?} _changeDetectorRef\n     * @param {?} tabIndex\n     * @param {?} _ngZone\n     * @param {?} defaults\n     * @param {?=} _animationMode\n     * @param {?=} _dir\n     */\n    constructor(elementRef, _focusMonitor, _changeDetectorRef, tabIndex, \n    /**\n     * @deprecated `_ngZone` and `_dir` parameters to be removed.\n     * @breaking-change 10.0.0\n     */\n    _ngZone, defaults, _animationMode, _dir) {\n        super(elementRef);\n        this._focusMonitor = _focusMonitor;\n        this._changeDetectorRef = _changeDetectorRef;\n        this.defaults = defaults;\n        this._animationMode = _animationMode;\n        this._onChange = (/**\n         * @param {?} _\n         * @return {?}\n         */\n        (_) => { });\n        this._onTouched = (/**\n         * @return {?}\n         */\n        () => { });\n        this._uniqueId = `mat-slide-toggle-${++nextUniqueId}`;\n        this._required = false;\n        this._checked = false;\n        /**\n         * Name value will be applied to the input element if present.\n         */\n        this.name = null;\n        /**\n         * A unique id for the slide-toggle input. If none is supplied, it will be auto-generated.\n         */\n        this.id = this._uniqueId;\n        /**\n         * Whether the label should appear after or before the slide-toggle. Defaults to 'after'.\n         */\n        this.labelPosition = 'after';\n        /**\n         * Used to set the aria-label attribute on the underlying input element.\n         */\n        this.ariaLabel = null;\n        /**\n         * Used to set the aria-labelledby attribute on the underlying input element.\n         */\n        this.ariaLabelledby = null;\n        /**\n         * An event will be dispatched each time the slide-toggle changes its value.\n         */\n        this.change = new EventEmitter();\n        /**\n         * An event will be dispatched each time the slide-toggle input is toggled.\n         * This event is always emitted when the user toggles the slide toggle, but this does not mean\n         * the slide toggle's value has changed.\n         */\n        this.toggleChange = new EventEmitter();\n        /**\n         * An event will be dispatched each time the slide-toggle is dragged.\n         * This event is always emitted when the user drags the slide toggle to make a change greater\n         * than 50%. It does not mean the slide toggle's value is changed. The event is not emitted when\n         * the user toggles the slide toggle to change its value.\n         * @deprecated No longer being used. To be removed.\n         * \\@breaking-change 10.0.0\n         */\n        this.dragChange = new EventEmitter();\n        this.tabIndex = parseInt(tabIndex) || 0;\n    }\n    /**\n     * Whether the slide-toggle is required.\n     * @return {?}\n     */\n    get required() { return this._required; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set required(value) { this._required = coerceBooleanProperty(value); }\n    /**\n     * Whether the slide-toggle element is checked or not.\n     * @return {?}\n     */\n    get checked() { return this._checked; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set checked(value) {\n        this._checked = coerceBooleanProperty(value);\n        this._changeDetectorRef.markForCheck();\n    }\n    /**\n     * Returns the unique id for the visual hidden input.\n     * @return {?}\n     */\n    get inputId() { return `${this.id || this._uniqueId}-input`; }\n    /**\n     * @return {?}\n     */\n    ngAfterContentInit() {\n        this._focusMonitor\n            .monitor(this._elementRef, true)\n            .subscribe((/**\n         * @param {?} focusOrigin\n         * @return {?}\n         */\n        focusOrigin => {\n            // Only forward focus manually when it was received programmatically or through the\n            // keyboard. We should not do this for mouse/touch focus for two reasons:\n            // 1. It can prevent clicks from landing in Chrome (see #18269).\n            // 2. They're already handled by the wrapping `label` element.\n            if (focusOrigin === 'keyboard' || focusOrigin === 'program') {\n                this._inputElement.nativeElement.focus();\n            }\n            else if (!focusOrigin) {\n                // When a focused element becomes disabled, the browser *immediately* fires a blur event.\n                // Angular does not expect events to be raised during change detection, so any state\n                // change (such as a form control's 'ng-touched') will cause a changed-after-checked\n                // error. See https://github.com/angular/angular/issues/17793. To work around this,\n                // we defer telling the form control it has been touched until the next tick.\n                Promise.resolve().then((/**\n                 * @return {?}\n                 */\n                () => this._onTouched()));\n            }\n        }));\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this._focusMonitor.stopMonitoring(this._elementRef);\n    }\n    /**\n     * Method being called whenever the underlying input emits a change event.\n     * @param {?} event\n     * @return {?}\n     */\n    _onChangeEvent(event) {\n        // We always have to stop propagation on the change event.\n        // Otherwise the change event, from the input element, will bubble up and\n        // emit its event object to the component's `change` output.\n        event.stopPropagation();\n        this.toggleChange.emit();\n        // When the slide toggle's config disables toggle change event by setting\n        // `disableToggleValue: true`, the slide toggle's value does not change, and the\n        // checked state of the underlying input needs to be changed back.\n        if (this.defaults.disableToggleValue) {\n            this._inputElement.nativeElement.checked = this.checked;\n            return;\n        }\n        // Sync the value from the underlying input element with the component instance.\n        this.checked = this._inputElement.nativeElement.checked;\n        // Emit our custom change event only if the underlying input emitted one. This ensures that\n        // there is no change event, when the checked state changes programmatically.\n        this._emitChangeEvent();\n    }\n    /**\n     * Method being called whenever the slide-toggle has been clicked.\n     * @param {?} event\n     * @return {?}\n     */\n    _onInputClick(event) {\n        // We have to stop propagation for click events on the visual hidden input element.\n        // By default, when a user clicks on a label element, a generated click event will be\n        // dispatched on the associated input element. Since we are using a label element as our\n        // root container, the click event on the `slide-toggle` will be executed twice.\n        // The real click event will bubble up, and the generated click event also tries to bubble up.\n        // This will lead to multiple click events.\n        // Preventing bubbling for the second event will solve that issue.\n        event.stopPropagation();\n    }\n    /**\n     * Implemented as part of ControlValueAccessor.\n     * @param {?} value\n     * @return {?}\n     */\n    writeValue(value) {\n        this.checked = !!value;\n    }\n    /**\n     * Implemented as part of ControlValueAccessor.\n     * @param {?} fn\n     * @return {?}\n     */\n    registerOnChange(fn) {\n        this._onChange = fn;\n    }\n    /**\n     * Implemented as part of ControlValueAccessor.\n     * @param {?} fn\n     * @return {?}\n     */\n    registerOnTouched(fn) {\n        this._onTouched = fn;\n    }\n    /**\n     * Implemented as a part of ControlValueAccessor.\n     * @param {?} isDisabled\n     * @return {?}\n     */\n    setDisabledState(isDisabled) {\n        this.disabled = isDisabled;\n        this._changeDetectorRef.markForCheck();\n    }\n    /**\n     * Focuses the slide-toggle.\n     * @param {?=} options\n     * @return {?}\n     */\n    focus(options) {\n        this._focusMonitor.focusVia(this._inputElement, 'keyboard', options);\n    }\n    /**\n     * Toggles the checked state of the slide-toggle.\n     * @return {?}\n     */\n    toggle() {\n        this.checked = !this.checked;\n        this._onChange(this.checked);\n    }\n    /**\n     * Emits a change event on the `change` output. Also notifies the FormControl about the change.\n     * @private\n     * @return {?}\n     */\n    _emitChangeEvent() {\n        this._onChange(this.checked);\n        this.change.emit(new MatSlideToggleChange(this, this.checked));\n    }\n    /**\n     * Method being called whenever the label text changes.\n     * @return {?}\n     */\n    _onLabelTextChange() {\n        // Since the event of the `cdkObserveContent` directive runs outside of the zone, the\n        // slide-toggle component will be only marked for check, but no actual change detection runs\n        // automatically. Instead of going back into the zone in order to trigger a change detection\n        // which causes *all* components to be checked (if explicitly marked or not using OnPush),\n        // we only trigger an explicit change detection for the slide-toggle view and its children.\n        this._changeDetectorRef.detectChanges();\n    }\n}\nMatSlideToggle.decorators = [\n    { type: Component, args: [{\n                selector: 'mat-slide-toggle',\n                exportAs: 'matSlideToggle',\n                host: {\n                    'class': 'mat-slide-toggle',\n                    '[id]': 'id',\n                    // Needs to be `-1` so it can still receive programmatic focus.\n                    '[attr.tabindex]': 'disabled ? null : -1',\n                    '[attr.aria-label]': 'null',\n                    '[attr.aria-labelledby]': 'null',\n                    '[class.mat-checked]': 'checked',\n                    '[class.mat-disabled]': 'disabled',\n                    '[class.mat-slide-toggle-label-before]': 'labelPosition == \"before\"',\n                    '[class._mat-animation-noopable]': '_animationMode === \"NoopAnimations\"',\n                },\n                template: \"<label [attr.for]=\\\"inputId\\\" class=\\\"mat-slide-toggle-label\\\" #label>\\n  <div #toggleBar class=\\\"mat-slide-toggle-bar\\\"\\n       [class.mat-slide-toggle-bar-no-side-margin]=\\\"!labelContent.textContent || !labelContent.textContent.trim()\\\">\\n\\n    <input #input class=\\\"mat-slide-toggle-input cdk-visually-hidden\\\" type=\\\"checkbox\\\"\\n           role=\\\"switch\\\"\\n           [id]=\\\"inputId\\\"\\n           [required]=\\\"required\\\"\\n           [tabIndex]=\\\"tabIndex\\\"\\n           [checked]=\\\"checked\\\"\\n           [disabled]=\\\"disabled\\\"\\n           [attr.name]=\\\"name\\\"\\n           [attr.aria-checked]=\\\"checked.toString()\\\"\\n           [attr.aria-label]=\\\"ariaLabel\\\"\\n           [attr.aria-labelledby]=\\\"ariaLabelledby\\\"\\n           (change)=\\\"_onChangeEvent($event)\\\"\\n           (click)=\\\"_onInputClick($event)\\\">\\n\\n    <div class=\\\"mat-slide-toggle-thumb-container\\\" #thumbContainer>\\n      <div class=\\\"mat-slide-toggle-thumb\\\"></div>\\n      <div class=\\\"mat-slide-toggle-ripple mat-focus-indicator\\\" mat-ripple\\n           [matRippleTrigger]=\\\"label\\\"\\n           [matRippleDisabled]=\\\"disableRipple || disabled\\\"\\n           [matRippleCentered]=\\\"true\\\"\\n           [matRippleRadius]=\\\"20\\\"\\n           [matRippleAnimation]=\\\"{enterDuration: 150}\\\">\\n\\n        <div class=\\\"mat-ripple-element mat-slide-toggle-persistent-ripple\\\"></div>\\n      </div>\\n    </div>\\n\\n  </div>\\n\\n  <span class=\\\"mat-slide-toggle-content\\\" #labelContent (cdkObserveContent)=\\\"_onLabelTextChange()\\\">\\n    <!-- Add an invisible span so JAWS can read the label -->\\n    <span style=\\\"display:none\\\">&nbsp;</span>\\n    <ng-content></ng-content>\\n  </span>\\n</label>\\n\",\n                providers: [MAT_SLIDE_TOGGLE_VALUE_ACCESSOR],\n                inputs: ['disabled', 'disableRipple', 'color', 'tabIndex'],\n                encapsulation: ViewEncapsulation.None,\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                styles: [\".mat-slide-toggle{display:inline-block;height:24px;max-width:100%;line-height:24px;white-space:nowrap;outline:none;-webkit-tap-highlight-color:transparent}.mat-slide-toggle.mat-checked .mat-slide-toggle-thumb-container{transform:translate3d(16px, 0, 0)}[dir=rtl] .mat-slide-toggle.mat-checked .mat-slide-toggle-thumb-container{transform:translate3d(-16px, 0, 0)}.mat-slide-toggle.mat-disabled{opacity:.38}.mat-slide-toggle.mat-disabled .mat-slide-toggle-label,.mat-slide-toggle.mat-disabled .mat-slide-toggle-thumb-container{cursor:default}.mat-slide-toggle-label{display:flex;flex:1;flex-direction:row;align-items:center;height:inherit;cursor:pointer}.mat-slide-toggle-content{white-space:nowrap;overflow:hidden;text-overflow:ellipsis}.mat-slide-toggle-label-before .mat-slide-toggle-label{order:1}.mat-slide-toggle-label-before .mat-slide-toggle-bar{order:2}[dir=rtl] .mat-slide-toggle-label-before .mat-slide-toggle-bar,.mat-slide-toggle-bar{margin-right:8px;margin-left:0}[dir=rtl] .mat-slide-toggle-bar,.mat-slide-toggle-label-before .mat-slide-toggle-bar{margin-left:8px;margin-right:0}.mat-slide-toggle-bar-no-side-margin{margin-left:0;margin-right:0}.mat-slide-toggle-thumb-container{position:absolute;z-index:1;width:20px;height:20px;top:-3px;left:0;transform:translate3d(0, 0, 0);transition:all 80ms linear;transition-property:transform}._mat-animation-noopable .mat-slide-toggle-thumb-container{transition:none}[dir=rtl] .mat-slide-toggle-thumb-container{left:auto;right:0}.mat-slide-toggle-thumb{height:20px;width:20px;border-radius:50%}.mat-slide-toggle-bar{position:relative;width:36px;height:14px;flex-shrink:0;border-radius:8px}.mat-slide-toggle-input{bottom:0;left:10px}[dir=rtl] .mat-slide-toggle-input{left:auto;right:10px}.mat-slide-toggle-bar,.mat-slide-toggle-thumb{transition:all 80ms linear;transition-property:background-color;transition-delay:50ms}._mat-animation-noopable .mat-slide-toggle-bar,._mat-animation-noopable .mat-slide-toggle-thumb{transition:none}.mat-slide-toggle .mat-slide-toggle-ripple{position:absolute;top:calc(50% - 20px);left:calc(50% - 20px);height:40px;width:40px;z-index:1;pointer-events:none}.mat-slide-toggle .mat-slide-toggle-ripple .mat-ripple-element:not(.mat-slide-toggle-persistent-ripple){opacity:.12}.mat-slide-toggle-persistent-ripple{width:100%;height:100%;transform:none}.mat-slide-toggle-bar:hover .mat-slide-toggle-persistent-ripple{opacity:.04}.mat-slide-toggle:not(.mat-disabled).cdk-keyboard-focused .mat-slide-toggle-persistent-ripple{opacity:.12}.mat-slide-toggle-persistent-ripple,.mat-slide-toggle.mat-disabled .mat-slide-toggle-bar:hover .mat-slide-toggle-persistent-ripple{opacity:0}@media(hover: none){.mat-slide-toggle-bar:hover .mat-slide-toggle-persistent-ripple{display:none}}.cdk-high-contrast-active .mat-slide-toggle-thumb,.cdk-high-contrast-active .mat-slide-toggle-bar{border:1px solid}.cdk-high-contrast-active .mat-slide-toggle.cdk-keyboard-focused .mat-slide-toggle-bar{outline:2px dotted;outline-offset:5px}\\n\"]\n            }] }\n];\n/** @nocollapse */\nMatSlideToggle.ctorParameters = () => [\n    { type: ElementRef },\n    { type: FocusMonitor },\n    { type: ChangeDetectorRef },\n    { type: String, decorators: [{ type: Attribute, args: ['tabindex',] }] },\n    { type: NgZone },\n    { type: undefined, decorators: [{ type: Inject, args: [MAT_SLIDE_TOGGLE_DEFAULT_OPTIONS,] }] },\n    { type: String, decorators: [{ type: Optional }, { type: Inject, args: [ANIMATION_MODULE_TYPE,] }] },\n    { type: Directionality, decorators: [{ type: Optional }] }\n];\nMatSlideToggle.propDecorators = {\n    _thumbEl: [{ type: ViewChild, args: ['thumbContainer',] }],\n    _thumbBarEl: [{ type: ViewChild, args: ['toggleBar',] }],\n    name: [{ type: Input }],\n    id: [{ type: Input }],\n    labelPosition: [{ type: Input }],\n    ariaLabel: [{ type: Input, args: ['aria-label',] }],\n    ariaLabelledby: [{ type: Input, args: ['aria-labelledby',] }],\n    required: [{ type: Input }],\n    checked: [{ type: Input }],\n    change: [{ type: Output }],\n    toggleChange: [{ type: Output }],\n    dragChange: [{ type: Output }],\n    _inputElement: [{ type: ViewChild, args: ['input',] }]\n};\nif (false) {\n    /** @type {?} */\n    MatSlideToggle.ngAcceptInputType_required;\n    /** @type {?} */\n    MatSlideToggle.ngAcceptInputType_checked;\n    /** @type {?} */\n    MatSlideToggle.ngAcceptInputType_disabled;\n    /** @type {?} */\n    MatSlideToggle.ngAcceptInputType_disableRipple;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatSlideToggle.prototype._onChange;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatSlideToggle.prototype._onTouched;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatSlideToggle.prototype._uniqueId;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatSlideToggle.prototype._required;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatSlideToggle.prototype._checked;\n    /**\n     * Reference to the thumb HTMLElement.\n     * @type {?}\n     */\n    MatSlideToggle.prototype._thumbEl;\n    /**\n     * Reference to the thumb bar HTMLElement.\n     * @type {?}\n     */\n    MatSlideToggle.prototype._thumbBarEl;\n    /**\n     * Name value will be applied to the input element if present.\n     * @type {?}\n     */\n    MatSlideToggle.prototype.name;\n    /**\n     * A unique id for the slide-toggle input. If none is supplied, it will be auto-generated.\n     * @type {?}\n     */\n    MatSlideToggle.prototype.id;\n    /**\n     * Whether the label should appear after or before the slide-toggle. Defaults to 'after'.\n     * @type {?}\n     */\n    MatSlideToggle.prototype.labelPosition;\n    /**\n     * Used to set the aria-label attribute on the underlying input element.\n     * @type {?}\n     */\n    MatSlideToggle.prototype.ariaLabel;\n    /**\n     * Used to set the aria-labelledby attribute on the underlying input element.\n     * @type {?}\n     */\n    MatSlideToggle.prototype.ariaLabelledby;\n    /**\n     * An event will be dispatched each time the slide-toggle changes its value.\n     * @type {?}\n     */\n    MatSlideToggle.prototype.change;\n    /**\n     * An event will be dispatched each time the slide-toggle input is toggled.\n     * This event is always emitted when the user toggles the slide toggle, but this does not mean\n     * the slide toggle's value has changed.\n     * @type {?}\n     */\n    MatSlideToggle.prototype.toggleChange;\n    /**\n     * An event will be dispatched each time the slide-toggle is dragged.\n     * This event is always emitted when the user drags the slide toggle to make a change greater\n     * than 50%. It does not mean the slide toggle's value is changed. The event is not emitted when\n     * the user toggles the slide toggle to change its value.\n     * @deprecated No longer being used. To be removed.\n     * \\@breaking-change 10.0.0\n     * @type {?}\n     */\n    MatSlideToggle.prototype.dragChange;\n    /**\n     * Reference to the underlying input element.\n     * @type {?}\n     */\n    MatSlideToggle.prototype._inputElement;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatSlideToggle.prototype._focusMonitor;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatSlideToggle.prototype._changeDetectorRef;\n    /** @type {?} */\n    MatSlideToggle.prototype.defaults;\n    /** @type {?} */\n    MatSlideToggle.prototype._animationMode;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/slide-toggle/slide-toggle-required-validator.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/** @type {?} */\nconst MAT_SLIDE_TOGGLE_REQUIRED_VALIDATOR = {\n    provide: NG_VALIDATORS,\n    useExisting: forwardRef((/**\n     * @return {?}\n     */\n    () => MatSlideToggleRequiredValidator)),\n    multi: true\n};\n/**\n * Validator for Material slide-toggle components with the required attribute in a\n * template-driven form. The default validator for required form controls asserts\n * that the control value is not undefined but that is not appropriate for a slide-toggle\n * where the value is always defined.\n *\n * Required slide-toggle form controls are valid when checked.\n */\nclass MatSlideToggleRequiredValidator extends CheckboxRequiredValidator {\n}\nMatSlideToggleRequiredValidator.decorators = [\n    { type: Directive, args: [{\n                selector: `mat-slide-toggle[required][formControlName],\n             mat-slide-toggle[required][formControl], mat-slide-toggle[required][ngModel]`,\n                providers: [MAT_SLIDE_TOGGLE_REQUIRED_VALIDATOR],\n            },] }\n];\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/slide-toggle/slide-toggle-module.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * This module is used by both original and MDC-based slide-toggle implementations.\n */\n// tslint:disable-next-line:class-name\nclass _MatSlideToggleRequiredValidatorModule {\n}\n_MatSlideToggleRequiredValidatorModule.decorators = [\n    { type: NgModule, args: [{\n                exports: [MatSlideToggleRequiredValidator],\n                declarations: [MatSlideToggleRequiredValidator],\n            },] }\n];\nclass MatSlideToggleModule {\n}\nMatSlideToggleModule.decorators = [\n    { type: NgModule, args: [{\n                imports: [\n                    _MatSlideToggleRequiredValidatorModule,\n                    MatRippleModule,\n                    MatCommonModule,\n                    ObserversModule,\n                ],\n                exports: [\n                    _MatSlideToggleRequiredValidatorModule,\n                    MatSlideToggle,\n                    MatCommonModule\n                ],\n                declarations: [MatSlideToggle],\n            },] }\n];\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/slide-toggle/public-api.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MAT_SLIDE_TOGGLE_DEFAULT_OPTIONS, MAT_SLIDE_TOGGLE_REQUIRED_VALIDATOR, MAT_SLIDE_TOGGLE_VALUE_ACCESSOR, MatSlideToggle, MatSlideToggleChange, MatSlideToggleModule, MatSlideToggleRequiredValidator, _MatSlideToggleRequiredValidatorModule };\n//# sourceMappingURL=slide-toggle.js.map\n","import { DOCUMENT, CommonModule } from '@angular/common';\nimport { forwardRef, EventEmitter, Component, ViewEncapsulation, ChangeDetectionStrategy, ElementRef, ChangeDetectorRef, Optional, Attribute, Inject, NgZone, Input, Output, ViewChild, NgModule } from '@angular/core';\nimport { mixinTabIndex, mixinColor, mixinDisabled, MatCommonModule } from '@angular/material/core';\nimport { FocusMonitor } from '@angular/cdk/a11y';\nimport { Directionality } from '@angular/cdk/bidi';\nimport { coerceBooleanProperty, coerceNumberProperty } from '@angular/cdk/coercion';\nimport { hasModifierKey, DOWN_ARROW, RIGHT_ARROW, UP_ARROW, LEFT_ARROW, HOME, END, PAGE_DOWN, PAGE_UP } from '@angular/cdk/keycodes';\nimport { NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { ANIMATION_MODULE_TYPE } from '@angular/platform-browser/animations';\nimport { normalizePassiveListenerOptions } from '@angular/cdk/platform';\nimport { Subscription } from 'rxjs';\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/slider/slider.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/** @type {?} */\nconst activeEventOptions = normalizePassiveListenerOptions({ passive: false });\n/**\n * Visually, a 30px separation between tick marks looks best. This is very subjective but it is\n * the default separation we chose.\n * @type {?}\n */\nconst MIN_AUTO_TICK_SEPARATION = 30;\n/**\n * The thumb gap size for a disabled slider.\n * @type {?}\n */\nconst DISABLED_THUMB_GAP = 7;\n/**\n * The thumb gap size for a non-active slider at its minimum value.\n * @type {?}\n */\nconst MIN_VALUE_NONACTIVE_THUMB_GAP = 7;\n/**\n * The thumb gap size for an active slider at its minimum value.\n * @type {?}\n */\nconst MIN_VALUE_ACTIVE_THUMB_GAP = 10;\n/**\n * Provider Expression that allows mat-slider to register as a ControlValueAccessor.\n * This allows it to support [(ngModel)] and [formControl].\n * \\@docs-private\n * @type {?}\n */\nconst MAT_SLIDER_VALUE_ACCESSOR = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef((/**\n     * @return {?}\n     */\n    () => MatSlider)),\n    multi: true\n};\n/**\n * A simple change event emitted by the MatSlider component.\n */\nclass MatSliderChange {\n}\nif (false) {\n    /**\n     * The MatSlider that changed.\n     * @type {?}\n     */\n    MatSliderChange.prototype.source;\n    /**\n     * The new value of the source slider.\n     * @type {?}\n     */\n    MatSliderChange.prototype.value;\n}\n// Boilerplate for applying mixins to MatSlider.\n/**\n * \\@docs-private\n */\nclass MatSliderBase {\n    /**\n     * @param {?} _elementRef\n     */\n    constructor(_elementRef) {\n        this._elementRef = _elementRef;\n    }\n}\nif (false) {\n    /** @type {?} */\n    MatSliderBase.prototype._elementRef;\n}\n/** @type {?} */\nconst _MatSliderMixinBase = mixinTabIndex(mixinColor(mixinDisabled(MatSliderBase), 'accent'));\n/**\n * Allows users to select from a range of values by moving the slider thumb. It is similar in\n * behavior to the native `<input type=\"range\">` element.\n */\nclass MatSlider extends _MatSliderMixinBase {\n    /**\n     * @param {?} elementRef\n     * @param {?} _focusMonitor\n     * @param {?} _changeDetectorRef\n     * @param {?} _dir\n     * @param {?} tabIndex\n     * @param {?=} _animationMode\n     * @param {?=} _ngZone\n     * @param {?=} document\n     */\n    constructor(elementRef, _focusMonitor, _changeDetectorRef, _dir, tabIndex, _animationMode, _ngZone, \n    /** @breaking-change 11.0.0 make document required */\n    document) {\n        super(elementRef);\n        this._focusMonitor = _focusMonitor;\n        this._changeDetectorRef = _changeDetectorRef;\n        this._dir = _dir;\n        this._animationMode = _animationMode;\n        this._ngZone = _ngZone;\n        this._invert = false;\n        this._max = 100;\n        this._min = 0;\n        this._step = 1;\n        this._thumbLabel = false;\n        this._tickInterval = 0;\n        this._value = null;\n        this._vertical = false;\n        /**\n         * Event emitted when the slider value has changed.\n         */\n        this.change = new EventEmitter();\n        /**\n         * Event emitted when the slider thumb moves.\n         */\n        this.input = new EventEmitter();\n        /**\n         * Emits when the raw value of the slider changes. This is here primarily\n         * to facilitate the two-way binding for the `value` input.\n         * \\@docs-private\n         */\n        this.valueChange = new EventEmitter();\n        /**\n         * onTouch function registered via registerOnTouch (ControlValueAccessor).\n         */\n        this.onTouched = (/**\n         * @return {?}\n         */\n        () => { });\n        this._percent = 0;\n        /**\n         * Whether or not the thumb is sliding.\n         * Used to determine if there should be a transition for the thumb and fill track.\n         */\n        this._isSliding = false;\n        /**\n         * Whether or not the slider is active (clicked or sliding).\n         * Used to shrink and grow the thumb as according to the Material Design spec.\n         */\n        this._isActive = false;\n        /**\n         * The size of a tick interval as a percentage of the size of the track.\n         */\n        this._tickIntervalPercent = 0;\n        /**\n         * The dimensions of the slider.\n         */\n        this._sliderDimensions = null;\n        this._controlValueAccessorChangeFn = (/**\n         * @return {?}\n         */\n        () => { });\n        /**\n         * Subscription to the Directionality change EventEmitter.\n         */\n        this._dirChangeSubscription = Subscription.EMPTY;\n        /**\n         * Called when the user has put their pointer down on the slider.\n         */\n        this._pointerDown = (/**\n         * @param {?} event\n         * @return {?}\n         */\n        (event) => {\n            // Don't do anything if the slider is disabled or the\n            // user is using anything other than the main mouse button.\n            if (this.disabled || this._isSliding || (!isTouchEvent(event) && event.button !== 0)) {\n                return;\n            }\n            this._runInsideZone((/**\n             * @return {?}\n             */\n            () => {\n                /** @type {?} */\n                const oldValue = this.value;\n                /** @type {?} */\n                const pointerPosition = getPointerPositionOnPage(event);\n                this._isSliding = true;\n                this._lastPointerEvent = event;\n                event.preventDefault();\n                this._focusHostElement();\n                this._onMouseenter(); // Simulate mouseenter in case this is a mobile device.\n                this._bindGlobalEvents(event);\n                this._focusHostElement();\n                this._updateValueFromPosition(pointerPosition);\n                this._valueOnSlideStart = this.value;\n                this._pointerPositionOnStart = pointerPosition;\n                // Emit a change and input event if the value changed.\n                if (oldValue != this.value) {\n                    this._emitInputEvent();\n                    this._emitChangeEvent();\n                }\n            }));\n        });\n        /**\n         * Called when the user has moved their pointer after\n         * starting to drag. Bound on the document level.\n         */\n        this._pointerMove = (/**\n         * @param {?} event\n         * @return {?}\n         */\n        (event) => {\n            if (this._isSliding) {\n                // Prevent the slide from selecting anything else.\n                event.preventDefault();\n                /** @type {?} */\n                const oldValue = this.value;\n                this._lastPointerEvent = event;\n                this._updateValueFromPosition(getPointerPositionOnPage(event));\n                // Native range elements always emit `input` events when the value changed while sliding.\n                if (oldValue != this.value) {\n                    this._emitInputEvent();\n                }\n            }\n        });\n        /**\n         * Called when the user has lifted their pointer. Bound on the document level.\n         */\n        this._pointerUp = (/**\n         * @param {?} event\n         * @return {?}\n         */\n        (event) => {\n            if (this._isSliding) {\n                /** @type {?} */\n                const pointerPositionOnStart = this._pointerPositionOnStart;\n                /** @type {?} */\n                const currentPointerPosition = getPointerPositionOnPage(event);\n                event.preventDefault();\n                this._removeGlobalEvents();\n                this._valueOnSlideStart = this._pointerPositionOnStart = this._lastPointerEvent = null;\n                this._isSliding = false;\n                if (this._valueOnSlideStart != this.value && !this.disabled &&\n                    pointerPositionOnStart && (pointerPositionOnStart.x !== currentPointerPosition.x ||\n                    pointerPositionOnStart.y !== currentPointerPosition.y)) {\n                    this._emitChangeEvent();\n                }\n            }\n        });\n        /**\n         * Called when the window has lost focus.\n         */\n        this._windowBlur = (/**\n         * @return {?}\n         */\n        () => {\n            // If the window is blurred while dragging we need to stop dragging because the\n            // browser won't dispatch the `mouseup` and `touchend` events anymore.\n            if (this._lastPointerEvent) {\n                this._pointerUp(this._lastPointerEvent);\n            }\n        });\n        this._document = document;\n        this.tabIndex = parseInt(tabIndex) || 0;\n        this._runOutsizeZone((/**\n         * @return {?}\n         */\n        () => {\n            /** @type {?} */\n            const element = elementRef.nativeElement;\n            element.addEventListener('mousedown', this._pointerDown, activeEventOptions);\n            element.addEventListener('touchstart', this._pointerDown, activeEventOptions);\n        }));\n    }\n    /**\n     * Whether the slider is inverted.\n     * @return {?}\n     */\n    get invert() { return this._invert; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set invert(value) {\n        this._invert = coerceBooleanProperty(value);\n    }\n    /**\n     * The maximum value that the slider can have.\n     * @return {?}\n     */\n    get max() { return this._max; }\n    /**\n     * @param {?} v\n     * @return {?}\n     */\n    set max(v) {\n        this._max = coerceNumberProperty(v, this._max);\n        this._percent = this._calculatePercentage(this._value);\n        // Since this also modifies the percentage, we need to let the change detection know.\n        this._changeDetectorRef.markForCheck();\n    }\n    /**\n     * The minimum value that the slider can have.\n     * @return {?}\n     */\n    get min() { return this._min; }\n    /**\n     * @param {?} v\n     * @return {?}\n     */\n    set min(v) {\n        this._min = coerceNumberProperty(v, this._min);\n        // If the value wasn't explicitly set by the user, set it to the min.\n        if (this._value === null) {\n            this.value = this._min;\n        }\n        this._percent = this._calculatePercentage(this._value);\n        // Since this also modifies the percentage, we need to let the change detection know.\n        this._changeDetectorRef.markForCheck();\n    }\n    /**\n     * The values at which the thumb will snap.\n     * @return {?}\n     */\n    get step() { return this._step; }\n    /**\n     * @param {?} v\n     * @return {?}\n     */\n    set step(v) {\n        this._step = coerceNumberProperty(v, this._step);\n        if (this._step % 1 !== 0) {\n            this._roundToDecimal = (/** @type {?} */ (this._step.toString().split('.').pop())).length;\n        }\n        // Since this could modify the label, we need to notify the change detection.\n        this._changeDetectorRef.markForCheck();\n    }\n    /**\n     * Whether or not to show the thumb label.\n     * @return {?}\n     */\n    get thumbLabel() { return this._thumbLabel; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set thumbLabel(value) { this._thumbLabel = coerceBooleanProperty(value); }\n    /**\n     * How often to show ticks. Relative to the step so that a tick always appears on a step.\n     * Ex: Tick interval of 4 with a step of 3 will draw a tick every 4 steps (every 12 values).\n     * @return {?}\n     */\n    get tickInterval() { return this._tickInterval; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set tickInterval(value) {\n        if (value === 'auto') {\n            this._tickInterval = 'auto';\n        }\n        else if (typeof value === 'number' || typeof value === 'string') {\n            this._tickInterval = coerceNumberProperty(value, (/** @type {?} */ (this._tickInterval)));\n        }\n        else {\n            this._tickInterval = 0;\n        }\n    }\n    /**\n     * Value of the slider.\n     * @return {?}\n     */\n    get value() {\n        // If the value needs to be read and it is still uninitialized, initialize it to the min.\n        if (this._value === null) {\n            this.value = this._min;\n        }\n        return this._value;\n    }\n    /**\n     * @param {?} v\n     * @return {?}\n     */\n    set value(v) {\n        if (v !== this._value) {\n            /** @type {?} */\n            let value = coerceNumberProperty(v);\n            // While incrementing by a decimal we can end up with values like 33.300000000000004.\n            // Truncate it to ensure that it matches the label and to make it easier to work with.\n            if (this._roundToDecimal) {\n                value = parseFloat(value.toFixed(this._roundToDecimal));\n            }\n            this._value = value;\n            this._percent = this._calculatePercentage(this._value);\n            // Since this also modifies the percentage, we need to let the change detection know.\n            this._changeDetectorRef.markForCheck();\n        }\n    }\n    /**\n     * Whether the slider is vertical.\n     * @return {?}\n     */\n    get vertical() { return this._vertical; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set vertical(value) {\n        this._vertical = coerceBooleanProperty(value);\n    }\n    /**\n     * The value to be used for display purposes.\n     * @return {?}\n     */\n    get displayValue() {\n        if (this.displayWith) {\n            // Value is never null but since setters and getters cannot have\n            // different types, the value getter is also typed to return null.\n            return this.displayWith((/** @type {?} */ (this.value)));\n        }\n        // Note that this could be improved further by rounding something like 0.999 to 1 or\n        // 0.899 to 0.9, however it is very performance sensitive, because it gets called on\n        // every change detection cycle.\n        if (this._roundToDecimal && this.value && this.value % 1 !== 0) {\n            return this.value.toFixed(this._roundToDecimal);\n        }\n        return this.value || 0;\n    }\n    /**\n     * set focus to the host element\n     * @param {?=} options\n     * @return {?}\n     */\n    focus(options) {\n        this._focusHostElement(options);\n    }\n    /**\n     * blur the host element\n     * @return {?}\n     */\n    blur() {\n        this._blurHostElement();\n    }\n    /**\n     * The percentage of the slider that coincides with the value.\n     * @return {?}\n     */\n    get percent() { return this._clamp(this._percent); }\n    /**\n     * Whether the axis of the slider is inverted.\n     * (i.e. whether moving the thumb in the positive x or y direction decreases the slider's value).\n     * @return {?}\n     */\n    get _invertAxis() {\n        // Standard non-inverted mode for a vertical slider should be dragging the thumb from bottom to\n        // top. However from a y-axis standpoint this is inverted.\n        return this.vertical ? !this.invert : this.invert;\n    }\n    /**\n     * Whether the slider is at its minimum value.\n     * @return {?}\n     */\n    get _isMinValue() {\n        return this.percent === 0;\n    }\n    /**\n     * The amount of space to leave between the slider thumb and the track fill & track background\n     * elements.\n     * @return {?}\n     */\n    get _thumbGap() {\n        if (this.disabled) {\n            return DISABLED_THUMB_GAP;\n        }\n        if (this._isMinValue && !this.thumbLabel) {\n            return this._isActive ? MIN_VALUE_ACTIVE_THUMB_GAP : MIN_VALUE_NONACTIVE_THUMB_GAP;\n        }\n        return 0;\n    }\n    /**\n     * CSS styles for the track background element.\n     * @return {?}\n     */\n    get _trackBackgroundStyles() {\n        /** @type {?} */\n        const axis = this.vertical ? 'Y' : 'X';\n        /** @type {?} */\n        const scale = this.vertical ? `1, ${1 - this.percent}, 1` : `${1 - this.percent}, 1, 1`;\n        /** @type {?} */\n        const sign = this._shouldInvertMouseCoords() ? '-' : '';\n        return {\n            // scale3d avoids some rendering issues in Chrome. See #12071.\n            transform: `translate${axis}(${sign}${this._thumbGap}px) scale3d(${scale})`\n        };\n    }\n    /**\n     * CSS styles for the track fill element.\n     * @return {?}\n     */\n    get _trackFillStyles() {\n        /** @type {?} */\n        const percent = this.percent;\n        /** @type {?} */\n        const axis = this.vertical ? 'Y' : 'X';\n        /** @type {?} */\n        const scale = this.vertical ? `1, ${percent}, 1` : `${percent}, 1, 1`;\n        /** @type {?} */\n        const sign = this._shouldInvertMouseCoords() ? '' : '-';\n        return {\n            // scale3d avoids some rendering issues in Chrome. See #12071.\n            transform: `translate${axis}(${sign}${this._thumbGap}px) scale3d(${scale})`,\n            // iOS Safari has a bug where it won't re-render elements which start of as `scale(0)` until\n            // something forces a style recalculation on it. Since we'll end up with `scale(0)` when\n            // the value of the slider is 0, we can easily get into this situation. We force a\n            // recalculation by changing the element's `display` when it goes from 0 to any other value.\n            display: percent === 0 ? 'none' : ''\n        };\n    }\n    /**\n     * CSS styles for the ticks container element.\n     * @return {?}\n     */\n    get _ticksContainerStyles() {\n        /** @type {?} */\n        let axis = this.vertical ? 'Y' : 'X';\n        // For a horizontal slider in RTL languages we push the ticks container off the left edge\n        // instead of the right edge to avoid causing a horizontal scrollbar to appear.\n        /** @type {?} */\n        let sign = !this.vertical && this._getDirection() == 'rtl' ? '' : '-';\n        /** @type {?} */\n        let offset = this._tickIntervalPercent / 2 * 100;\n        return {\n            'transform': `translate${axis}(${sign}${offset}%)`\n        };\n    }\n    /**\n     * CSS styles for the ticks element.\n     * @return {?}\n     */\n    get _ticksStyles() {\n        /** @type {?} */\n        let tickSize = this._tickIntervalPercent * 100;\n        /** @type {?} */\n        let backgroundSize = this.vertical ? `2px ${tickSize}%` : `${tickSize}% 2px`;\n        /** @type {?} */\n        let axis = this.vertical ? 'Y' : 'X';\n        // Depending on the direction we pushed the ticks container, push the ticks the opposite\n        // direction to re-center them but clip off the end edge. In RTL languages we need to flip the\n        // ticks 180 degrees so we're really cutting off the end edge abd not the start.\n        /** @type {?} */\n        let sign = !this.vertical && this._getDirection() == 'rtl' ? '-' : '';\n        /** @type {?} */\n        let rotate = !this.vertical && this._getDirection() == 'rtl' ? ' rotate(180deg)' : '';\n        /** @type {?} */\n        let styles = {\n            'backgroundSize': backgroundSize,\n            // Without translateZ ticks sometimes jitter as the slider moves on Chrome & Firefox.\n            'transform': `translateZ(0) translate${axis}(${sign}${tickSize / 2}%)${rotate}`\n        };\n        if (this._isMinValue && this._thumbGap) {\n            /** @type {?} */\n            let side;\n            if (this.vertical) {\n                side = this._invertAxis ? 'Bottom' : 'Top';\n            }\n            else {\n                side = this._invertAxis ? 'Right' : 'Left';\n            }\n            styles[`padding${side}`] = `${this._thumbGap}px`;\n        }\n        return styles;\n    }\n    /**\n     * @return {?}\n     */\n    get _thumbContainerStyles() {\n        /** @type {?} */\n        let axis = this.vertical ? 'Y' : 'X';\n        // For a horizontal slider in RTL languages we push the thumb container off the left edge\n        // instead of the right edge to avoid causing a horizontal scrollbar to appear.\n        /** @type {?} */\n        let invertOffset = (this._getDirection() == 'rtl' && !this.vertical) ? !this._invertAxis : this._invertAxis;\n        /** @type {?} */\n        let offset = (invertOffset ? this.percent : 1 - this.percent) * 100;\n        return {\n            'transform': `translate${axis}(-${offset}%)`\n        };\n    }\n    /**\n     * Whether mouse events should be converted to a slider position by calculating their distance\n     * from the right or bottom edge of the slider as opposed to the top or left.\n     * @return {?}\n     */\n    _shouldInvertMouseCoords() {\n        return (this._getDirection() == 'rtl' && !this.vertical) ? !this._invertAxis : this._invertAxis;\n    }\n    /**\n     * The language direction for this slider element.\n     * @private\n     * @return {?}\n     */\n    _getDirection() {\n        return (this._dir && this._dir.value == 'rtl') ? 'rtl' : 'ltr';\n    }\n    /**\n     * @return {?}\n     */\n    ngOnInit() {\n        this._focusMonitor\n            .monitor(this._elementRef, true)\n            .subscribe((/**\n         * @param {?} origin\n         * @return {?}\n         */\n        (origin) => {\n            this._isActive = !!origin && origin !== 'keyboard';\n            this._changeDetectorRef.detectChanges();\n        }));\n        if (this._dir) {\n            this._dirChangeSubscription = this._dir.change.subscribe((/**\n             * @return {?}\n             */\n            () => {\n                this._changeDetectorRef.markForCheck();\n            }));\n        }\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        /** @type {?} */\n        const element = this._elementRef.nativeElement;\n        element.removeEventListener('mousedown', this._pointerDown, activeEventOptions);\n        element.removeEventListener('touchstart', this._pointerDown, activeEventOptions);\n        this._lastPointerEvent = null;\n        this._removeGlobalEvents();\n        this._focusMonitor.stopMonitoring(this._elementRef);\n        this._dirChangeSubscription.unsubscribe();\n    }\n    /**\n     * @return {?}\n     */\n    _onMouseenter() {\n        if (this.disabled) {\n            return;\n        }\n        // We save the dimensions of the slider here so we can use them to update the spacing of the\n        // ticks and determine where on the slider click and slide events happen.\n        this._sliderDimensions = this._getSliderDimensions();\n        this._updateTickIntervalPercent();\n    }\n    /**\n     * @return {?}\n     */\n    _onFocus() {\n        // We save the dimensions of the slider here so we can use them to update the spacing of the\n        // ticks and determine where on the slider click and slide events happen.\n        this._sliderDimensions = this._getSliderDimensions();\n        this._updateTickIntervalPercent();\n    }\n    /**\n     * @return {?}\n     */\n    _onBlur() {\n        this.onTouched();\n    }\n    /**\n     * @param {?} event\n     * @return {?}\n     */\n    _onKeydown(event) {\n        if (this.disabled || hasModifierKey(event)) {\n            return;\n        }\n        /** @type {?} */\n        const oldValue = this.value;\n        switch (event.keyCode) {\n            case PAGE_UP:\n                this._increment(10);\n                break;\n            case PAGE_DOWN:\n                this._increment(-10);\n                break;\n            case END:\n                this.value = this.max;\n                break;\n            case HOME:\n                this.value = this.min;\n                break;\n            case LEFT_ARROW:\n                // NOTE: For a sighted user it would make more sense that when they press an arrow key on an\n                // inverted slider the thumb moves in that direction. However for a blind user, nothing\n                // about the slider indicates that it is inverted. They will expect left to be decrement,\n                // regardless of how it appears on the screen. For speakers ofRTL languages, they probably\n                // expect left to mean increment. Therefore we flip the meaning of the side arrow keys for\n                // RTL. For inverted sliders we prefer a good a11y experience to having it \"look right\" for\n                // sighted users, therefore we do not swap the meaning.\n                this._increment(this._getDirection() == 'rtl' ? 1 : -1);\n                break;\n            case UP_ARROW:\n                this._increment(1);\n                break;\n            case RIGHT_ARROW:\n                // See comment on LEFT_ARROW about the conditions under which we flip the meaning.\n                this._increment(this._getDirection() == 'rtl' ? -1 : 1);\n                break;\n            case DOWN_ARROW:\n                this._increment(-1);\n                break;\n            default:\n                // Return if the key is not one that we explicitly handle to avoid calling preventDefault on\n                // it.\n                return;\n        }\n        if (oldValue != this.value) {\n            this._emitInputEvent();\n            this._emitChangeEvent();\n        }\n        this._isSliding = true;\n        event.preventDefault();\n    }\n    /**\n     * @return {?}\n     */\n    _onKeyup() {\n        this._isSliding = false;\n    }\n    /**\n     * Use defaultView of injected document if available or fallback to global window reference\n     * @private\n     * @return {?}\n     */\n    _getWindow() {\n        var _a;\n        return ((_a = this._document) === null || _a === void 0 ? void 0 : _a.defaultView) || window;\n    }\n    /**\n     * Binds our global move and end events. They're bound at the document level and only while\n     * dragging so that the user doesn't have to keep their pointer exactly over the slider\n     * as they're swiping across the screen.\n     * @private\n     * @param {?} triggerEvent\n     * @return {?}\n     */\n    _bindGlobalEvents(triggerEvent) {\n        // Note that we bind the events to the `document`, because it allows us to capture\n        // drag cancel events where the user's pointer is outside the browser window.\n        /** @type {?} */\n        const document = this._document;\n        if (typeof document !== 'undefined' && document) {\n            /** @type {?} */\n            const isTouch = isTouchEvent(triggerEvent);\n            /** @type {?} */\n            const moveEventName = isTouch ? 'touchmove' : 'mousemove';\n            /** @type {?} */\n            const endEventName = isTouch ? 'touchend' : 'mouseup';\n            document.addEventListener(moveEventName, this._pointerMove, activeEventOptions);\n            document.addEventListener(endEventName, this._pointerUp, activeEventOptions);\n            if (isTouch) {\n                document.addEventListener('touchcancel', this._pointerUp, activeEventOptions);\n            }\n        }\n        /** @type {?} */\n        const window = this._getWindow();\n        if (typeof window !== 'undefined' && window) {\n            window.addEventListener('blur', this._windowBlur);\n        }\n    }\n    /**\n     * Removes any global event listeners that we may have added.\n     * @private\n     * @return {?}\n     */\n    _removeGlobalEvents() {\n        /** @type {?} */\n        const document = this._document;\n        if (typeof document !== 'undefined' && document) {\n            document.removeEventListener('mousemove', this._pointerMove, activeEventOptions);\n            document.removeEventListener('mouseup', this._pointerUp, activeEventOptions);\n            document.removeEventListener('touchmove', this._pointerMove, activeEventOptions);\n            document.removeEventListener('touchend', this._pointerUp, activeEventOptions);\n            document.removeEventListener('touchcancel', this._pointerUp, activeEventOptions);\n        }\n        /** @type {?} */\n        const window = this._getWindow();\n        if (typeof window !== 'undefined' && window) {\n            window.removeEventListener('blur', this._windowBlur);\n        }\n    }\n    /**\n     * Increments the slider by the given number of steps (negative number decrements).\n     * @private\n     * @param {?} numSteps\n     * @return {?}\n     */\n    _increment(numSteps) {\n        this.value = this._clamp((this.value || 0) + this.step * numSteps, this.min, this.max);\n    }\n    /**\n     * Calculate the new value from the new physical location. The value will always be snapped.\n     * @private\n     * @param {?} pos\n     * @return {?}\n     */\n    _updateValueFromPosition(pos) {\n        if (!this._sliderDimensions) {\n            return;\n        }\n        /** @type {?} */\n        let offset = this.vertical ? this._sliderDimensions.top : this._sliderDimensions.left;\n        /** @type {?} */\n        let size = this.vertical ? this._sliderDimensions.height : this._sliderDimensions.width;\n        /** @type {?} */\n        let posComponent = this.vertical ? pos.y : pos.x;\n        // The exact value is calculated from the event and used to find the closest snap value.\n        /** @type {?} */\n        let percent = this._clamp((posComponent - offset) / size);\n        if (this._shouldInvertMouseCoords()) {\n            percent = 1 - percent;\n        }\n        // Since the steps may not divide cleanly into the max value, if the user\n        // slid to 0 or 100 percent, we jump to the min/max value. This approach\n        // is slightly more intuitive than using `Math.ceil` below, because it\n        // follows the user's pointer closer.\n        if (percent === 0) {\n            this.value = this.min;\n        }\n        else if (percent === 1) {\n            this.value = this.max;\n        }\n        else {\n            /** @type {?} */\n            const exactValue = this._calculateValue(percent);\n            // This calculation finds the closest step by finding the closest\n            // whole number divisible by the step relative to the min.\n            /** @type {?} */\n            const closestValue = Math.round((exactValue - this.min) / this.step) * this.step + this.min;\n            // The value needs to snap to the min and max.\n            this.value = this._clamp(closestValue, this.min, this.max);\n        }\n    }\n    /**\n     * Emits a change event if the current value is different from the last emitted value.\n     * @private\n     * @return {?}\n     */\n    _emitChangeEvent() {\n        this._controlValueAccessorChangeFn(this.value);\n        this.valueChange.emit(this.value);\n        this.change.emit(this._createChangeEvent());\n    }\n    /**\n     * Emits an input event when the current value is different from the last emitted value.\n     * @private\n     * @return {?}\n     */\n    _emitInputEvent() {\n        this.input.emit(this._createChangeEvent());\n    }\n    /**\n     * Updates the amount of space between ticks as a percentage of the width of the slider.\n     * @private\n     * @return {?}\n     */\n    _updateTickIntervalPercent() {\n        if (!this.tickInterval || !this._sliderDimensions) {\n            return;\n        }\n        if (this.tickInterval == 'auto') {\n            /** @type {?} */\n            let trackSize = this.vertical ? this._sliderDimensions.height : this._sliderDimensions.width;\n            /** @type {?} */\n            let pixelsPerStep = trackSize * this.step / (this.max - this.min);\n            /** @type {?} */\n            let stepsPerTick = Math.ceil(MIN_AUTO_TICK_SEPARATION / pixelsPerStep);\n            /** @type {?} */\n            let pixelsPerTick = stepsPerTick * this.step;\n            this._tickIntervalPercent = pixelsPerTick / trackSize;\n        }\n        else {\n            this._tickIntervalPercent = this.tickInterval * this.step / (this.max - this.min);\n        }\n    }\n    /**\n     * Creates a slider change object from the specified value.\n     * @private\n     * @param {?=} value\n     * @return {?}\n     */\n    _createChangeEvent(value = this.value) {\n        /** @type {?} */\n        let event = new MatSliderChange();\n        event.source = this;\n        event.value = value;\n        return event;\n    }\n    /**\n     * Calculates the percentage of the slider that a value is.\n     * @private\n     * @param {?} value\n     * @return {?}\n     */\n    _calculatePercentage(value) {\n        return ((value || 0) - this.min) / (this.max - this.min);\n    }\n    /**\n     * Calculates the value a percentage of the slider corresponds to.\n     * @private\n     * @param {?} percentage\n     * @return {?}\n     */\n    _calculateValue(percentage) {\n        return this.min + percentage * (this.max - this.min);\n    }\n    /**\n     * Return a number between two numbers.\n     * @private\n     * @param {?} value\n     * @param {?=} min\n     * @param {?=} max\n     * @return {?}\n     */\n    _clamp(value, min = 0, max = 1) {\n        return Math.max(min, Math.min(value, max));\n    }\n    /**\n     * Get the bounding client rect of the slider track element.\n     * The track is used rather than the native element to ignore the extra space that the thumb can\n     * take up.\n     * @private\n     * @return {?}\n     */\n    _getSliderDimensions() {\n        return this._sliderWrapper ? this._sliderWrapper.nativeElement.getBoundingClientRect() : null;\n    }\n    /**\n     * Focuses the native element.\n     * Currently only used to allow a blur event to fire but will be used with keyboard input later.\n     * @private\n     * @param {?=} options\n     * @return {?}\n     */\n    _focusHostElement(options) {\n        this._elementRef.nativeElement.focus(options);\n    }\n    /**\n     * Blurs the native element.\n     * @private\n     * @return {?}\n     */\n    _blurHostElement() {\n        this._elementRef.nativeElement.blur();\n    }\n    /**\n     * Runs a callback inside of the NgZone, if possible.\n     * @private\n     * @param {?} fn\n     * @return {?}\n     */\n    _runInsideZone(fn) {\n        // @breaking-change 9.0.0 Remove this function once `_ngZone` is a required parameter.\n        this._ngZone ? this._ngZone.run(fn) : fn();\n    }\n    /**\n     * Runs a callback outside of the NgZone, if possible.\n     * @private\n     * @param {?} fn\n     * @return {?}\n     */\n    _runOutsizeZone(fn) {\n        // @breaking-change 9.0.0 Remove this function once `_ngZone` is a required parameter.\n        this._ngZone ? this._ngZone.runOutsideAngular(fn) : fn();\n    }\n    /**\n     * Sets the model value. Implemented as part of ControlValueAccessor.\n     * @param {?} value\n     * @return {?}\n     */\n    writeValue(value) {\n        this.value = value;\n    }\n    /**\n     * Registers a callback to be triggered when the value has changed.\n     * Implemented as part of ControlValueAccessor.\n     * @param {?} fn Callback to be registered.\n     * @return {?}\n     */\n    registerOnChange(fn) {\n        this._controlValueAccessorChangeFn = fn;\n    }\n    /**\n     * Registers a callback to be triggered when the component is touched.\n     * Implemented as part of ControlValueAccessor.\n     * @param {?} fn Callback to be registered.\n     * @return {?}\n     */\n    registerOnTouched(fn) {\n        this.onTouched = fn;\n    }\n    /**\n     * Sets whether the component should be disabled.\n     * Implemented as part of ControlValueAccessor.\n     * @param {?} isDisabled\n     * @return {?}\n     */\n    setDisabledState(isDisabled) {\n        this.disabled = isDisabled;\n    }\n}\nMatSlider.decorators = [\n    { type: Component, args: [{\n                selector: 'mat-slider',\n                exportAs: 'matSlider',\n                providers: [MAT_SLIDER_VALUE_ACCESSOR],\n                host: {\n                    '(focus)': '_onFocus()',\n                    '(blur)': '_onBlur()',\n                    '(keydown)': '_onKeydown($event)',\n                    '(keyup)': '_onKeyup()',\n                    '(mouseenter)': '_onMouseenter()',\n                    // On Safari starting to slide temporarily triggers text selection mode which\n                    // show the wrong cursor. We prevent it by stopping the `selectstart` event.\n                    '(selectstart)': '$event.preventDefault()',\n                    'class': 'mat-slider mat-focus-indicator',\n                    'role': 'slider',\n                    '[tabIndex]': 'tabIndex',\n                    '[attr.aria-disabled]': 'disabled',\n                    '[attr.aria-valuemax]': 'max',\n                    '[attr.aria-valuemin]': 'min',\n                    '[attr.aria-valuenow]': 'value',\n                    '[attr.aria-orientation]': 'vertical ? \"vertical\" : \"horizontal\"',\n                    '[class.mat-slider-disabled]': 'disabled',\n                    '[class.mat-slider-has-ticks]': 'tickInterval',\n                    '[class.mat-slider-horizontal]': '!vertical',\n                    '[class.mat-slider-axis-inverted]': '_invertAxis',\n                    // Class binding which is only used by the test harness as there is no other\n                    // way for the harness to detect if mouse coordinates need to be inverted.\n                    '[class.mat-slider-invert-mouse-coords]': '_shouldInvertMouseCoords()',\n                    '[class.mat-slider-sliding]': '_isSliding',\n                    '[class.mat-slider-thumb-label-showing]': 'thumbLabel',\n                    '[class.mat-slider-vertical]': 'vertical',\n                    '[class.mat-slider-min-value]': '_isMinValue',\n                    '[class.mat-slider-hide-last-tick]': 'disabled || _isMinValue && _thumbGap && _invertAxis',\n                    '[class._mat-animation-noopable]': '_animationMode === \"NoopAnimations\"',\n                },\n                template: \"<div class=\\\"mat-slider-wrapper\\\" #sliderWrapper>\\n  <div class=\\\"mat-slider-track-wrapper\\\">\\n    <div class=\\\"mat-slider-track-background\\\" [ngStyle]=\\\"_trackBackgroundStyles\\\"></div>\\n    <div class=\\\"mat-slider-track-fill\\\" [ngStyle]=\\\"_trackFillStyles\\\"></div>\\n  </div>\\n  <div class=\\\"mat-slider-ticks-container\\\" [ngStyle]=\\\"_ticksContainerStyles\\\">\\n    <div class=\\\"mat-slider-ticks\\\" [ngStyle]=\\\"_ticksStyles\\\"></div>\\n  </div>\\n  <div class=\\\"mat-slider-thumb-container\\\" [ngStyle]=\\\"_thumbContainerStyles\\\">\\n    <div class=\\\"mat-slider-focus-ring\\\"></div>\\n    <div class=\\\"mat-slider-thumb\\\"></div>\\n    <div class=\\\"mat-slider-thumb-label\\\">\\n      <span class=\\\"mat-slider-thumb-label-text\\\">{{displayValue}}</span>\\n    </div>\\n  </div>\\n</div>\\n\",\n                inputs: ['disabled', 'color', 'tabIndex'],\n                encapsulation: ViewEncapsulation.None,\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                styles: [\".mat-slider{display:inline-block;position:relative;box-sizing:border-box;padding:8px;outline:none;vertical-align:middle}.mat-slider:not(.mat-slider-disabled):active,.mat-slider.mat-slider-sliding:not(.mat-slider-disabled){cursor:-webkit-grabbing;cursor:grabbing}.mat-slider-wrapper{position:absolute}.mat-slider-track-wrapper{position:absolute;top:0;left:0;overflow:hidden}.mat-slider-track-fill{position:absolute;transform-origin:0 0;transition:transform 400ms cubic-bezier(0.25, 0.8, 0.25, 1),background-color 400ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-slider-track-background{position:absolute;transform-origin:100% 100%;transition:transform 400ms cubic-bezier(0.25, 0.8, 0.25, 1),background-color 400ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-slider-ticks-container{position:absolute;left:0;top:0;overflow:hidden}.mat-slider-ticks{background-repeat:repeat;background-clip:content-box;box-sizing:border-box;opacity:0;transition:opacity 400ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-slider-thumb-container{position:absolute;z-index:1;transition:transform 400ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-slider-focus-ring{position:absolute;width:30px;height:30px;border-radius:50%;transform:scale(0);opacity:0;transition:transform 400ms cubic-bezier(0.25, 0.8, 0.25, 1),background-color 400ms cubic-bezier(0.25, 0.8, 0.25, 1),opacity 400ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-slider.cdk-keyboard-focused .mat-slider-focus-ring,.mat-slider.cdk-program-focused .mat-slider-focus-ring{transform:scale(1);opacity:1}.mat-slider:not(.mat-slider-disabled):not(.mat-slider-sliding) .mat-slider-thumb-label,.mat-slider:not(.mat-slider-disabled):not(.mat-slider-sliding) .mat-slider-thumb{cursor:-webkit-grab;cursor:grab}.mat-slider-thumb{position:absolute;right:-10px;bottom:-10px;box-sizing:border-box;width:20px;height:20px;border:3px solid transparent;border-radius:50%;transform:scale(0.7);transition:transform 400ms cubic-bezier(0.25, 0.8, 0.25, 1),background-color 400ms cubic-bezier(0.25, 0.8, 0.25, 1),border-color 400ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-slider-thumb-label{display:none;align-items:center;justify-content:center;position:absolute;width:28px;height:28px;border-radius:50%;transition:transform 400ms cubic-bezier(0.25, 0.8, 0.25, 1),border-radius 400ms cubic-bezier(0.25, 0.8, 0.25, 1),background-color 400ms cubic-bezier(0.25, 0.8, 0.25, 1)}.cdk-high-contrast-active .mat-slider-thumb-label{outline:solid 1px}.mat-slider-thumb-label-text{z-index:1;opacity:0;transition:opacity 400ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-slider-sliding .mat-slider-track-fill,.mat-slider-sliding .mat-slider-track-background,.mat-slider-sliding .mat-slider-thumb-container{transition-duration:0ms}.mat-slider-has-ticks .mat-slider-wrapper::after{content:\\\"\\\";position:absolute;border-width:0;border-style:solid;opacity:0;transition:opacity 400ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-slider-has-ticks.cdk-focused:not(.mat-slider-hide-last-tick) .mat-slider-wrapper::after,.mat-slider-has-ticks:hover:not(.mat-slider-hide-last-tick) .mat-slider-wrapper::after{opacity:1}.mat-slider-has-ticks.cdk-focused:not(.mat-slider-disabled) .mat-slider-ticks,.mat-slider-has-ticks:hover:not(.mat-slider-disabled) .mat-slider-ticks{opacity:1}.mat-slider-thumb-label-showing .mat-slider-focus-ring{display:none}.mat-slider-thumb-label-showing .mat-slider-thumb-label{display:flex}.mat-slider-axis-inverted .mat-slider-track-fill{transform-origin:100% 100%}.mat-slider-axis-inverted .mat-slider-track-background{transform-origin:0 0}.mat-slider:not(.mat-slider-disabled).cdk-focused.mat-slider-thumb-label-showing .mat-slider-thumb{transform:scale(0)}.mat-slider:not(.mat-slider-disabled).cdk-focused .mat-slider-thumb-label{border-radius:50% 50% 0}.mat-slider:not(.mat-slider-disabled).cdk-focused .mat-slider-thumb-label-text{opacity:1}.mat-slider:not(.mat-slider-disabled).cdk-mouse-focused .mat-slider-thumb,.mat-slider:not(.mat-slider-disabled).cdk-touch-focused .mat-slider-thumb,.mat-slider:not(.mat-slider-disabled).cdk-program-focused .mat-slider-thumb{border-width:2px;transform:scale(1)}.mat-slider-disabled .mat-slider-focus-ring{transform:scale(0);opacity:0}.mat-slider-disabled .mat-slider-thumb{border-width:4px;transform:scale(0.5)}.mat-slider-disabled .mat-slider-thumb-label{display:none}.mat-slider-horizontal{height:48px;min-width:128px}.mat-slider-horizontal .mat-slider-wrapper{height:2px;top:23px;left:8px;right:8px}.mat-slider-horizontal .mat-slider-wrapper::after{height:2px;border-left-width:2px;right:0;top:0}.mat-slider-horizontal .mat-slider-track-wrapper{height:2px;width:100%}.mat-slider-horizontal .mat-slider-track-fill{height:2px;width:100%;transform:scaleX(0)}.mat-slider-horizontal .mat-slider-track-background{height:2px;width:100%;transform:scaleX(1)}.mat-slider-horizontal .mat-slider-ticks-container{height:2px;width:100%}.cdk-high-contrast-active .mat-slider-horizontal .mat-slider-ticks-container{height:0;outline:solid 2px;top:1px}.mat-slider-horizontal .mat-slider-ticks{height:2px;width:100%}.mat-slider-horizontal .mat-slider-thumb-container{width:100%;height:0;top:50%}.mat-slider-horizontal .mat-slider-focus-ring{top:-15px;right:-15px}.mat-slider-horizontal .mat-slider-thumb-label{right:-14px;top:-40px;transform:translateY(26px) scale(0.01) rotate(45deg)}.mat-slider-horizontal .mat-slider-thumb-label-text{transform:rotate(-45deg)}.mat-slider-horizontal.cdk-focused .mat-slider-thumb-label{transform:rotate(45deg)}.cdk-high-contrast-active .mat-slider-horizontal.cdk-focused .mat-slider-thumb-label,.cdk-high-contrast-active .mat-slider-horizontal.cdk-focused .mat-slider-thumb-label-text{transform:none}.mat-slider-vertical{width:48px;min-height:128px}.mat-slider-vertical .mat-slider-wrapper{width:2px;top:8px;bottom:8px;left:23px}.mat-slider-vertical .mat-slider-wrapper::after{width:2px;border-top-width:2px;bottom:0;left:0}.mat-slider-vertical .mat-slider-track-wrapper{height:100%;width:2px}.mat-slider-vertical .mat-slider-track-fill{height:100%;width:2px;transform:scaleY(0)}.mat-slider-vertical .mat-slider-track-background{height:100%;width:2px;transform:scaleY(1)}.mat-slider-vertical .mat-slider-ticks-container{width:2px;height:100%}.cdk-high-contrast-active .mat-slider-vertical .mat-slider-ticks-container{width:0;outline:solid 2px;left:1px}.mat-slider-vertical .mat-slider-focus-ring{bottom:-15px;left:-15px}.mat-slider-vertical .mat-slider-ticks{width:2px;height:100%}.mat-slider-vertical .mat-slider-thumb-container{height:100%;width:0;left:50%}.mat-slider-vertical .mat-slider-thumb{-webkit-backface-visibility:hidden;backface-visibility:hidden}.mat-slider-vertical .mat-slider-thumb-label{bottom:-14px;left:-40px;transform:translateX(26px) scale(0.01) rotate(-45deg)}.mat-slider-vertical .mat-slider-thumb-label-text{transform:rotate(45deg)}.mat-slider-vertical.cdk-focused .mat-slider-thumb-label{transform:rotate(-45deg)}[dir=rtl] .mat-slider-wrapper::after{left:0;right:auto}[dir=rtl] .mat-slider-horizontal .mat-slider-track-fill{transform-origin:100% 100%}[dir=rtl] .mat-slider-horizontal .mat-slider-track-background{transform-origin:0 0}[dir=rtl] .mat-slider-horizontal.mat-slider-axis-inverted .mat-slider-track-fill{transform-origin:0 0}[dir=rtl] .mat-slider-horizontal.mat-slider-axis-inverted .mat-slider-track-background{transform-origin:100% 100%}.mat-slider._mat-animation-noopable .mat-slider-track-fill,.mat-slider._mat-animation-noopable .mat-slider-track-background,.mat-slider._mat-animation-noopable .mat-slider-ticks,.mat-slider._mat-animation-noopable .mat-slider-thumb-container,.mat-slider._mat-animation-noopable .mat-slider-focus-ring,.mat-slider._mat-animation-noopable .mat-slider-thumb,.mat-slider._mat-animation-noopable .mat-slider-thumb-label,.mat-slider._mat-animation-noopable .mat-slider-thumb-label-text,.mat-slider._mat-animation-noopable .mat-slider-has-ticks .mat-slider-wrapper::after{transition:none}\\n\"]\n            }] }\n];\n/** @nocollapse */\nMatSlider.ctorParameters = () => [\n    { type: ElementRef },\n    { type: FocusMonitor },\n    { type: ChangeDetectorRef },\n    { type: Directionality, decorators: [{ type: Optional }] },\n    { type: String, decorators: [{ type: Attribute, args: ['tabindex',] }] },\n    { type: String, decorators: [{ type: Optional }, { type: Inject, args: [ANIMATION_MODULE_TYPE,] }] },\n    { type: NgZone },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [DOCUMENT,] }] }\n];\nMatSlider.propDecorators = {\n    invert: [{ type: Input }],\n    max: [{ type: Input }],\n    min: [{ type: Input }],\n    step: [{ type: Input }],\n    thumbLabel: [{ type: Input }],\n    tickInterval: [{ type: Input }],\n    value: [{ type: Input }],\n    displayWith: [{ type: Input }],\n    vertical: [{ type: Input }],\n    change: [{ type: Output }],\n    input: [{ type: Output }],\n    valueChange: [{ type: Output }],\n    _sliderWrapper: [{ type: ViewChild, args: ['sliderWrapper',] }]\n};\nif (false) {\n    /** @type {?} */\n    MatSlider.ngAcceptInputType_invert;\n    /** @type {?} */\n    MatSlider.ngAcceptInputType_max;\n    /** @type {?} */\n    MatSlider.ngAcceptInputType_min;\n    /** @type {?} */\n    MatSlider.ngAcceptInputType_step;\n    /** @type {?} */\n    MatSlider.ngAcceptInputType_thumbLabel;\n    /** @type {?} */\n    MatSlider.ngAcceptInputType_tickInterval;\n    /** @type {?} */\n    MatSlider.ngAcceptInputType_value;\n    /** @type {?} */\n    MatSlider.ngAcceptInputType_vertical;\n    /** @type {?} */\n    MatSlider.ngAcceptInputType_disabled;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatSlider.prototype._invert;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatSlider.prototype._max;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatSlider.prototype._min;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatSlider.prototype._step;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatSlider.prototype._thumbLabel;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatSlider.prototype._tickInterval;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatSlider.prototype._value;\n    /**\n     * Function that will be used to format the value before it is displayed\n     * in the thumb label. Can be used to format very large number in order\n     * for them to fit into the slider thumb.\n     * @type {?}\n     */\n    MatSlider.prototype.displayWith;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatSlider.prototype._vertical;\n    /**\n     * Event emitted when the slider value has changed.\n     * @type {?}\n     */\n    MatSlider.prototype.change;\n    /**\n     * Event emitted when the slider thumb moves.\n     * @type {?}\n     */\n    MatSlider.prototype.input;\n    /**\n     * Emits when the raw value of the slider changes. This is here primarily\n     * to facilitate the two-way binding for the `value` input.\n     * \\@docs-private\n     * @type {?}\n     */\n    MatSlider.prototype.valueChange;\n    /**\n     * onTouch function registered via registerOnTouch (ControlValueAccessor).\n     * @type {?}\n     */\n    MatSlider.prototype.onTouched;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatSlider.prototype._percent;\n    /**\n     * Whether or not the thumb is sliding.\n     * Used to determine if there should be a transition for the thumb and fill track.\n     * @type {?}\n     */\n    MatSlider.prototype._isSliding;\n    /**\n     * Whether or not the slider is active (clicked or sliding).\n     * Used to shrink and grow the thumb as according to the Material Design spec.\n     * @type {?}\n     */\n    MatSlider.prototype._isActive;\n    /**\n     * The size of a tick interval as a percentage of the size of the track.\n     * @type {?}\n     * @private\n     */\n    MatSlider.prototype._tickIntervalPercent;\n    /**\n     * The dimensions of the slider.\n     * @type {?}\n     * @private\n     */\n    MatSlider.prototype._sliderDimensions;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatSlider.prototype._controlValueAccessorChangeFn;\n    /**\n     * Decimal places to round to, based on the step amount.\n     * @type {?}\n     * @private\n     */\n    MatSlider.prototype._roundToDecimal;\n    /**\n     * Subscription to the Directionality change EventEmitter.\n     * @type {?}\n     * @private\n     */\n    MatSlider.prototype._dirChangeSubscription;\n    /**\n     * The value of the slider when the slide start event fires.\n     * @type {?}\n     * @private\n     */\n    MatSlider.prototype._valueOnSlideStart;\n    /**\n     * Position of the pointer when the dragging started.\n     * @type {?}\n     * @private\n     */\n    MatSlider.prototype._pointerPositionOnStart;\n    /**\n     * Reference to the inner slider wrapper element.\n     * @type {?}\n     * @private\n     */\n    MatSlider.prototype._sliderWrapper;\n    /**\n     * Keeps track of the last pointer event that was captured by the slider.\n     * @type {?}\n     * @private\n     */\n    MatSlider.prototype._lastPointerEvent;\n    /**\n     * Used to subscribe to global move and end events\n     * @type {?}\n     * @protected\n     */\n    MatSlider.prototype._document;\n    /**\n     * Called when the user has put their pointer down on the slider.\n     * @type {?}\n     * @private\n     */\n    MatSlider.prototype._pointerDown;\n    /**\n     * Called when the user has moved their pointer after\n     * starting to drag. Bound on the document level.\n     * @type {?}\n     * @private\n     */\n    MatSlider.prototype._pointerMove;\n    /**\n     * Called when the user has lifted their pointer. Bound on the document level.\n     * @type {?}\n     * @private\n     */\n    MatSlider.prototype._pointerUp;\n    /**\n     * Called when the window has lost focus.\n     * @type {?}\n     * @private\n     */\n    MatSlider.prototype._windowBlur;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatSlider.prototype._focusMonitor;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatSlider.prototype._changeDetectorRef;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatSlider.prototype._dir;\n    /** @type {?} */\n    MatSlider.prototype._animationMode;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatSlider.prototype._ngZone;\n}\n/**\n * Returns whether an event is a touch event.\n * @param {?} event\n * @return {?}\n */\nfunction isTouchEvent(event) {\n    // This function is called for every pixel that the user has dragged so we need it to be\n    // as fast as possible. Since we only bind mouse events and touch events, we can assume\n    // that if the event's name starts with `t`, it's a touch event.\n    return event.type[0] === 't';\n}\n/**\n * Gets the coordinates of a touch or mouse event relative to the viewport.\n * @param {?} event\n * @return {?}\n */\nfunction getPointerPositionOnPage(event) {\n    // `touches` will be empty for start/end events so we have to fall back to `changedTouches`.\n    /** @type {?} */\n    const point = isTouchEvent(event) ? (event.touches[0] || event.changedTouches[0]) : event;\n    return { x: point.clientX, y: point.clientY };\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/slider/slider-module.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass MatSliderModule {\n}\nMatSliderModule.decorators = [\n    { type: NgModule, args: [{\n                imports: [CommonModule, MatCommonModule],\n                exports: [MatSlider, MatCommonModule],\n                declarations: [MatSlider],\n            },] }\n];\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/slider/public-api.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MAT_SLIDER_VALUE_ACCESSOR, MatSlider, MatSliderChange, MatSliderModule };\n//# sourceMappingURL=slider.js.map\n","import { PortalModule } from '@angular/cdk/portal';\nimport { CdkStepLabel, CdkStepHeader, CdkStep, STEPPER_GLOBAL_OPTIONS, CdkStepper, CdkStepperNext, CdkStepperPrevious, CdkStepperModule } from '@angular/cdk/stepper';\nimport { DOCUMENT, CommonModule } from '@angular/common';\nimport { Directive, Injectable, ɵɵdefineInjectable, Optional, SkipSelf, Component, ViewEncapsulation, ChangeDetectionStrategy, ElementRef, ChangeDetectorRef, Input, TemplateRef, Inject, forwardRef, ContentChild, EventEmitter, ViewChildren, ContentChildren, Output, NgModule } from '@angular/core';\nimport { MatButtonModule } from '@angular/material/button';\nimport { ErrorStateMatcher, MatCommonModule, MatRippleModule } from '@angular/material/core';\nimport { MatIconModule } from '@angular/material/icon';\nimport { FocusMonitor } from '@angular/cdk/a11y';\nimport { Subject } from 'rxjs';\nimport { Directionality } from '@angular/cdk/bidi';\nimport { takeUntil, distinctUntilChanged } from 'rxjs/operators';\nimport { trigger, state, style, transition, animate } from '@angular/animations';\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/stepper/step-label.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass MatStepLabel extends CdkStepLabel {\n}\nMatStepLabel.decorators = [\n    { type: Directive, args: [{\n                selector: '[matStepLabel]',\n            },] }\n];\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/stepper/stepper-intl.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Stepper data that is required for internationalization.\n */\nclass MatStepperIntl {\n    constructor() {\n        /**\n         * Stream that emits whenever the labels here are changed. Use this to notify\n         * components if the labels have changed after initialization.\n         */\n        this.changes = new Subject();\n        /**\n         * Label that is rendered below optional steps.\n         */\n        this.optionalLabel = 'Optional';\n    }\n}\nMatStepperIntl.decorators = [\n    { type: Injectable, args: [{ providedIn: 'root' },] }\n];\n/** @nocollapse */ MatStepperIntl.ɵprov = ɵɵdefineInjectable({ factory: function MatStepperIntl_Factory() { return new MatStepperIntl(); }, token: MatStepperIntl, providedIn: \"root\" });\nif (false) {\n    /**\n     * Stream that emits whenever the labels here are changed. Use this to notify\n     * components if the labels have changed after initialization.\n     * @type {?}\n     */\n    MatStepperIntl.prototype.changes;\n    /**\n     * Label that is rendered below optional steps.\n     * @type {?}\n     */\n    MatStepperIntl.prototype.optionalLabel;\n}\n/**\n * \\@docs-private\n * @param {?} parentIntl\n * @return {?}\n */\nfunction MAT_STEPPER_INTL_PROVIDER_FACTORY(parentIntl) {\n    return parentIntl || new MatStepperIntl();\n}\n/**\n * \\@docs-private\n * @type {?}\n */\nconst MAT_STEPPER_INTL_PROVIDER = {\n    provide: MatStepperIntl,\n    deps: [[new Optional(), new SkipSelf(), MatStepperIntl]],\n    useFactory: MAT_STEPPER_INTL_PROVIDER_FACTORY\n};\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/stepper/step-header.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass MatStepHeader extends CdkStepHeader {\n    /**\n     * @param {?} _intl\n     * @param {?} _focusMonitor\n     * @param {?} _elementRef\n     * @param {?} changeDetectorRef\n     */\n    constructor(_intl, _focusMonitor, _elementRef, changeDetectorRef) {\n        super(_elementRef);\n        this._intl = _intl;\n        this._focusMonitor = _focusMonitor;\n        _focusMonitor.monitor(_elementRef, true);\n        this._intlSubscription = _intl.changes.subscribe((/**\n         * @return {?}\n         */\n        () => changeDetectorRef.markForCheck()));\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this._intlSubscription.unsubscribe();\n        this._focusMonitor.stopMonitoring(this._elementRef);\n    }\n    /**\n     * Focuses the step header.\n     * @return {?}\n     */\n    focus() {\n        this._focusMonitor.focusVia(this._elementRef, 'program');\n    }\n    /**\n     * Returns string label of given step if it is a text label.\n     * @return {?}\n     */\n    _stringLabel() {\n        return this.label instanceof MatStepLabel ? null : this.label;\n    }\n    /**\n     * Returns MatStepLabel if the label of given step is a template label.\n     * @return {?}\n     */\n    _templateLabel() {\n        return this.label instanceof MatStepLabel ? this.label : null;\n    }\n    /**\n     * Returns the host HTML element.\n     * @return {?}\n     */\n    _getHostElement() {\n        return this._elementRef.nativeElement;\n    }\n    /**\n     * Template context variables that are exposed to the `matStepperIcon` instances.\n     * @return {?}\n     */\n    _getIconContext() {\n        return {\n            index: this.index,\n            active: this.active,\n            optional: this.optional\n        };\n    }\n    /**\n     * @param {?} state\n     * @return {?}\n     */\n    _getDefaultTextForState(state) {\n        if (state == 'number') {\n            return `${this.index + 1}`;\n        }\n        if (state == 'edit') {\n            return 'create';\n        }\n        if (state == 'error') {\n            return 'warning';\n        }\n        return state;\n    }\n}\nMatStepHeader.decorators = [\n    { type: Component, args: [{\n                selector: 'mat-step-header',\n                template: \"<div class=\\\"mat-step-header-ripple\\\" matRipple\\n     [matRippleTrigger]=\\\"_getHostElement()\\\"\\n     [matRippleDisabled]=\\\"disableRipple\\\"></div>\\n\\n<div class=\\\"mat-step-icon-state-{{state}} mat-step-icon\\\" [class.mat-step-icon-selected]=\\\"selected\\\">\\n  <div class=\\\"mat-step-icon-content\\\" [ngSwitch]=\\\"!!(iconOverrides && iconOverrides[state])\\\">\\n    <ng-container\\n      *ngSwitchCase=\\\"true\\\"\\n      [ngTemplateOutlet]=\\\"iconOverrides[state]\\\"\\n      [ngTemplateOutletContext]=\\\"_getIconContext()\\\"></ng-container>\\n    <ng-container *ngSwitchDefault [ngSwitch]=\\\"state\\\">\\n      <span *ngSwitchCase=\\\"'number'\\\">{{_getDefaultTextForState(state)}}</span>\\n      <mat-icon *ngSwitchDefault>{{_getDefaultTextForState(state)}}</mat-icon>\\n    </ng-container>\\n  </div>\\n</div>\\n<div class=\\\"mat-step-label\\\"\\n     [class.mat-step-label-active]=\\\"active\\\"\\n     [class.mat-step-label-selected]=\\\"selected\\\"\\n     [class.mat-step-label-error]=\\\"state == 'error'\\\">\\n  <!-- If there is a label template, use it. -->\\n  <ng-container *ngIf=\\\"_templateLabel()\\\" [ngTemplateOutlet]=\\\"_templateLabel()!.template\\\">\\n  </ng-container>\\n  <!-- If there is no label template, fall back to the text label. -->\\n  <div class=\\\"mat-step-text-label\\\" *ngIf=\\\"_stringLabel()\\\">{{label}}</div>\\n\\n  <div class=\\\"mat-step-optional\\\" *ngIf=\\\"optional && state != 'error'\\\">{{_intl.optionalLabel}}</div>\\n  <div class=\\\"mat-step-sub-label-error\\\" *ngIf=\\\"state == 'error'\\\">{{errorMessage}}</div>\\n</div>\\n\\n\",\n                host: {\n                    'class': 'mat-step-header mat-focus-indicator',\n                    'role': 'tab',\n                },\n                encapsulation: ViewEncapsulation.None,\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                styles: [\".mat-step-header{overflow:hidden;outline:none;cursor:pointer;position:relative;box-sizing:content-box;-webkit-tap-highlight-color:transparent}.mat-step-optional,.mat-step-sub-label-error{font-size:12px}.mat-step-icon{border-radius:50%;height:24px;width:24px;flex-shrink:0;position:relative}.mat-step-icon-content,.mat-step-icon .mat-icon{position:absolute;top:50%;left:50%;transform:translate(-50%, -50%)}.mat-step-icon .mat-icon{font-size:16px;height:16px;width:16px}.mat-step-icon-state-error .mat-icon{font-size:24px;height:24px;width:24px}.mat-step-label{display:inline-block;white-space:nowrap;overflow:hidden;text-overflow:ellipsis;min-width:50px;vertical-align:middle}.mat-step-text-label{text-overflow:ellipsis;overflow:hidden}.mat-step-header .mat-step-header-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none}\\n\"]\n            }] }\n];\n/** @nocollapse */\nMatStepHeader.ctorParameters = () => [\n    { type: MatStepperIntl },\n    { type: FocusMonitor },\n    { type: ElementRef },\n    { type: ChangeDetectorRef }\n];\nMatStepHeader.propDecorators = {\n    state: [{ type: Input }],\n    label: [{ type: Input }],\n    errorMessage: [{ type: Input }],\n    iconOverrides: [{ type: Input }],\n    index: [{ type: Input }],\n    selected: [{ type: Input }],\n    active: [{ type: Input }],\n    optional: [{ type: Input }],\n    disableRipple: [{ type: Input }]\n};\nif (false) {\n    /**\n     * @type {?}\n     * @private\n     */\n    MatStepHeader.prototype._intlSubscription;\n    /**\n     * State of the given step.\n     * @type {?}\n     */\n    MatStepHeader.prototype.state;\n    /**\n     * Label of the given step.\n     * @type {?}\n     */\n    MatStepHeader.prototype.label;\n    /**\n     * Error message to display when there's an error.\n     * @type {?}\n     */\n    MatStepHeader.prototype.errorMessage;\n    /**\n     * Overrides for the header icons, passed in via the stepper.\n     * @type {?}\n     */\n    MatStepHeader.prototype.iconOverrides;\n    /**\n     * Index of the given step.\n     * @type {?}\n     */\n    MatStepHeader.prototype.index;\n    /**\n     * Whether the given step is selected.\n     * @type {?}\n     */\n    MatStepHeader.prototype.selected;\n    /**\n     * Whether the given step label is active.\n     * @type {?}\n     */\n    MatStepHeader.prototype.active;\n    /**\n     * Whether the given step is optional.\n     * @type {?}\n     */\n    MatStepHeader.prototype.optional;\n    /**\n     * Whether the ripple should be disabled.\n     * @type {?}\n     */\n    MatStepHeader.prototype.disableRipple;\n    /** @type {?} */\n    MatStepHeader.prototype._intl;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatStepHeader.prototype._focusMonitor;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/stepper/stepper-animations.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Animations used by the Material steppers.\n * \\@docs-private\n * @type {?}\n */\nconst matStepperAnimations = {\n    /**\n     * Animation that transitions the step along the X axis in a horizontal stepper.\n     */\n    horizontalStepTransition: trigger('stepTransition', [\n        state('previous', style({ transform: 'translate3d(-100%, 0, 0)', visibility: 'hidden' })),\n        state('current', style({ transform: 'none', visibility: 'visible' })),\n        state('next', style({ transform: 'translate3d(100%, 0, 0)', visibility: 'hidden' })),\n        transition('* => *', animate('500ms cubic-bezier(0.35, 0, 0.25, 1)'))\n    ]),\n    /**\n     * Animation that transitions the step along the Y axis in a vertical stepper.\n     */\n    verticalStepTransition: trigger('stepTransition', [\n        state('previous', style({ height: '0px', visibility: 'hidden' })),\n        state('next', style({ height: '0px', visibility: 'hidden' })),\n        state('current', style({ height: '*', visibility: 'visible' })),\n        transition('* <=> current', animate('225ms cubic-bezier(0.4, 0.0, 0.2, 1)'))\n    ])\n};\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/stepper/stepper-icon.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Template context available to an attached `matStepperIcon`.\n * @record\n */\nfunction MatStepperIconContext() { }\nif (false) {\n    /**\n     * Index of the step.\n     * @type {?}\n     */\n    MatStepperIconContext.prototype.index;\n    /**\n     * Whether the step is currently active.\n     * @type {?}\n     */\n    MatStepperIconContext.prototype.active;\n    /**\n     * Whether the step is optional.\n     * @type {?}\n     */\n    MatStepperIconContext.prototype.optional;\n}\n/**\n * Template to be used to override the icons inside the step header.\n */\nclass MatStepperIcon {\n    /**\n     * @param {?} templateRef\n     */\n    constructor(templateRef) {\n        this.templateRef = templateRef;\n    }\n}\nMatStepperIcon.decorators = [\n    { type: Directive, args: [{\n                selector: 'ng-template[matStepperIcon]',\n            },] }\n];\n/** @nocollapse */\nMatStepperIcon.ctorParameters = () => [\n    { type: TemplateRef }\n];\nMatStepperIcon.propDecorators = {\n    name: [{ type: Input, args: ['matStepperIcon',] }]\n};\nif (false) {\n    /**\n     * Name of the icon to be overridden.\n     * @type {?}\n     */\n    MatStepperIcon.prototype.name;\n    /** @type {?} */\n    MatStepperIcon.prototype.templateRef;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/stepper/stepper.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass MatStep extends CdkStep {\n    /**\n     * \\@breaking-change 8.0.0 remove the `?` after `stepperOptions`\n     * @param {?} stepper\n     * @param {?} _errorStateMatcher\n     * @param {?=} stepperOptions\n     */\n    constructor(stepper, _errorStateMatcher, stepperOptions) {\n        super(stepper, stepperOptions);\n        this._errorStateMatcher = _errorStateMatcher;\n    }\n    /**\n     * Custom error state matcher that additionally checks for validity of interacted form.\n     * @param {?} control\n     * @param {?} form\n     * @return {?}\n     */\n    isErrorState(control, form) {\n        /** @type {?} */\n        const originalErrorState = this._errorStateMatcher.isErrorState(control, form);\n        // Custom error state checks for the validity of form that is not submitted or touched\n        // since user can trigger a form change by calling for another step without directly\n        // interacting with the current form.\n        /** @type {?} */\n        const customErrorState = !!(control && control.invalid && this.interacted);\n        return originalErrorState || customErrorState;\n    }\n}\nMatStep.decorators = [\n    { type: Component, args: [{\n                selector: 'mat-step',\n                template: \"<ng-template><ng-content></ng-content></ng-template>\\n\",\n                providers: [\n                    { provide: ErrorStateMatcher, useExisting: MatStep },\n                    { provide: CdkStep, useExisting: MatStep },\n                ],\n                encapsulation: ViewEncapsulation.None,\n                exportAs: 'matStep',\n                changeDetection: ChangeDetectionStrategy.OnPush\n            }] }\n];\n/** @nocollapse */\nMatStep.ctorParameters = () => [\n    { type: MatStepper, decorators: [{ type: Inject, args: [forwardRef((/**\n                     * @return {?}\n                     */\n                    () => MatStepper)),] }] },\n    { type: ErrorStateMatcher, decorators: [{ type: SkipSelf }] },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [STEPPER_GLOBAL_OPTIONS,] }] }\n];\nMatStep.propDecorators = {\n    stepLabel: [{ type: ContentChild, args: [MatStepLabel,] }]\n};\nif (false) {\n    /**\n     * Content for step label given by `<ng-template matStepLabel>`.\n     * @type {?}\n     */\n    MatStep.prototype.stepLabel;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatStep.prototype._errorStateMatcher;\n}\nclass MatStepper extends CdkStepper {\n    constructor() {\n        super(...arguments);\n        /**\n         * Event emitted when the current step is done transitioning in.\n         */\n        this.animationDone = new EventEmitter();\n        /**\n         * Consumer-specified template-refs to be used to override the header icons.\n         */\n        this._iconOverrides = {};\n        /**\n         * Stream of animation `done` events when the body expands/collapses.\n         */\n        this._animationDone = new Subject();\n    }\n    /**\n     * @return {?}\n     */\n    ngAfterContentInit() {\n        this._icons.forEach((/**\n         * @param {?} __0\n         * @return {?}\n         */\n        ({ name, templateRef }) => this._iconOverrides[name] = templateRef));\n        // Mark the component for change detection whenever the content children query changes\n        this._steps.changes.pipe(takeUntil(this._destroyed)).subscribe((/**\n         * @return {?}\n         */\n        () => {\n            this._stateChanged();\n        }));\n        this._animationDone.pipe(\n        // This needs a `distinctUntilChanged` in order to avoid emitting the same event twice due\n        // to a bug in animations where the `.done` callback gets invoked twice on some browsers.\n        // See https://github.com/angular/angular/issues/24084\n        distinctUntilChanged((/**\n         * @param {?} x\n         * @param {?} y\n         * @return {?}\n         */\n        (x, y) => x.fromState === y.fromState && x.toState === y.toState)), takeUntil(this._destroyed)).subscribe((/**\n         * @param {?} event\n         * @return {?}\n         */\n        event => {\n            if (((/** @type {?} */ (event.toState))) === 'current') {\n                this.animationDone.emit();\n            }\n        }));\n    }\n}\nMatStepper.decorators = [\n    { type: Directive, args: [{ selector: '[matStepper]', providers: [{ provide: CdkStepper, useExisting: MatStepper }] },] }\n];\nMatStepper.propDecorators = {\n    _stepHeader: [{ type: ViewChildren, args: [MatStepHeader,] }],\n    _steps: [{ type: ContentChildren, args: [MatStep, { descendants: true },] }],\n    _icons: [{ type: ContentChildren, args: [MatStepperIcon, { descendants: true },] }],\n    animationDone: [{ type: Output }],\n    disableRipple: [{ type: Input }]\n};\nif (false) {\n    /** @type {?} */\n    MatStepper.ngAcceptInputType_editable;\n    /** @type {?} */\n    MatStepper.ngAcceptInputType_optional;\n    /** @type {?} */\n    MatStepper.ngAcceptInputType_completed;\n    /** @type {?} */\n    MatStepper.ngAcceptInputType_hasError;\n    /**\n     * The list of step headers of the steps in the stepper.\n     * @type {?}\n     */\n    MatStepper.prototype._stepHeader;\n    /**\n     * Steps that the stepper holds.\n     * @type {?}\n     */\n    MatStepper.prototype._steps;\n    /**\n     * Custom icon overrides passed in by the consumer.\n     * @type {?}\n     */\n    MatStepper.prototype._icons;\n    /**\n     * Event emitted when the current step is done transitioning in.\n     * @type {?}\n     */\n    MatStepper.prototype.animationDone;\n    /**\n     * Whether ripples should be disabled for the step headers.\n     * @type {?}\n     */\n    MatStepper.prototype.disableRipple;\n    /**\n     * Consumer-specified template-refs to be used to override the header icons.\n     * @type {?}\n     */\n    MatStepper.prototype._iconOverrides;\n    /**\n     * Stream of animation `done` events when the body expands/collapses.\n     * @type {?}\n     */\n    MatStepper.prototype._animationDone;\n}\nclass MatHorizontalStepper extends MatStepper {\n    constructor() {\n        super(...arguments);\n        /**\n         * Whether the label should display in bottom or end position.\n         */\n        this.labelPosition = 'end';\n    }\n}\nMatHorizontalStepper.decorators = [\n    { type: Component, args: [{\n                selector: 'mat-horizontal-stepper',\n                exportAs: 'matHorizontalStepper',\n                template: \"<div class=\\\"mat-horizontal-stepper-header-container\\\">\\n  <ng-container *ngFor=\\\"let step of steps; let i = index; let isLast = last\\\">\\n    <mat-step-header class=\\\"mat-horizontal-stepper-header\\\"\\n                     (click)=\\\"step.select()\\\"\\n                     (keydown)=\\\"_onKeydown($event)\\\"\\n                     [tabIndex]=\\\"_getFocusIndex() === i ? 0 : -1\\\"\\n                     [id]=\\\"_getStepLabelId(i)\\\"\\n                     [attr.aria-posinset]=\\\"i + 1\\\"\\n                     [attr.aria-setsize]=\\\"steps.length\\\"\\n                     [attr.aria-controls]=\\\"_getStepContentId(i)\\\"\\n                     [attr.aria-selected]=\\\"selectedIndex == i\\\"\\n                     [attr.aria-label]=\\\"step.ariaLabel || null\\\"\\n                     [attr.aria-labelledby]=\\\"(!step.ariaLabel && step.ariaLabelledby) ? step.ariaLabelledby : null\\\"\\n                     [index]=\\\"i\\\"\\n                     [state]=\\\"_getIndicatorType(i, step.state)\\\"\\n                     [label]=\\\"step.stepLabel || step.label\\\"\\n                     [selected]=\\\"selectedIndex === i\\\"\\n                     [active]=\\\"step.completed || selectedIndex === i || !linear\\\"\\n                     [optional]=\\\"step.optional\\\"\\n                     [errorMessage]=\\\"step.errorMessage\\\"\\n                     [iconOverrides]=\\\"_iconOverrides\\\"\\n                     [disableRipple]=\\\"disableRipple\\\">\\n    </mat-step-header>\\n    <div *ngIf=\\\"!isLast\\\" class=\\\"mat-stepper-horizontal-line\\\"></div>\\n  </ng-container>\\n</div>\\n\\n<div class=\\\"mat-horizontal-content-container\\\">\\n  <div *ngFor=\\\"let step of steps; let i = index\\\"\\n       [attr.tabindex]=\\\"selectedIndex === i ? 0 : null\\\"\\n       class=\\\"mat-horizontal-stepper-content\\\" role=\\\"tabpanel\\\"\\n       [@stepTransition]=\\\"_getAnimationDirection(i)\\\"\\n       (@stepTransition.done)=\\\"_animationDone.next($event)\\\"\\n       [id]=\\\"_getStepContentId(i)\\\"\\n       [attr.aria-labelledby]=\\\"_getStepLabelId(i)\\\"\\n       [attr.aria-expanded]=\\\"selectedIndex === i\\\">\\n    <ng-container [ngTemplateOutlet]=\\\"step.content\\\"></ng-container>\\n  </div>\\n</div>\\n\",\n                inputs: ['selectedIndex'],\n                host: {\n                    'class': 'mat-stepper-horizontal',\n                    '[class.mat-stepper-label-position-end]': 'labelPosition == \"end\"',\n                    '[class.mat-stepper-label-position-bottom]': 'labelPosition == \"bottom\"',\n                    'aria-orientation': 'horizontal',\n                    'role': 'tablist',\n                },\n                animations: [matStepperAnimations.horizontalStepTransition],\n                providers: [\n                    { provide: MatStepper, useExisting: MatHorizontalStepper },\n                    { provide: CdkStepper, useExisting: MatHorizontalStepper }\n                ],\n                encapsulation: ViewEncapsulation.None,\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                styles: [\".mat-stepper-vertical,.mat-stepper-horizontal{display:block}.mat-horizontal-stepper-header-container{white-space:nowrap;display:flex;align-items:center}.mat-stepper-label-position-bottom .mat-horizontal-stepper-header-container{align-items:flex-start}.mat-stepper-horizontal-line{border-top-width:1px;border-top-style:solid;flex:auto;height:0;margin:0 -16px;min-width:32px}.mat-stepper-label-position-bottom .mat-stepper-horizontal-line{margin:0;min-width:0;position:relative;top:36px}.mat-stepper-label-position-bottom .mat-horizontal-stepper-header:not(:first-child)::before,[dir=rtl] .mat-stepper-label-position-bottom .mat-horizontal-stepper-header:not(:last-child)::before,.mat-stepper-label-position-bottom .mat-horizontal-stepper-header:not(:last-child)::after,[dir=rtl] .mat-stepper-label-position-bottom .mat-horizontal-stepper-header:not(:first-child)::after{border-top-width:1px;border-top-style:solid;content:\\\"\\\";display:inline-block;height:0;position:absolute;top:36px;width:calc(50% - 20px)}.mat-horizontal-stepper-header{display:flex;height:72px;overflow:hidden;align-items:center;padding:0 24px}.mat-horizontal-stepper-header .mat-step-icon{margin-right:8px;flex:none}[dir=rtl] .mat-horizontal-stepper-header .mat-step-icon{margin-right:0;margin-left:8px}.mat-stepper-label-position-bottom .mat-horizontal-stepper-header{box-sizing:border-box;flex-direction:column;height:auto;padding:24px}.mat-stepper-label-position-bottom .mat-horizontal-stepper-header:not(:last-child)::after,[dir=rtl] .mat-stepper-label-position-bottom .mat-horizontal-stepper-header:not(:first-child)::after{right:0}.mat-stepper-label-position-bottom .mat-horizontal-stepper-header:not(:first-child)::before,[dir=rtl] .mat-stepper-label-position-bottom .mat-horizontal-stepper-header:not(:last-child)::before{left:0}[dir=rtl] .mat-stepper-label-position-bottom .mat-horizontal-stepper-header:last-child::before,[dir=rtl] .mat-stepper-label-position-bottom .mat-horizontal-stepper-header:first-child::after{display:none}.mat-stepper-label-position-bottom .mat-horizontal-stepper-header .mat-step-icon{margin-right:0;margin-left:0}.mat-stepper-label-position-bottom .mat-horizontal-stepper-header .mat-step-label{padding:16px 0 0 0;text-align:center;width:100%}.mat-vertical-stepper-header{display:flex;align-items:center;padding:24px;height:24px}.mat-vertical-stepper-header .mat-step-icon{margin-right:12px}[dir=rtl] .mat-vertical-stepper-header .mat-step-icon{margin-right:0;margin-left:12px}.mat-horizontal-stepper-content{outline:0}.mat-horizontal-stepper-content[aria-expanded=false]{height:0;overflow:hidden}.mat-horizontal-content-container{overflow:hidden;padding:0 24px 24px 24px}.mat-vertical-content-container{margin-left:36px;border:0;position:relative}[dir=rtl] .mat-vertical-content-container{margin-left:0;margin-right:36px}.mat-stepper-vertical-line::before{content:\\\"\\\";position:absolute;top:-16px;bottom:-16px;left:0;border-left-width:1px;border-left-style:solid}[dir=rtl] .mat-stepper-vertical-line::before{left:auto;right:0}.mat-vertical-stepper-content{overflow:hidden;outline:0}.mat-vertical-content{padding:0 24px 24px 24px}.mat-step:last-child .mat-vertical-content-container{border:none}\\n\"]\n            }] }\n];\nMatHorizontalStepper.propDecorators = {\n    labelPosition: [{ type: Input }]\n};\nif (false) {\n    /** @type {?} */\n    MatHorizontalStepper.ngAcceptInputType_editable;\n    /** @type {?} */\n    MatHorizontalStepper.ngAcceptInputType_optional;\n    /** @type {?} */\n    MatHorizontalStepper.ngAcceptInputType_completed;\n    /** @type {?} */\n    MatHorizontalStepper.ngAcceptInputType_hasError;\n    /**\n     * Whether the label should display in bottom or end position.\n     * @type {?}\n     */\n    MatHorizontalStepper.prototype.labelPosition;\n}\nclass MatVerticalStepper extends MatStepper {\n    /**\n     * @param {?} dir\n     * @param {?} changeDetectorRef\n     * @param {?=} elementRef\n     * @param {?=} _document\n     */\n    constructor(dir, changeDetectorRef, \n    // @breaking-change 8.0.0 `elementRef` and `_document` parameters to become required.\n    elementRef, _document) {\n        super(dir, changeDetectorRef, elementRef, _document);\n        this._orientation = 'vertical';\n    }\n}\nMatVerticalStepper.decorators = [\n    { type: Component, args: [{\n                selector: 'mat-vertical-stepper',\n                exportAs: 'matVerticalStepper',\n                template: \"<div class=\\\"mat-step\\\" *ngFor=\\\"let step of steps; let i = index; let isLast = last\\\">\\n  <mat-step-header class=\\\"mat-vertical-stepper-header\\\"\\n                   (click)=\\\"step.select()\\\"\\n                   (keydown)=\\\"_onKeydown($event)\\\"\\n                   [tabIndex]=\\\"_getFocusIndex() == i ? 0 : -1\\\"\\n                   [id]=\\\"_getStepLabelId(i)\\\"\\n                   [attr.aria-posinset]=\\\"i + 1\\\"\\n                   [attr.aria-setsize]=\\\"steps.length\\\"\\n                   [attr.aria-controls]=\\\"_getStepContentId(i)\\\"\\n                   [attr.aria-selected]=\\\"selectedIndex === i\\\"\\n                   [attr.aria-label]=\\\"step.ariaLabel || null\\\"\\n                   [attr.aria-labelledby]=\\\"(!step.ariaLabel && step.ariaLabelledby) ? step.ariaLabelledby : null\\\"\\n                   [index]=\\\"i\\\"\\n                   [state]=\\\"_getIndicatorType(i, step.state)\\\"\\n                   [label]=\\\"step.stepLabel || step.label\\\"\\n                   [selected]=\\\"selectedIndex === i\\\"\\n                   [active]=\\\"step.completed || selectedIndex === i || !linear\\\"\\n                   [optional]=\\\"step.optional\\\"\\n                   [errorMessage]=\\\"step.errorMessage\\\"\\n                   [iconOverrides]=\\\"_iconOverrides\\\"\\n                   [disableRipple]=\\\"disableRipple\\\">\\n  </mat-step-header>\\n\\n  <div class=\\\"mat-vertical-content-container\\\" [class.mat-stepper-vertical-line]=\\\"!isLast\\\">\\n    <div class=\\\"mat-vertical-stepper-content\\\" role=\\\"tabpanel\\\"\\n         [attr.tabindex]=\\\"selectedIndex === i ? 0 : null\\\"\\n         [@stepTransition]=\\\"_getAnimationDirection(i)\\\"\\n         (@stepTransition.done)=\\\"_animationDone.next($event)\\\"\\n         [id]=\\\"_getStepContentId(i)\\\"\\n         [attr.aria-labelledby]=\\\"_getStepLabelId(i)\\\"\\n         [attr.aria-expanded]=\\\"selectedIndex === i\\\">\\n      <div class=\\\"mat-vertical-content\\\">\\n        <ng-container [ngTemplateOutlet]=\\\"step.content\\\"></ng-container>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n\",\n                inputs: ['selectedIndex'],\n                host: {\n                    'class': 'mat-stepper-vertical',\n                    'aria-orientation': 'vertical',\n                    'role': 'tablist',\n                },\n                animations: [matStepperAnimations.verticalStepTransition],\n                providers: [\n                    { provide: MatStepper, useExisting: MatVerticalStepper },\n                    { provide: CdkStepper, useExisting: MatVerticalStepper }\n                ],\n                encapsulation: ViewEncapsulation.None,\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                styles: [\".mat-stepper-vertical,.mat-stepper-horizontal{display:block}.mat-horizontal-stepper-header-container{white-space:nowrap;display:flex;align-items:center}.mat-stepper-label-position-bottom .mat-horizontal-stepper-header-container{align-items:flex-start}.mat-stepper-horizontal-line{border-top-width:1px;border-top-style:solid;flex:auto;height:0;margin:0 -16px;min-width:32px}.mat-stepper-label-position-bottom .mat-stepper-horizontal-line{margin:0;min-width:0;position:relative;top:36px}.mat-stepper-label-position-bottom .mat-horizontal-stepper-header:not(:first-child)::before,[dir=rtl] .mat-stepper-label-position-bottom .mat-horizontal-stepper-header:not(:last-child)::before,.mat-stepper-label-position-bottom .mat-horizontal-stepper-header:not(:last-child)::after,[dir=rtl] .mat-stepper-label-position-bottom .mat-horizontal-stepper-header:not(:first-child)::after{border-top-width:1px;border-top-style:solid;content:\\\"\\\";display:inline-block;height:0;position:absolute;top:36px;width:calc(50% - 20px)}.mat-horizontal-stepper-header{display:flex;height:72px;overflow:hidden;align-items:center;padding:0 24px}.mat-horizontal-stepper-header .mat-step-icon{margin-right:8px;flex:none}[dir=rtl] .mat-horizontal-stepper-header .mat-step-icon{margin-right:0;margin-left:8px}.mat-stepper-label-position-bottom .mat-horizontal-stepper-header{box-sizing:border-box;flex-direction:column;height:auto;padding:24px}.mat-stepper-label-position-bottom .mat-horizontal-stepper-header:not(:last-child)::after,[dir=rtl] .mat-stepper-label-position-bottom .mat-horizontal-stepper-header:not(:first-child)::after{right:0}.mat-stepper-label-position-bottom .mat-horizontal-stepper-header:not(:first-child)::before,[dir=rtl] .mat-stepper-label-position-bottom .mat-horizontal-stepper-header:not(:last-child)::before{left:0}[dir=rtl] .mat-stepper-label-position-bottom .mat-horizontal-stepper-header:last-child::before,[dir=rtl] .mat-stepper-label-position-bottom .mat-horizontal-stepper-header:first-child::after{display:none}.mat-stepper-label-position-bottom .mat-horizontal-stepper-header .mat-step-icon{margin-right:0;margin-left:0}.mat-stepper-label-position-bottom .mat-horizontal-stepper-header .mat-step-label{padding:16px 0 0 0;text-align:center;width:100%}.mat-vertical-stepper-header{display:flex;align-items:center;padding:24px;height:24px}.mat-vertical-stepper-header .mat-step-icon{margin-right:12px}[dir=rtl] .mat-vertical-stepper-header .mat-step-icon{margin-right:0;margin-left:12px}.mat-horizontal-stepper-content{outline:0}.mat-horizontal-stepper-content[aria-expanded=false]{height:0;overflow:hidden}.mat-horizontal-content-container{overflow:hidden;padding:0 24px 24px 24px}.mat-vertical-content-container{margin-left:36px;border:0;position:relative}[dir=rtl] .mat-vertical-content-container{margin-left:0;margin-right:36px}.mat-stepper-vertical-line::before{content:\\\"\\\";position:absolute;top:-16px;bottom:-16px;left:0;border-left-width:1px;border-left-style:solid}[dir=rtl] .mat-stepper-vertical-line::before{left:auto;right:0}.mat-vertical-stepper-content{overflow:hidden;outline:0}.mat-vertical-content{padding:0 24px 24px 24px}.mat-step:last-child .mat-vertical-content-container{border:none}\\n\"]\n            }] }\n];\n/** @nocollapse */\nMatVerticalStepper.ctorParameters = () => [\n    { type: Directionality, decorators: [{ type: Optional }] },\n    { type: ChangeDetectorRef },\n    { type: ElementRef },\n    { type: undefined, decorators: [{ type: Inject, args: [DOCUMENT,] }] }\n];\nif (false) {\n    /** @type {?} */\n    MatVerticalStepper.ngAcceptInputType_editable;\n    /** @type {?} */\n    MatVerticalStepper.ngAcceptInputType_optional;\n    /** @type {?} */\n    MatVerticalStepper.ngAcceptInputType_completed;\n    /** @type {?} */\n    MatVerticalStepper.ngAcceptInputType_hasError;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/stepper/stepper-button.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Button that moves to the next step in a stepper workflow.\n */\nclass MatStepperNext extends CdkStepperNext {\n}\nMatStepperNext.decorators = [\n    { type: Directive, args: [{\n                selector: 'button[matStepperNext]',\n                host: {\n                    '[type]': 'type',\n                },\n                inputs: ['type']\n            },] }\n];\n/**\n * Button that moves to the previous step in a stepper workflow.\n */\nclass MatStepperPrevious extends CdkStepperPrevious {\n}\nMatStepperPrevious.decorators = [\n    { type: Directive, args: [{\n                selector: 'button[matStepperPrevious]',\n                host: {\n                    '[type]': 'type',\n                },\n                inputs: ['type']\n            },] }\n];\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/stepper/stepper-module.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass MatStepperModule {\n}\nMatStepperModule.decorators = [\n    { type: NgModule, args: [{\n                imports: [\n                    MatCommonModule,\n                    CommonModule,\n                    PortalModule,\n                    MatButtonModule,\n                    CdkStepperModule,\n                    MatIconModule,\n                    MatRippleModule,\n                ],\n                exports: [\n                    MatCommonModule,\n                    MatHorizontalStepper,\n                    MatVerticalStepper,\n                    MatStep,\n                    MatStepLabel,\n                    MatStepper,\n                    MatStepperNext,\n                    MatStepperPrevious,\n                    MatStepHeader,\n                    MatStepperIcon,\n                ],\n                declarations: [\n                    MatHorizontalStepper,\n                    MatVerticalStepper,\n                    MatStep,\n                    MatStepLabel,\n                    MatStepper,\n                    MatStepperNext,\n                    MatStepperPrevious,\n                    MatStepHeader,\n                    MatStepperIcon,\n                ],\n                providers: [MAT_STEPPER_INTL_PROVIDER, ErrorStateMatcher],\n            },] }\n];\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/stepper/public-api.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MAT_STEPPER_INTL_PROVIDER, MAT_STEPPER_INTL_PROVIDER_FACTORY, MatHorizontalStepper, MatStep, MatStepHeader, MatStepLabel, MatStepper, MatStepperIcon, MatStepperIntl, MatStepperModule, MatStepperNext, MatStepperPrevious, MatVerticalStepper, matStepperAnimations };\n//# sourceMappingURL=stepper.js.map\n","import { Directive, isDevMode, Component, ChangeDetectionStrategy, ViewEncapsulation, ElementRef, Inject, ContentChildren, NgModule } from '@angular/core';\nimport { mixinColor, MatCommonModule } from '@angular/material/core';\nimport { Platform } from '@angular/cdk/platform';\nimport { DOCUMENT } from '@angular/common';\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/toolbar/toolbar.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n// Boilerplate for applying mixins to MatToolbar.\n/**\n * \\@docs-private\n */\nclass MatToolbarBase {\n    /**\n     * @param {?} _elementRef\n     */\n    constructor(_elementRef) {\n        this._elementRef = _elementRef;\n    }\n}\nif (false) {\n    /** @type {?} */\n    MatToolbarBase.prototype._elementRef;\n}\n/** @type {?} */\nconst _MatToolbarMixinBase = mixinColor(MatToolbarBase);\nclass MatToolbarRow {\n}\nMatToolbarRow.decorators = [\n    { type: Directive, args: [{\n                selector: 'mat-toolbar-row',\n                exportAs: 'matToolbarRow',\n                host: { 'class': 'mat-toolbar-row' },\n            },] }\n];\nclass MatToolbar extends _MatToolbarMixinBase {\n    /**\n     * @param {?} elementRef\n     * @param {?} _platform\n     * @param {?=} document\n     */\n    constructor(elementRef, _platform, document) {\n        super(elementRef);\n        this._platform = _platform;\n        // TODO: make the document a required param when doing breaking changes.\n        this._document = document;\n    }\n    /**\n     * @return {?}\n     */\n    ngAfterViewInit() {\n        if (!isDevMode() || !this._platform.isBrowser) {\n            return;\n        }\n        this._checkToolbarMixedModes();\n        this._toolbarRows.changes.subscribe((/**\n         * @return {?}\n         */\n        () => this._checkToolbarMixedModes()));\n    }\n    /**\n     * Throws an exception when developers are attempting to combine the different toolbar row modes.\n     * @private\n     * @return {?}\n     */\n    _checkToolbarMixedModes() {\n        if (!this._toolbarRows.length) {\n            return;\n        }\n        // Check if there are any other DOM nodes that can display content but aren't inside of\n        // a <mat-toolbar-row> element.\n        /** @type {?} */\n        const isCombinedUsage = Array.from(this._elementRef.nativeElement.childNodes)\n            .filter((/**\n         * @param {?} node\n         * @return {?}\n         */\n        node => !(node.classList && node.classList.contains('mat-toolbar-row'))))\n            .filter((/**\n         * @param {?} node\n         * @return {?}\n         */\n        node => node.nodeType !== (this._document ? this._document.COMMENT_NODE : 8)))\n            .some((/**\n         * @param {?} node\n         * @return {?}\n         */\n        node => !!(node.textContent && node.textContent.trim())));\n        if (isCombinedUsage) {\n            throwToolbarMixedModesError();\n        }\n    }\n}\nMatToolbar.decorators = [\n    { type: Component, args: [{\n                selector: 'mat-toolbar',\n                exportAs: 'matToolbar',\n                template: \"<ng-content></ng-content>\\n<ng-content select=\\\"mat-toolbar-row\\\"></ng-content>\\n\",\n                inputs: ['color'],\n                host: {\n                    'class': 'mat-toolbar',\n                    '[class.mat-toolbar-multiple-rows]': '_toolbarRows.length > 0',\n                    '[class.mat-toolbar-single-row]': '_toolbarRows.length === 0',\n                },\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                encapsulation: ViewEncapsulation.None,\n                styles: [\".cdk-high-contrast-active .mat-toolbar{outline:solid 1px}.mat-toolbar-row,.mat-toolbar-single-row{display:flex;box-sizing:border-box;padding:0 16px;width:100%;flex-direction:row;align-items:center;white-space:nowrap}.mat-toolbar-multiple-rows{display:flex;box-sizing:border-box;flex-direction:column;width:100%}.mat-toolbar-multiple-rows{min-height:64px}.mat-toolbar-row,.mat-toolbar-single-row{height:64px}@media(max-width: 599px){.mat-toolbar-multiple-rows{min-height:56px}.mat-toolbar-row,.mat-toolbar-single-row{height:56px}}\\n\"]\n            }] }\n];\n/** @nocollapse */\nMatToolbar.ctorParameters = () => [\n    { type: ElementRef },\n    { type: Platform },\n    { type: undefined, decorators: [{ type: Inject, args: [DOCUMENT,] }] }\n];\nMatToolbar.propDecorators = {\n    _toolbarRows: [{ type: ContentChildren, args: [MatToolbarRow, { descendants: true },] }]\n};\nif (false) {\n    /**\n     * @type {?}\n     * @private\n     */\n    MatToolbar.prototype._document;\n    /**\n     * Reference to all toolbar row elements that have been projected.\n     * @type {?}\n     */\n    MatToolbar.prototype._toolbarRows;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatToolbar.prototype._platform;\n}\n/**\n * Throws an exception when attempting to combine the different toolbar row modes.\n * \\@docs-private\n * @return {?}\n */\nfunction throwToolbarMixedModesError() {\n    throw Error('MatToolbar: Attempting to combine different toolbar modes. ' +\n        'Either specify multiple `<mat-toolbar-row>` elements explicitly or just place content ' +\n        'inside of a `<mat-toolbar>` for a single row.');\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/toolbar/toolbar-module.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass MatToolbarModule {\n}\nMatToolbarModule.decorators = [\n    { type: NgModule, args: [{\n                imports: [MatCommonModule],\n                exports: [MatToolbar, MatToolbarRow, MatCommonModule],\n                declarations: [MatToolbar, MatToolbarRow],\n            },] }\n];\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/toolbar/public-api.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MatToolbar, MatToolbarModule, MatToolbarRow, throwToolbarMixedModesError };\n//# sourceMappingURL=toolbar.js.map\n","import { CdkTreeNode, CdkTree, CdkTreeNodeDef, CdkNestedTreeNode, CDK_TREE_NODE_OUTLET_NODE, CdkTreeNodePadding, CdkTreeNodeOutlet, CdkTreeNodeToggle, CdkTreeModule } from '@angular/cdk/tree';\nimport { Directive, ElementRef, Attribute, Input, IterableDiffers, ViewContainerRef, Inject, Optional, Component, ViewEncapsulation, ChangeDetectionStrategy, ViewChild, NgModule } from '@angular/core';\nimport { mixinTabIndex, mixinDisabled, MatCommonModule } from '@angular/material/core';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { DataSource } from '@angular/cdk/collections';\nimport { BehaviorSubject, merge } from 'rxjs';\nimport { take, map } from 'rxjs/operators';\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/tree/node.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/** @type {?} */\nconst _MatTreeNodeMixinBase = mixinTabIndex(mixinDisabled(CdkTreeNode));\n/**\n * Wrapper for the CdkTree node with Material design styles.\n * @template T\n */\nclass MatTreeNode extends _MatTreeNodeMixinBase {\n    /**\n     * @param {?} _elementRef\n     * @param {?} _tree\n     * @param {?} tabIndex\n     */\n    constructor(_elementRef, _tree, tabIndex) {\n        super(_elementRef, _tree);\n        this._elementRef = _elementRef;\n        this._tree = _tree;\n        this.role = 'treeitem';\n        this.tabIndex = Number(tabIndex) || 0;\n    }\n}\nMatTreeNode.decorators = [\n    { type: Directive, args: [{\n                selector: 'mat-tree-node',\n                exportAs: 'matTreeNode',\n                inputs: ['disabled', 'tabIndex'],\n                host: {\n                    '[attr.aria-expanded]': 'isExpanded',\n                    '[attr.aria-level]': 'role === \"treeitem\" ? level : null',\n                    '[attr.role]': 'role',\n                    'class': 'mat-tree-node'\n                },\n                providers: [{ provide: CdkTreeNode, useExisting: MatTreeNode }]\n            },] }\n];\n/** @nocollapse */\nMatTreeNode.ctorParameters = () => [\n    { type: ElementRef },\n    { type: CdkTree },\n    { type: String, decorators: [{ type: Attribute, args: ['tabindex',] }] }\n];\nMatTreeNode.propDecorators = {\n    role: [{ type: Input }]\n};\nif (false) {\n    /** @type {?} */\n    MatTreeNode.ngAcceptInputType_disabled;\n    /** @type {?} */\n    MatTreeNode.prototype.role;\n    /**\n     * @type {?}\n     * @protected\n     */\n    MatTreeNode.prototype._elementRef;\n    /**\n     * @type {?}\n     * @protected\n     */\n    MatTreeNode.prototype._tree;\n}\n/**\n * Wrapper for the CdkTree node definition with Material design styles.\n * @template T\n */\nclass MatTreeNodeDef extends CdkTreeNodeDef {\n}\nMatTreeNodeDef.decorators = [\n    { type: Directive, args: [{\n                selector: '[matTreeNodeDef]',\n                inputs: [\n                    'when: matTreeNodeDefWhen'\n                ],\n                providers: [{ provide: CdkTreeNodeDef, useExisting: MatTreeNodeDef }]\n            },] }\n];\nMatTreeNodeDef.propDecorators = {\n    data: [{ type: Input, args: ['matTreeNode',] }]\n};\nif (false) {\n    /** @type {?} */\n    MatTreeNodeDef.prototype.data;\n}\n/**\n * Wrapper for the CdkTree nested node with Material design styles.\n * @template T\n */\nclass MatNestedTreeNode extends CdkNestedTreeNode {\n    /**\n     * @param {?} _elementRef\n     * @param {?} _tree\n     * @param {?} _differs\n     * @param {?} tabIndex\n     */\n    constructor(_elementRef, _tree, _differs, tabIndex) {\n        super(_elementRef, _tree, _differs);\n        this._elementRef = _elementRef;\n        this._tree = _tree;\n        this._differs = _differs;\n        this._disabled = false;\n        this.tabIndex = Number(tabIndex) || 0;\n    }\n    /**\n     * Whether the node is disabled.\n     * @return {?}\n     */\n    get disabled() { return this._disabled; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set disabled(value) { this._disabled = coerceBooleanProperty(value); }\n    /**\n     * Tabindex for the node.\n     * @return {?}\n     */\n    get tabIndex() { return this.disabled ? -1 : this._tabIndex; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set tabIndex(value) {\n        // If the specified tabIndex value is null or undefined, fall back to the default value.\n        this._tabIndex = value != null ? value : 0;\n    }\n    // This is a workaround for https://github.com/angular/angular/issues/23091\n    // In aot mode, the lifecycle hooks from parent class are not called.\n    // TODO(tinayuangao): Remove when the angular issue #23091 is fixed\n    /**\n     * @return {?}\n     */\n    ngAfterContentInit() {\n        super.ngAfterContentInit();\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        super.ngOnDestroy();\n    }\n}\nMatNestedTreeNode.decorators = [\n    { type: Directive, args: [{\n                selector: 'mat-nested-tree-node',\n                exportAs: 'matNestedTreeNode',\n                host: {\n                    '[attr.aria-expanded]': 'isExpanded',\n                    '[attr.role]': 'role',\n                    'class': 'mat-nested-tree-node',\n                },\n                providers: [\n                    { provide: CdkNestedTreeNode, useExisting: MatNestedTreeNode },\n                    { provide: CdkTreeNode, useExisting: MatNestedTreeNode },\n                    { provide: CDK_TREE_NODE_OUTLET_NODE, useExisting: MatNestedTreeNode }\n                ]\n            },] }\n];\n/** @nocollapse */\nMatNestedTreeNode.ctorParameters = () => [\n    { type: ElementRef },\n    { type: CdkTree },\n    { type: IterableDiffers },\n    { type: String, decorators: [{ type: Attribute, args: ['tabindex',] }] }\n];\nMatNestedTreeNode.propDecorators = {\n    node: [{ type: Input, args: ['matNestedTreeNode',] }],\n    disabled: [{ type: Input }],\n    tabIndex: [{ type: Input }]\n};\nif (false) {\n    /** @type {?} */\n    MatNestedTreeNode.ngAcceptInputType_disabled;\n    /** @type {?} */\n    MatNestedTreeNode.prototype.node;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatNestedTreeNode.prototype._disabled;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatNestedTreeNode.prototype._tabIndex;\n    /**\n     * @type {?}\n     * @protected\n     */\n    MatNestedTreeNode.prototype._elementRef;\n    /**\n     * @type {?}\n     * @protected\n     */\n    MatNestedTreeNode.prototype._tree;\n    /**\n     * @type {?}\n     * @protected\n     */\n    MatNestedTreeNode.prototype._differs;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/tree/padding.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Wrapper for the CdkTree padding with Material design styles.\n * @template T\n */\nclass MatTreeNodePadding extends CdkTreeNodePadding {\n}\nMatTreeNodePadding.decorators = [\n    { type: Directive, args: [{\n                selector: '[matTreeNodePadding]',\n                providers: [{ provide: CdkTreeNodePadding, useExisting: MatTreeNodePadding }]\n            },] }\n];\nMatTreeNodePadding.propDecorators = {\n    level: [{ type: Input, args: ['matTreeNodePadding',] }],\n    indent: [{ type: Input, args: ['matTreeNodePaddingIndent',] }]\n};\nif (false) {\n    /**\n     * The level of depth of the tree node. The padding will be `level * indent` pixels.\n     * @type {?}\n     */\n    MatTreeNodePadding.prototype.level;\n    /**\n     * The indent for each level. Default number 40px from material design menu sub-menu spec.\n     * @type {?}\n     */\n    MatTreeNodePadding.prototype.indent;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/tree/outlet.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Outlet for nested CdkNode. Put `[matTreeNodeOutlet]` on a tag to place children dataNodes\n * inside the outlet.\n */\nclass MatTreeNodeOutlet {\n    /**\n     * @param {?} viewContainer\n     * @param {?=} _node\n     */\n    constructor(viewContainer, _node) {\n        this.viewContainer = viewContainer;\n        this._node = _node;\n    }\n}\nMatTreeNodeOutlet.decorators = [\n    { type: Directive, args: [{\n                selector: '[matTreeNodeOutlet]',\n                providers: [{\n                        provide: CdkTreeNodeOutlet,\n                        useExisting: MatTreeNodeOutlet\n                    }]\n            },] }\n];\n/** @nocollapse */\nMatTreeNodeOutlet.ctorParameters = () => [\n    { type: ViewContainerRef },\n    { type: undefined, decorators: [{ type: Inject, args: [CDK_TREE_NODE_OUTLET_NODE,] }, { type: Optional }] }\n];\nif (false) {\n    /** @type {?} */\n    MatTreeNodeOutlet.prototype.viewContainer;\n    /** @type {?} */\n    MatTreeNodeOutlet.prototype._node;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/tree/tree.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Wrapper for the CdkTable with Material design styles.\n * @template T\n */\nclass MatTree extends CdkTree {\n}\nMatTree.decorators = [\n    { type: Component, args: [{\n                selector: 'mat-tree',\n                exportAs: 'matTree',\n                template: `<ng-container matTreeNodeOutlet></ng-container>`,\n                host: {\n                    'class': 'mat-tree',\n                    'role': 'tree',\n                },\n                encapsulation: ViewEncapsulation.None,\n                // See note on CdkTree for explanation on why this uses the default change detection strategy.\n                // tslint:disable-next-line:validate-decorators\n                changeDetection: ChangeDetectionStrategy.Default,\n                providers: [{ provide: CdkTree, useExisting: MatTree }],\n                styles: [\".mat-tree{display:block}.mat-tree-node{display:flex;align-items:center;min-height:48px;flex:1;word-wrap:break-word}.mat-nested-tree-node{border-bottom-width:0}\\n\"]\n            }] }\n];\nMatTree.propDecorators = {\n    _nodeOutlet: [{ type: ViewChild, args: [MatTreeNodeOutlet, { static: true },] }]\n};\nif (false) {\n    /** @type {?} */\n    MatTree.prototype._nodeOutlet;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/tree/toggle.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Wrapper for the CdkTree's toggle with Material design styles.\n * @template T\n */\nclass MatTreeNodeToggle extends CdkTreeNodeToggle {\n    constructor() {\n        super(...arguments);\n        this.recursive = false;\n    }\n}\nMatTreeNodeToggle.decorators = [\n    { type: Directive, args: [{\n                selector: '[matTreeNodeToggle]',\n                providers: [{ provide: CdkTreeNodeToggle, useExisting: MatTreeNodeToggle }]\n            },] }\n];\nMatTreeNodeToggle.propDecorators = {\n    recursive: [{ type: Input, args: ['matTreeNodeToggleRecursive',] }]\n};\nif (false) {\n    /** @type {?} */\n    MatTreeNodeToggle.prototype.recursive;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/tree/tree-module.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/** @type {?} */\nconst MAT_TREE_DIRECTIVES = [\n    MatNestedTreeNode,\n    MatTreeNodeDef,\n    MatTreeNodePadding,\n    MatTreeNodeToggle,\n    MatTree,\n    MatTreeNode,\n    MatTreeNodeOutlet\n];\nclass MatTreeModule {\n}\nMatTreeModule.decorators = [\n    { type: NgModule, args: [{\n                imports: [CdkTreeModule, MatCommonModule],\n                exports: MAT_TREE_DIRECTIVES,\n                declarations: MAT_TREE_DIRECTIVES,\n            },] }\n];\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/tree/data-source/flat-data-source.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Tree flattener to convert a normal type of node to node with children & level information.\n * Transform nested nodes of type `T` to flattened nodes of type `F`.\n *\n * For example, the input data of type `T` is nested, and contains its children data:\n *   SomeNode: {\n *     key: 'Fruits',\n *     children: [\n *       NodeOne: {\n *         key: 'Apple',\n *       },\n *       NodeTwo: {\n *        key: 'Pear',\n *      }\n *    ]\n *  }\n *  After flattener flatten the tree, the structure will become\n *  SomeNode: {\n *    key: 'Fruits',\n *    expandable: true,\n *    level: 1\n *  },\n *  NodeOne: {\n *    key: 'Apple',\n *    expandable: false,\n *    level: 2\n *  },\n *  NodeTwo: {\n *   key: 'Pear',\n *   expandable: false,\n *   level: 2\n * }\n * and the output flattened type is `F` with additional information.\n * @template T, F\n */\nclass MatTreeFlattener {\n    /**\n     * @param {?} transformFunction\n     * @param {?} getLevel\n     * @param {?} isExpandable\n     * @param {?} getChildren\n     */\n    constructor(transformFunction, getLevel, isExpandable, getChildren) {\n        this.transformFunction = transformFunction;\n        this.getLevel = getLevel;\n        this.isExpandable = isExpandable;\n        this.getChildren = getChildren;\n    }\n    /**\n     * @param {?} node\n     * @param {?} level\n     * @param {?} resultNodes\n     * @param {?} parentMap\n     * @return {?}\n     */\n    _flattenNode(node, level, resultNodes, parentMap) {\n        /** @type {?} */\n        const flatNode = this.transformFunction(node, level);\n        resultNodes.push(flatNode);\n        if (this.isExpandable(flatNode)) {\n            /** @type {?} */\n            const childrenNodes = this.getChildren(node);\n            if (childrenNodes) {\n                if (Array.isArray(childrenNodes)) {\n                    this._flattenChildren(childrenNodes, level, resultNodes, parentMap);\n                }\n                else {\n                    childrenNodes.pipe(take(1)).subscribe((/**\n                     * @param {?} children\n                     * @return {?}\n                     */\n                    children => {\n                        this._flattenChildren(children, level, resultNodes, parentMap);\n                    }));\n                }\n            }\n        }\n        return resultNodes;\n    }\n    /**\n     * @param {?} children\n     * @param {?} level\n     * @param {?} resultNodes\n     * @param {?} parentMap\n     * @return {?}\n     */\n    _flattenChildren(children, level, resultNodes, parentMap) {\n        children.forEach((/**\n         * @param {?} child\n         * @param {?} index\n         * @return {?}\n         */\n        (child, index) => {\n            /** @type {?} */\n            let childParentMap = parentMap.slice();\n            childParentMap.push(index != children.length - 1);\n            this._flattenNode(child, level + 1, resultNodes, childParentMap);\n        }));\n    }\n    /**\n     * Flatten a list of node type T to flattened version of node F.\n     * Please note that type T may be nested, and the length of `structuredData` may be different\n     * from that of returned list `F[]`.\n     * @param {?} structuredData\n     * @return {?}\n     */\n    flattenNodes(structuredData) {\n        /** @type {?} */\n        let resultNodes = [];\n        structuredData.forEach((/**\n         * @param {?} node\n         * @return {?}\n         */\n        node => this._flattenNode(node, 0, resultNodes, [])));\n        return resultNodes;\n    }\n    /**\n     * Expand flattened node with current expansion status.\n     * The returned list may have different length.\n     * @param {?} nodes\n     * @param {?} treeControl\n     * @return {?}\n     */\n    expandFlattenedNodes(nodes, treeControl) {\n        /** @type {?} */\n        let results = [];\n        /** @type {?} */\n        let currentExpand = [];\n        currentExpand[0] = true;\n        nodes.forEach((/**\n         * @param {?} node\n         * @return {?}\n         */\n        node => {\n            /** @type {?} */\n            let expand = true;\n            for (let i = 0; i <= this.getLevel(node); i++) {\n                expand = expand && currentExpand[i];\n            }\n            if (expand) {\n                results.push(node);\n            }\n            if (this.isExpandable(node)) {\n                currentExpand[this.getLevel(node) + 1] = treeControl.isExpanded(node);\n            }\n        }));\n        return results;\n    }\n}\nif (false) {\n    /** @type {?} */\n    MatTreeFlattener.prototype.transformFunction;\n    /** @type {?} */\n    MatTreeFlattener.prototype.getLevel;\n    /** @type {?} */\n    MatTreeFlattener.prototype.isExpandable;\n    /** @type {?} */\n    MatTreeFlattener.prototype.getChildren;\n}\n/**\n * Data source for flat tree.\n * The data source need to handle expansion/collapsion of the tree node and change the data feed\n * to `MatTree`.\n * The nested tree nodes of type `T` are flattened through `MatTreeFlattener`, and converted\n * to type `F` for `MatTree` to consume.\n * @template T, F\n */\nclass MatTreeFlatDataSource extends DataSource {\n    /**\n     * @param {?} _treeControl\n     * @param {?} _treeFlattener\n     * @param {?=} initialData\n     */\n    constructor(_treeControl, _treeFlattener, initialData = []) {\n        super();\n        this._treeControl = _treeControl;\n        this._treeFlattener = _treeFlattener;\n        this._flattenedData = new BehaviorSubject([]);\n        this._expandedData = new BehaviorSubject([]);\n        this._data = new BehaviorSubject(initialData);\n    }\n    /**\n     * @return {?}\n     */\n    get data() { return this._data.value; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set data(value) {\n        this._data.next(value);\n        this._flattenedData.next(this._treeFlattener.flattenNodes(this.data));\n        this._treeControl.dataNodes = this._flattenedData.value;\n    }\n    /**\n     * @param {?} collectionViewer\n     * @return {?}\n     */\n    connect(collectionViewer) {\n        /** @type {?} */\n        const changes = [\n            collectionViewer.viewChange,\n            this._treeControl.expansionModel.changed,\n            this._flattenedData\n        ];\n        return merge(...changes).pipe(map((/**\n         * @return {?}\n         */\n        () => {\n            this._expandedData.next(this._treeFlattener.expandFlattenedNodes(this._flattenedData.value, this._treeControl));\n            return this._expandedData.value;\n        })));\n    }\n    /**\n     * @return {?}\n     */\n    disconnect() {\n        // no op\n    }\n}\nif (false) {\n    /** @type {?} */\n    MatTreeFlatDataSource.prototype._flattenedData;\n    /** @type {?} */\n    MatTreeFlatDataSource.prototype._expandedData;\n    /** @type {?} */\n    MatTreeFlatDataSource.prototype._data;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatTreeFlatDataSource.prototype._treeControl;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatTreeFlatDataSource.prototype._treeFlattener;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/tree/data-source/nested-data-source.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Data source for nested tree.\n *\n * The data source for nested tree doesn't have to consider node flattener, or the way to expand\n * or collapse. The expansion/collapsion will be handled by TreeControl and each non-leaf node.\n * @template T\n */\nclass MatTreeNestedDataSource extends DataSource {\n    constructor() {\n        super(...arguments);\n        this._data = new BehaviorSubject([]);\n    }\n    /**\n     * Data for the nested tree\n     * @return {?}\n     */\n    get data() { return this._data.value; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set data(value) { this._data.next(value); }\n    /**\n     * @param {?} collectionViewer\n     * @return {?}\n     */\n    connect(collectionViewer) {\n        return merge(...[collectionViewer.viewChange, this._data])\n            .pipe(map((/**\n         * @return {?}\n         */\n        () => {\n            return this.data;\n        })));\n    }\n    /**\n     * @return {?}\n     */\n    disconnect() {\n        // no op\n    }\n}\nif (false) {\n    /** @type {?} */\n    MatTreeNestedDataSource.prototype._data;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/tree/public-api.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MatNestedTreeNode, MatTree, MatTreeFlatDataSource, MatTreeFlattener, MatTreeModule, MatTreeNestedDataSource, MatTreeNode, MatTreeNodeDef, MatTreeNodeOutlet, MatTreeNodePadding, MatTreeNodeToggle };\n//# sourceMappingURL=tree.js.map\n","<div>\n  <ng-content></ng-content>\n</div>","<!-- TODO(kara): Revisit why this is a figure.-->\n<figure class=\"mat-figure\">\n  <ng-content></ng-content>\n</figure>","<ng-content select=\"[mat-grid-avatar], [matGridAvatar]\"></ng-content>\n<div class=\"mat-grid-list-text\"><ng-content select=\"[mat-line], [matLine]\"></ng-content></div>\n<ng-content></ng-content>\n","<ng-content></ng-content>\n\n","<ng-content></ng-content>\n\n","<div class=\"mat-list-item-content\">\n  <div class=\"mat-list-item-ripple\" mat-ripple\n       [matRippleTrigger]=\"_getHostElement()\"\n       [matRippleDisabled]=\"_isRippleDisabled()\">\n  </div>\n\n  <ng-content select=\"[mat-list-avatar], [mat-list-icon], [matListAvatar], [matListIcon]\">\n  </ng-content>\n\n  <div class=\"mat-list-text\"><ng-content select=\"[mat-line], [matLine]\"></ng-content></div>\n\n  <ng-content></ng-content>\n</div>\n","<div class=\"mat-list-item-content\"\n  [class.mat-list-item-content-reverse]=\"checkboxPosition == 'after'\">\n\n  <div mat-ripple\n    class=\"mat-list-item-ripple\"\n    [matRippleTrigger]=\"_getHostElement()\"\n    [matRippleDisabled]=\"_isRippleDisabled()\"></div>\n\n  <mat-pseudo-checkbox\n    *ngIf=\"selectionList.multiple\"\n    [state]=\"selected ? 'checked' : 'unchecked'\"\n    [disabled]=\"disabled\"></mat-pseudo-checkbox>\n\n  <div class=\"mat-list-text\" #text><ng-content></ng-content></div>\n\n  <ng-content select=\"[mat-list-avatar], [mat-list-icon], [matListAvatar], [matListIcon]\">\n  </ng-content>\n\n</div>\n","<ng-content></ng-content>","<!--\n  The background div is named as such because it appears below the other divs and is not sized based\n  on values.\n-->\n<svg width=\"100%\" height=\"4\" focusable=\"false\" class=\"mat-progress-bar-background mat-progress-bar-element\">\n  <defs>\n    <pattern [id]=\"progressbarId\" x=\"4\" y=\"0\" width=\"8\" height=\"4\" patternUnits=\"userSpaceOnUse\">\n      <circle cx=\"2\" cy=\"2\" r=\"2\"/>\n    </pattern>\n  </defs>\n  <rect [attr.fill]=\"_rectangleFillValue\" width=\"100%\" height=\"100%\"/>\n</svg>\n<div class=\"mat-progress-bar-buffer mat-progress-bar-element\" [ngStyle]=\"_bufferTransform()\"></div>\n<div class=\"mat-progress-bar-primary mat-progress-bar-fill mat-progress-bar-element\" [ngStyle]=\"_primaryTransform()\" #primaryValueBar></div>\n<div class=\"mat-progress-bar-secondary mat-progress-bar-fill mat-progress-bar-element\"></div>\n","<ng-content></ng-content>","<div class=\"mat-drawer-inner-container\">\r\n  <ng-content></ng-content>\r\n</div>\r\n","<div class=\"mat-drawer-backdrop\" (click)=\"_onBackdropClicked()\" *ngIf=\"hasBackdrop\"\n     [class.mat-drawer-shown]=\"_isShowingBackdrop()\"></div>\n\n<ng-content select=\"mat-drawer\"></ng-content>\n\n<ng-content select=\"mat-drawer-content\">\n</ng-content>\n<mat-drawer-content *ngIf=\"!_content\">\n  <ng-content></ng-content>\n</mat-drawer-content>\n","<ng-content></ng-content>","<div class=\"mat-drawer-inner-container\">\r\n  <ng-content></ng-content>\r\n</div>\r\n","<div class=\"mat-drawer-backdrop\" (click)=\"_onBackdropClicked()\" *ngIf=\"hasBackdrop\"\n     [class.mat-drawer-shown]=\"_isShowingBackdrop()\"></div>\n\n<ng-content select=\"mat-sidenav\"></ng-content>\n\n<ng-content select=\"mat-sidenav-content\">\n</ng-content>\n<mat-sidenav-content *ngIf=\"!_content\" cdkScrollable>\n  <ng-content></ng-content>\n</mat-sidenav-content>\n","<label [attr.for]=\"inputId\" class=\"mat-slide-toggle-label\" #label>\n  <div #toggleBar class=\"mat-slide-toggle-bar\"\n       [class.mat-slide-toggle-bar-no-side-margin]=\"!labelContent.textContent || !labelContent.textContent.trim()\">\n\n    <input #input class=\"mat-slide-toggle-input cdk-visually-hidden\" type=\"checkbox\"\n           role=\"switch\"\n           [id]=\"inputId\"\n           [required]=\"required\"\n           [tabIndex]=\"tabIndex\"\n           [checked]=\"checked\"\n           [disabled]=\"disabled\"\n           [attr.name]=\"name\"\n           [attr.aria-checked]=\"checked.toString()\"\n           [attr.aria-label]=\"ariaLabel\"\n           [attr.aria-labelledby]=\"ariaLabelledby\"\n           (change)=\"_onChangeEvent($event)\"\n           (click)=\"_onInputClick($event)\">\n\n    <div class=\"mat-slide-toggle-thumb-container\" #thumbContainer>\n      <div class=\"mat-slide-toggle-thumb\"></div>\n      <div class=\"mat-slide-toggle-ripple mat-focus-indicator\" mat-ripple\n           [matRippleTrigger]=\"label\"\n           [matRippleDisabled]=\"disableRipple || disabled\"\n           [matRippleCentered]=\"true\"\n           [matRippleRadius]=\"20\"\n           [matRippleAnimation]=\"{enterDuration: 150}\">\n\n        <div class=\"mat-ripple-element mat-slide-toggle-persistent-ripple\"></div>\n      </div>\n    </div>\n\n  </div>\n\n  <span class=\"mat-slide-toggle-content\" #labelContent (cdkObserveContent)=\"_onLabelTextChange()\">\n    <!-- Add an invisible span so JAWS can read the label -->\n    <span style=\"display:none\">&nbsp;</span>\n    <ng-content></ng-content>\n  </span>\n</label>\n","<div class=\"mat-slider-wrapper\" #sliderWrapper>\n  <div class=\"mat-slider-track-wrapper\">\n    <div class=\"mat-slider-track-background\" [ngStyle]=\"_trackBackgroundStyles\"></div>\n    <div class=\"mat-slider-track-fill\" [ngStyle]=\"_trackFillStyles\"></div>\n  </div>\n  <div class=\"mat-slider-ticks-container\" [ngStyle]=\"_ticksContainerStyles\">\n    <div class=\"mat-slider-ticks\" [ngStyle]=\"_ticksStyles\"></div>\n  </div>\n  <div class=\"mat-slider-thumb-container\" [ngStyle]=\"_thumbContainerStyles\">\n    <div class=\"mat-slider-focus-ring\"></div>\n    <div class=\"mat-slider-thumb\"></div>\n    <div class=\"mat-slider-thumb-label\">\n      <span class=\"mat-slider-thumb-label-text\">{{displayValue}}</span>\n    </div>\n  </div>\n</div>\n","<ng-template><ng-content></ng-content></ng-template>\n","<div class=\"mat-horizontal-stepper-header-container\">\n  <ng-container *ngFor=\"let step of steps; let i = index; let isLast = last\">\n    <mat-step-header class=\"mat-horizontal-stepper-header\"\n                     (click)=\"step.select()\"\n                     (keydown)=\"_onKeydown($event)\"\n                     [tabIndex]=\"_getFocusIndex() === i ? 0 : -1\"\n                     [id]=\"_getStepLabelId(i)\"\n                     [attr.aria-posinset]=\"i + 1\"\n                     [attr.aria-setsize]=\"steps.length\"\n                     [attr.aria-controls]=\"_getStepContentId(i)\"\n                     [attr.aria-selected]=\"selectedIndex == i\"\n                     [attr.aria-label]=\"step.ariaLabel || null\"\n                     [attr.aria-labelledby]=\"(!step.ariaLabel && step.ariaLabelledby) ? step.ariaLabelledby : null\"\n                     [index]=\"i\"\n                     [state]=\"_getIndicatorType(i, step.state)\"\n                     [label]=\"step.stepLabel || step.label\"\n                     [selected]=\"selectedIndex === i\"\n                     [active]=\"step.completed || selectedIndex === i || !linear\"\n                     [optional]=\"step.optional\"\n                     [errorMessage]=\"step.errorMessage\"\n                     [iconOverrides]=\"_iconOverrides\"\n                     [disableRipple]=\"disableRipple\">\n    </mat-step-header>\n    <div *ngIf=\"!isLast\" class=\"mat-stepper-horizontal-line\"></div>\n  </ng-container>\n</div>\n\n<div class=\"mat-horizontal-content-container\">\n  <div *ngFor=\"let step of steps; let i = index\"\n       [attr.tabindex]=\"selectedIndex === i ? 0 : null\"\n       class=\"mat-horizontal-stepper-content\" role=\"tabpanel\"\n       [@stepTransition]=\"_getAnimationDirection(i)\"\n       (@stepTransition.done)=\"_animationDone.next($event)\"\n       [id]=\"_getStepContentId(i)\"\n       [attr.aria-labelledby]=\"_getStepLabelId(i)\"\n       [attr.aria-expanded]=\"selectedIndex === i\">\n    <ng-container [ngTemplateOutlet]=\"step.content\"></ng-container>\n  </div>\n</div>\n","<div class=\"mat-step\" *ngFor=\"let step of steps; let i = index; let isLast = last\">\n  <mat-step-header class=\"mat-vertical-stepper-header\"\n                   (click)=\"step.select()\"\n                   (keydown)=\"_onKeydown($event)\"\n                   [tabIndex]=\"_getFocusIndex() == i ? 0 : -1\"\n                   [id]=\"_getStepLabelId(i)\"\n                   [attr.aria-posinset]=\"i + 1\"\n                   [attr.aria-setsize]=\"steps.length\"\n                   [attr.aria-controls]=\"_getStepContentId(i)\"\n                   [attr.aria-selected]=\"selectedIndex === i\"\n                   [attr.aria-label]=\"step.ariaLabel || null\"\n                   [attr.aria-labelledby]=\"(!step.ariaLabel && step.ariaLabelledby) ? step.ariaLabelledby : null\"\n                   [index]=\"i\"\n                   [state]=\"_getIndicatorType(i, step.state)\"\n                   [label]=\"step.stepLabel || step.label\"\n                   [selected]=\"selectedIndex === i\"\n                   [active]=\"step.completed || selectedIndex === i || !linear\"\n                   [optional]=\"step.optional\"\n                   [errorMessage]=\"step.errorMessage\"\n                   [iconOverrides]=\"_iconOverrides\"\n                   [disableRipple]=\"disableRipple\">\n  </mat-step-header>\n\n  <div class=\"mat-vertical-content-container\" [class.mat-stepper-vertical-line]=\"!isLast\">\n    <div class=\"mat-vertical-stepper-content\" role=\"tabpanel\"\n         [attr.tabindex]=\"selectedIndex === i ? 0 : null\"\n         [@stepTransition]=\"_getAnimationDirection(i)\"\n         (@stepTransition.done)=\"_animationDone.next($event)\"\n         [id]=\"_getStepContentId(i)\"\n         [attr.aria-labelledby]=\"_getStepLabelId(i)\"\n         [attr.aria-expanded]=\"selectedIndex === i\">\n      <div class=\"mat-vertical-content\">\n        <ng-container [ngTemplateOutlet]=\"step.content\"></ng-container>\n      </div>\n    </div>\n  </div>\n</div>\n","<div class=\"mat-step-header-ripple\" matRipple\n     [matRippleTrigger]=\"_getHostElement()\"\n     [matRippleDisabled]=\"disableRipple\"></div>\n\n<div class=\"mat-step-icon-state-{{state}} mat-step-icon\" [class.mat-step-icon-selected]=\"selected\">\n  <div class=\"mat-step-icon-content\" [ngSwitch]=\"!!(iconOverrides && iconOverrides[state])\">\n    <ng-container\n      *ngSwitchCase=\"true\"\n      [ngTemplateOutlet]=\"iconOverrides[state]\"\n      [ngTemplateOutletContext]=\"_getIconContext()\"></ng-container>\n    <ng-container *ngSwitchDefault [ngSwitch]=\"state\">\n      <span *ngSwitchCase=\"'number'\">{{_getDefaultTextForState(state)}}</span>\n      <mat-icon *ngSwitchDefault>{{_getDefaultTextForState(state)}}</mat-icon>\n    </ng-container>\n  </div>\n</div>\n<div class=\"mat-step-label\"\n     [class.mat-step-label-active]=\"active\"\n     [class.mat-step-label-selected]=\"selected\"\n     [class.mat-step-label-error]=\"state == 'error'\">\n  <!-- If there is a label template, use it. -->\n  <ng-container *ngIf=\"_templateLabel()\" [ngTemplateOutlet]=\"_templateLabel()!.template\">\n  </ng-container>\n  <!-- If there is no label template, fall back to the text label. -->\n  <div class=\"mat-step-text-label\" *ngIf=\"_stringLabel()\">{{label}}</div>\n\n  <div class=\"mat-step-optional\" *ngIf=\"optional && state != 'error'\">{{_intl.optionalLabel}}</div>\n  <div class=\"mat-step-sub-label-error\" *ngIf=\"state == 'error'\">{{errorMessage}}</div>\n</div>\n\n","<ng-content></ng-content>\n<ng-content select=\"mat-toolbar-row\"></ng-content>\n","<ng-container matTreeNodeOutlet></ng-container>","<kt-notice [svg]=\"'assets/media/svg/icons/Tools/Compass.svg'\">\r\n\tFor more info please check the components's official demos & documentation\r\n\t<a class=\"font-weight-bold\" href=\"https://material.angular.io/components/button-toggle/overview\" target=\"_blank\">demos & documentation</a>\r\n</kt-notice>\r\n\r\n<div class=\"row\">\r\n\t<div class=\"col-xl-6\">\r\n\t\t<kt-code-preview [viewItem]=\"exampleBasic\">\r\n\t\t\t<div class=\"example-preview\">\r\n\t\t\t\t<span>\r\n\t\t\t\t\t<code>&lt;mat-button-toggle&gt;</code> are on/off toggles with the appearance of a button. These toggles can be configured to behave as either radio-buttons or checkboxes. While they can be standalone, they are typically part of a\r\n\t\t\t\t\t<mark>mat-button-toggle-group</mark>.\r\n\t\t\t\t</span>\r\n\t\t\t\t<div class=\"separator separator-dashed my-6\"></div>\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<mat-button-toggle>Toggle me!</mat-button-toggle>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</kt-code-preview>\r\n\t\t<kt-code-preview [viewItem]=\"exampleVertical\">\r\n\t\t\t<div class=\"example-preview\">\r\n\t\t\t\t<span>\r\n\t\t\t\t\tThe button-toggles can be rendered in a vertical orientation by adding the\r\n\t\t\t\t\t<mark>vertical</mark> attribute.\r\n\t\t\t\t</span>\r\n\t\t\t\t<div class=\"separator separator-dashed my-6\"></div>\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<mat-button-toggle vertical=\"true\">Toggle me!</mat-button-toggle>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</kt-code-preview>\r\n\t</div>\r\n\t<div class=\"col-xl-6\">\r\n\t\t<kt-code-preview [viewItem]=\"exampleList\">\r\n\t\t\t<div class=\"example-preview\">\r\n\t\t\t\t<span>\r\n\t\t\t\t\tDividers can be added to lists as a means of separating content into distinct sections. Inset dividers can also be added to provide the appearance of distinct elements in a list without cluttering content like avatar images or icons. Make sure to avoid adding an inset divider to the last element in a list, because it will overlap with the section divider.\r\n\t\t\t\t</span>\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<mat-button-toggle-group #group=\"matButtonToggleGroup\">\r\n\t\t\t\t\t\t<mat-button-toggle value=\"left\">\r\n\t\t\t\t\t\t\t<mat-icon>format_align_left</mat-icon>\r\n\t\t\t\t\t\t</mat-button-toggle>\r\n\t\t\t\t\t\t<mat-button-toggle value=\"center\">\r\n\t\t\t\t\t\t\t<mat-icon>format_align_center</mat-icon>\r\n\t\t\t\t\t\t</mat-button-toggle>\r\n\t\t\t\t\t\t<mat-button-toggle value=\"right\">\r\n\t\t\t\t\t\t\t<mat-icon>format_align_right</mat-icon>\r\n\t\t\t\t\t\t</mat-button-toggle>\r\n\t\t\t\t\t\t<mat-button-toggle value=\"justify\" disabled>\r\n\t\t\t\t\t\t\t<mat-icon>format_align_justify</mat-icon>\r\n\t\t\t\t\t\t</mat-button-toggle>\r\n\t\t\t\t\t</mat-button-toggle-group>\r\n\t\t\t\t\t<div class=\"example-selected-value\">Selected value: {{group.value}}</div>\r\n\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</kt-code-preview>\r\n\t</div>\r\n</div>\r\n","import { Component, OnInit, ChangeDetectionStrategy } from '@angular/core';\r\n\r\nconst basic = {\r\n\tbeforeCodeTitle: 'Basic button-toggles',\r\n\thtmlCode: `<mat-button-toggle>Toggle me!</mat-button-toggle>`,\r\n\ttsCode: `\r\nimport {Component} from '@angular/core';\\n\\n\r\n/**\r\n* @title Basic button-toggles\r\n*/\r\n@Component({\r\n  selector: 'button-toggle-overview-example',\r\n  templateUrl: 'button-toggle-overview-example.html',\r\n  styleUrls: ['button-toggle-overview-example.css'],\r\n})\r\nexport class ButtonToggleOverviewExample {}`,\r\n\tcssCode: ``,\r\n\tviewCode: ``,\r\n\tisCodeVisible: false,\r\n\tisExampleExpanded: true\r\n};\r\n\r\nconst vertical = {\r\n\tbeforeCodeTitle: 'Vertical button toggle',\r\n\thtmlCode: `<mat-button-toggle [vertical]=\"true\">Toggle me!</mat-button-toggle>`,\r\n\ttsCode: `\r\nimport {Component} from '@angular/core';\\n\\n\r\n/**\r\n* @title  Vertical button-toggles\r\n*/\r\n@Component({\r\n  selector: 'button-toggle-vertical-example',\r\n  templateUrl: 'button-toggle-vertical-example.html',\r\n  styleUrls: ['button-toggle-vertical-example.css'],\r\n})\r\nexport class ButtonToggleVerticalExample {}`,\r\n\tcssCode: ``,\r\n\tviewCode: ``,\r\n\tisCodeVisible: false,\r\n\tisExampleExpanded: true\r\n};\r\n\r\nconst listExample = {\r\n\tbeforeCodeTitle: 'Exclusive selection',\r\n\thtmlCode: `\r\n<mat-button-toggle-group #group=\"matButtonToggleGroup\">\r\n  <mat-button-toggle value=\"left\">\r\n    <mat-icon>format_align_left</mat-icon>\r\n  </mat-button-toggle>\r\n  <mat-button-toggle value=\"center\">\r\n    <mat-icon>format_align_center</mat-icon>\r\n  </mat-button-toggle>\r\n  <mat-button-toggle value=\"right\">\r\n    <mat-icon>format_align_right</mat-icon>\r\n  </mat-button-toggle>\r\n  <mat-button-toggle value=\"justify\" disabled>\r\n    <mat-icon>format_align_justify</mat-icon>\r\n  </mat-button-toggle>\r\n</mat-button-toggle-group>\r\n<div class=\"example-selected-value\">Selected value: {{group.value}}</div>`,\r\n\ttsCode: `\r\nimport {Component} from '@angular/core';\\n\\n\r\n/**\r\n* @title Exclusive selection\r\n*/\r\n@Component({\r\n  selector: 'button-toggle-exclusive-example',\r\n  templateUrl: 'button-toggle-exclusive-example.html',\r\n  styleUrls: ['button-toggle-exclusive-example.css'],\r\n})\r\nexport class ButtonToggleExclusiveExample {}`,\r\n\tcssCode: ``,\r\n\tviewCode: ``,\r\n\tisCodeVisible: false,\r\n\tisExampleExpanded: true\r\n};\r\n\r\n@Component({\r\n\tselector: 'kt-button-toggle',\r\n\ttemplateUrl: './button-toggle.component.html',\r\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\r\n\tstyles: [`\r\n\t.example-selected-value {\r\n\t\tmargin: 15px 0;\r\n\t  }\r\n\t`]\r\n})\r\nexport class ButtonToggleComponent implements OnInit {\r\n\r\n\texampleBasic;\r\n\texampleVertical;\r\n\texampleList;\r\n\r\n\tngOnInit() {\r\n\t\tthis.exampleBasic = basic;\r\n\t\tthis.exampleVertical = vertical;\r\n\t\tthis.exampleList = listExample;\r\n\t}\r\n}\r\n","<kt-notice [svg]=\"'assets/media/svg/icons/Tools/Compass.svg'\">\r\n\tFor more info please check the components's official demos & documentation\r\n\t<a class=\"font-weight-bold\" href=\"https://material.angular.io/components/button/overview\" target=\"_blank\">demos & documentation</a>\r\n</kt-notice>\r\n\r\n<div class=\"row\">\r\n\t<div class=\"col-xl-6\">\r\n\t\t<kt-code-preview [viewItem]=\"exampleBasic\">\r\n\t\t\t<div class=\"example-preview\">\r\n\t\t\t\t<p>\r\n\t\t\t\t\tAngular Material buttons are native\r\n\t\t\t\t\t<code>&lt;button&gt;</code> or\r\n\t\t\t\t\t<code>&lt;a&gt;</code> elements enhanced with Material Design styling and ink ripples.\r\n\t\t\t\t</p>\r\n\t\t\t\t<p>\r\n\t\t\t\t\t\tNative\r\n\t\t\t\t\t\t<code>&lt;button&gt;</code> and\r\n\t\t\t\t\t\t<code>&lt;a&gt;</code> elements are always used in order to provide the most straightforward and accessible experience for users. A\r\n\t\t\t\t\t\t<code>&lt;button&gt;</code> element should be used whenever some action is performed. An\r\n\t\t\t\t\t\t<code>&lt;a&gt;</code> element should be used whenever the user will navigate to another view.\r\n\t\t\t\t\t</p>\r\n\t\t\t\t<div class=\"separator separator-dashed my-6\"></div>\r\n\t\t\t\t<div class=\"example-container\">\r\n\t\t\t\t\t<div class=\"button-row\">\r\n\t\t\t\t\t\t<button mat-button>Basic</button>&nbsp;\r\n\t\t\t\t\t\t<button mat-button color=\"primary\">Primary</button>&nbsp;\r\n\t\t\t\t\t\t<button mat-button color=\"accent\">Accent</button>&nbsp;\r\n\t\t\t\t\t\t<button mat-button color=\"warn\">Warn</button>&nbsp;\r\n\t\t\t\t\t\t<button mat-button disabled>Disabled</button>&nbsp;\r\n\t\t\t\t\t\t<a mat-button routerLink=\".\">Link</a>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</kt-code-preview>\r\n\r\n\t\t<kt-code-preview [viewItem]=\"exampleRaised\">\r\n\t\t\t<div class=\"example-preview\">\r\n\t\t\t\t<div class=\"example-container\">\r\n\t\t\t\t\t<div class=\"button-row\">\r\n\t\t\t\t\t\t<button mat-raised-button>Basic</button>&nbsp;\r\n\t\t\t\t\t\t<button mat-raised-button color=\"primary\">Primary</button>&nbsp;\r\n\t\t\t\t\t\t<button mat-raised-button color=\"accent\">Accent</button>&nbsp;\r\n\t\t\t\t\t\t<button mat-raised-button color=\"warn\">Warn</button>&nbsp;\r\n\t\t\t\t\t\t<button mat-raised-button disabled>Disabled</button>&nbsp;\r\n\t\t\t\t\t\t<a mat-raised-button routerLink=\".\">Link</a>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</kt-code-preview>\r\n\r\n\t\t<kt-code-preview [viewItem]=\"exampleIcon\">\r\n\t\t\t<div class=\"example-preview\">\r\n\t\t\t\t<div class=\"example-container\">\r\n\t\t\t\t\t<div class=\"button-row\">\r\n\t\t\t\t\t\t<button mat-icon-button>\r\n\t\t\t\t\t\t\t<mat-icon aria-label=\"Example icon-button with a heart icon\">favorite</mat-icon>\r\n\t\t\t\t\t\t</button>&nbsp;\r\n\t\t\t\t\t\t<button mat-icon-button color=\"primary\">\r\n\t\t\t\t\t\t\t<mat-icon aria-label=\"Example icon-button with a heart icon\">favorite</mat-icon>\r\n\t\t\t\t\t\t</button>&nbsp;\r\n\t\t\t\t\t\t<button mat-icon-button color=\"accent\">\r\n\t\t\t\t\t\t\t<mat-icon aria-label=\"Example icon-button with a heart icon\">favorite</mat-icon>\r\n\t\t\t\t\t\t</button>&nbsp;\r\n\t\t\t\t\t\t<button mat-icon-button color=\"warn\">\r\n\t\t\t\t\t\t\t<mat-icon aria-label=\"Example icon-button with a heart icon\">favorite</mat-icon>\r\n\t\t\t\t\t\t</button>&nbsp;\r\n\t\t\t\t\t\t<button mat-icon-button disabled>\r\n\t\t\t\t\t\t\t<mat-icon aria-label=\"Example icon-button with a heart icon\">favorite</mat-icon>\r\n\t\t\t\t\t\t</button>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</kt-code-preview>\r\n\t</div>\r\n\t<div class=\"col-xl-6\">\r\n\t\t<kt-code-preview [viewItem]=\"exmapleFab\">\r\n\t\t\t<div class=\"example-preview\">\r\n\t\t\t\t<div class=\"example-container\">\r\n\t\t\t\t\t<div class=\"button-row\">\r\n\t\t\t\t\t\t<button mat-fab>Basic</button>&nbsp;\r\n\t\t\t\t\t\t<button mat-fab color=\"primary\">Primary</button>&nbsp;\r\n\t\t\t\t\t\t<button mat-fab color=\"accent\">Accent</button>&nbsp;\r\n\t\t\t\t\t\t<button mat-fab color=\"warn\">Warn</button>&nbsp;\r\n\t\t\t\t\t\t<button mat-fab disabled>Disabled</button>&nbsp;\r\n\t\t\t\t\t\t<button mat-fab>\r\n\t\t\t\t\t\t\t<mat-icon aria-label=\"Example icon-button with a heart icon\">favorite</mat-icon>\r\n\t\t\t\t\t\t</button>&nbsp;\r\n\t\t\t\t\t\t<a mat-fab routerLink=\".\">Link</a>\r\n\t\t\t\t\t</div>\r\n\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</kt-code-preview>\r\n\r\n\t\t<kt-code-preview [viewItem]=\"exampleMiniFav\">\r\n\t\t\t<div class=\"example-preview\">\r\n\t\t\t\t<div class=\"example-container\">\r\n\t\t\t\t\t<div class=\"button-row\">\r\n\t\t\t\t\t\t<button mat-mini-fab>Basic</button>&nbsp;\r\n\t\t\t\t\t\t<button mat-mini-fab color=\"primary\">Primary</button>&nbsp;\r\n\t\t\t\t\t\t<button mat-mini-fab color=\"accent\">Accent</button>&nbsp;\r\n\t\t\t\t\t\t<button mat-mini-fab color=\"warn\">Warn</button>&nbsp;\r\n\t\t\t\t\t\t<button mat-mini-fab disabled>Disabled</button>&nbsp;\r\n\t\t\t\t\t\t<button mat-mini-fab>\r\n\t\t\t\t\t\t\t<mat-icon aria-label=\"Example icon-button with a heart icon\">favorite</mat-icon>\r\n\t\t\t\t\t\t</button>&nbsp;\r\n\t\t\t\t\t\t<a mat-mini-fab routerLink=\".\">Link</a>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</kt-code-preview>\r\n\t</div>\r\n</div>\r\n","import { Component, OnInit, ChangeDetectionStrategy } from '@angular/core';\r\n\r\nconst basic = {\r\n\tbeforeCodeTitle: 'Basic buttons',\r\n\thtmlCode: `\r\n<div class=\"button-row\">\r\n  <button mat-button>Basic</button>\r\n  <button mat-button color=\"primary\">Primary</button>\r\n  <button mat-button color=\"accent\">Accent</button>\r\n  <button mat-button color=\"warn\">Warn</button>\r\n  <button mat-button disabled>Disabled</button>\r\n  <a mat-button routerLink=\".\">Link</a>\r\n</div>`,\r\n\ttsCode: `\r\nimport {Component} from '@angular/core';\\n\\n\r\n/**\r\n* @title Button varieties\r\n*/\r\n@Component({\r\n  selector: 'button-types-example',\r\n  templateUrl: 'button-types-example.html',\r\n  styleUrls: ['button-types-example.css'],\r\n})\r\nexport class ButtonTypesExample {}`,\r\n\tcssCode: `\r\n.example-button-row {\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: space-around;\r\n}`,\r\n\tviewCode: ``,\r\n\tisCodeVisible: false\r\n};\r\n\r\nconst raised = {\r\n\tbeforeCodeTitle: 'Raised buttons',\r\n\thtmlCode: `\r\n<div class=\"button-row\">\r\n  <button mat-raised-button>Basic</button>\r\n  <button mat-raised-button color=\"primary\">Primary</button>\r\n  <button mat-raised-button color=\"accent\">Accent</button>\r\n  <button mat-raised-button color=\"warn\">Warn</button>\r\n  <button mat-raised-button disabled>Disabled</button>\r\n  <a mat-raised-button routerLink=\".\">Link</a>\r\n</div>`,\r\n\ttsCode: `\r\nimport {Component} from '@angular/core';\\n\\n\r\n/**\r\n* @title Button varieties\r\n*/\r\n@Component({\r\n  selector: 'button-types-example',\r\n  templateUrl: 'button-types-example.html',\r\n  styleUrls: ['button-types-example.css'],\r\n})\r\nexport class ButtonTypesExample {}`,\r\n\tcssCode: `\r\n.example-button-row {\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: space-around;\r\n}`,\r\n\tviewCode: ``,\r\n\tisCodeVisible: false\r\n};\r\n\r\nconst icon = {\r\n\t\tbeforeCodeTitle: 'Icon buttons',\r\n\t\thtmlCode: `\r\n<div class=\"button-row\">\r\n  <button mat-icon-button>\r\n    <mat-icon aria-label=\"Example icon-button with a heart icon\">favorite</mat-icon>\r\n  </button>\r\n  <button mat-icon-button color=\"primary\">\r\n    <mat-icon aria-label=\"Example icon-button with a heart icon\">favorite</mat-icon>\r\n  </button>\r\n  <button mat-icon-button color=\"accent\">\r\n    <mat-icon aria-label=\"Example icon-button with a heart icon\">favorite</mat-icon>\r\n  </button>\r\n  <button mat-icon-button color=\"warn\">\r\n    <mat-icon aria-label=\"Example icon-button with a heart icon\">favorite</mat-icon>\r\n  </button>\r\n  <button mat-icon-button disabled>\r\n    <mat-icon aria-label=\"Example icon-button with a heart icon\">favorite</mat-icon>\r\n  </button>\r\n  </div>`,\r\n\t\ttsCode: `\r\nimport {Component} from '@angular/core';\\n\\n\r\n/**\r\n* @title Button varieties\r\n*/\r\n@Component({\r\n  selector: 'button-types-example',\r\n  templateUrl: 'button-types-example.html',\r\n  styleUrls: ['button-types-example.css'],\r\n})\r\nexport class ButtonTypesExample {}\\n\\n`,\r\n\t\tcssCode: `\r\n.example-button-row {\r\n  display: flex;\r\n  align-items: center;\r\n justify-content: space-around;\r\n}`,\r\n\t\tviewCode: ``,\r\n\t\tisCodeVisible: false\r\n\t};\r\n\r\nconst fab = {\r\n\tbeforeCodeTitle: 'Fab buttons',\r\n\thtmlCode: `\r\n<div class=\"button-row\">\r\n  <button mat-fab>Basic</button>\r\n  <button mat-fab color=\"primary\">Primary</button>\r\n  <button mat-fab color=\"accent\">Accent</button>\r\n  <button mat-fab color=\"warn\">Warn</button>\r\n  <button mat-fab disabled>Disabled</button>\r\n  <button mat-fab>\r\n    <mat-icon aria-label=\"Example icon-button with a heart icon\">favorite</mat-icon>\r\n  </button>\r\n  <a mat-fab routerLink=\".\">Link</a>\r\n</div>`,\r\n\ttsCode: `\r\nimport {Component} from '@angular/core';\\n\\n\r\n/**\r\n* @title Button varieties\r\n*/\r\n@Component({\r\n  selector: 'button-types-example',\r\n  templateUrl: 'button-types-example.html',\r\n  styleUrls: ['button-types-example.css'],\r\n})\r\nexport class ButtonTypesExample {}`,\r\n\tcssCode: `\r\n.example-button-row {\r\n  display: flex;\r\n  align-items: center;\r\n justify-content: space-around;\r\n}`,\r\n\tviewCode: ``,\r\n\tisCodeVisible: false\r\n};\r\n\r\nconst miniFab = {\r\n\tbeforeCodeTitle: 'Mini Fab buttons',\r\n\thtmlCode: `\r\n<div class=\"button-row\">\r\n  <button mat-mini-fab>Basic</button>\r\n  <button mat-mini-fab color=\"primary\">Primary</button>\r\n  <button mat-mini-fab color=\"accent\">Accent</button>\r\n  <button mat-mini-fab color=\"warn\">Warn</button>\r\n  <button mat-mini-fab disabled>Disabled</button>\r\n  <button mat-mini-fab>\r\n    <mat-icon aria-label=\"Example icon-button with a heart icon\">favorite</mat-icon>\r\n  </button>\r\n  <a mat-mini-fab routerLink=\".\">Link</a>\r\n</div>`,\r\n\ttsCode: `\r\nimport {Component} from '@angular/core';\\n\\n\r\n/**\r\n* @title Button varieties\r\n*/\r\n@Component({\r\n  selector: 'button-types-example',\r\n  templateUrl: 'button-types-example.html',\r\n  styleUrls: ['button-types-example.css'],\r\n})\r\nexport class ButtonTypesExample {}`,\r\n\tcssCode: `\r\n.example-button-row {\r\n  display: flex;\r\n  align-items: center;\r\n justify-content: space-around;\r\n}`,\r\n\tviewCode: ``,\r\n\tisCodeVisible: false\r\n};\r\n\r\n@Component({\r\n\tselector: 'kt-button',\r\n\ttemplateUrl: './button.component.html',\r\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\r\n\tstyles: [`\r\n\t.example-button-row {\r\n\t\tdisplay: flex;\r\n\t\talign-items: center;\r\n\t\tjustify-content: space-around;\r\n\t  }\r\n\t`]\r\n})\r\nexport class ButtonComponent implements OnInit {\r\n\r\n\texampleBasic;\r\n\texampleRaised;\r\n\texampleIcon;\r\n\texmapleFab;\r\n\texampleMiniFav;\r\n\r\n\tngOnInit() {\r\n\t\tthis.exampleBasic = basic;\r\n\t\tthis.exampleRaised = raised;\r\n\t\tthis.exampleIcon = icon;\r\n\t\tthis.exmapleFab = fab;\r\n\t\tthis.exampleMiniFav = miniFab;\r\n\t}\r\n}\r\n","<kt-notice [svg]=\"'assets/media/svg/icons/Tools/Compass.svg'\">\r\n\tFor more info please check the components's official demos & documentation\r\n\t<a class=\"font-weight-bold\" href=\"https://material.angular.io/components/chips/overview\" target=\"_blank\">demos & documentation</a>\r\n</kt-notice>\r\n\r\n<div class=\"row\">\r\n\t<div class=\"col-xl-6\">\r\n\t\t<kt-code-preview [viewItem]=\"exampleBasic\">\r\n\t\t\t<div class=\"example-preview\">\r\n\t\t\t\t<span>\r\n\t\t\t\t\t<code>&lt;mat-chip-list&gt;</code> displays a list of values as individual, keyboard accessible, chips.\r\n\t\t\t\t</span>\r\n\t\t\t\t<div class=\"separator separator-dashed my-6\"></div>\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<mat-chip-list>\r\n\t\t\t\t\t\t<mat-chip>One fish</mat-chip>\r\n\t\t\t\t\t\t<mat-chip>Two fish</mat-chip>\r\n\t\t\t\t\t\t<mat-chip color=\"primary\" selected=\"true\">Primary fish</mat-chip>\r\n\t\t\t\t\t\t<mat-chip color=\"accent\" selected=\"true\">Accent fish</mat-chip>\r\n\t\t\t\t\t</mat-chip-list>\r\n\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</kt-code-preview>\r\n\t\t<kt-code-preview [viewItem]=\"exampleInput\">\r\n\t\t\t<div class=\"example-preview\">\r\n\t\t\t\t<p>\r\n\t\t\t\t\tThe\r\n\t\t\t\t\t<mark>MatChipInput</mark> directive can be used together with a chip-list to streamline the interaction between the two components. This directive adds chip-specific behaviors to the input element within\r\n\t\t\t\t\t<code>&lt;mat-form-field&gt;</code> for adding and removing chips. The\r\n\t\t\t\t\t<code>&lt;input&gt;</code> with\r\n\t\t\t\t\t<mark>MatChipInput</mark> can be placed inside or outside the chip-list element.\r\n\t\t\t\t</p>\r\n\t\t\t\t<p>\r\n\t\t\t\t\tAn example of chip input placed inside the chip-list element.\r\n\t\t\t\t</p>\r\n\t\t\t\t<div class=\"separator separator-dashed my-6\"></div>\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<mat-form-field class=\"demo-chip-list\">\r\n\t\t\t\t\t\t<mat-chip-list #chipList>\r\n\t\t\t\t\t\t\t<mat-chip *ngFor=\"let fruit of fruits\" [selectable]=\"selectable\" [removable]=\"removable\" (removed)=\"remove(fruit)\">\r\n\t\t\t\t\t\t\t\t{{fruit.name}}\r\n\t\t\t\t\t\t\t\t<mat-icon matChipRemove *ngIf=\"removable\">cancel</mat-icon>\r\n\t\t\t\t\t\t\t</mat-chip>\r\n\t\t\t\t\t\t\t<input placeholder=\"New fruit...\" [matChipInputFor]=\"chipList\" [matChipInputSeparatorKeyCodes]=\"separatorKeysCodes\" [matChipInputAddOnBlur]=\"addOnBlur\" (matChipInputTokenEnd)=\"add($event)\" />\r\n\t\t\t\t\t\t</mat-chip-list>\r\n\t\t\t\t\t</mat-form-field>\r\n\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</kt-code-preview>\r\n\t</div>\r\n\t<div class=\"col-xl-6\">\r\n\t\t<kt-code-preview [viewItem]=\"exampleStacked\">\r\n\t\t\t<div class=\"example-preview\">\r\n\t\t\t\t<div>\r\n\t\t\t\t\t\t<mat-chip-list class=\"mat-chip-list-stacked\">\r\n\t\t\t\t\t\t\t\t<mat-chip *ngFor=\"let chip of availableColors\" selected=\"true\" [color]=\"chip.color\">\r\n\t\t\t\t\t\t\t\t  {{chip.name}}\r\n\t\t\t\t\t\t\t\t</mat-chip>\r\n\t\t\t\t\t\t\t  </mat-chip-list>\r\n\r\n\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</kt-code-preview>\r\n\t</div>\r\n</div>\r\n","import { Component, OnInit, ChangeDetectionStrategy } from '@angular/core';\r\n\r\nimport { MatChipInputEvent } from '@angular/material/chips';\r\nimport { ENTER, COMMA } from '@angular/cdk/keycodes';\r\n\r\nconst basic = {\r\n\tbeforeCodeTitle: 'Basic chips',\r\n\thtmlCode: `\r\n<mat-chip-list>\r\n  <mat-chip>One fish</mat-chip>\r\n  <mat-chip>Two fish</mat-chip>\r\n  <mat-chip color=\"primary\" selected=\"true\">Primary fish</mat-chip>\r\n  <mat-chip color=\"accent\" selected=\"true\">Accent fish</mat-chip>\r\n</mat-chip-list>`,\r\n\ttsCode: `\r\nimport {Component} from '@angular/core';\\n\\n\r\n/**\r\n* @title Basic chips\r\n*/\r\n@Component({\r\n  selector: 'chips-overview-example',\r\n  templateUrl: 'chips-overview-example.html',\r\n  styleUrls: ['chips-overview-example.css'],\r\n})\r\nexport class ChipsOverviewExample {}`,\r\n\tcssCode: ``,\r\n\tviewCode: ``,\r\n\tisCodeVisible: false,\r\n\tisExampleExpanded: true\r\n};\r\n\r\nconst input = {\r\n\tbeforeCodeTitle: 'Chips with input',\r\n\thtmlCode: `\r\n<mat-form-field class=\"demo-chip-list\">\r\n  <mat-chip-list #chipList>\r\n    <mat-chip *ngFor=\"let fruit of fruits\" [selectable]=\"selectable\"\r\n      [removable]=\"removable\" (remove)=\"remove(fruit)\">\r\n      {{fruit.name}}\r\n      <mat-icon matChipRemove *ngIf=\"removable\">cancel</mat-icon>\r\n    </mat-chip>\r\n    <input placeholder=\"New fruit...\"\r\n      [matChipInputFor]=\"chipList\"\r\n      [matChipInputSeparatorKeyCodes]=\"separatorKeysCodes\"\r\n      [matChipInputAddOnBlur]=\"addOnBlur\"\r\n      (matChipInputTokenEnd)=\"add($event)\" />\r\n  </mat-chip-list>\r\n</mat-form-field>`,\r\n\ttsCode: `\r\nimport {Component} from '@angular/core';\r\nimport {MatChipInputEvent} from '@angular/material';\r\nimport {ENTER, COMMA} from '@angular/cdk/keycodes';\\n\\n\r\n/**\r\n* @title Chips with input\r\n*/\r\n@Component({\r\n  selector: 'chips-input-example',\r\n  templateUrl: 'chips-input-example.html',\r\n  styleUrls: ['chips-input-example.css']\r\n})\r\nexport class ChipsInputExample {\r\n  visible: boolean = true;\r\n  selectable: boolean = true;\r\n  removable: boolean = true;\r\n  addOnBlur: boolean = true;\\n\\n\r\n  // Enter, comma\r\n  separatorKeysCodes = [ENTER, COMMA];\\n\\n\r\n  fruits = [\r\n    { name: 'Lemon' },\r\n    { name: 'Lime' },\r\n    { name: 'Apple' },\r\n  ];\\n\\n\\n\\\r\n  add(event: MatChipInputEvent): void {\r\n    let input = event.input;\r\n    let value = event.value;\\n\\n\r\n    // Add our fruit\r\n    if ((value || '').trim()) {\r\n      this.fruits.push({ name: value.trim() });\r\n    }\\n\\n\r\n    // Reset the input value\r\n    if (input) {\r\n      input.value = '';\r\n    }\r\n  }\\n\\n\r\n  remove(fruit: any): void {\r\n    let index = this.fruits.indexOf(fruit);\\n\r\n    if (index >= 0) {\r\n      this.fruits.splice(index, 1);\r\n    }\r\n  }\r\n}\r\n`,\r\n\tcssCode: `\r\n.demo-chip-list {\r\n  width: 100%;\r\n}`,\r\n\tviewCode: ``,\r\n\tisCodeVisible: false,\r\n\tisExampleExpanded: true\r\n};\r\n\r\nconst stacked = {\r\n\tbeforeCodeTitle: 'Stacked chips',\r\n\thtmlCode: `\r\n<<mat-chip-list class=\"mat-chip-list-stacked\">\r\n  <mat-chip *ngFor=\"let chip of availableColors\" selected=\"true\" [color]=\"chip.color\">\r\n    {{chip.name}}\r\n  </mat-chip>\r\n</mat-chip-list>`,\r\n\ttsCode: `\r\nimport {Component} from '@angular/core';\\n\\n\r\n/**\r\n* @title Stacked chips\r\n*/\r\n@Component({\r\n  selector: 'chips-stacked-example',\r\n  templateUrl: 'chips-stacked-example.html',\r\n  styleUrls: ['chips-stacked-example.css'],\r\n})\r\nexport class ChipsStackedExample {\r\n  color: string;\\n\\n\r\n  availableColors = [\r\n    { name: 'none', color: '' },\r\n    { name: 'Primary', color: 'primary' },\r\n    { name: 'Accent', color: 'accent' },\r\n    { name: 'Warn', color: 'warn' }\r\n  ];\r\n}\r\n`,\r\n\tcssCode: `\r\n\t\tmat-chip {\r\n\t\t\tmax-width: 200px;\r\n\t\t}`,\r\n\tviewCode: ``,\r\n\tisCodeVisible: false,\r\n\tisExampleExpanded: true\r\n};\r\n\r\n@Component({\r\n\tselector: 'kt-chips',\r\n\ttemplateUrl: './chips.component.html',\r\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\r\n\tstyles: [`\r\n\t.demo-chip-list {\r\n\t\twidth: 100%;\r\n\t}\r\n\tmat-chip {\r\n\t\tmax-width: 200px;\r\n\t}\r\n\t`]\r\n})\r\nexport class ChipsComponent implements OnInit {\r\n\texampleBasic;\r\n\texampleInput;\r\n\texampleStacked;\r\n\r\n\tvisible = true;\r\n\tselectable = true;\r\n\tremovable = true;\r\n\taddOnBlur = true;\r\n\r\n\t// Enter, comma\r\n\tseparatorKeysCodes = [ENTER, COMMA];\r\n\r\n\tfruits = [\r\n\t\t{ name: 'Lemon' },\r\n\t\t{ name: 'Lime' },\r\n\t\t{ name: 'Apple' },\r\n\t];\r\n\r\n\tcolor: string;\r\n\r\n\tavailableColors = [\r\n\t  { name: 'none', color: '' },\r\n\t  { name: 'Primary', color: 'primary' },\r\n\t  { name: 'Accent', color: 'accent' },\r\n\t  { name: 'Warn', color: 'warn' }\r\n\t];\r\n\r\n\tngOnInit() {\r\n\t\tthis.exampleBasic = basic;\r\n\t\tthis.exampleInput = input;\r\n\t\tthis.exampleStacked = stacked;\r\n\t}\r\n\r\n\tadd(event: MatChipInputEvent): void {\r\n\t\tconst inputText = event.input;\r\n\t\tconst value = event.value;\r\n\r\n\t\t// Add our fruit\r\n\t\tif ((value || '').trim()) {\r\n\t\t\tthis.fruits.push({ name: value.trim() });\r\n\t\t}\r\n\r\n\t\t// Reset the input value\r\n\t\tif (inputText) {\r\n\t\t\tinputText.value = '';\r\n\t\t}\r\n\t}\r\n\r\n\tremove(fruit: any): void {\r\n\t\tconst index = this.fruits.indexOf(fruit);\r\n\r\n\t\tif (index >= 0) {\r\n\t\t\tthis.fruits.splice(index, 1);\r\n\t\t}\r\n\t}\r\n}\r\n","<kt-notice [svg]=\"'assets/media/svg/icons/Tools/Compass.svg'\">\r\n\tFor more info please check the components's official demos & documentation\r\n\t<a class=\"font-weight-bold\" href=\"https://material.angular.io/components/icon/overview\" target=\"_blank\">demos & documentation</a>\r\n</kt-notice>\r\n\r\n<div class=\"row\">\r\n\t<div class=\"col-xl-6\">\r\n\t\t<kt-code-preview [viewItem]=\"exampleBasic\">\r\n\t\t\t<div class=\"example-preview\">\r\n\t\t\t\t<p>\r\n\t\t\t\t\t<code>&lt;mat-icon&gt;</code> makes it easier to use vector-based icons in your app. This directive supports both icon fonts and SVG icons, but not bitmap-based formats (png, jpg, etc.).\r\n\t\t\t\t</p>\r\n\t\t\t\t<p>\r\n\t\t\t\t\t<b>Registering icons:</b>\r\n\t\t\t\t\t<mark>MatIconRegistry</mark> is an injectable service that allows you to associate icon names with SVG URLs and define aliases for CSS font classes. Its methods are discussed below and listed in the API summary.\r\n\t\t\t\t</p>\r\n\t\t\t\t<p>\r\n\t\t\t\t\t<b> Font icons with ligatures:</b> Some fonts are designed to show icons by using\r\n\t\t\t\t\t<a href=\"https://en.wikipedia.org/wiki/Typographic_ligature\" target=\"_blank\">ligatures</a>, for example by rendering the text \"home\" as a home image. To use a ligature icon, put its text in the content of the\r\n\t\t\t\t\t<mark>mat-icon</mark> component.\r\n\t\t\t\t</p>\r\n\t\t\t\t<p>\r\n\t\t\t\t\tBy default,\r\n\t\t\t\t\t<code>&lt;mat-icon&gt;</code> expects the\r\n\t\t\t\t\t<a href=\"http://google.github.io/material-design-icons/#icon-font-for-the-web\" target=\"_blank\">Material icons font</a>. (You will still need to include the HTML to load the font and its CSS, as described in the link). You can specify a different font by setting the\r\n\t\t\t\t\t<mark>fontSet</mark> input to either the CSS class to apply to use the desired font, or to an alias previously registered with\r\n\t\t\t\t\t<mark>MatIconRegistry.registerFontClassAlias</mark>.\r\n\t\t\t\t</p>\r\n\t\t\t\t<div class=\"separator separator-dashed my-6\"></div>\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<mat-icon>home</mat-icon>\r\n\t\t\t\t\t<mat-icon>queue music</mat-icon>\r\n\t\t\t\t\t<mat-icon>call split</mat-icon>\r\n\t\t\t\t\t<mat-icon>event note</mat-icon>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</kt-code-preview>\r\n\r\n\t</div>\r\n\t<div class=\"col-xl-6\">\r\n\t\t<kt-code-preview [viewItem]=\"exampleSVG\">\r\n\t\t\t<div class=\"example-preview\">\r\n\t\t\t\t<p>\r\n\t\t\t\t\t<code>&lt;mat-icon&gt;</code>\r\n\t\t\t\t\tWhen an <mark>mat-icon</mark> component displays an SVG icon, it does so by directly inlining the SVG content into the page as a child of the component.\r\n\t\t\t\t\t(Rather than using an tag or a div background image). This makes it easier to apply CSS styles to SVG icons. For example, the default color of the SVG content is the CSS\r\n\t\t\t\t\t<a href=\"https://developer.mozilla.org/en-US/docs/Web/CSS/color_value#currentColor_keyword\" target=\"_blank\">currentColor</a> value.\r\n\t\t\t\t\tThis makes SVG icons by default have the same color as surrounding text, and allows you to change the color by setting the \"color\" style on the <mark>mat-icon</mark> element.\r\n\t\t\t\t</p>\r\n\t\t\t\t<p>\r\n\t\t\t\t\t\tIn order to prevent XSS vulnerabilities, any SVG URLs passed to the\r\n\t\t\t\t\t\t<mark>MatIconRegistry</mark> must be marked as trusted resource URLs by using Angular's\r\n\t\t\t\t\t\t<mark>DomSanitizer</mark> service.\r\n\t\t\t\t</p>\r\n\t\t\t\t<div class=\"separator separator-dashed my-6\"></div>\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<mat-icon svgIcon=\"boy\"></mat-icon>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</kt-code-preview>\r\n\t</div>\r\n</div>\r\n","import { Component, OnInit, ChangeDetectionStrategy } from '@angular/core';\r\nimport { DomSanitizer } from '@angular/platform-browser';\r\nimport { MatIconRegistry } from '@angular/material/icon';\r\n\r\nconst basic = {\r\n\tbeforeCodeTitle: 'Basic icons',\r\n\thtmlCode: `\r\n<mat-icon>home</mat-icon>\r\n<mat-icon>queue music</mat-icon>\r\n<mat-icon>call split</mat-icon>\r\n<mat-icon>event note</mat-icon>`,\r\n\ttsCode: `\r\nimport {Component} from '@angular/core';\\n\\n\r\n/**\r\n* @title Basic icons\r\n*/\r\n@Component({\r\n  selector: 'icon-overview-example',\r\n  templateUrl: 'icon-overview-example.html',\r\n  styleUrls: ['icon-overview-example.css']\r\n})\r\nexport class IconOverviewExample {}`,\r\n\tcssCode: ``,\r\n\tviewCode: ``,\r\n\tisCodeVisible: false,\r\n\tisExampleExpanded: true\r\n};\r\n\r\nconst sVG = {\r\n\tbeforeCodeTitle: 'SVG icons',\r\n\thtmlCode: `<mat-icon svgIcon=\"thumbs-up\"></mat-icon>`,\r\n\ttsCode: `\r\nimport {Component} from '@angular/core';\r\nimport {DomSanitizer} from '@angular/platform-browser';\r\nimport {MatIconRegistry} from '@angular/material';\\n\\n\r\n/**\r\n* @title SVG icons\r\n*/\r\n@Component({\r\n  selector: 'icon-svg-example',\r\n  templateUrl: 'icon-svg-example.html',\r\n  styleUrls: ['icon-svg-example.css'],\r\n})\r\nexport class IconSvgExample {\r\n  constructor(iconRegistry: MatIconRegistry, sanitizer: DomSanitizer) {\r\n  iconRegistry.addSvgIcon(\r\n    'thumbs-up',\r\n     sanitizer.bypassSecurityTrustResourceUrl('assets/img/examples/thumbup-icon.svg'));\r\n  }\r\n}\r\n`,\r\n\tcssCode: ``,\r\n\tviewCode: ``,\r\n\tisCodeVisible: false,\r\n\tisExampleExpanded: true\r\n};\r\n\r\n@Component({\r\n\tselector: 'kt-icon',\r\n\ttemplateUrl: './icon.component.html',\r\n\tchangeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class IconComponent implements OnInit {\r\n\texampleBasic;\r\n\texampleSVG;\r\n\tngOnInit() {\r\n\t\tthis.exampleBasic = basic;\r\n\t\tthis.exampleSVG = sVG;\r\n\t}\r\n\tconstructor(iconRegistry: MatIconRegistry, sanitizer: DomSanitizer) {\r\n\t\ticonRegistry.addSvgIcon(\r\n\t\t\t'boy',\r\n\t\t\tsanitizer.bypassSecurityTrustResourceUrl('./assets/media/svg/avatars/001-boy.svg'));\r\n\t}\r\n}\r\n","<kt-notice [svg]=\"'assets/media/svg/icons/Tools/Compass.svg'\">\r\n\tFor more info please check the components's official demos & documentation\r\n\t<a class=\"font-weight-bold\" href=\"https://material.angular.io/components/button/overview\" target=\"_blank\">demos & documentation</a>\r\n</kt-notice>\r\n\r\n<div class=\"row\">\r\n\t<div class=\"col-xl-6\">\r\n\t\t<kt-code-preview [viewItem]=\"exampleDeterminate\">\r\n\t\t\t<div class=\"example-preview\">\r\n\t\t\t\t<p>\r\n\t\t\t\t\t<code>&lt;mat-progress-bar&gt;</code>is a horizontal progress-bar for indicating progress and activity.\r\n\t\t\t\t</p>\r\n\t\t\t\t<p>\r\n\t\t\t\t\t<b>Determinate:</b> Operations where the percentage of the operation complete is known should use the determinate indicator.\r\n\t\t\t\t</p>\r\n\t\t\t\t<div class=\"separator separator-dashed my-6\"></div>\r\n\t\t\t\t<div class=\"example-container\">\r\n\t\t\t\t\t<mat-progress-bar mode=\"determinate\" value=\"40\"></mat-progress-bar>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</kt-code-preview>\r\n\r\n\t\t<kt-code-preview [viewItem]=\"exampleIndeterminate\">\r\n\t\t\t<div class=\"example-preview\">\r\n\t\t\t\t<span>\r\n\t\t\t\t\tOperations where the user is asked to wait while something finishes and it’s not necessary to indicate how long it will take should use the indeterminate indicator.\r\n\t\t\t\t</span>\r\n\t\t\t\t<div class=\"separator separator-dashed my-6\"></div>\r\n\t\t\t\t<div class=\"example-container\">\r\n\t\t\t\t\t<mat-progress-bar mode=\"indeterminate\"></mat-progress-bar>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</kt-code-preview>\r\n\r\n\t\t<kt-code-preview [viewItem]=\"exampleBuffer\">\r\n\t\t\t<div class=\"example-preview\">\r\n\t\t\t\t<span>\r\n\t\t\t\t\tOperations where the user wants to indicate some activity or loading from the server, use the buffer indicator.\r\n\t\t\t\t</span>\r\n\t\t\t\t<div class=\"separator separator-dashed my-6\"></div>\r\n\t\t\t\t<div class=\"example-container\">\r\n\t\t\t\t\t<mat-progress-bar mode=\"buffer\"></mat-progress-bar>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</kt-code-preview>\r\n\t</div>\r\n\t<div class=\"col-xl-6\">\r\n\t\t<kt-code-preview [viewItem]=\"exmapleQuery\">\r\n\t\t\t<div class=\"example-preview\">\r\n\t\t\t\t<span>\r\n\t\t\t\t\tFor situations where the user wants to indicate pre-loading (until the loading can actually be made), use the query indicator.\r\n\t\t\t\t</span>\r\n\t\t\t\t<div class=\"separator separator-dashed my-6\"></div>\r\n\t\t\t\t<div class=\"example-container\">\r\n\t\t\t\t\t<mat-progress-bar mode=\"query\"></mat-progress-bar>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</kt-code-preview>\r\n\r\n\t\t<kt-code-preview [viewItem]=\"exampleConfig\">\r\n\t\t\t<div class=\"example-preview\">\r\n\t\t\t\t<div class=\"example-container\">\r\n\t\t\t\t\t<mat-card>\r\n\t\t\t\t\t\t<mat-card-content>\r\n\t\t\t\t\t\t\t<h2 class=\"example-h2\">Progress bar configuration</h2>\r\n\r\n\t\t\t\t\t\t\t<section class=\"example-section\">\r\n\t\t\t\t\t\t\t\t<label class=\"example-margin\">Color:</label>\r\n\t\t\t\t\t\t\t\t<mat-radio-group [(ngModel)]=\"color\">\r\n\t\t\t\t\t\t\t\t\t<mat-radio-button class=\"example-margin\" value=\"primary\">\r\n\t\t\t\t\t\t\t\t\t\tPrimary\r\n\t\t\t\t\t\t\t\t\t</mat-radio-button>\r\n\t\t\t\t\t\t\t\t\t<mat-radio-button class=\"example-margin\" value=\"accent\">\r\n\t\t\t\t\t\t\t\t\t\tAccent\r\n\t\t\t\t\t\t\t\t\t</mat-radio-button>\r\n\t\t\t\t\t\t\t\t\t<mat-radio-button class=\"example-margin\" value=\"warn\">\r\n\t\t\t\t\t\t\t\t\t\tWarn\r\n\t\t\t\t\t\t\t\t\t</mat-radio-button>\r\n\t\t\t\t\t\t\t\t</mat-radio-group>\r\n\t\t\t\t\t\t\t</section>\r\n\r\n\t\t\t\t\t\t\t<section class=\"example-section\">\r\n\t\t\t\t\t\t\t\t<label class=\"example-margin\">Mode:</label>\r\n\t\t\t\t\t\t\t\t<mat-radio-group [(ngModel)]=\"mode\">\r\n\t\t\t\t\t\t\t\t\t<mat-radio-button class=\"example-margin\" value=\"determinate\">\r\n\t\t\t\t\t\t\t\t\t\tDeterminate\r\n\t\t\t\t\t\t\t\t\t</mat-radio-button>\r\n\t\t\t\t\t\t\t\t\t<mat-radio-button class=\"example-margin\" value=\"indeterminate\">\r\n\t\t\t\t\t\t\t\t\t\tIndeterminate\r\n\t\t\t\t\t\t\t\t\t</mat-radio-button>\r\n\t\t\t\t\t\t\t\t\t<mat-radio-button class=\"example-margin\" value=\"buffer\">\r\n\t\t\t\t\t\t\t\t\t\tBuffer\r\n\t\t\t\t\t\t\t\t\t</mat-radio-button>\r\n\t\t\t\t\t\t\t\t\t<mat-radio-button class=\"example-margin\" value=\"query\">\r\n\t\t\t\t\t\t\t\t\t\tQuery\r\n\t\t\t\t\t\t\t\t\t</mat-radio-button>\r\n\t\t\t\t\t\t\t\t</mat-radio-group>\r\n\t\t\t\t\t\t\t</section>\r\n\r\n\t\t\t\t\t\t\t<section class=\"example-section\" *ngIf=\"mode == 'determinate' || mode == 'buffer'\">\r\n\t\t\t\t\t\t\t\t<label class=\"example-margin\">Progress:</label>\r\n\t\t\t\t\t\t\t\t<mat-slider class=\"example-margin\" [(ngModel)]=\"value\"></mat-slider>\r\n\t\t\t\t\t\t\t</section>\r\n\t\t\t\t\t\t\t<section class=\"example-section\" *ngIf=\"mode == 'buffer'\">\r\n\t\t\t\t\t\t\t\t<label class=\"example-margin\">Buffer:</label>\r\n\t\t\t\t\t\t\t\t<mat-slider class=\"example-margin\" [(ngModel)]=\"bufferValue\"></mat-slider>\r\n\t\t\t\t\t\t\t</section>\r\n\t\t\t\t\t\t</mat-card-content>\r\n\t\t\t\t\t</mat-card>\r\n\r\n\t\t\t\t\t<mat-card>\r\n\t\t\t\t\t\t<mat-card-content>\r\n\t\t\t\t\t\t\t<h2 class=\"example-h2\">Result</h2>\r\n\r\n\t\t\t\t\t\t\t<section class=\"example-section\">\r\n\t\t\t\t\t\t\t\t<mat-progress-bar class=\"example-margin\" [color]=\"color\" [mode]=\"mode\" [value]=\"value\" [bufferValue]=\"bufferValue\">\r\n\t\t\t\t\t\t\t\t</mat-progress-bar>\r\n\t\t\t\t\t\t\t</section>\r\n\t\t\t\t\t\t</mat-card-content>\r\n\t\t\t\t\t</mat-card>\r\n\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</kt-code-preview>\r\n\t</div>\r\n</div>\r\n","import { Component, OnInit, ChangeDetectionStrategy } from '@angular/core';\r\n\r\nconst determinate = {\r\n\tbeforeCodeTitle: 'Determinate progress-bar',\r\n\thtmlCode: `<mat-progress-bar mode=\"determinate\" value=\"40\"></mat-progress-bar>`,\r\n\ttsCode: `\r\nimport {Component} from '@angular/core';\\n\r\n/**\r\n* @title Determinate progress-bar\r\n*/\r\n@Component({\r\n  selector: 'progress-bar-determinate-example',\r\n  templateUrl: 'progress-bar-determinate-example.html',\r\n  styleUrls: ['progress-bar-determinate-example.css'],\r\n})\r\nexport class ProgressBarDeterminateExample {}\\n\\n`,\r\n\tcssCode: ``,\r\n\tviewCode: ``,\r\n\tisCodeVisible: false\r\n};\r\n\r\nconst indeterminate = {\r\n\tbeforeCodeTitle: 'Indeterminate progress-bar',\r\n\thtmlCode: `<mat-progress-bar mode=\"indeterminate\"></mat-progress-bar>`,\r\n\ttsCode: `\r\nimport {Component} from '@angular/core';\\n\r\n/**\r\n* @title Indeterminate progress-bar\r\n*/\r\n@Component({\r\n  selector: 'progress-bar-indeterminate-example',\r\n  templateUrl: 'progress-bar-indeterminate-example.html',\r\n  styleUrls: ['progress-bar-indeterminate-example.css'],\r\n})\r\nexport class ProgressBarIndeterminateExample {}`,\r\n\tcssCode: ``,\r\n\tviewCode: ``,\r\n\tisCodeVisible: false\r\n};\r\n\r\nconst buffer = {\r\n\tbeforeCodeTitle: 'Buffer progress-bar',\r\n\thtmlCode: `<mat-progress-bar mode=\"buffer\"></mat-progress-bar>`,\r\n\ttsCode: `\r\nimport {Component} from '@angular/core';\\n\\n\r\n/**\r\n* @title Buffer progress-bar\r\n*/\r\n@Component({\r\n  selector: 'progress-bar-buffer-example',\r\n  templateUrl: 'progress-bar-buffer-example.html',\r\n  styleUrls: ['progress-bar-buffer-example.css'],\r\n})\r\nexport class ProgressBarBufferExample {}`,\r\n\tcssCode: ``,\r\n\tviewCode: ``,\r\n\tisCodeVisible: false\r\n};\r\n\r\nconst query = {\r\n\tbeforeCodeTitle: 'Query progress-bar',\r\n\thtmlCode: `<mat-progress-bar mode=\"query\"></mat-progress-bar>`,\r\n\ttsCode: `\r\nimport {Component} from '@angular/core';\\n\r\n/**\r\n* @title Query progress-bar\r\n*/\r\n@Component({\r\n  selector: 'progress-bar-query-example',\r\n  templateUrl: 'progress-bar-query-example.html',\r\n  styleUrls: ['progress-bar-query-example.css'],\r\n})\r\nexport class ProgressBarQueryExample {}`,\r\n\tcssCode: ``,\r\n\tviewCode: ``,\r\n\tisCodeVisible: false\r\n};\r\n\r\nconst config = {\r\n\tbeforeCodeTitle: 'Configurable progress-bar',\r\n\thtmlCode: `\r\n<mat-card>\r\n  <mat-card-content>\r\n    <h2 class=\"example-h2\">Progress bar configuration</h2>\r\n    <section class=\"example-section\">\r\n      <label class=\"example-margin\">Color:</label>\r\n      <mat-radio-group [(ngModel)]=\"color\">\r\n        <mat-radio-button class=\"example-margin\" value=\"primary\">\r\n          Primary\r\n        </mat-radio-button>\r\n        <mat-radio-button class=\"example-margin\" value=\"accent\">\r\n          Accent\r\n        </mat-radio-button>\r\n        <mat-radio-button class=\"example-margin\" value=\"warn\">\r\n          Warn\r\n        </mat-radio-button>\r\n      </mat-radio-group>\r\n    </section>\r\n\t<section class=\"example-section\">\r\n      <label class=\"example-margin\">Mode:</label>\r\n      <mat-radio-group [(ngModel)]=\"mode\">\r\n        <mat-radio-button class=\"example-margin\" value=\"determinate\">\r\n          Determinate\r\n        </mat-radio-button>\r\n        <mat-radio-button class=\"example-margin\" value=\"indeterminate\">\r\n          Indeterminate\r\n        </mat-radio-button>\r\n        <mat-radio-button class=\"example-margin\" value=\"buffer\">\r\n          Buffer\r\n        </mat-radio-button>\r\n        <mat-radio-button class=\"example-margin\" value=\"query\">\r\n          Query\r\n        </mat-radio-button>\r\n      </mat-radio-group>\r\n    </section>\r\n    <section class=\"example-section\" *ngIf=\"mode == 'determinate' || mode == 'buffer'\">\r\n      <label class=\"example-margin\">Progress:</label>\r\n      <mat-slider class=\"example-margin\" [(ngModel)]=\"value\"></mat-slider>\r\n    </section>\r\n    <section class=\"example-section\" *ngIf=\"mode == 'buffer'\">\r\n      <label class=\"example-margin\">Buffer:</label>\r\n      <mat-slider class=\"example-margin\" [(ngModel)]=\"bufferValue\"></mat-slider>\r\n    </section>\r\n  </mat-card-content>\r\n</mat-card>\r\n<mat-card>\r\n  <mat-card-content>\r\n    <h2 class=\"example-h2\">Result</h2>\r\n    <section class=\"example-section\">\r\n     <mat-progress-bar\r\n        class=\"example-margin\"\r\n        [color]=\"color\"\r\n        [mode]=\"mode\"\r\n        [value]=\"value\"\r\n        [bufferValue]=\"bufferValue\">\r\n      </mat-progress-bar>\r\n    </section>\r\n  </mat-card-content>\r\n</mat-card>`,\r\n\ttsCode: `\r\nimport {Component} from '@angular/core';\\n\r\n/**\r\n* @title Configurable progress-bar\r\n*/\r\n@Component({\r\n  selector: 'progress-bar-configurable-example',\r\n  templateUrl: 'progress-bar-configurable-example.html',\r\n  styleUrls: ['progress-bar-configurable-example.css'],\r\n})\r\nexport class ProgressBarConfigurableExample {\r\n  color = 'primary';\r\n  mode = 'determinate';\r\n  value = 50;\r\n  bufferValue = 75;\r\n}`,\r\n\tcssCode: `\r\n.example-h2 {\r\n  margin: 10px;\r\n}\r\n.example-section {\r\n  display: flex;\r\n  align-content: center;\r\n  align-items: center;\r\n  height: 60px;\r\n}\r\n.example-margin {\r\n  margin: 0 10px;\r\n}`,\r\n\tviewCode: ``,\r\n\tisCodeVisible: false\r\n};\r\n\r\n@Component({\r\n\tselector: 'kt-progress-bar',\r\n\ttemplateUrl: './progress-bar.component.html',\r\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\r\n\tstyles: [`\r\n\t.example-h2 {\r\n\t\tmargin: 10px;\r\n\t}\r\n\t.example-section {\r\n\t\tdisplay: flex;\r\n\t\talign-content: center;\r\n\t\talign-items: center;\r\n\t\theight: 60px;\r\n\t}\r\n\r\n\t.example-margin {\r\n\t\tmargin: 0 10px;\r\n\t}`]\r\n})\r\nexport class ProgressBarComponent implements OnInit {\r\n\r\n\texampleDeterminate;\r\n\texampleIndeterminate;\r\n\texampleBuffer;\r\n\texmapleQuery;\r\n\texampleConfig;\r\n\tcolor = 'primary';\r\n\tmode = 'determinate';\r\n\tvalue = 50;\r\n\tbufferValue = 75;\r\n\r\n\tngOnInit() {\r\n\t\tthis.exampleDeterminate = determinate;\r\n\t\tthis.exampleIndeterminate = indeterminate;\r\n\t\tthis.exampleBuffer = buffer;\r\n\t\tthis.exmapleQuery = query;\r\n\t\tthis.exampleConfig = config;\r\n\t}\r\n}\r\n","<kt-notice [svg]=\"'assets/media/svg/icons/Tools/Compass.svg'\">\r\n\tFor more info please check the components's official demos & documentation\r\n\t<a class=\"font-weight-bold\" href=\"https://material.angular.io/components/progress-spinner/overview\" target=\"_blank\">demos & documentation</a>\r\n</kt-notice>\r\n\r\n<div class=\"row\">\r\n\t<div class=\"col-xl-6\">\r\n\t\t<kt-code-preview [viewItem]=\"exampleBasic\">\r\n\t\t\t<div class=\"example-preview\">\r\n\t\t\t\t<span>\r\n\t\t\t\t\t<code>&lt;mat-progress-spinner&gt;</code> and\r\n\t\t\t\t\t<code>&lt;mat-spinner&gt;</code> are a circular indicators of progress and activity.\r\n\t\t\t\t</span>\r\n\t\t\t\t<div class=\"separator separator-dashed my-6\"></div>\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<mat-spinner></mat-spinner>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</kt-code-preview>\r\n\t\t<kt-code-preview [viewItem]=\"exampleWarn\">\r\n\t\t\t<div class=\"example-preview\">\r\n\t\t\t\t<span>\r\n\t\t\t\t\tThe color of a progress-spinner can be changed by using the\r\n\t\t\t\t\t<mark>color</mark> property. By default, progress-spinners use the theme's primary color. This can be changed to\r\n\t\t\t\t\t<mark>'accent'</mark> or\r\n\t\t\t\t\t<mark>'warn'</mark>.\r\n\t\t\t\t</span>\r\n\t\t\t\t<div class=\"separator separator-dashed my-6\"></div>\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<mat-spinner [color]=\"'accent'\"></mat-spinner>\r\n\t\t\t\t\t<div class=\"separator separator-dashed my-6\"></div>\r\n\t\t\t\t\t<mat-spinner [color]=\"'warn'\"></mat-spinner>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</kt-code-preview>\r\n\t</div>\r\n\t<div class=\"col-xl-6\">\r\n\t\t<kt-code-preview [viewItem]=\"exampleConfig\">\r\n\t\t\t<div class=\"example-preview\">\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<mat-card>\r\n\t\t\t\t\t\t<mat-card-content>\r\n\t\t\t\t\t\t\t<section class=\"example-section\">\r\n\t\t\t\t\t\t\t\t<label class=\"example-margin\">Color:</label>\r\n\t\t\t\t\t\t\t\t<mat-radio-group [(ngModel)]=\"color\">\r\n\t\t\t\t\t\t\t\t\t<mat-radio-button class=\"example-margin\" value=\"primary\">\r\n\t\t\t\t\t\t\t\t\t\tPrimary\r\n\t\t\t\t\t\t\t\t\t</mat-radio-button>\r\n\t\t\t\t\t\t\t\t\t<mat-radio-button class=\"example-margin\" value=\"accent\">\r\n\t\t\t\t\t\t\t\t\t\tAccent\r\n\t\t\t\t\t\t\t\t\t</mat-radio-button>\r\n\t\t\t\t\t\t\t\t\t<mat-radio-button class=\"example-margin\" value=\"warn\">\r\n\t\t\t\t\t\t\t\t\t\tWarn\r\n\t\t\t\t\t\t\t\t\t</mat-radio-button>\r\n\t\t\t\t\t\t\t\t</mat-radio-group>\r\n\t\t\t\t\t\t\t</section>\r\n\r\n\t\t\t\t\t\t\t<section class=\"example-section\">\r\n\t\t\t\t\t\t\t\t<label class=\"example-margin\">Mode:</label>\r\n\t\t\t\t\t\t\t\t<mat-radio-group [(ngModel)]=\"mode\">\r\n\t\t\t\t\t\t\t\t\t<mat-radio-button class=\"example-margin\" value=\"determinate\">\r\n\t\t\t\t\t\t\t\t\t\tDeterminate\r\n\t\t\t\t\t\t\t\t\t</mat-radio-button>\r\n\t\t\t\t\t\t\t\t\t<mat-radio-button class=\"example-margin\" value=\"indeterminate\">\r\n\t\t\t\t\t\t\t\t\t\tIndeterminate\r\n\t\t\t\t\t\t\t\t\t</mat-radio-button>\r\n\t\t\t\t\t\t\t\t</mat-radio-group>\r\n\t\t\t\t\t\t\t</section>\r\n\r\n\t\t\t\t\t\t\t<section class=\"example-section\" *ngIf=\"mode == 'determinate'\">\r\n\t\t\t\t\t\t\t\t<label class=\"example-margin\">Progress:</label>\r\n\t\t\t\t\t\t\t\t<mat-slider class=\"example-margin\" [(ngModel)]=\"value\"></mat-slider>\r\n\t\t\t\t\t\t\t</section>\r\n\t\t\t\t\t\t</mat-card-content>\r\n\t\t\t\t\t</mat-card>\r\n\t\t\t\t\t<mat-card>\r\n\t\t\t\t\t\t<mat-card-content>\r\n\t\t\t\t\t\t\t<h2 class=\"example-h2\">Result</h2>\r\n\r\n\t\t\t\t\t\t\t<mat-progress-spinner class=\"example-margin\" [color]=\"color\" [mode]=\"mode\" [value]=\"value\">\r\n\t\t\t\t\t\t\t</mat-progress-spinner>\r\n\t\t\t\t\t\t</mat-card-content>\r\n\t\t\t\t\t</mat-card>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</kt-code-preview>\r\n\t</div>\r\n</div>\r\n","import { Component, OnInit, ChangeDetectionStrategy } from '@angular/core';\r\n\r\nconst basic = {\r\n\tbeforeCodeTitle: 'Basic progressbar-spinner',\r\n\thtmlCode: `<mat-spinner></mat-spinner>`,\r\n\ttsCode: `import {Component} from '@angular/core';\\n\\n\r\n/**\r\n* @title Basic progress-spinner\r\n*/\r\n@Component({\r\n  selector: 'progress-spinner-overview-example',\r\n  templateUrl: 'progress-spinner-overview-example.html',\r\n  styleUrls: ['progress-spinner-overview-example.css'],\r\n})\r\nexport class ProgressSpinnerOverviewExample {}`,\r\n\tcssCode: ``,\r\n\tviewCode: ``,\r\n\tisCodeVisible: false,\r\n\tisExampleExpanded: true\r\n};\r\n\r\nconst config = {\r\n\tbeforeCodeTitle: 'Configurable progress spinner',\r\n\thtmlCode: `\r\n<mat-card>\r\n  <mat-card-content>\r\n    <h2 class=\"example-h2\">Progress spinner configuration</h2>\r\n    <section class=\"example-section\">\r\n      <label class=\"example-margin\">Color:</label>\r\n      <mat-radio-group [(ngModel)]=\"color\">\r\n        <mat-radio-button class=\"example-margin\" value=\"primary\">\r\n          Primary\r\n        </mat-radio-button>\r\n        <mat-radio-button class=\"example-margin\" value=\"accent\">\r\n          Accent\r\n        </mat-radio-button>\r\n        <mat-radio-button class=\"example-margin\" value=\"warn\">\r\n          Warn\r\n        </mat-radio-button>\r\n      </mat-radio-group>\r\n    </section>\r\n    <section class=\"example-section\">\r\n      <label class=\"example-margin\">Mode:</label>\r\n      <mat-radio-group [(ngModel)]=\"mode\">\r\n\t    <mat-radio-button class=\"example-margin\" value=\"determinate\">\r\n          Determinate\r\n        </mat-radio-button>\r\n        <mat-radio-button class=\"example-margin\" value=\"indeterminate\">\r\n          Indeterminate\r\n        </mat-radio-button>\r\n      </mat-radio-group>\r\n    </section>\r\n    <section class=\"example-section\" *ngIf=\"mode == 'determinate'\">\r\n      <label class=\"example-margin\">Progress:</label>\r\n        <mat-slider class=\"example-margin\" [(ngModel)]=\"value\"></mat-slider>\r\n    </section>\r\n  </mat-card-content>\r\n</mat-card>\r\n<mat-card>\r\n  <mat-card-content>\r\n    <h2 class=\"example-h2\">Result</h2>\r\n    <mat-progress-spinner\r\n     class=\"example-margin\"\r\n     [color]=\"color\"\r\n     [mode]=\"mode\"\r\n     [value]=\"value\">\r\n    </mat-progress-spinner>\r\n  </mat-card-content>\r\n</mat-card>`,\r\n\ttsCode: `\r\nimport {Component} from '@angular/core';\\n\\n\r\n/**\r\n* @title Configurable progress spinner\r\n*/\r\n@Component({\r\n  selector: 'progress-spinner-configurable-example',\r\n  templateUrl: 'progress-spinner-configurable-example.html',\r\n  styleUrls: ['progress-spinner-configurable-example.css'],\r\n})\r\nexport class ProgressSpinnerConfigurableExample {\r\n  color = 'primary';\r\n  mode = 'determinate';\r\n  value = 50;\r\n}`,\r\n\tcssCode: `\r\n.example-h2 {\r\n  margin: 10px;\r\n}\r\n.example-section {\r\n  display: flex;\r\n  align-content: center;\r\n  align-items: center;\r\n  height: 60px;\r\n}\r\n.example-margin {\r\n  margin: 0 10px;\r\n}`,\r\n\tviewCode: ``,\r\n\tisCodeVisible: false,\r\n\tisExampleExpanded: true\r\n};\r\n\r\nconst warn = {\r\n\tbeforeCodeTitle: 'Colorized progressbar-spinner',\r\n\thtmlCode: `\r\n<mat-spinner [color]=\"'accent'\"></mat-spinner>\r\n<mat-spinner [color]=\"'warn'\"></mat-spinner>\\n`,\r\n\ttsCode: `\r\nimport {Component} from '@angular/core';\\n\r\n/**\r\n* @title Colorized progress-spinner\r\n*/\r\n@Component({\r\n  selector: 'progress-spinner-colorized-example',\r\n  templateUrl: 'progress-spinner-colorized-example.html',\r\n  styleUrls: ['progress-spinner-colorized-example.css'],\r\n})\r\nexport class ProgressSpinnerColorizedExample {}`,\r\n\tcssCode: ``,\r\n\tviewCode: ``,\r\n\tisCodeVisible: false,\r\n\tisExampleExpanded: true\r\n};\r\n\r\n@Component({\r\n\tselector: 'kt-progress-spinner',\r\n\ttemplateUrl: './progress-spinner.component.html',\r\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\r\n\tstyles: [`\r\n\t.example-h2 {\r\n\t\tmargin: 10px;\r\n\t  }\r\n\t  .example-section {\r\n\t\tdisplay: flex;\r\n\t\talign-content: center;\r\n\t\talign-items: center;\r\n\t\theight: 60px;\r\n\t  }\r\n\t  .example-margin {\r\n\t\tmargin: 0 10px;\r\n\t  }\r\n\t`]\r\n})\r\nexport class ProgressSpinnerComponent implements OnInit {\r\n\r\n\texampleBasic;\r\n\texampleWarn;\r\n\texampleConfig;\r\n\r\n\tcolor = 'primary';\r\n\tmode = 'determinate';\r\n\tvalue = 50;\r\n\r\n\tngOnInit() {\r\n\t\tthis.exampleBasic = basic;\r\n\t\tthis.exampleWarn = warn;\r\n\t\tthis.exampleConfig = config;\r\n\t}\r\n}\r\n\r\n","<kt-notice [svg]=\"'assets/media/svg/icons/Tools/Compass.svg'\">\r\n\tFor more info please check the components's official demos & documentation\r\n\t<a class=\"font-weight-bold\" href=\"https://material.angular.io/components/ripple/examples\" target=\"_blank\">demos &\r\n\t\tdocumentation</a>\r\n</kt-notice>\r\n\r\n<div class=\"row\">\r\n\t<div class=\"col-xl-12\">\r\n\t\t<kt-code-preview [viewItem]=\"exampleBasic\">\r\n\t\t\t<div class=\"example-preview\">\r\n\t\t\t\t<p>\r\n\t\t\t\t\tConnect user input to screen reactions by using ripples to both indicate the point of touch, and to\r\n\t\t\t\t\tconfirm that touch input was received. For touch or mouse, this occurs at the point of contact.\r\n\t\t\t\t</p>\r\n\t\t\t\t<p>\r\n\t\t\t\t\tThe <code>&lt;mat-icon&gt;</code> attribute directive defines an area in which a ripple animates on\r\n\t\t\t\t\tuser interaction.\r\n\t\t\t\t</p>\r\n\t\t\t\t<div class=\"separator separator-dashed my-6\"></div>\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<mat-checkbox [(ngModel)]=\"centered\" class=\"example-ripple-checkbox\">Centered</mat-checkbox>\r\n\t\t\t\t\t<mat-checkbox [(ngModel)]=\"disabled\" class=\"example-ripple-checkbox\">Disabled</mat-checkbox>\r\n\t\t\t\t\t<mat-checkbox [(ngModel)]=\"unbounded\" class=\"example-ripple-checkbox\">Unbounded</mat-checkbox>\r\n\r\n\t\t\t\t\t<mat-form-field class=\"example-ripple-form-field\">\r\n\t\t\t\t\t\t<input matInput [(ngModel)]=\"radius\" type=\"number\" placeholder=\"Radius\">\r\n\t\t\t\t\t</mat-form-field>\r\n\t\t\t\t\t<mat-form-field class=\"example-ripple-form-field\">\r\n\t\t\t\t\t\t<input matInput [(ngModel)]=\"color\" type=\"text\" placeholder=\"Color\">\r\n\t\t\t\t\t</mat-form-field>\r\n\r\n\r\n\t\t\t\t\t<div class=\"example-ripple-container mat-elevation-z4\" matRipple [matRippleCentered]=\"centered\"\r\n\t\t\t\t\t\t[matRippleDisabled]=\"disabled\" [matRippleUnbounded]=\"unbounded\" [matRippleRadius]=\"radius\"\r\n\t\t\t\t\t\t[matRippleColor]=\"color\">\r\n\t\t\t\t\t\tClick me\r\n\t\t\t\t\t</div>\r\n\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</kt-code-preview>\r\n\r\n\t</div>\r\n</div>\r\n","import { Component, OnInit, ChangeDetectionStrategy } from '@angular/core';\r\nimport { DomSanitizer } from '@angular/platform-browser';\r\nimport { MatIconRegistry } from '@angular/material/icon';\r\n\r\nconst basic = {\r\n\tbeforeCodeTitle: 'MatRipple basic usage',\r\n\thtmlCode: `\r\n<mat-checkbox [(ngModel)]=\"centered\" class=\"example-ripple-checkbox\">Centered</mat-checkbox>\r\n<mat-checkbox [(ngModel)]=\"disabled\" class=\"example-ripple-checkbox\">Disabled</mat-checkbox>\r\n<mat-checkbox [(ngModel)]=\"unbounded\" class=\"example-ripple-checkbox\">Unbounded</mat-checkbox>\r\n\r\n<mat-form-field class=\"example-ripple-form-field\">\r\n  <input matInput [(ngModel)]=\"radius\" type=\"number\" placeholder=\"Radius\">\r\n</mat-form-field>\r\n<mat-form-field class=\"example-ripple-form-field\">\r\n  <input matInput [(ngModel)]=\"color\" type=\"text\" placeholder=\"Color\">\r\n</mat-form-field>\r\n\r\n<div class=\"example-ripple-container mat-elevation-z4\"\r\n  matRipple\r\n  [matRippleCentered]=\"centered\"\r\n  [matRippleDisabled]=\"disabled\"\r\n  [matRippleUnbounded]=\"unbounded\"\r\n  [matRippleRadius]=\"radius\"\r\n  [matRippleColor]=\"color\">\r\n  Click me\r\n</div>`,\r\n\ttsCode: `\r\nimport {Component} from '@angular/core';\\n\r\n/**\r\n  * @title MatRipple basic usage\r\n*/\r\n@Component({\r\n  selector: 'ripple-overview-example',\r\n  templateUrl: 'ripple-overview-example.html',\r\n  styleUrls: ['ripple-overview-example.css'],\r\n})\r\nexport class RippleOverviewExample {\r\n  centered = false;\r\n  disabled = false;\r\n  unbounded = false;\\n\r\n  radius: number;\r\n  color: string;\r\n}`,\r\n\tcssCode: `\r\n.example-ripple-container {\r\n  cursor: pointer;\r\n  text-align: center;\\n\r\n  width: 300px;\r\n  height: 300px;\r\n  line-height: 300px;\\n\r\n  user-select: none;\r\n  -webkit-user-select: none;\r\n  -moz-user-select: none;\r\n  -ms-user-select: none;\\n\r\n  -webkit-user-drag: none;\r\n  -webkit-tap-highlight-color: transparent;\r\n}\\n\r\n/** Styles to make the demo look better. */\r\n.example-ripple-checkbox {\r\n  margin: 6px 12px 6px 0;\r\n}\r\n\r\n.example-ripple-form-field {\r\n  margin: 0 12px 0 0;\r\n}`,\r\n\tviewCode: ``,\r\n\tisCodeVisible: false,\r\n\tisExampleExpanded: true\r\n};\r\n\r\n@Component({\r\n\tselector: 'kt-ripples',\r\n\ttemplateUrl: './ripples.component.html',\r\n\tchangeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class RipplesComponent implements OnInit {\r\n\texampleBasic;\r\n\r\n\tcentered = false;\r\n  \tdisabled = false;\r\n  \tunbounded = false;\r\n\r\n  \tradius: number;\r\n  \tcolor: string;\r\n\r\n\tngOnInit() {\r\n\t\tthis.exampleBasic = basic;\r\n\t}\r\n\tconstructor(iconRegistry: MatIconRegistry) {\r\n\t}\r\n}\r\n","<kt-notice [svg]=\"'assets/media/svg/icons/Tools/Compass.svg'\">\r\n\tFor more info please check the components's official demos & documentation\r\n\t<a class=\"font-weight-bold\" href=\"https://material.angular.io/components/table/examples\" target=\"_blank\">demos & documentation</a>\r\n</kt-notice>\r\n\r\n\r\n<kt-code-preview [viewItem]=\"exampleBasic\">\r\n\t<div class=\"example-preview\">\r\n\t\t<p>\r\n\t\t\tThe\r\n\t\t\t<mark>mat-table</mark> provides a Material Design styled data-table that can be used to display rows of data.\r\n\t\t</p>\r\n\t\t<p>\r\n\t\t\tThis table builds on the foundation of the CDK data-table and uses a similar interface for its data input and template, except\r\n\t\t\tthat its element and attribute selectors will be prefixed with\r\n\t\t\t<mark>mat-</mark> instead of\r\n\t\t\t<mark>cdk-</mark>. For more information on the interface and a detailed look at how the table is implemented, see the\r\n\t\t\t<a href=\"https://material.angular.io/cdk/table/overview\" target=\"_blank\">guide covering the CDK data-table</a>.\r\n\t\t</p>\r\n\t\t<div class=\"separator separator-dashed my-6\"></div>\r\n\t\t<div>\r\n\t\t\t<div class=\"example-container mat-elevation-z8\">\r\n\t\t\t\t<mat-table #table1 [dataSource]=\"dataSource1\">\r\n\t\t\t\t\t<!--- Note that these columns can be defined in any order.\r\n\t\t\t\t\t\t\t\t\t\tThe actual rendered columns are set as a property on the row definition\" -->\r\n\r\n\t\t\t\t\t<!-- Position Column -->\r\n\t\t\t\t\t<ng-container matColumnDef=\"position\">\r\n\t\t\t\t\t\t<mat-header-cell *matHeaderCellDef> No. </mat-header-cell>\r\n\t\t\t\t\t\t<mat-cell *matCellDef=\"let element\"> {{element.position}} </mat-cell>\r\n\t\t\t\t\t</ng-container>\r\n\r\n\t\t\t\t\t<!-- Name Column -->\r\n\t\t\t\t\t<ng-container matColumnDef=\"name\">\r\n\t\t\t\t\t\t<mat-header-cell *matHeaderCellDef> Name </mat-header-cell>\r\n\t\t\t\t\t\t<mat-cell *matCellDef=\"let element\"> {{element.name}} </mat-cell>\r\n\t\t\t\t\t</ng-container>\r\n\r\n\t\t\t\t\t<!-- Weight Column -->\r\n\t\t\t\t\t<ng-container matColumnDef=\"weight\">\r\n\t\t\t\t\t\t<mat-header-cell *matHeaderCellDef> Weight </mat-header-cell>\r\n\t\t\t\t\t\t<mat-cell *matCellDef=\"let element\"> {{element.weight}} </mat-cell>\r\n\t\t\t\t\t</ng-container>\r\n\r\n\t\t\t\t\t<!-- Symbol Column -->\r\n\t\t\t\t\t<ng-container matColumnDef=\"symbol\">\r\n\t\t\t\t\t\t<mat-header-cell *matHeaderCellDef> Symbol </mat-header-cell>\r\n\t\t\t\t\t\t<mat-cell *matCellDef=\"let element\"> {{element.symbol}} </mat-cell>\r\n\t\t\t\t\t</ng-container>\r\n\r\n\t\t\t\t\t<mat-header-row *matHeaderRowDef=\"displayedColumns1\"></mat-header-row>\r\n\t\t\t\t\t<mat-row *matRowDef=\"let row; columns: displayedColumns1;\"></mat-row>\r\n\t\t\t\t</mat-table>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t</div>\r\n</kt-code-preview>\r\n\r\n<kt-code-preview [viewItem]=\"examplePagination\">\r\n\t<div class=\"example-preview\">\r\n\t\t<div>\r\n\t\t\t<div class=\"example-container mat-elevation-z8\">\r\n\t\t\t\t<mat-table #table2 [dataSource]=\"dataSource2\">\r\n\t\t\t\t\t<!-- Position Column -->\r\n\t\t\t\t\t<ng-container matColumnDef=\"position\">\r\n\t\t\t\t\t\t<mat-header-cell *matHeaderCellDef> No. </mat-header-cell>\r\n\t\t\t\t\t\t<mat-cell *matCellDef=\"let element\"> {{element.position}} </mat-cell>\r\n\t\t\t\t\t</ng-container>\r\n\t\t\t\t\t<!-- Name Column -->\r\n\t\t\t\t\t<ng-container matColumnDef=\"name\">\r\n\t\t\t\t\t\t<mat-header-cell *matHeaderCellDef> Name </mat-header-cell>\r\n\t\t\t\t\t\t<mat-cell *matCellDef=\"let element\"> {{element.name}} </mat-cell>\r\n\t\t\t\t\t</ng-container>\r\n\t\t\t\t\t<!-- Weight Column -->\r\n\t\t\t\t\t<ng-container matColumnDef=\"weight\">\r\n\t\t\t\t\t\t<mat-header-cell *matHeaderCellDef> Weight </mat-header-cell>\r\n\t\t\t\t\t\t<mat-cell *matCellDef=\"let element\"> {{element.weight}} </mat-cell>\r\n\t\t\t\t\t</ng-container>\r\n\t\t\t\t\t<!-- Symbol Column -->\r\n\t\t\t\t\t<ng-container matColumnDef=\"symbol\">\r\n\t\t\t\t\t\t<mat-header-cell *matHeaderCellDef> Symbol </mat-header-cell>\r\n\t\t\t\t\t\t<mat-cell *matCellDef=\"let element\"> {{element.symbol}} </mat-cell>\r\n\t\t\t\t\t</ng-container>\r\n\t\t\t\t\t<mat-header-row *matHeaderRowDef=\"displayedColumns2\"></mat-header-row>\r\n\t\t\t\t\t<mat-row *matRowDef=\"let row; columns: displayedColumns2;\"></mat-row>\r\n\t\t\t\t</mat-table>\r\n\t\t\t\t<mat-paginator #matPaginator2 [pageSize]=\"10\" [pageSizeOptions]=\"[5, 10, 20]\" [showFirstLastButtons]=\"true\">\r\n\t\t\t\t</mat-paginator>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t</div>\r\n</kt-code-preview>\r\n\r\n<kt-code-preview [viewItem]=\"exampleSorting\">\r\n\t<div class=\"example-preview\">\r\n\t\t<div>\r\n\t\t\t<div class=\"example-container mat-elevation-z8\">\r\n\t\t\t\t<mat-table #table3 [dataSource]=\"dataSource3\" #sort3=\"matSort\" matSort>\r\n\t\t\t\t\t<!-- Position Column -->\r\n\t\t\t\t\t<ng-container matColumnDef=\"position\">\r\n\t\t\t\t\t\t<mat-header-cell *matHeaderCellDef mat-sort-header> No. </mat-header-cell>\r\n\t\t\t\t\t\t<mat-cell *matCellDef=\"let element\"> {{element.position}} </mat-cell>\r\n\t\t\t\t\t</ng-container>\r\n\t\t\t\t\t<!-- Name Column -->\r\n\t\t\t\t\t<ng-container matColumnDef=\"name\">\r\n\t\t\t\t\t\t<mat-header-cell *matHeaderCellDef mat-sort-header> Name </mat-header-cell>\r\n\t\t\t\t\t\t<mat-cell *matCellDef=\"let element\"> {{element.name}} </mat-cell>\r\n\t\t\t\t\t</ng-container>\r\n\t\t\t\t\t<!-- Weight Column -->\r\n\t\t\t\t\t<ng-container matColumnDef=\"weight\">\r\n\t\t\t\t\t\t<mat-header-cell *matHeaderCellDef mat-sort-header> Weight </mat-header-cell>\r\n\t\t\t\t\t\t<mat-cell *matCellDef=\"let element\"> {{element.weight}} </mat-cell>\r\n\t\t\t\t\t</ng-container>\r\n\t\t\t\t\t<!-- Symbol Column -->\r\n\t\t\t\t\t<ng-container matColumnDef=\"symbol\">\r\n\t\t\t\t\t\t<mat-header-cell *matHeaderCellDef mat-sort-header> Symbol </mat-header-cell>\r\n\t\t\t\t\t\t<mat-cell *matCellDef=\"let element\"> {{element.symbol}} </mat-cell>\r\n\t\t\t\t\t</ng-container>\r\n\t\t\t\t\t<mat-header-row *matHeaderRowDef=\"displayedColumns3\"></mat-header-row>\r\n\t\t\t\t\t<mat-row *matRowDef=\"let row; columns: displayedColumns3;\"></mat-row>\r\n\t\t\t\t</mat-table>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t</div>\r\n</kt-code-preview>\r\n\r\n<kt-code-preview [viewItem]=\"exampleFiltering\">\r\n\t<div class=\"example-preview\">\r\n\t\t<div>\r\n\t\t\t<div class=\"example-container mat-elevation-z8\">\r\n\t\t\t\t<div class=\"example-header\">\r\n\t\t\t\t\t<mat-form-field class=\"mat-form-field\">\r\n\t\t\t\t\t\t<input matInput (keyup)=\"applyFilter4($event.target.value)\" placeholder=\"Filter\">\r\n\t\t\t\t\t</mat-form-field>\r\n\t\t\t\t</div>\r\n\t\t\t\t<mat-table #table4 [dataSource]=\"dataSource4\">\r\n\t\t\t\t\t<!-- Position Column -->\r\n\t\t\t\t\t<ng-container matColumnDef=\"position\">\r\n\t\t\t\t\t\t<mat-header-cell *matHeaderCellDef> No. </mat-header-cell>\r\n\t\t\t\t\t\t<mat-cell *matCellDef=\"let element\"> {{element.position}} </mat-cell>\r\n\t\t\t\t\t</ng-container>\r\n\t\t\t\t\t<!-- Name Column -->\r\n\t\t\t\t\t<ng-container matColumnDef=\"name\">\r\n\t\t\t\t\t\t<mat-header-cell *matHeaderCellDef> Name </mat-header-cell>\r\n\t\t\t\t\t\t<mat-cell *matCellDef=\"let element\"> {{element.name}} </mat-cell>\r\n\t\t\t\t\t</ng-container>\r\n\t\t\t\t\t<!-- Weight Column -->\r\n\t\t\t\t\t<ng-container matColumnDef=\"weight\">\r\n\t\t\t\t\t\t<mat-header-cell *matHeaderCellDef> Weight </mat-header-cell>\r\n\t\t\t\t\t\t<mat-cell *matCellDef=\"let element\"> {{element.weight}} </mat-cell>\r\n\t\t\t\t\t</ng-container>\r\n\t\t\t\t\t<!-- Symbol Column -->\r\n\t\t\t\t\t<ng-container matColumnDef=\"symbol\">\r\n\t\t\t\t\t\t<mat-header-cell *matHeaderCellDef> Symbol </mat-header-cell>\r\n\t\t\t\t\t\t<mat-cell *matCellDef=\"let element\"> {{element.symbol}} </mat-cell>\r\n\t\t\t\t\t</ng-container>\r\n\t\t\t\t\t<mat-header-row *matHeaderRowDef=\"displayedColumns4\"></mat-header-row>\r\n\t\t\t\t\t<mat-row *matRowDef=\"let row; columns: displayedColumns4;\"></mat-row>\r\n\t\t\t\t</mat-table>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t</div>\r\n</kt-code-preview>\r\n\r\n<kt-code-preview [viewItem]=\"exampleSelection\">\r\n\t<div class=\"example-preview\">\r\n\t\t<div>\r\n\t\t\t<div class=\"example-container mat-elevation-z8\">\r\n\t\t\t\t<mat-table #table5 [dataSource]=\"dataSource5\">\r\n\t\t\t\t\t<!-- Checkbox Column -->\r\n\t\t\t\t\t<ng-container matColumnDef=\"select\">\r\n\t\t\t\t\t\t<mat-header-cell *matHeaderCellDef>\r\n\t\t\t\t\t\t\t<mat-checkbox (change)=\"$event ? masterToggle5() : null\" [checked]=\"selection.hasValue() && isAllSelected5()\" [indeterminate]=\"selection.hasValue() && !isAllSelected5()\">\r\n\t\t\t\t\t\t\t</mat-checkbox>\r\n\t\t\t\t\t\t</mat-header-cell>\r\n\t\t\t\t\t\t<mat-cell *matCellDef=\"let row\">\r\n\t\t\t\t\t\t\t<mat-checkbox (click)=\"$event.stopPropagation()\" (change)=\"$event ? selection.toggle(row) : null\" [checked]=\"selection.isSelected(row)\">\r\n\t\t\t\t\t\t\t</mat-checkbox>\r\n\t\t\t\t\t\t</mat-cell>\r\n\t\t\t\t\t</ng-container>\r\n\t\t\t\t\t<!-- Position Column -->\r\n\t\t\t\t\t<ng-container matColumnDef=\"position\">\r\n\t\t\t\t\t\t<mat-header-cell *matHeaderCellDef> No. </mat-header-cell>\r\n\t\t\t\t\t\t<mat-cell *matCellDef=\"let element\"> {{element.position}} </mat-cell>\r\n\t\t\t\t\t</ng-container>\r\n\t\t\t\t\t<!-- Name Column -->\r\n\t\t\t\t\t<ng-container matColumnDef=\"name\">\r\n\t\t\t\t\t\t<mat-header-cell *matHeaderCellDef> Name </mat-header-cell>\r\n\t\t\t\t\t\t<mat-cell *matCellDef=\"let element\"> {{element.name}} </mat-cell>\r\n\t\t\t\t\t</ng-container>\r\n\t\t\t\t\t<!-- Weight Column -->\r\n\t\t\t\t\t<ng-container matColumnDef=\"weight\">\r\n\t\t\t\t\t\t<mat-header-cell *matHeaderCellDef> Weight </mat-header-cell>\r\n\t\t\t\t\t\t<mat-cell *matCellDef=\"let element\"> {{element.weight}} </mat-cell>\r\n\t\t\t\t\t</ng-container>\r\n\t\t\t\t\t<!-- Symbol Column -->\r\n\t\t\t\t\t<ng-container matColumnDef=\"symbol\">\r\n\t\t\t\t\t\t<mat-header-cell *matHeaderCellDef> Symbol </mat-header-cell>\r\n\t\t\t\t\t\t<mat-cell *matCellDef=\"let element\"> {{element.symbol}} </mat-cell>\r\n\t\t\t\t\t</ng-container>\r\n\t\t\t\t\t<mat-header-row *matHeaderRowDef=\"displayedColumns5\"></mat-header-row>\r\n\t\t\t\t\t<mat-row *matRowDef=\"let row; columns: displayedColumns5;\" (click)=\"selection.toggle(row)\"></mat-row>\r\n\t\t\t\t</mat-table>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t</div>\r\n</kt-code-preview>\r\n\r\n<kt-code-preview [viewItem]=\"exampleHTTP\">\r\n\t<div class=\"example-preview\">\r\n\t\t<div class=\"example-container mat-elevation-z8\">\r\n\t\t\t<div class=\"example-loading-shade\" *ngIf=\"isLoadingResults || isRateLimitReached\">\r\n\t\t\t\t<mat-spinner *ngIf=\"isLoadingResults\"></mat-spinner>\r\n\t\t\t\t<div class=\"example-rate-limit-reached\" *ngIf=\"isRateLimitReached\">\r\n\t\t\t\t\tGitHub's API rate limit has been reached. It will be reset in one minute.\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\r\n\t\t\t<mat-table #sort6=\"matSort\" #table6 [dataSource]=\"dataSource6\" class=\"example-table\" matSort matSortActive=\"created\" matSortDisableClear\r\n\t\t\t matSortDirection=\"asc\">\r\n\t\t\t\t<!--- Note that these columns can be defined in any order.\r\n\t\t                                The actual rendered columns are set as a property on the row definition\" -->\r\n\t\t\t\t<!-- Number Column -->\r\n\t\t\t\t<ng-container matColumnDef=\"number\">\r\n\t\t\t\t\t<mat-header-cell *matHeaderCellDef>#</mat-header-cell>\r\n\t\t\t\t\t<mat-cell *matCellDef=\"let row\">{{ row.number }}</mat-cell>\r\n\t\t\t\t</ng-container>\r\n\t\t\t\t<!-- Title Column -->\r\n\t\t\t\t<ng-container matColumnDef=\"title\">\r\n\t\t\t\t\t<mat-header-cell *matHeaderCellDef>Title</mat-header-cell>\r\n\t\t\t\t\t<mat-cell *matCellDef=\"let row\">{{ row.title }}</mat-cell>\r\n\t\t\t\t</ng-container>\r\n\t\t\t\t<!-- State Column -->\r\n\t\t\t\t<ng-container matColumnDef=\"state\">\r\n\t\t\t\t\t<mat-header-cell *matHeaderCellDef>State</mat-header-cell>\r\n\t\t\t\t\t<mat-cell *matCellDef=\"let row\">{{ row.state }}</mat-cell>\r\n\t\t\t\t</ng-container>\r\n\t\t\t\t<!-- Created Column -->\r\n\t\t\t\t<ng-container matColumnDef=\"created\">\r\n\t\t\t\t\t<mat-header-cell *matHeaderCellDef mat-sort-header disableClear=\"true\">\r\n\t\t\t\t\t\tCreated\r\n\t\t\t\t\t</mat-header-cell>\r\n\t\t\t\t\t<mat-cell *matCellDef=\"let row\">{{ row.created_at | date }}</mat-cell>\r\n\t\t\t\t</ng-container>\r\n\t\t\t\t<mat-header-row *matHeaderRowDef=\"displayedColumns6\"></mat-header-row>\r\n\t\t\t\t<mat-row *matRowDef=\"let row; columns: displayedColumns6;\"></mat-row>\r\n\t\t\t</mat-table>\r\n\t\t\t<mat-paginator #matPaginator6 [length]=\"resultsLength\" [pageSize]=\"30\"></mat-paginator>\r\n\t\t</div>\r\n\t</div>\r\n</kt-code-preview>\r\n\r\n<kt-code-preview [viewItem]=\"exampleMain\">\r\n\t<div class=\"example-preview\">\r\n\t\t<div class=\"example-header\">\r\n\t\t\t<mat-form-field>\r\n\t\t\t\t<input matInput (keyup)=\"applyFilter7($event.target.value)\" placeholder=\"Filter\">\r\n\t\t\t</mat-form-field>\r\n\t\t</div>\r\n\t\t<div class=\"example-container mat-elevation-z8\">\r\n\t\t\t<mat-table #sort7=\"matSort\" [dataSource]=\"dataSource7\" matSort>\r\n\t\t\t\t<!-- ID Column -->\r\n\t\t\t\t<ng-container matColumnDef=\"id\">\r\n\t\t\t\t\t<mat-header-cell *matHeaderCellDef mat-sort-header> ID </mat-header-cell>\r\n\t\t\t\t\t<mat-cell *matCellDef=\"let row\"> {{row.id}} </mat-cell>\r\n\t\t\t\t</ng-container>\r\n\t\t\t\t<!-- Progress Column -->\r\n\t\t\t\t<ng-container matColumnDef=\"progress\">\r\n\t\t\t\t\t<mat-header-cell *matHeaderCellDef mat-sort-header> Progress </mat-header-cell>\r\n\t\t\t\t\t<mat-cell *matCellDef=\"let row\"> {{row.progress}}% </mat-cell>\r\n\t\t\t\t</ng-container>\r\n\t\t\t\t<!-- Name Column -->\r\n\t\t\t\t<ng-container matColumnDef=\"name\">\r\n\t\t\t\t\t<mat-header-cell *matHeaderCellDef mat-sort-header> Name </mat-header-cell>\r\n\t\t\t\t\t<mat-cell *matCellDef=\"let row\"> {{row.name}} </mat-cell>\r\n\t\t\t\t</ng-container>\r\n\t\t\t\t<!-- Color Column -->\r\n\t\t\t\t<ng-container matColumnDef=\"color\">\r\n\t\t\t\t\t<mat-header-cell *matHeaderCellDef mat-sort-header> Color </mat-header-cell>\r\n\t\t\t\t\t<mat-cell *matCellDef=\"let row\" [style.color]=\"row.color\"> {{row.color}} </mat-cell>\r\n\t\t\t\t</ng-container>\r\n\t\t\t\t<mat-header-row *matHeaderRowDef=\"displayedColumns7\"></mat-header-row>\r\n\t\t\t\t<mat-row *matRowDef=\"let row; columns: displayedColumns7;\"></mat-row>\r\n\t\t\t</mat-table>\r\n\t\t\t<mat-paginator #matPaginator7 [pageSizeOptions]=\"[5, 10, 25, 100]\"></mat-paginator>\r\n\t\t</div>\r\n\t</div>\r\n</kt-code-preview>\r\n","import { Component, OnInit, ViewChild, AfterViewInit, ChangeDetectionStrategy } from '@angular/core';\r\nimport { MatPaginator } from '@angular/material/paginator';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { MatSort } from '@angular/material/sort';\r\nimport { SelectionModel } from '@angular/cdk/collections';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport {merge, Observable, of as observableOf} from 'rxjs';\r\nimport {catchError, map, startWith, switchMap} from 'rxjs/operators';\r\n\r\nconst basic = {\r\n\tbeforeCodeTitle: 'Basic table',\r\n\thtmlCode: `\r\n<div class=\"example-container mat-elevation-z8\">\r\n  <mat-table #table [dataSource]=\"dataSource\">\r\n    <!--- Note that these columns can be defined in any order.\r\n\t\t\t\tThe actual rendered columns are set as a property on the row definition\" -->\r\n    <!-- Position Column -->\r\n    <ng-container matColumnDef=\"position\">\r\n      <mat-header-cell *matHeaderCellDef> No. </mat-header-cell>\r\n      <mat-cell *matCellDef=\"let element\"> {{element.position}} </mat-cell>\r\n\t</ng-container>\r\n\t<!-- Name Column -->\r\n    <ng-container matColumnDef=\"name\">\r\n      <mat-header-cell *matHeaderCellDef> Name </mat-header-cell>\r\n      <mat-cell *matCellDef=\"let element\"> {{element.name}} </mat-cell>\r\n    </ng-container>\r\n    <!-- Weight Column -->\r\n    <ng-container matColumnDef=\"weight\">\r\n      <mat-header-cell *matHeaderCellDef> Weight </mat-header-cell>\r\n      <mat-cell *matCellDef=\"let element\"> {{element.weight}} </mat-cell>\r\n    </ng-container>\r\n    <!-- Symbol Column -->\r\n    <ng-container matColumnDef=\"symbol\">\r\n      <mat-header-cell *matHeaderCellDef> Symbol </mat-header-cell>\r\n      <mat-cell *matCellDef=\"let element\"> {{element.symbol}} </mat-cell>\r\n    </ng-container>\r\n    <mat-header-row *matHeaderRowDef=\"displayedColumns\"></mat-header-row>\r\n    <mat-row *matRowDef=\"let row; columns: displayedColumns;\"></mat-row>\r\n  </mat-table>\r\n</div>`,\r\n\ttsCode: `\r\nimport {Component} from '@angular/core';\\n\r\n/**\r\n* @title Basic table\r\n*/\r\n@Component({\r\n  selector: 'table-basic-example',\r\n  styleUrls: ['table-basic-example.css'],\r\n  templateUrl: 'table-basic-example.html',\r\n})\r\nexport class TableBasicExample {\r\n  displayedColumns = ['position', 'name', 'weight', 'symbol'];\r\n  dataSource = ELEMENT_DATA;\r\n}\r\nexport interface Element {\r\n  name: string;\r\n  position: number;\r\n  weight: number;\r\n  symbol: string;\r\n}\r\nconst ELEMENT_DATA: Element[] = [\r\n  {position: 1, name: 'Hydrogen', weight: 1.0079, symbol: 'H'},\r\n  {position: 2, name: 'Helium', weight: 4.0026, symbol: 'He'},\r\n  {position: 3, name: 'Lithium', weight: 6.941, symbol: 'Li'},\r\n  {position: 4, name: 'Beryllium', weight: 9.0122, symbol: 'Be'},\r\n  {position: 5, name: 'Boron', weight: 10.811, symbol: 'B'},\r\n  {position: 6, name: 'Carbon', weight: 12.0107, symbol: 'C'},\r\n  {position: 7, name: 'Nitrogen', weight: 14.0067, symbol: 'N'},\r\n  {position: 8, name: 'Oxygen', weight: 15.9994, symbol: 'O'},\r\n  {position: 9, name: 'Fluorine', weight: 18.9984, symbol: 'F'},\r\n  {position: 10, name: 'Neon', weight: 20.1797, symbol: 'Ne'},\r\n  {position: 11, name: 'Sodium', weight: 22.9897, symbol: 'Na'},\r\n  {position: 12, name: 'Magnesium', weight: 24.305, symbol: 'Mg'},\r\n  {position: 13, name: 'Aluminum', weight: 26.9815, symbol: 'Al'},\r\n  {position: 14, name: 'Silicon', weight: 28.0855, symbol: 'Si'},\r\n  {position: 15, name: 'Phosphorus', weight: 30.9738, symbol: 'P'},\r\n  {position: 16, name: 'Sulfur', weight: 32.065, symbol: 'S'},\r\n  {position: 17, name: 'Chlorine', weight: 35.453, symbol: 'Cl'},\r\n  {position: 18, name: 'Argon', weight: 39.948, symbol: 'Ar'},\r\n  {position: 19, name: 'Potassium', weight: 39.0983, symbol: 'K'},\r\n  {position: 20, name: 'Calcium', weight: 40.078, symbol: 'Ca'},\r\n];`,\r\n\tcssCode: `\r\n.example-container {\r\n  display: flex;\r\n  flex-direction: column;\r\n  max-height: 500px;\r\n  min-width: 300px;\r\n}\r\n.mat-table {\r\n  overflow: auto;\r\n  max-height: 500px;\r\n}`,\r\n\tviewCode: ``,\r\n\tisCodeVisible: false,\r\n\tisExampleExpanded: true\r\n};\r\n\r\nconst pagination = {\r\n\tbeforeCodeTitle: 'Table with pagination',\r\n\thtmlCode: `\r\n<div class=\"example-container mat-elevation-z8\">\r\n  <mat-table #table [dataSource]=\"dataSource\">\r\n    <!-- Position Column -->\r\n    <ng-container matColumnDef=\"position\">\r\n      <mat-header-cell *matHeaderCellDef> No. </mat-header-cell>\r\n      <mat-cell *matCellDef=\"let element\"> {{element.position}} </mat-cell>\r\n    </ng-container>\r\n    <!-- Name Column -->\r\n    <ng-container matColumnDef=\"name\">\r\n      <mat-header-cell *matHeaderCellDef> Name </mat-header-cell>\r\n      <mat-cell *matCellDef=\"let element\"> {{element.name}} </mat-cell>\r\n    </ng-container>\r\n    <!-- Weight Column -->\r\n    <ng-container matColumnDef=\"weight\">\r\n      <mat-header-cell *matHeaderCellDef> Weight </mat-header-cell>\r\n      <mat-cell *matCellDef=\"let element\"> {{element.weight}} </mat-cell>\r\n    </ng-container>\r\n    <!-- Symbol Column -->\r\n    <ng-container matColumnDef=\"symbol\">\r\n      <mat-header-cell *matHeaderCellDef> Symbol </mat-header-cell>\r\n      <mat-cell *matCellDef=\"let element\"> {{element.symbol}} </mat-cell>\r\n    </ng-container>\r\n    <mat-header-row *matHeaderRowDef=\"displayedColumns\"></mat-header-row>\r\n    <mat-row *matRowDef=\"let row; columns: displayedColumns;\"></mat-row>\r\n  </mat-table>\r\n  <mat-paginator #paginator\r\n    [pageSize]=\"10\"\r\n    [pageSizeOptions]=\"[5, 10, 20]\"\r\n    [showFirstLastButtons]=\"true\">\r\n  </mat-paginator>\r\n</div>\r\n\t\t`,\r\n\ttsCode: `\r\nimport {Component, ViewChild} from '@angular/core';\r\nimport {MatPaginator, MatTableDataSource} from '@angular/material';\\n\r\n/**\r\n* @title Table with pagination\r\n*/\r\n@Component({\r\n  selector: 'table-pagination-example',\r\n  styleUrls: ['table-pagination-example.css'],\r\n  templateUrl: 'table-pagination-example.html',\r\n})\r\nexport class TablePaginationExample {\r\n  displayedColumns = ['position', 'name', 'weight', 'symbol'];\r\n  dataSource = new MatTableDataSource<Element>(ELEMENT_DATA);\\n\r\n  @ViewChild(MatPaginator, {static: true}) paginator: MatPaginator;\\n\r\n  /**\r\n  * Set the paginator after the view init since this component will\r\n  * be able to query its view for the initialized paginator.\r\n  */\r\n  ngAfterViewInit() {\r\n    this.dataSource.paginator = this.paginator;\r\n  }\r\n}\\n\r\nexport interface Element {\r\n  name: string;\r\n  position: number;\r\n  weight: number;\r\n  symbol: string;\r\n}\\n\r\nconst ELEMENT_DATA: Element[] = [\r\n  {position: 1, name: 'Hydrogen', weight: 1.0079, symbol: 'H'},\r\n  {position: 2, name: 'Helium', weight: 4.0026, symbol: 'He'},\r\n  {position: 3, name: 'Lithium', weight: 6.941, symbol: 'Li'},\r\n  {position: 4, name: 'Beryllium', weight: 9.0122, symbol: 'Be'},\r\n  {position: 5, name: 'Boron', weight: 10.811, symbol: 'B'},\r\n  {position: 6, name: 'Carbon', weight: 12.0107, symbol: 'C'},\r\n  {position: 7, name: 'Nitrogen', weight: 14.0067, symbol: 'N'},\r\n  {position: 8, name: 'Oxygen', weight: 15.9994, symbol: 'O'},\r\n  {position: 9, name: 'Fluorine', weight: 18.9984, symbol: 'F'},\r\n  {position: 10, name: 'Neon', weight: 20.1797, symbol: 'Ne'},\r\n  {position: 11, name: 'Sodium', weight: 22.9897, symbol: 'Na'},\r\n  {position: 12, name: 'Magnesium', weight: 24.305, symbol: 'Mg'},\r\n  {position: 13, name: 'Aluminum', weight: 26.9815, symbol: 'Al'},\r\n  {position: 14, name: 'Silicon', weight: 28.0855, symbol: 'Si'},\r\n  {position: 15, name: 'Phosphorus', weight: 30.9738, symbol: 'P'},\r\n  {position: 16, name: 'Sulfur', weight: 32.065, symbol: 'S'},\r\n  {position: 17, name: 'Chlorine', weight: 35.453, symbol: 'Cl'},\r\n  {position: 18, name: 'Argon', weight: 39.948, symbol: 'Ar'},\r\n  {position: 19, name: 'Potassium', weight: 39.0983, symbol: 'K'},\r\n  {position: 20, name: 'Calcium', weight: 40.078, symbol: 'Ca'},\r\n];`,\r\n\tcssCode: `\r\n.example-container {\r\n  display: flex;\r\n  flex-direction: column;\r\n  min-width: 300px;\r\n}\r\n.mat-table {\r\n  overflow: auto;\r\n  max-height: 500px;\r\n}`,\r\n\tviewCode: ``,\r\n\tisCodeVisible: false\r\n};\r\n\r\nconst sorting = {\r\n\tbeforeCodeTitle: 'Table with sorting',\r\n\tbeforeCodeDescription: ``,\r\n\thtmlCode: `\r\n<div class=\"example-container mat-elevation-z8\">\r\n  <mat-table #table [dataSource]=\"dataSource\" matSort>\r\n    <!-- Position Column -->\r\n    <ng-container matColumnDef=\"position\">\r\n      <mat-header-cell *matHeaderCellDef mat-sort-header> No. </mat-header-cell>\r\n      <mat-cell *matCellDef=\"let element\"> {{element.position}} </mat-cell>\r\n    </ng-container>\r\n    <!-- Name Column -->\r\n    <ng-container matColumnDef=\"name\">\r\n      <mat-header-cell *matHeaderCellDef mat-sort-header> Name </mat-header-cell>\r\n      <mat-cell *matCellDef=\"let element\"> {{element.name}} </mat-cell>\r\n    </ng-container>\r\n    <!-- Weight Column -->\r\n    <ng-container matColumnDef=\"weight\">\r\n      <mat-header-cell *matHeaderCellDef mat-sort-header> Weight </mat-header-cell>\r\n      <mat-cell *matCellDef=\"let element\"> {{element.weight}} </mat-cell>\r\n    </ng-container>\r\n    <!-- Symbol Column -->\r\n    <ng-container matColumnDef=\"symbol\">\r\n      <mat-header-cell *matHeaderCellDef mat-sort-header> Symbol </mat-header-cell>\r\n      <mat-cell *matCellDef=\"let element\"> {{element.symbol}} </mat-cell>\r\n    </ng-container>\r\n    <mat-header-row *matHeaderRowDef=\"displayedColumns\"></mat-header-row>\r\n    <mat-row *matRowDef=\"let row; columns: displayedColumns;\"></mat-row>\r\n  </mat-table>\r\n</div>`,\r\n\ttsCode: `\r\nimport {Component, ViewChild} from '@angular/core';\r\nimport {MatTableDataSource, MatSort} from '@angular/material';\\n\r\n/**\r\n* @title Table with sorting\r\n*/\r\n@Component({\r\n  selector: 'table-sorting-example',\r\n  styleUrls: ['table-sorting-example.css'],\r\n  templateUrl: 'table-sorting-example.html',\r\n})\r\nexport class TableSortingExample {\r\n  displayedColumns = ['position', 'name', 'weight', 'symbol'];\r\n  dataSource = new MatTableDataSource(ELEMENT_DATA);\\n\r\n  @ViewChild(MatSort, {static: true}) sort: MatSort;\\n\\n\r\n  /**\r\n  * Set the sort after the view init since this component will\r\n  * be able to query its view for the initialized sort.\r\n  */\r\n  ngAfterViewInit() {\r\n    this.dataSource.sort = this.sort;\r\n  }\r\n}\\n\\n\r\nexport interface Element {\r\n  name: string;\r\n  position: number;\r\n  weight: number;\r\n  symbol: string;\r\n}\\n\\n\r\nconst ELEMENT_DATA: Element[] = [\r\n  {position: 1, name: 'Hydrogen', weight: 1.0079, symbol: 'H'},\r\n  {position: 2, name: 'Helium', weight: 4.0026, symbol: 'He'},\r\n  {position: 3, name: 'Lithium', weight: 6.941, symbol: 'Li'},\r\n  {position: 4, name: 'Beryllium', weight: 9.0122, symbol: 'Be'},\r\n  {position: 5, name: 'Boron', weight: 10.811, symbol: 'B'},\r\n  {position: 6, name: 'Carbon', weight: 12.0107, symbol: 'C'},\r\n  {position: 7, name: 'Nitrogen', weight: 14.0067, symbol: 'N'},\r\n  {position: 8, name: 'Oxygen', weight: 15.9994, symbol: 'O'},\r\n  {position: 9, name: 'Fluorine', weight: 18.9984, symbol: 'F'},\r\n  {position: 10, name: 'Neon', weight: 20.1797, symbol: 'Ne'},\r\n  {position: 11, name: 'Sodium', weight: 22.9897, symbol: 'Na'},\r\n  {position: 12, name: 'Magnesium', weight: 24.305, symbol: 'Mg'},\r\n  {position: 13, name: 'Aluminum', weight: 26.9815, symbol: 'Al'},\r\n  {position: 14, name: 'Silicon', weight: 28.0855, symbol: 'Si'},\r\n  {position: 15, name: 'Phosphorus', weight: 30.9738, symbol: 'P'},\r\n  {position: 16, name: 'Sulfur', weight: 32.065, symbol: 'S'},\r\n  {position: 17, name: 'Chlorine', weight: 35.453, symbol: 'Cl'},\r\n  {position: 18, name: 'Argon', weight: 39.948, symbol: 'Ar'},\r\n  {position: 19, name: 'Potassium', weight: 39.0983, symbol: 'K'},\r\n  {position: 20, name: 'Calcium', weight: 40.078, symbol: 'Ca'},\r\n];`,\r\n\tcssCode: `\r\n.example-container {\r\n  display: flex;\r\n  flex-direction: column;\r\n  min-width: 300px;\r\n}\r\n.mat-table {\r\n  overflow: auto;\r\n  max-height: 500px;\r\n}\r\n.mat-header-cell.mat-sort-header-sorted {\r\n  color: black;\r\n}`,\r\n\tviewCode: ``,\r\n\tisCodeVisible: false\r\n};\r\n\r\nconst filtering = {\r\n\tbeforeCodeTitle: 'Table with filtering',\r\n\thtmlCode: `\r\n<div class=\"example-container mat-elevation-z8\">\r\n  <div class=\"example-header\">\r\n    <mat-form-field>\r\n      <input matInput (keyup)=\"applyFilter($event.target.value)\" placeholder=\"Filter\">\r\n    </mat-form-field>\r\n  </div>\r\n  <mat-table #table [dataSource]=\"dataSource\">\r\n    <!-- Position Column -->\r\n    <ng-container matColumnDef=\"position\">\r\n      <mat-header-cell *matHeaderCellDef> No. </mat-header-cell>\r\n      <mat-cell *matCellDef=\"let element\"> {{element.position}} </mat-cell>\r\n    </ng-container>\r\n    <!-- Name Column -->\r\n    <ng-container matColumnDef=\"name\">\r\n      <mat-header-cell *matHeaderCellDef> Name </mat-header-cell>\r\n      <mat-cell *matCellDef=\"let element\"> {{element.name}} </mat-cell>\r\n    </ng-container>\r\n    <!-- Weight Column -->\r\n    <ng-container matColumnDef=\"weight\">\r\n      <mat-header-cell *matHeaderCellDef> Weight </mat-header-cell>\r\n      <mat-cell *matCellDef=\"let element\"> {{element.weight}} </mat-cell>\r\n    </ng-container>\r\n    <!-- Symbol Column -->\r\n    <ng-container matColumnDef=\"symbol\">\r\n      <mat-header-cell *matHeaderCellDef> Symbol </mat-header-cell>\r\n      <mat-cell *matCellDef=\"let element\"> {{element.symbol}} </mat-cell>\r\n    </ng-container>\r\n    <mat-header-row *matHeaderRowDef=\"displayedColumns\"></mat-header-row>\r\n    <mat-row *matRowDef=\"let row; columns: displayedColumns;\"></mat-row>\r\n  </mat-table>\r\n</div>`,\r\n\ttsCode: `\r\nimport {Component} from '@angular/core';\r\nimport {MatTableDataSource} from '@angular/material';\\n\\n\r\n/**\r\n* @title Table with filtering\r\n*/\r\n@Component({\r\n  selector: 'table-filtering-example',\r\n  styleUrls: ['table-filtering-example.css'],\r\n  templateUrl: 'table-filtering-example.html',\r\n})\r\nexport class TableFilteringExample {\r\n  displayedColumns = ['position', 'name', 'weight', 'symbol'];\r\n  dataSource = new MatTableDataSource(ELEMENT_DATA);\\n\\n\r\n  applyFilter(filterValue: string) {\r\n    filterValue = filterValue.trim(); // Remove whitespace\r\n    filterValue = filterValue.toLowerCase(); // MatTableDataSource defaults to lowercase matches\r\n    this.dataSource.filter = filterValue;\r\n  }\r\n}\\n\r\nexport interface Element {\r\n  name: string;\r\n  position: number;\r\n  weight: number;\r\n  symbol: string;\r\n}\\n\\n\r\nconst ELEMENT_DATA: Element[] = [\r\n  {position: 1, name: 'Hydrogen', weight: 1.0079, symbol: 'H'},\r\n  {position: 2, name: 'Helium', weight: 4.0026, symbol: 'He'},\r\n  {position: 3, name: 'Lithium', weight: 6.941, symbol: 'Li'},\r\n  {position: 4, name: 'Beryllium', weight: 9.0122, symbol: 'Be'},\r\n  {position: 5, name: 'Boron', weight: 10.811, symbol: 'B'},\r\n  {position: 6, name: 'Carbon', weight: 12.0107, symbol: 'C'},\r\n  {position: 7, name: 'Nitrogen', weight: 14.0067, symbol: 'N'},\r\n  {position: 8, name: 'Oxygen', weight: 15.9994, symbol: 'O'},\r\n  {position: 9, name: 'Fluorine', weight: 18.9984, symbol: 'F'},\r\n  {position: 10, name: 'Neon', weight: 20.1797, symbol: 'Ne'},\r\n  {position: 11, name: 'Sodium', weight: 22.9897, symbol: 'Na'},\r\n  {position: 12, name: 'Magnesium', weight: 24.305, symbol: 'Mg'},\r\n  {position: 13, name: 'Aluminum', weight: 26.9815, symbol: 'Al'},\r\n  {position: 14, name: 'Silicon', weight: 28.0855, symbol: 'Si'},\r\n  {position: 15, name: 'Phosphorus', weight: 30.9738, symbol: 'P'},\r\n  {position: 16, name: 'Sulfur', weight: 32.065, symbol: 'S'},\r\n  {position: 17, name: 'Chlorine', weight: 35.453, symbol: 'Cl'},\r\n  {position: 18, name: 'Argon', weight: 39.948, symbol: 'Ar'},\r\n  {position: 19, name: 'Potassium', weight: 39.0983, symbol: 'K'},\r\n  {position: 20, name: 'Calcium', weight: 40.078, symbol: 'Ca'},\r\n];`,\r\n\tcssCode: `\r\n/* Structure */\r\n.example-container {\r\n  display: flex;\r\n  flex-direction: column;\r\n  min-width: 300px;\r\n}\r\n.example-header {\r\n  min-height: 64px;\r\n  padding: 8px 24px 0;\r\n}\r\n.mat-form-field {\r\n  font-size: 14px;\r\n  width: 100%;\r\n}\r\n.mat-table {\r\n  overflow: auto;\r\n  max-height: 500px;\r\n}`,\r\n\tviewCode: ``,\r\n\tisCodeVisible: false\r\n};\r\n\r\nconst selection = {\r\n\tbeforeCodeTitle: 'Table with selection',\r\n\thtmlCode: `\r\n<div class=\"example-container mat-elevation-z8\">\r\n  <mat-table #table [dataSource]=\"dataSource\">\r\n    <!-- Checkbox Column -->\r\n    <ng-container matColumnDef=\"select\">\r\n      <mat-header-cell *matHeaderCellDef>\r\n        <mat-checkbox (change)=\"$event ? masterToggle() : null\"\r\n          [checked]=\"selection.hasValue() && isAllSelected()\"\r\n          [indeterminate]=\"selection.hasValue() && !isAllSelected()\">\r\n        </mat-checkbox>\r\n      </mat-header-cell>\r\n      <mat-cell *matCellDef=\"let row\">\r\n        <mat-checkbox (click)=\"$event.stopPropagation()\"\r\n          (change)=\"$event ? selection.toggle(row) : null\"\r\n          [checked]=\"selection.isSelected(row)\">\r\n        </mat-checkbox>\r\n      </mat-cell>\r\n    </ng-container>\r\n    <!-- Position Column -->\r\n    <ng-container matColumnDef=\"position\">\r\n      <mat-header-cell *matHeaderCellDef> No. </mat-header-cell>\r\n      <mat-cell *matCellDef=\"let element\"> {{element.position}} </mat-cell>\r\n    </ng-container>\r\n    <!-- Name Column -->\r\n    <ng-container matColumnDef=\"name\">\r\n      <mat-header-cell *matHeaderCellDef> Name </mat-header-cell>\r\n      <mat-cell *matCellDef=\"let element\"> {{element.name}} </mat-cell>\r\n    </ng-container>\r\n    <!-- Weight Column -->\r\n    <ng-container matColumnDef=\"weight\">\r\n      <mat-header-cell *matHeaderCellDef> Weight </mat-header-cell>\r\n      <mat-cell *matCellDef=\"let element\"> {{element.weight}} </mat-cell>\r\n    </ng-container>\r\n    <!-- Symbol Column -->\r\n    <ng-container matColumnDef=\"symbol\">\r\n      <mat-header-cell *matHeaderCellDef> Symbol </mat-header-cell>\r\n      <mat-cell *matCellDef=\"let element\"> {{element.symbol}} </mat-cell>\r\n    </ng-container>\r\n    <mat-header-row *matHeaderRowDef=\"displayedColumns\"></mat-header-row>\r\n    <mat-row *matRowDef=\"let row; columns: displayedColumns;\"\r\n      (click)=\"selection.toggle(row)\">\r\n    </mat-row>\r\n  </mat-table>\r\n</div>`,\r\n\ttsCode: `\r\nimport {Component} from '@angular/core';\r\nimport {MatTableDataSource} from '@angular/material';\r\nimport {SelectionModel} from '@angular/cdk/collections';\\n\r\n/**\r\n* @title Table with selection\r\n*/\r\n@Component({\r\n  selector: 'table-selection-example',\r\n  styleUrls: ['table-selection-example.css'],\r\n  templateUrl: 'table-selection-example.html',\r\n})\r\nexport class TableSelectionExample {\r\n  displayedColumns = ['select', 'position', 'name', 'weight', 'symbol'];\r\n  dataSource = new MatTableDataSource<Element>(ELEMENT_DATA);\r\n  selection = new SelectionModel<Element>(true, []);\\n\r\n  /** Whether the number of selected elements matches the total number of rows. */\r\n  isAllSelected() {\r\n    const numSelected = this.selection.selected.length;\r\n    const numRows = this.dataSource.data.length;\r\n    return numSelected === numRows;\r\n  }\\n\r\n  /** Selects all rows if they are not all selected; otherwise clear selection. */\r\n  masterToggle() {\r\n    this.isAllSelected() ?\r\n    this.selection.clear() :\r\n    this.dataSource.data.forEach(row => this.selection.select(row));\r\n  }\r\n}\\n\r\nexport interface Element {\r\n  name: string;\r\n  position: number;\r\n  weight: number;\r\n  symbol: string;\r\n}\\n\r\nconst ELEMENT_DATA: Element[] = [\r\n  {position: 1, name: 'Hydrogen', weight: 1.0079, symbol: 'H'},\r\n  {position: 2, name: 'Helium', weight: 4.0026, symbol: 'He'},\r\n  {position: 3, name: 'Lithium', weight: 6.941, symbol: 'Li'},\r\n  {position: 4, name: 'Beryllium', weight: 9.0122, symbol: 'Be'},\r\n  {position: 5, name: 'Boron', weight: 10.811, symbol: 'B'},\r\n  {position: 6, name: 'Carbon', weight: 12.0107, symbol: 'C'},\r\n  {position: 7, name: 'Nitrogen', weight: 14.0067, symbol: 'N'},\r\n  {position: 8, name: 'Oxygen', weight: 15.9994, symbol: 'O'},\r\n  {position: 9, name: 'Fluorine', weight: 18.9984, symbol: 'F'},\r\n  {position: 10, name: 'Neon', weight: 20.1797, symbol: 'Ne'},\r\n  {position: 11, name: 'Sodium', weight: 22.9897, symbol: 'Na'},\r\n  {position: 12, name: 'Magnesium', weight: 24.305, symbol: 'Mg'},\r\n  {position: 13, name: 'Aluminum', weight: 26.9815, symbol: 'Al'},\r\n  {position: 14, name: 'Silicon', weight: 28.0855, symbol: 'Si'},\r\n  {position: 15, name: 'Phosphorus', weight: 30.9738, symbol: 'P'},\r\n  {position: 16, name: 'Sulfur', weight: 32.065, symbol: 'S'},\r\n  {position: 17, name: 'Chlorine', weight: 35.453, symbol: 'Cl'},\r\n  {position: 18, name: 'Argon', weight: 39.948, symbol: 'Ar'},\r\n  {position: 19, name: 'Potassium', weight: 39.0983, symbol: 'K'},\r\n  {position: 20, name: 'Calcium', weight: 40.078, symbol: 'Ca'},\r\n];`,\r\n\tviewCode: ``,\r\n\tisCodeVisible: false\r\n};\r\n\r\nconst main = {\r\n\tbeforeCodeTitle: 'Data table with sorting, pagination, and filtering.',\r\n\thtmlCode: `\r\n<div class=\"example-header\">\r\n  <mat-form-field>\r\n    <input matInput (keyup)=\"applyFilter($event.target.value)\" placeholder=\"Filter\">\r\n  </mat-form-field>\r\n</div>\r\n<div class=\"example-container mat-elevation-z8\">\r\n  <mat-table [dataSource]=\"dataSource\" matSort>\r\n    <!-- ID Column -->\r\n    <ng-container matColumnDef=\"id\">\r\n      <mat-header-cell *matHeaderCellDef mat-sort-header> ID </mat-header-cell>\r\n      <mat-cell *matCellDef=\"let row\"> {{row.id}} </mat-cell>\r\n    </ng-container>\r\n    <!-- Progress Column -->\r\n    <ng-container matColumnDef=\"progress\">\r\n      <mat-header-cell *matHeaderCellDef mat-sort-header> Progress </mat-header-cell>\r\n      <mat-cell *matCellDef=\"let row\"> {{row.progress}}% </mat-cell>\r\n    </ng-container>\r\n    <!-- Name Column -->\r\n    <ng-container matColumnDef=\"name\">\r\n      <mat-header-cell *matHeaderCellDef mat-sort-header> Name </mat-header-cell>\r\n      <mat-cell *matCellDef=\"let row\"> {{row.name}} </mat-cell>\r\n    </ng-container>\r\n    <!-- Color Column -->\r\n    <ng-container matColumnDef=\"color\">\r\n      <mat-header-cell *matHeaderCellDef mat-sort-header> Color </mat-header-cell>\r\n      <mat-cell *matCellDef=\"let row\" [style.color]=\"row.color\"> {{row.color}} </mat-cell>\r\n    </ng-container>\r\n    <mat-header-row *matHeaderRowDef=\"displayedColumns\"></mat-header-row>\r\n      <mat-row *matRowDef=\"let row; columns: displayedColumns;\">\r\n    </mat-row>\r\n  </mat-table>\r\n  <mat-paginator [pageSizeOptions]=\"[5, 10, 25, 100]\"></mat-paginator>\r\n</div>`,\r\n\ttsCode: `\r\nimport {Component, ViewChild} from '@angular/core';\r\nimport {MatPaginator, MatSort, MatTableDataSource} from '@angular/material';\\n\r\n/**\r\n* @title Data table with sorting, pagination, and filtering.\r\n*/\r\n@Component({\r\n  selector: 'table-overview-example',\r\n  styleUrls: ['table-overview-example.css'],\r\n  templateUrl: 'table-overview-example.html',\r\n})\r\nexport class TableOverviewExample {\r\n  displayedColumns = ['id', 'name', 'progress', 'color'];\r\n  dataSource: MatTableDataSource<UserData>;\\n\r\n  @ViewChild(MatPaginator, {static: true}) paginator: MatPaginator;\r\n  @ViewChild(MatSort, {static: true}) sort: MatSort;\\n\r\n  constructor() {\r\n    // Create 100 users\r\n    const users: UserData[] = [];\r\n      for (let i = 1; i <= 100; i++) { users.push(createNewUser(i)); }\\n\r\n      // Assign the data to the data source for the table to render\r\n      this.dataSource = new MatTableDataSource(users);\r\n  }\\n\r\n  /**\r\n  * Set the paginator and sort after the view init since this component will\r\n  * be able to query its view for the initialized paginator and sort.\r\n  */\r\n  ngAfterViewInit() {\r\n    this.dataSource.paginator = this.paginator;\r\n    this.dataSource.sort = this.sort;\r\n  }\\n\r\n  applyFilter(filterValue: string) {\r\n    filterValue = filterValue.trim(); // Remove whitespace\r\n    filterValue = filterValue.toLowerCase(); // Datasource defaults to lowercase matches\r\n    this.dataSource.filter = filterValue;\r\n  }\r\n}\\n\\n\r\n/** Builds and returns a new User. */\r\nfunction createNewUser(id: number): UserData {\r\n  const name =\r\n    NAMES[Math.round(Math.random() * (NAMES.length - 1))] + ' ' +\r\n    NAMES[Math.round(Math.random() * (NAMES.length - 1))].charAt(0) + '.';\\n\\n\r\n  return {\r\n    id: id.toString(),\r\n    name: name,\r\n    progress: Math.round(Math.random() * 100).toString(),\r\n    color: COLORS[Math.round(Math.random() * (COLORS.length - 1))]\r\n   };\r\n}\\n\\n\r\n/** Constants used to fill up our data base. */\r\nconst COLORS = ['maroon', 'red', 'orange', 'yellow', 'olive', 'green', 'purple',\r\n  'fuchsia', 'lime', 'teal', 'aqua', 'blue', 'navy', 'black', 'gray'];\r\nconst NAMES = ['Maia', 'Asher', 'Olivia', 'Atticus', 'Amelia', 'Jack',\r\n  'Charlotte', 'Theodore', 'Isla', 'Oliver', 'Isabella', 'Jasper',\r\n  'Cora', 'Levi', 'Violet', 'Arthur', 'Mia', 'Thomas', 'Elizabeth'];\\n\r\nexport interface UserData {\r\n  id: string;\r\n  name: string;\r\n  progress: string;\r\n  color: string;\r\n}`,\r\n\tcssCode: `\r\n.example-container {\r\n  display: flex;\r\n  flex-direction: column;\r\n  min-width: 300px;\r\n}\r\n.example-header {\r\n  min-height: 64px;\r\n  padding: 8px 24px 0;\r\n}\r\n.mat-form-field {\r\n  font-size: 14px;\r\n  width: 100%;\r\n}\r\n.mat-table {\r\n  overflow: auto;\r\n  max-height: 500px;\r\n}`,\r\n\tviewCode: ``,\r\n\tisCodeVisible: false,\r\n\tisExampleExpanded: true\r\n};\r\n\r\nconst hTTP = {\r\n\tbeforeCodeTitle: 'Table retrieving data through HTTP',\r\n\thtmlCode: `\r\n<div class=\"example-container mat-elevation-z8\">\r\n  <div class=\"example-loading-shade\"\r\n    *ngIf=\"isLoadingResults || isRateLimitReached\">\r\n    <mat-spinner *ngIf=\"isLoadingResults\"></mat-spinner>\r\n    <div class=\"example-rate-limit-reached\" *ngIf=\"isRateLimitReached\">\r\n\t  GitHub's API rate limit has been reached. It will be reset in one minute.\r\n    </div>\r\n  </div>\r\n  <mat-table #table [dataSource]=\"dataSource\" class=\"example-table\"\r\n    matSort matSortActive=\"created\" matSortDisableClear matSortDirection=\"asc\">\r\n    <!--- Note that these columns can be defined in any order.\r\n    The actual rendered columns are set as a property on the row definition\" -->\r\n    <!-- Number Column -->\r\n    <ng-container matColumnDef=\"number\">\r\n      <mat-header-cell *matHeaderCellDef>#</mat-header-cell>\r\n      <mat-cell *matCellDef=\"let row\">{{row.number}}</mat-cell>\r\n    </ng-container>\r\n    <!-- Title Column -->\r\n    <ng-container matColumnDef=\"title\">\r\n      <mat-header-cell *matHeaderCellDef>Title</mat-header-cell>\r\n      <mat-cell *matCellDef=\"let row\">{{row.title}}</mat-cell>\r\n    </ng-container>\r\n    <!-- State Column -->\r\n    <ng-container matColumnDef=\"state\">\r\n      <mat-header-cell *matHeaderCellDef>State</mat-header-cell>\r\n      <mat-cell *matCellDef=\"let row\">{{row.state}}</mat-cell>\r\n    </ng-container>\r\n    <!-- Created Column -->\r\n    <ng-container matColumnDef=\"created\">\r\n      <mat-header-cell *matHeaderCellDef\r\n        mat-sort-header\r\n        disableClear=\"true\">\r\n        Created\r\n      </mat-header-cell>\r\n      <mat-cell *matCellDef=\"let row\">{{row.created_at | date}}</mat-cell>\r\n    </ng-container>\r\n    <mat-header-row *matHeaderRowDef=\"displayedColumns\"></mat-header-row>\r\n    <mat-row *matRowDef=\"let row; columns: displayedColumns;\"></mat-row>\r\n  </mat-table>\r\n  <mat-paginator [length]=\"resultsLength\" [pageSize]=\"30\">\r\n  </mat-paginator>\r\n </div>`,\r\n\ttsCode: `\r\nimport {Component, OnInit, ViewChild} from '@angular/core';\r\nimport {HttpClient} from '@angular/common/http';\r\nimport {MatPaginator, MatSort, MatTableDataSource} from '@angular/material';\r\nimport {Observable} from 'rxjs/Observable';\r\nimport {merge} from 'rxjs/observable/merge';\r\nimport {of as observableOf} from 'rxjs/observable/of';\r\nimport {catchError} from 'rxjs/operators/catchError';\r\nimport {map} from 'rxjs/operators/map';\r\nimport {startWith} from 'rxjs/operators/startWith';\r\nimport {switchMap} from 'rxjs/operators/switchMap';\\n\r\n/**\r\n* @title Table retrieving data through HTTP\r\n*/\r\n@Component({\r\n  selector: 'table-http-example',\r\n  styleUrls: ['table-http-example.css'],\r\n  templateUrl: 'table-http-example.html',\r\n})\r\nexport class TableHttpExample implements OnInit {\r\n  displayedColumns = ['created', 'state', 'number', 'title'];\r\n  exampleDatabase: ExampleHttpDao | null;\r\n  dataSource = new MatTableDataSource();\\n\r\n  resultsLength = 0;\r\n  isLoadingResults = true;\r\n  isRateLimitReached = false;\\n\r\n  @ViewChild(MatPaginator, {static: true}) paginator: MatPaginator;\r\n  @ViewChild(MatSort, {static: true}) sort: MatSort;\\n\r\n  constructor(private http: HttpClient) {}\\n\\n\\\r\n  ngOnInit() {\r\n    this.exampleDatabase = new ExampleHttpDao(this.http);\\n\\n\r\n    // If the user changes the sort order, reset back to the first page.\r\n\tthis.sort.sortChange.subscribe(() => this.paginator.pageIndex = 0);\r\n\r\n    merge(this.sort.sortChange, this.paginator.page)\r\n      .pipe(\r\n        startWith({}),\r\n\t    switchMap(() => {\r\n          this.isLoadingResults = true;\r\n\t\t\t  return this.exampleDatabase!.getRepoIssues(\r\n          this.sort.active, this.sort.direction, this.paginator.pageIndex);\r\n        }),\r\n        map(data => {\r\n        // Flip flag to show that loading has finished.\r\n          this.isLoadingResults = false;\r\n          this.isRateLimitReached = false;\r\n          this.resultsLength = data.total_count;\\n\\n\r\n          return data.items;\r\n        }),\r\n        catchError(() => {\r\n          this.isLoadingResults = false;\r\n          // Catch if the GitHub API has reached its rate limit. Return empty data.\r\n          this.isRateLimitReached = true;\r\n            return observableOf([]);\r\n      })\r\n    ).subscribe(data => this.dataSource.data = data);\r\n  }\r\n}\\n\\n\r\nexport interface GithubApi {\r\n  items: GithubIssue[];\r\n  total_count: number;\r\n}\\n\\n\\\r\nexport interface GithubIssue {\r\n  created_at: string;\r\n  number: string;\r\n  state: string;\r\n  title: string;\r\n}\\n\\n\\\r\n/** An example database that the data source uses to retrieve data for the table. */\r\nexport class ExampleHttpDao {\r\n  constructor(private http: HttpClient) {}\r\n  getRepoIssues(sort: string, order: string, page: number): Observable<GithubApi> {\r\n    const href = 'https://api.github.com/search/issues';\r\n    const requestUrl =\r\n    \\`\\${href}?q=repo:angular/material2&sort=\\${sort}&order=\\${order}&page=\\${page + 1}\\`;\\n\r\n    return this.http.get<GithubApi>(requestUrl);\r\n  }\r\n}`,\r\n\tcssCode: `\r\n.example-container {\r\n  display: flex;\r\n  flex-direction: column;\r\n  max-height: 500px;\r\n  min-width: 300px;\r\n  position: relative;\r\n}\r\n.example-header {\r\n  min-height: 64px;\r\n  display: flex;\r\n  align-items: center;\r\n  padding-left: 24px;\r\n  font-size: 20px;\r\n}\r\n.example-table {\r\n  overflow: auto;\r\n  min-height: 300px;\r\n}\r\n.example-loading-shade {\r\n  position: absolute;\r\n  top: 0;\r\n  left: 0;\r\n  bottom: 56px;\r\n  right: 0;\r\n  background: rgba(0, 0, 0, 0.15);\r\n  z-index: 1;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n}\r\n.example-rate-limit-reached {\r\n  color: #980000;\r\n  max-width: 360px;\r\n  text-align: center;\r\n}\r\n/* Column Widths */\r\n.mat-column-number,\r\n.mat-column-state {\r\n  max-width: 64px;\r\n}\r\n.mat-column-created {\r\n  max-width: 124px;\r\n}`,\r\n\tviewCode: ``,\r\n\tisCodeVisible: false,\r\n\tisExampleExpanded: true\r\n};\r\n\r\n\r\nconst ELEMENT_DATA: PeriodicElement[] = [\r\n  {position: 1, name: 'Hydrogen', weight: 1.0079, symbol: 'H'},\r\n  {position: 2, name: 'Helium', weight: 4.0026, symbol: 'He'},\r\n  {position: 3, name: 'Lithium', weight: 6.941, symbol: 'Li'},\r\n  {position: 4, name: 'Beryllium', weight: 9.0122, symbol: 'Be'},\r\n  {position: 5, name: 'Boron', weight: 10.811, symbol: 'B'},\r\n  {position: 6, name: 'Carbon', weight: 12.0107, symbol: 'C'},\r\n  {position: 7, name: 'Nitrogen', weight: 14.0067, symbol: 'N'},\r\n  {position: 8, name: 'Oxygen', weight: 15.9994, symbol: 'O'},\r\n  {position: 9, name: 'Fluorine', weight: 18.9984, symbol: 'F'},\r\n  {position: 10, name: 'Neon', weight: 20.1797, symbol: 'Ne'},\r\n];\r\n\r\nconst ELEMENT_DATA2: PeriodicElement[] = [\r\n  {position: 1, name: 'Hydrogen', weight: 1.0079, symbol: 'H'},\r\n  {position: 2, name: 'Helium', weight: 4.0026, symbol: 'He'},\r\n  {position: 3, name: 'Lithium', weight: 6.941, symbol: 'Li'},\r\n  {position: 4, name: 'Beryllium', weight: 9.0122, symbol: 'Be'},\r\n  {position: 5, name: 'Boron', weight: 10.811, symbol: 'B'},\r\n  {position: 6, name: 'Carbon', weight: 12.0107, symbol: 'C'},\r\n  {position: 7, name: 'Nitrogen', weight: 14.0067, symbol: 'N'},\r\n  {position: 8, name: 'Oxygen', weight: 15.9994, symbol: 'O'},\r\n  {position: 9, name: 'Fluorine', weight: 18.9984, symbol: 'F'},\r\n  {position: 10, name: 'Neon', weight: 20.1797, symbol: 'Ne'},\r\n  {position: 11, name: 'Sodium', weight: 22.9897, symbol: 'Na'},\r\n  {position: 12, name: 'Magnesium', weight: 24.305, symbol: 'Mg'},\r\n  {position: 13, name: 'Aluminum', weight: 26.9815, symbol: 'Al'},\r\n  {position: 14, name: 'Silicon', weight: 28.0855, symbol: 'Si'},\r\n  {position: 15, name: 'Phosphorus', weight: 30.9738, symbol: 'P'},\r\n  {position: 16, name: 'Sulfur', weight: 32.065, symbol: 'S'},\r\n  {position: 17, name: 'Chlorine', weight: 35.453, symbol: 'Cl'},\r\n  {position: 18, name: 'Argon', weight: 39.948, symbol: 'Ar'},\r\n  {position: 19, name: 'Potassium', weight: 39.0983, symbol: 'K'},\r\n  {position: 20, name: 'Calcium', weight: 40.078, symbol: 'Ca'},\r\n];\r\n\r\nexport interface PeriodicElement {\r\n  name: string;\r\n  position: number;\r\n  weight: number;\r\n  symbol: string;\r\n}\r\n\r\nexport interface GithubApi {\r\n  items: GithubIssue[];\r\n  total_count: number;\r\n}\r\n\r\nexport interface GithubIssue {\r\n  created_at: string;\r\n  number: string;\r\n  state: string;\r\n  title: string;\r\n}\r\n\r\n/** An example database that the data source uses to retrieve data for the table. */\r\nexport class ExampleHttpDao {\r\n  constructor(private http: HttpClient) {}\r\n\r\n  getRepoIssues(sort: string, order: string, page: number): Observable<GithubApi> {\r\n    const href = 'https://api.github.com/search/issues';\r\n    const requestUrl =\r\n        `${href}?q=repo:angular/material2&sort=${sort}&order=${order}&page=${page + 1}`;\r\n\r\n    return this.http.get<GithubApi>(requestUrl);\r\n  }\r\n}\r\n\r\nexport interface UserData {\r\n  id: string;\r\n  name: string;\r\n  progress: string;\r\n  color: string;\r\n}\r\n\r\n/** Constants used to fill up our data base. */\r\nconst COLORS: string[] = ['maroon', 'red', 'orange', 'yellow', 'olive', 'green', 'purple',\r\n  'fuchsia', 'lime', 'teal', 'aqua', 'blue', 'navy', 'black', 'gray'];\r\nconst NAMES: string[] = ['Maia', 'Asher', 'Olivia', 'Atticus', 'Amelia', 'Jack',\r\n  'Charlotte', 'Theodore', 'Isla', 'Oliver', 'Isabella', 'Jasper',\r\n  'Cora', 'Levi', 'Violet', 'Arthur', 'Mia', 'Thomas', 'Elizabeth'];\r\n\r\n  /** Builds and returns a new User. */\r\nfunction createNewUser(id: number): UserData {\r\n  const name =\r\n      NAMES[Math.round(Math.random() * (NAMES.length - 1))] + ' ' +\r\n      NAMES[Math.round(Math.random() * (NAMES.length - 1))].charAt(0) + '.';\r\n\r\n  return {\r\n    id: id.toString(),\r\n    name,\r\n    progress: Math.round(Math.random() * 100).toString(),\r\n    color: COLORS[Math.round(Math.random() * (COLORS.length - 1))]\r\n  };\r\n}\r\n\r\n@Component({\r\n\tselector: 'kt-material-table',\r\n\ttemplateUrl: './material-table.component.html',\r\n\tchangeDetection: ChangeDetectionStrategy.Default,\r\n\tstyles: [`\r\n\t.example-container {\r\n\t\tdisplay: flex;\r\n\t\tflex-direction: column;\r\n\t\tmax-height: 500px;\r\n\t\tmin-width: 300px;\r\n\t\tposition: relative;\r\n\t  }\r\n\r\n\t  .mat-table {\r\n\t\toverflow: auto;\r\n\t\tmax-height: 500px;\r\n\t  }\r\n\r\n\t  .mat-header-cell.mat-sort-header-sorted {\r\n\t\tcolor: black;\r\n\t  }\r\n\r\n\t  .example-header {\r\n\t\tmin-height: 64px;\r\n\t\tpadding: 8px 24px 0;\r\n\t  }\r\n\r\n\t  .mat-form-field {\r\n\t\tfont-size: 14px;\r\n\t\twidth: 100%;\r\n\t  }\r\n\r\n\t  .mat-table {\r\n\t\toverflow: auto;\r\n\t\tmax-height: 500px;\r\n\t  }\r\n\t  .mat-column-select {\r\n\t\toverflow: initial;\r\n\t  }\r\n\t  .example-header {\r\n\t\tmin-height: 64px;\r\n\t\tdisplay: flex;\r\n\t\talign-items: center;\r\n\t\tpadding-left: 24px;\r\n\t\tfont-size: 20px;\r\n\t  }\r\n\r\n\t  .example-table {\r\n\t\toverflow: auto;\r\n\t\tmin-height: 300px;\r\n\t  }\r\n\r\n.example-loading-shade {\r\n\tposition: absolute;\r\n\ttop: 0;\r\n\tleft: 0;\r\n\tbottom: 56px;\r\n\tright: 0;\r\n\tbackground: rgba(0, 0, 0, 0.15);\r\n\tz-index: 1;\r\n\tdisplay: flex;\r\n\talign-items: center;\r\n\tjustify-content: center;\r\n  }\r\n\r\n  .example-rate-limit-reached {\r\n\tcolor: #980000;\r\n\tmax-width: 360px;\r\n\ttext-align: center;\r\n  }\r\n\r\n  /* Column Widths */\r\n  .mat-column-number,\r\n  .mat-column-state {\r\n\tmax-width: 64px;\r\n  }\r\n\r\n  .mat-column-created {\r\n\tmax-width: 124px;\r\n  }\r\n\t`]\r\n})\r\nexport class MaterialTableComponent implements OnInit, AfterViewInit {\r\n\r\n\texampleBasic;\r\n\texamplePagination;\r\n\texampleSorting;\r\n\texampleFiltering;\r\n\texampleSelection;\r\n\texampleHTTP;\r\n\texampleMain;\r\n\r\n  displayedColumns1 = ['position', 'name', 'weight', 'symbol'];\r\n  displayedColumns2: string[] = ['position', 'name', 'weight', 'symbol'];\r\n  displayedColumns3: string[] = ['position', 'name', 'weight', 'symbol'];\r\n  displayedColumns4: string[] = ['position', 'name', 'weight', 'symbol'];\r\n  displayedColumns5: string[] = ['select', 'position', 'name', 'weight', 'symbol'];\r\n  displayedColumns6: string[] = ['created', 'state', 'number', 'title'];\r\n  displayedColumns7: string[] = ['id', 'name', 'progress', 'color'];\r\n\r\n\tdataSource1 = ELEMENT_DATA;\r\n  dataSource2 = new MatTableDataSource<PeriodicElement>(ELEMENT_DATA2);\r\n  dataSource3 = new MatTableDataSource(ELEMENT_DATA);\r\n  dataSource4 = new MatTableDataSource(ELEMENT_DATA);\r\n  dataSource5 = new MatTableDataSource<PeriodicElement>(ELEMENT_DATA);\r\n  dataSource6: GithubIssue[] = [];\r\n  dataSource7: MatTableDataSource<UserData>;\r\n  exampleDatabase: ExampleHttpDao | null;\r\n\r\n  selection = new SelectionModel<PeriodicElement>(true, []);\r\n  resultsLength = 0;\r\n  isLoadingResults = true;\r\n  isRateLimitReached = false;\r\n\r\n\r\n  @ViewChild('matPaginator2', {static: true}) paginator2: MatPaginator;\r\n  @ViewChild('matPaginator6', {static: true}) paginator6: MatPaginator;\r\n  @ViewChild('matPaginator7', {static: true}) paginator7: MatPaginator;\r\n\r\n\r\n  @ViewChild('sort3', {static: true}) sort3: MatSort;\r\n  @ViewChild('sort6', {static: true}) sort6: MatSort;\r\n  @ViewChild('sort7', {static: true}) sort7: MatSort;\r\n\r\n  ngAfterViewInit() {\r\n  }\r\n\r\n  constructor(private http: HttpClient) {\r\n    const users = Array.from({length: 100}, (_, k) => createNewUser(k + 1));\r\n\r\n    // Assign the data to the data source for the table to render\r\n    this.dataSource7 = new MatTableDataSource(users);\r\n  }\r\n\r\n\tngOnInit() {\r\n\t\tthis.exampleBasic = basic;\r\n\t\tthis.examplePagination = pagination;\r\n\t\tthis.exampleSorting = sorting;\r\n\t\tthis.exampleFiltering = filtering;\r\n\t\tthis.exampleSelection = selection;\r\n\t\tthis.exampleHTTP = hTTP;\r\n  this.exampleMain = main;\r\n\r\n  this.dataSource2.paginator = this.paginator2;\r\n\r\n  this.dataSource3.sort = this.sort3;\r\n\r\n    // Example 6\r\n  this.exampleDatabase = new ExampleHttpDao(this.http);\r\n\r\n    // If the user changes the sort order, reset back to the first page.\r\n  this.sort6.sortChange.subscribe(() => this.paginator6.pageIndex = 0);\r\n\r\n  merge(this.sort6.sortChange, this.paginator6.page)\r\n    .pipe(\r\n      startWith({}),\r\n      switchMap(() => {\r\n        this.isLoadingResults = true;\r\n        // tslint:disable-next-line:no-non-null-assertion\r\n        return this.exampleDatabase!.getRepoIssues(\r\n          this.sort6.active, this.sort6.direction, this.paginator6.pageIndex);\r\n      }),\r\n      map(data => {\r\n        // Flip flag to show that loading has finished.\r\n        this.isLoadingResults = false;\r\n        this.isRateLimitReached = false;\r\n        this.resultsLength = data.total_count;\r\n\r\n        return data.items;\r\n      }),\r\n      catchError(() => {\r\n        this.isLoadingResults = false;\r\n        // Catch if the GitHub API has reached its rate limit. Return empty data.\r\n        this.isRateLimitReached = true;\r\n        return observableOf([]);\r\n      })\r\n    ).subscribe(data => this.dataSource6 = data);\r\n\r\n    // Example 7\r\n  this.dataSource7.paginator = this.paginator7;\r\n  this.dataSource7.sort = this.sort7;\r\n  }\r\n\r\n  applyFilter4(filterValue: string) {\r\n    this.dataSource4.filter = filterValue.trim().toLowerCase();\r\n  }\r\n\r\n  applyFilter7(filterValue: string) {\r\n    this.dataSource7.filter = filterValue.trim().toLowerCase();\r\n\r\n    if (this.dataSource7.paginator) {\r\n      this.dataSource7.paginator.firstPage();\r\n    }\r\n  }\r\n\r\n   /** Whether the number of selected elements matches the total number of rows. */\r\n   isAllSelected5() {\r\n    const numSelected = this.selection.selected.length;\r\n    const numRows = this.dataSource5.data.length;\r\n    return numSelected === numRows;\r\n  }\r\n\r\n  /** Selects all rows if they are not all selected; otherwise clear selection. */\r\n  masterToggle5() {\r\n    this.isAllSelected5() ?\r\n        this.selection.clear() :\r\n        this.dataSource5.data.forEach(row => this.selection.select(row));\r\n  }\r\n\r\n  /** Builds and returns a new User. */\r\n\r\n}\r\n","<kt-notice [svg]=\"'assets/media/svg/icons/Tools/Compass.svg'\">\r\n\tFor more info please check the components's official demos & documentation\r\n\t<a class=\"font-weight-bold\" href=\"https://material.angular.io/components/paginator/examples\" target=\"_blank\">demos & documentation</a>\r\n</kt-notice>\r\n\r\n\r\n<kt-code-preview [viewItem]=\"exampleBasic\">\r\n\t<div class=\"example-preview\">\r\n\t\t<p>\r\n\t\t\t<code>&lt;mat-paginator&gt;</code> provides navigation for paged information, typically used with a table.\r\n\t\t</p>\r\n\t\t<div class=\"separator separator-dashed my-6\"></div>\r\n\t\t<div>\r\n\r\n\t\t\t<mat-paginator [length]=\"100\" [pageSize]=\"10\" [pageSizeOptions]=\"[5, 10, 25, 100]\">\r\n\t\t\t</mat-paginator>\r\n\r\n\t\t</div>\r\n\t</div>\r\n</kt-code-preview>\r\n\r\n<kt-code-preview [viewItem]=\"exampleConfig\">\r\n\t<div class=\"example-preview\">\r\n\t\t<div>\r\n\r\n\t\t\t<mat-form-field>\r\n\t\t\t\tList length:\r\n\t\t\t\t<input matInput [(ngModel)]=\"length\">\r\n\t\t\t</mat-form-field>\r\n\r\n\t\t\t<mat-form-field>\r\n\t\t\t\tPage size:\r\n\t\t\t\t<input matInput [(ngModel)]=\"pageSize\">\r\n\t\t\t</mat-form-field>\r\n\t\t\t<mat-form-field>\r\n\t\t\t\tPage size options:\r\n\t\t\t\t<input matInput [ngModel]=\"pageSizeOptions\" (ngModelChange)=\"setPageSizeOptions($event)\">\r\n\t\t\t</mat-form-field>\r\n\r\n\t\t\t<mat-paginator [length]=\"length\" [pageSize]=\"pageSize\" [pageSizeOptions]=\"pageSizeOptions\" (page)=\"pageEvent = $event\">\r\n\t\t\t</mat-paginator>\r\n\r\n\t\t\t<div *ngIf=\"pageEvent\">\r\n\t\t\t\t<h5>Page Change Event Properties</h5>\r\n\t\t\t\t<div>List length: {{pageEvent.length}}</div>\r\n\t\t\t\t<div>Page size: {{pageEvent.pageSize}}</div>\r\n\t\t\t\t<div>Page index: {{pageEvent.pageIndex}}</div>\r\n\t\t\t</div>\r\n\r\n\t\t</div>\r\n\t</div>\r\n</kt-code-preview>\r\n","import { Component, OnInit, ChangeDetectionStrategy } from '@angular/core';\r\nimport { PageEvent } from '@angular/material/paginator';\r\n\r\nconst basic = {\r\n\tbeforeCodeTitle: 'Paginator',\r\n\thtmlCode: `\r\n<mat-paginator [length]=\"100\"\r\n  [pageSize]=\"10\"\r\n  [pageSizeOptions]=\"[5, 10, 25, 100]\">\r\n</mat-paginator>`,\r\n\ttsCode: `\r\nimport {Component} from '@angular/core';\\n\r\n/**\r\n* @title Paginator\r\n*/\r\n@Component({\r\n  selector: 'paginator-overview-example',\r\n  templateUrl: 'paginator-overview-example.html',\r\n  styleUrls: ['paginator-overview-example.css'],\r\n})\r\nexport class PaginatorOverviewExample {}`,\r\n\tcssCode: ``,\r\n\tviewCode: ``,\r\n\tisCodeVisible: false,\r\n\tisExampleExpanded: true\r\n};\r\n\r\nconst config = {\r\n\tbeforeCodeTitle: 'Configurable paginatorn',\r\n\thtmlCode: `\r\n<mat-form-field>\r\n  List length:\r\n  <input matInput [(ngModel)]=\"length\">\r\n</mat-form-field>\r\n  <mat-form-field>\r\n    Page size:\r\n    <input matInput [(ngModel)]=\"pageSize\">\r\n  </mat-form-field>\r\n  <mat-form-field>\r\n    Page size options:\r\n    <input matInput\r\n      [ngModel]=\"pageSizeOptions\"\r\n      (ngModelChange)=\"setPageSizeOptions($event)\">\r\n  </mat-form-field>\r\n  <mat-paginator [length]=\"length\"\r\n    [pageSize]=\"pageSize\"\r\n    [pageSizeOptions]=\"pageSizeOptions\"\r\n    (page)=\"pageEvent = $event\">\r\n  </mat-paginator>\r\n  <div *ngIf=\"pageEvent\">\r\n    <h5>Page Change Event Properties</h5>\r\n    <div>List length: {{pageEvent.length}}</div>\r\n    <div>Page size: {{pageEvent.pageSize}}</div>\r\n    <div>Page index: {{pageEvent.pageIndex}}</div>\r\n</div>`,\r\n\ttsCode: `\r\nimport {Component} from '@angular/core';\r\nimport {PageEvent} from '@angular/material';\\n\r\n/**\r\n* @title Configurable paginator\r\n*/\r\n@Component({\r\n  selector: 'paginator-configurable-example',\r\n  templateUrl: 'paginator-configurable-example.html',\r\n  styleUrls: ['paginator-configurable-example.css'],\r\n})\r\nexport class PaginatorConfigurableExample {\r\n  // MatPaginator Inputs\r\n  length = 100;\r\n  pageSize = 10;\r\n  pageSizeOptions = [5, 10, 25, 100];\\n\r\n  // MatPaginator Output\r\n  pageEvent: PageEvent;\r\n  setPageSizeOptions(setPageSizeOptionsInput: string) {\r\n    this.pageSizeOptions = setPageSizeOptionsInput.split(',').map(str => +str);\r\n  }\r\n}`,\r\n\tcssCode: ``,\r\n\tviewCode: ``,\r\n\tisCodeVisible: false\r\n};\r\n\r\n@Component({\r\n\tselector: 'kt-paginator',\r\n\ttemplateUrl: './paginator.component.html',\r\n\tchangeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class PaginatorComponent implements OnInit {\r\n\r\n\texampleBasic;\r\n\texampleConfig;\r\n\r\n\tlength = 100;\r\n\tpageSize = 10;\r\n\tpageSizeOptions = [5, 10, 25, 100];\r\n\r\n\t// MatPaginator Output\r\n\tpageEvent: PageEvent;\r\n\r\n\tngOnInit() {\r\n\t\tthis.exampleBasic = basic;\r\n\t\tthis.exampleConfig = config;\r\n\t}\r\n\r\n\tsetPageSizeOptions(setPageSizeOptionsInput: string) {\r\n\t\tthis.pageSizeOptions = setPageSizeOptionsInput.split(',').map(str => +str);\r\n\t}\r\n}\r\n","<kt-notice [svg]=\"'assets/media/svg/icons/Tools/Compass.svg'\">\r\n\tFor more info please check the components's official demos & documentation\r\n\t<a class=\"font-weight-bold\" href=\"https://material.angular.io/components/sort/overview\" target=\"_blank\">demos & documentation</a>\r\n</kt-notice>\r\n\r\n\r\n<kt-code-preview [viewItem]=\"exampleBasic\">\r\n\t<div class=\"example-preview\">\r\n\t\t<p>\r\n\t\t\tThe\r\n\t\t\t<mark>matSort</mark> and\r\n\t\t\t<mark>mat-sort-header</mark> are used, respectively, to add sorting state and display to tabular data.\r\n\t\t</p>\r\n\t\t<div class=\"separator separator-dashed my-6\"></div>\r\n\t\t<div>\r\n\t\t\t<table  #sort1=\"matSort\" (matSortChange)=\"sortData($event)\" matSort>\r\n\t\t\t\t<tr>\r\n\t\t\t\t\t<th mat-sort-header=\"name\">Dessert (100g)</th>\r\n\t\t\t\t\t<th mat-sort-header=\"calories\">Calories</th>\r\n\t\t\t\t\t<th mat-sort-header=\"fat\">Fat (g)</th>\r\n\t\t\t\t\t<th mat-sort-header=\"carbs\">Carbs (g)</th>\r\n\t\t\t\t\t<th mat-sort-header=\"protein\">Protein (g)</th>\r\n\t\t\t\t</tr>\r\n\r\n\t\t\t\t<tr *ngFor=\"let dessert of sortedData\">\r\n\t\t\t\t\t<td>{{dessert.name}}</td>\r\n\t\t\t\t\t<td>{{dessert.calories}}</td>\r\n\t\t\t\t\t<td>{{dessert.fat}}</td>\r\n\t\t\t\t\t<td>{{dessert.carbs}}</td>\r\n\t\t\t\t\t<td>{{dessert.protein}}</td>\r\n\t\t\t\t</tr>\r\n\t\t\t</table>\r\n\r\n\t\t</div>\r\n\t</div>\r\n</kt-code-preview>\r\n\r\n<kt-code-preview [viewItem]=\"exampleConfig\">\r\n\t<div class=\"example-preview\">\r\n\t\t<div>\r\n\r\n\t\t\t<div class=\"example-container mat-elevation-z8\">\r\n\t\t\t\t<mat-table #table [dataSource]=\"dataSource\" #sort2=\"matSort\" matSort>\r\n\r\n\t\t\t\t\t<!-- Position Column -->\r\n\t\t\t\t\t<ng-container matColumnDef=\"position\">\r\n\t\t\t\t\t\t<mat-header-cell *matHeaderCellDef mat-sort-header> No. </mat-header-cell>\r\n\t\t\t\t\t\t<mat-cell *matCellDef=\"let element\"> {{element.position}} </mat-cell>\r\n\t\t\t\t\t</ng-container>\r\n\r\n\t\t\t\t\t<!-- Name Column -->\r\n\t\t\t\t\t<ng-container matColumnDef=\"name\">\r\n\t\t\t\t\t\t<mat-header-cell *matHeaderCellDef mat-sort-header> Name </mat-header-cell>\r\n\t\t\t\t\t\t<mat-cell *matCellDef=\"let element\"> {{element.name}} </mat-cell>\r\n\t\t\t\t\t</ng-container>\r\n\r\n\t\t\t\t\t<!-- Weight Column -->\r\n\t\t\t\t\t<ng-container matColumnDef=\"weight\">\r\n\t\t\t\t\t\t<mat-header-cell *matHeaderCellDef mat-sort-header> Weight </mat-header-cell>\r\n\t\t\t\t\t\t<mat-cell *matCellDef=\"let element\"> {{element.weight}} </mat-cell>\r\n\t\t\t\t\t</ng-container>\r\n\r\n\t\t\t\t\t<!-- Symbol Column -->\r\n\t\t\t\t\t<ng-container matColumnDef=\"symbol\">\r\n\t\t\t\t\t\t<mat-header-cell *matHeaderCellDef mat-sort-header> Symbol </mat-header-cell>\r\n\t\t\t\t\t\t<mat-cell *matCellDef=\"let element\"> {{element.symbol}} </mat-cell>\r\n\t\t\t\t\t</ng-container>\r\n\r\n\t\t\t\t\t<mat-header-row *matHeaderRowDef=\"displayedColumns\"></mat-header-row>\r\n\t\t\t\t\t<mat-row *matRowDef=\"let row; columns: displayedColumns;\"></mat-row>\r\n\t\t\t\t</mat-table>\r\n\t\t\t</div>\r\n\r\n\r\n\t\t</div>\r\n\t</div>\r\n</kt-code-preview>\r\n","import { Component, OnInit, ViewChild, AfterViewInit, ChangeDetectionStrategy } from '@angular/core';\r\nimport { Sort, MatSort } from '@angular/material/sort';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\n\r\nconst basic = {\r\n\tbeforeCodeTitle: 'Sorting overview',\r\n\thtmlCode: `\r\n<table matSort (matSortChange)=\"sortData($event)\">\r\n  <tr>\r\n    <th mat-sort-header=\"name\">Dessert (100g)</th>\r\n    <th mat-sort-header=\"calories\">Calories</th>\r\n    <th mat-sort-header=\"fat\">Fat (g)</th>\r\n    <th mat-sort-header=\"carbs\">Carbs (g)</th>\r\n    <th mat-sort-header=\"protein\">Protein (g)</th>\r\n  </tr>\r\n  <tr *ngFor=\"let dessert of sortedData\">\r\n    <td>{{dessert.name}}</td>\r\n    <td>{{dessert.calories}}</td>\r\n    <td>{{dessert.fat}}</td>\r\n    <td>{{dessert.carbs}}</td>\r\n    <td>{{dessert.protein}}</td>\r\n  </tr>\r\n</table>`,\r\n\ttsCode: `\r\nimport {Component} from '@angular/core';\r\nimport {Sort} from '@angular/material';\\n\r\n/**\r\n* @title Sorting overview\r\n*/\r\n@Component({\r\n  selector: 'sort-overview-example',\r\n  templateUrl: 'sort-overview-example.html',\r\n  styleUrls: ['sort-overview-example.css'],\r\n})\r\nexport class SortOverviewExample {\r\n  desserts = [\r\n    {name: 'Frozen yogurt', calories: '159', fat: '6', carbs: '24', protein: '4'},\r\n    {name: 'Ice cream sandwich', calories: '237', fat: '9', carbs: '37', protein: '4'},\r\n    {name: 'Eclair', calories: '262', fat: '16', carbs: '24', protein: '6'},\r\n    {name: 'Cupcake', calories: '305', fat: '4', carbs: '67', protein: '4'},\r\n    {name: 'Gingerbread', calories: '356', fat: '16', carbs: '49', protein: '4'},\r\n  ];\\n\r\n  sortedData;\\n\r\n  constructor() {\r\n    this.sortedData = this.desserts.slice();\r\n  }\\n\r\n  sortData(sort: Sort) {\r\n    const data = this.desserts.slice();\r\n    if (!sort.active || sort.direction == '') {\r\n      this.sortedData = data;\r\n      return;\r\n    }\\n\r\n    this.sortedData = data.sort((a, b) => {\r\n      let isAsc = sort.direction == 'asc';\r\n      switch (sort.active) {\r\n        case 'name': return compare(a.name, b.name, isAsc);\r\n        case 'calories': return compare(+a.calories, +b.calories, isAsc);\r\n        case 'fat': return compare(+a.fat, +b.fat, isAsc);\r\n        case 'carbs': return compare(+a.carbs, +b.carbs, isAsc);\r\n        case 'protein': return compare(+a.protein, +b.protein, isAsc);\r\n        default: return 0;\r\n      }\r\n    });\r\n  }\r\n}\\n\\n\r\nfunction compare(a, b, isAsc) {\r\n  return (a < b ? -1 : 1) * (isAsc ? 1 : -1);\r\n}`,\r\n\tcssCode: `\r\n.mat-sort-header-container {\r\n  align-items: center;\r\n}`,\r\n\tviewCode: ``,\r\n\tisCodeVisible: false,\r\n\tisExampleExpanded: true\r\n};\r\n\r\nconst config = {\r\n\tbeforeCodeTitle: 'Table with sorting',\r\n\thtmlCode: `\r\n<div class=\"example-container mat-elevation-z8\">\r\n  <mat-table #table [dataSource]=\"dataSource\" matSort>\r\n  <!-- Position Column -->\r\n  <ng-container matColumnDef=\"position\">\r\n    <mat-header-cell *matHeaderCellDef mat-sort-header> No. </mat-header-cell>\r\n    <mat-cell *matCellDef=\"let element\"> {{element.position}} </mat-cell>\r\n  </ng-container>\r\n  <!-- Name Column -->\r\n  <ng-container matColumnDef=\"name\">\r\n    <mat-header-cell *matHeaderCellDef mat-sort-header> Name </mat-header-cell>\r\n    <mat-cell *matCellDef=\"let element\"> {{element.name}} </mat-cell>\r\n  </ng-container>\r\n  <!-- Weight Column -->\r\n  <ng-container matColumnDef=\"weight\">\r\n    <mat-header-cell *matHeaderCellDef mat-sort-header> Weight </mat-header-cell>\r\n    <mat-cell *matCellDef=\"let element\"> {{element.weight}} </mat-cell>\r\n  </ng-container>\r\n  <!-- Symbol Column -->\r\n  <ng-container matColumnDef=\"symbol\">\r\n    <mat-header-cell *matHeaderCellDef mat-sort-header> Symbol </mat-header-cell>\r\n    <mat-cell *matCellDef=\"let element\"> {{element.symbol}} </mat-cell>\r\n  </ng-container>\r\n  <mat-header-row *matHeaderRowDef=\"displayedColumns\"></mat-header-row>\r\n  <mat-row *matRowDef=\"let row; columns: displayedColumns;\"></mat-row>\r\n  </mat-table>\r\n</div>`,\r\n\ttsCode: `\r\nimport {Component, ViewChild} from '@angular/core';\r\nimport {MatTableDataSource, MatSort} from '@angular/material';\\n\r\n/**\r\n* @title Table with sorting\r\n*/\r\n@Component({\r\n  selector: 'table-sorting-example',\r\n  styleUrls: ['table-sorting-example.css'],\r\n  templateUrl: 'table-sorting-example.html',\r\n})\r\nexport class TableSortingExample {\r\n  displayedColumns = ['position', 'name', 'weight', 'symbol'];\r\n  dataSource = new MatTableDataSource(ELEMENT_DATA);\\n\r\n  @ViewChild(MatSort, {static: true}) sort: MatSort;\\n\r\n  /**\r\n  * Set the sort after the view init since this component will\r\n  * be able to query its view for the initialized sort.\r\n  */\r\n  ngAfterViewInit() {\r\n    this.dataSource.sort = this.sort;\r\n  }\r\n}\r\nexport interface Element {\r\n  name: string;\r\n  position: number;\r\n  weight: number;\r\n  symbol: string;\r\n}\\n\r\nconst ELEMENT_DATA: Element[] = [\r\n  {position: 1, name: 'Hydrogen', weight: 1.0079, symbol: 'H'},\r\n  {position: 2, name: 'Helium', weight: 4.0026, symbol: 'He'},\r\n  {position: 3, name: 'Lithium', weight: 6.941, symbol: 'Li'},\r\n  {position: 4, name: 'Beryllium', weight: 9.0122, symbol: 'Be'},\r\n  {position: 5, name: 'Boron', weight: 10.811, symbol: 'B'},\r\n  {position: 6, name: 'Carbon', weight: 12.0107, symbol: 'C'},\r\n  {position: 7, name: 'Nitrogen', weight: 14.0067, symbol: 'N'},\r\n  {position: 8, name: 'Oxygen', weight: 15.9994, symbol: 'O'},\r\n  {position: 9, name: 'Fluorine', weight: 18.9984, symbol: 'F'},\r\n  {position: 10, name: 'Neon', weight: 20.1797, symbol: 'Ne'},\r\n  {position: 11, name: 'Sodium', weight: 22.9897, symbol: 'Na'},\r\n  {position: 12, name: 'Magnesium', weight: 24.305, symbol: 'Mg'},\r\n  {position: 13, name: 'Aluminum', weight: 26.9815, symbol: 'Al'},\r\n  {position: 14, name: 'Silicon', weight: 28.0855, symbol: 'Si'},\r\n  {position: 15, name: 'Phosphorus', weight: 30.9738, symbol: 'P'},\r\n  {position: 16, name: 'Sulfur', weight: 32.065, symbol: 'S'},\r\n  {position: 17, name: 'Chlorine', weight: 35.453, symbol: 'Cl'},\r\n  {position: 18, name: 'Argon', weight: 39.948, symbol: 'Ar'},\r\n  {position: 19, name: 'Potassium', weight: 39.0983, symbol: 'K'},\r\n  {position: 20, name: 'Calcium', weight: 40.078, symbol: 'Ca'},\r\n];`,\r\n\tcssCode: `\r\n.example-container {\r\n  display: flex;\r\n  flex-direction: column;\r\n  min-width: 300px;\r\n}\r\n.mat-table {\r\n  overflow: auto;\r\n  max-height: 500px;\r\n}\r\n.mat-header-cell.mat-sort-header-sorted {\r\n  color: black;\r\n}`,\r\n\tviewCode: ``,\r\n\tisCodeVisible: false\r\n};\r\n\r\nexport interface Element {\r\n\tname: string;\r\n\tposition: number;\r\n\tweight: number;\r\n\tsymbol: string;\r\n}\r\n\r\nconst ELEMENT_DATA: Element[] = [\r\n\t{ position: 1, name: 'Hydrogen', weight: 1.0079, symbol: 'H' },\r\n\t{ position: 2, name: 'Helium', weight: 4.0026, symbol: 'He' },\r\n\t{ position: 3, name: 'Lithium', weight: 6.941, symbol: 'Li' },\r\n\t{ position: 4, name: 'Beryllium', weight: 9.0122, symbol: 'Be' },\r\n\t{ position: 5, name: 'Boron', weight: 10.811, symbol: 'B' },\r\n\t{ position: 6, name: 'Carbon', weight: 12.0107, symbol: 'C' },\r\n\t{ position: 7, name: 'Nitrogen', weight: 14.0067, symbol: 'N' },\r\n\t{ position: 8, name: 'Oxygen', weight: 15.9994, symbol: 'O' },\r\n\t{ position: 9, name: 'Fluorine', weight: 18.9984, symbol: 'F' },\r\n\t{ position: 10, name: 'Neon', weight: 20.1797, symbol: 'Ne' },\r\n\t{ position: 11, name: 'Sodium', weight: 22.9897, symbol: 'Na' },\r\n\t{ position: 12, name: 'Magnesium', weight: 24.305, symbol: 'Mg' },\r\n\t{ position: 13, name: 'Aluminum', weight: 26.9815, symbol: 'Al' },\r\n\t{ position: 14, name: 'Silicon', weight: 28.0855, symbol: 'Si' },\r\n\t{ position: 15, name: 'Phosphorus', weight: 30.9738, symbol: 'P' },\r\n\t{ position: 16, name: 'Sulfur', weight: 32.065, symbol: 'S' },\r\n\t{ position: 17, name: 'Chlorine', weight: 35.453, symbol: 'Cl' },\r\n\t{ position: 18, name: 'Argon', weight: 39.948, symbol: 'Ar' },\r\n\t{ position: 19, name: 'Potassium', weight: 39.0983, symbol: 'K' },\r\n\t{ position: 20, name: 'Calcium', weight: 40.078, symbol: 'Ca' },\r\n];\r\n\r\nfunction compare(a, b, isAsc) {\r\n\treturn (a < b ? -1 : 1) * (isAsc ? 1 : -1);\r\n}\r\n\r\n@Component({\r\n\tselector: 'kt-sort-header',\r\n\ttemplateUrl: './sort-header.component.html',\r\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\r\n\tstyles: [`\r\n\t.mat-sort-header-container {\r\n\t\talign-items: center;\r\n\t  }\r\n\t  .example-container {\r\n\t\tdisplay: flex;\r\n\t\tflex-direction: column;\r\n\t\tmin-width: 300px;\r\n\t  }\r\n\t  .mat-table {\r\n\t\toverflow: auto;\r\n\t\tmax-height: 500px;\r\n\t  }\r\n\t  .mat-header-cell.mat-sort-header-sorted {\r\n\t\tcolor: black;\r\n\t  }\r\n\t`]\r\n})\r\nexport class SortHeaderComponent implements OnInit, AfterViewInit {\r\n\r\n\texampleBasic;\r\n\texampleConfig;\r\n\r\n\tdisplayedColumns = ['position', 'name', 'weight', 'symbol'];\r\n\tdataSource = new MatTableDataSource(ELEMENT_DATA);\r\n\r\n\tdesserts = [\r\n\t\t{ name: 'Frozen yogurt', calories: '159', fat: '6', carbs: '24', protein: '4' },\r\n\t\t{ name: 'Ice cream sandwich', calories: '237', fat: '9', carbs: '37', protein: '4' },\r\n\t\t{ name: 'Eclair', calories: '262', fat: '16', carbs: '24', protein: '6' },\r\n\t\t{ name: 'Cupcake', calories: '305', fat: '4', carbs: '67', protein: '4' },\r\n\t\t{ name: 'Gingerbread', calories: '356', fat: '16', carbs: '49', protein: '4' },\r\n\t];\r\n\r\n\tsortedData;\r\n\r\n  @ViewChild('sort1', {static: true}) sort1: MatSort;\r\n  @ViewChild('sort2', {static: true}) sort2: MatSort;\r\n\r\n\r\n\tngOnInit() {\r\n\t\tthis.exampleBasic = basic;\r\n\t\tthis.exampleConfig = config;\r\n\t}\r\n\r\n\tconstructor() {\r\n\t\tthis.sortedData = this.desserts.slice();\r\n\t}\r\n\r\n\tngAfterViewInit() {\r\n\t\tthis.dataSource.sort = this.sort2;\r\n\t}\r\n\r\n\tsortData(_sort: Sort) {\r\n\t\tconst data = this.desserts.slice();\r\n\t\tif (!_sort.active || _sort.direction === '') {\r\n\t\t\tthis.sortedData = data;\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tthis.sortedData = data.sort((a, b) => {\r\n\t\t\tconst isAsc = _sort.direction === 'asc';\r\n\t\t\tswitch (_sort.active) {\r\n\t\t\t\tcase 'name': return compare(a.name, b.name, isAsc);\r\n\t\t\t\tcase 'calories': return compare(+a.calories, +b.calories, isAsc);\r\n\t\t\t\tcase 'fat': return compare(+a.fat, +b.fat, isAsc);\r\n\t\t\t\tcase 'carbs': return compare(+a.carbs, +b.carbs, isAsc);\r\n\t\t\t\tcase 'protein': return compare(+a.protein, +b.protein, isAsc);\r\n\t\t\t\tdefault: return 0;\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n}\r\n","<kt-notice [svg]=\"'assets/media/svg/icons/Tools/Compass.svg'\">\r\n\tFor more info please check the components's official demos & documentation\r\n\t<a class=\"font-weight-bold\" href=\"https://material.angular.io/components/autocomplete/overview\" target=\"_blank\">demos & documentation</a>\r\n</kt-notice>\r\n\r\n<div class=\"row\">\r\n\t<div class=\"col-xl-6\">\r\n\t\t<kt-code-preview [viewItem]=\"exampleSimpleAutocomplete\">\r\n\t\t\t<div class=\"example-preview\">\r\n\t\t\t\t<span>The autocomplete is a normal text input enhanced by a panel of suggested options.\r\n\t\t\t\t</span>\r\n\t\t\t\t<div class=\"separator separator-dashed my-6\"></div>\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<form class=\"example-form\">\r\n\t\t\t\t\t\t<mat-form-field class=\"example-full-width\">\r\n\t\t\t\t\t\t\t<input type=\"text\" placeholder=\"Pick one\" aria-label=\"Number\" matInput [formControl]=\"myControl\" [matAutocomplete]=\"auto1\">\r\n\t\t\t\t\t\t\t<mat-autocomplete #auto1=\"matAutocomplete\">\r\n\t\t\t\t\t\t\t\t<mat-option *ngFor=\"let option of options\" [value]=\"option\">\r\n\t\t\t\t\t\t\t\t\t{{ option }}\r\n\t\t\t\t\t\t\t\t</mat-option>\r\n\t\t\t\t\t\t\t</mat-autocomplete>\r\n\t\t\t\t\t\t</mat-form-field>\r\n\t\t\t\t\t</form>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</kt-code-preview>\r\n\r\n\t\t<kt-code-preview [viewItem]=\"exampleAddingACustomFilter\">\r\n\t\t\t<div class=\"example-preview\">\r\n\t\t\t\t<span>\r\n\t\t\t\t\tAt this point, the autocomplete panel should be toggleable on focus and options should be selectable. But if we want our options to filter when we type, we need to add a custom filter.\r\n\t\t\t\t</span>\r\n\t\t\t\t<div class=\"separator separator-dashed my-6\"></div>\r\n\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<form class=\"example-form\">\r\n\t\t\t\t\t\t<mat-form-field class=\"example-full-width\">\r\n\t\t\t\t\t\t\t<input type=\"text\" placeholder=\"Pick one\" aria-label=\"Number\" matInput [formControl]=\"myControl2\" [matAutocomplete]=\"auto2\">\r\n\t\t\t\t\t\t\t<mat-autocomplete #auto2=\"matAutocomplete\">\r\n\t\t\t\t\t\t\t\t<mat-option *ngFor=\"let option of filteredOptions | async\" [value]=\"option\">\r\n\t\t\t\t\t\t\t\t\t{{ option }}\r\n\t\t\t\t\t\t\t\t</mat-option>\r\n\t\t\t\t\t\t\t</mat-autocomplete>\r\n\t\t\t\t\t\t</mat-form-field>\r\n\t\t\t\t\t</form>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</kt-code-preview>\r\n\r\n\t\t<kt-code-preview [viewItem]=\"exampleSettingSeparateControlAndDisplayValues\">\r\n\t\t\t<div class=\"example-preview\">\r\n\t\t\t\t<span>\r\n\t\t\t\t\tIf you want the option's control value (what is saved in the form) to be different than the option's display value (what is displayed in the text field), you'll need to set the\r\n\t\t\t\t\t<code>displayWith</code> property on your autocomplete element. A common use case for this might be if you want to save your data as an object, but display just one of the option's string properties. To make this work, create a function on your component class that maps the control value to the desired display value. Then bind it to the autocomplete's\r\n\t\t\t\t\t<code>displayWith</code> property.\r\n\t\t\t\t</span>\r\n\t\t\t\t<div class=\"separator separator-dashed my-6\"></div>\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<form class=\"example-form\">\r\n\t\t\t\t\t\t<mat-form-field class=\"example-full-width\">\r\n\t\t\t\t\t\t\t<input type=\"text\" placeholder=\"Assignee\" aria-label=\"Assignee\" matInput [formControl]=\"myControl33\" [matAutocomplete]=\"auto33\">\r\n\t\t\t\t\t\t\t<mat-autocomplete #auto33=\"matAutocomplete\" [displayWith]=\"displayFn\">\r\n\t\t\t\t\t\t\t\t<mat-option *ngFor=\"let option of filteredOptions33 | async\" [value]=\"option\">\r\n\t\t\t\t\t\t\t\t\t{{ option.name }}\r\n\t\t\t\t\t\t\t\t</mat-option>\r\n\t\t\t\t\t\t\t</mat-autocomplete>\r\n\t\t\t\t\t\t</mat-form-field>\r\n\t\t\t\t\t</form>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</kt-code-preview>\r\n\t</div>\r\n\r\n\t<div class=\"col-xl-6\">\r\n\r\n\t\t<kt-code-preview [viewItem]=\"exampleAutomaticallyHighlightingTheFirstOption\">\r\n\t\t\t<div class=\"example-preview\">\r\n\t\t\t\t<span>\r\n\t\t\t\t\tIf your use case requires for the first autocomplete option to be highlighted when the user opens the panel, you can do so by setting the\r\n\t\t\t\t\t<code>autoActiveFirstOption</code> input on the\r\n\t\t\t\t\t<code>mat-autocomplete</code> component. This behavior can be configured globally using the\r\n\t\t\t\t\t<code>MAT_AUTOCOMPLETE_DEFAULT_OPTIONS</code> injection token.\r\n\t\t\t\t</span>\r\n\t\t\t\t<div class=\"separator separator-dashed my-6\"></div>\r\n\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<form class=\"example-form\">\r\n\t\t\t\t\t\t<mat-form-field class=\"example-full-width\">\r\n\t\t\t\t\t\t\t<input type=\"text\" placeholder=\"Pick one\" aria-label=\"Number\" matInput [formControl]=\"myControl44\" [matAutocomplete]=\"auto44\">\r\n\t\t\t\t\t\t\t<mat-autocomplete autoActiveFirstOption #auto44=\"matAutocomplete\">\r\n\t\t\t\t\t\t\t\t<mat-option *ngFor=\"let option of filteredOptions44 | async\" [value]=\"option\">\r\n\t\t\t\t\t\t\t\t\t{{ option }}\r\n\t\t\t\t\t\t\t\t</mat-option>\r\n\t\t\t\t\t\t\t</mat-autocomplete>\r\n\t\t\t\t\t\t</mat-form-field>\r\n\t\t\t\t\t</form>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</kt-code-preview>\r\n\r\n\t\t<kt-code-preview [viewItem]=\"exampleAutocompleteOverview\">\r\n\t\t\t<div class=\"example-preview\">\r\n\t\t\t\t<span>\r\n\t\t\t\t\tIf your use case requires for the first autocomplete option to be highlighted when the user opens the panel, you can do so by setting the\r\n\t\t\t\t\t<code>autoActiveFirstOption</code> input on the\r\n\t\t\t\t\t<code>mat-autocomplete</code> component. This behavior can be configured globally using the\r\n\t\t\t\t\t<code>MAT_AUTOCOMPLETE_DEFAULT_OPTIONS</code> injection token.\r\n\t\t\t\t</span>\r\n\t\t\t\t<div class=\"separator separator-dashed my-6\"></div>\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<form class=\"example-form\">\r\n\t\t\t\t\t\t<mat-form-field class=\"example-full-width\">\r\n\t\t\t\t\t\t\t<input matInput placeholder=\"State\" aria-label=\"State\" [matAutocomplete]=\"auto55\" [formControl]=\"stateCtrl\">\r\n\t\t\t\t\t\t\t<mat-autocomplete #auto55=\"matAutocomplete\">\r\n\t\t\t\t\t\t\t\t<mat-option *ngFor=\"let state of filteredStates | async\" [value]=\"state.name\">\r\n\t\t\t\t\t\t\t\t\t<img style=\"vertical-align:middle;\" aria-hidden src=\"{{state.flag}}\" height=\"25\" />&nbsp;\r\n\t\t\t\t\t\t\t\t\t<span>{{ state.name }}</span> |\r\n\t\t\t\t\t\t\t\t\t<small>Population: {{state.population}}</small>\r\n\t\t\t\t\t\t\t\t</mat-option>\r\n\t\t\t\t\t\t\t</mat-autocomplete>\r\n\t\t\t\t\t\t</mat-form-field>\r\n\t\t\t\t\t\t<br />\r\n\t\t\t\t\t\t<mat-slide-toggle [checked]=\"stateCtrl.disabled\" (change)=\"stateCtrl.disabled ? stateCtrl.enable() : stateCtrl.disable()\">\r\n\t\t\t\t\t\t\tDisable Input?\r\n\t\t\t\t\t\t</mat-slide-toggle>\r\n\t\t\t\t\t</form>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\r\n\t\t</kt-code-preview>\r\n\r\n\t\t<kt-code-preview [viewItem]=\"exampleOptionGroupsAutocomplete\">\r\n\t\t\t<div class=\"example-preview\">\r\n\t\t\t\t<span>\r\n\t\t\t\t\t<code>mat-option</code>can be collected into groups using the mat-optgroup element:\r\n\t\t\t\t</span>\r\n\t\t\t\t<div class=\"separator separator-dashed my-6\"></div>\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<form [formGroup]=\"stateForm\">\r\n\t\t\t\t\t\t<mat-form-field>\r\n\t\t\t\t\t\t\t<input type=\"text\"\r\n\t\t\t\t\t\t\t\tmatInput\r\n\t\t\t\t\t\t\t\tplaceholder=\"States Group\"\r\n\t\t\t\t\t\t\t\tformControlName=\"stateGroup\"\r\n\t\t\t\t\t\t\t\trequired\r\n\t\t\t\t\t\t\t\t[matAutocomplete]=\"autoGroup\" />\r\n\t\t\t\t\t\t\t<mat-autocomplete #autoGroup=\"matAutocomplete\">\r\n\t\t\t\t\t\t\t\t<mat-optgroup *ngFor=\"let group of stateGroupOptions | async\" [label]=\"group.letter\">\r\n\t\t\t\t\t\t\t\t\t<mat-option *ngFor=\"let name of group.names\" [value]=\"name\">\r\n\t\t\t\t\t\t\t\t\t\t{{ name }}\r\n\t\t\t\t\t\t\t\t\t</mat-option>\r\n\t\t\t\t\t\t\t\t</mat-optgroup>\r\n\t\t\t\t\t\t\t</mat-autocomplete>\r\n\t\t\t\t\t\t</mat-form-field>\r\n\t\t\t\t\t</form>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</kt-code-preview>\r\n\t</div>\r\n</div>\r\n","import { Component, OnInit, ChangeDetectionStrategy } from '@angular/core';\r\nimport { FormControl, FormGroup, FormBuilder, NgModel } from '@angular/forms';\r\nimport { Observable } from 'rxjs';\r\nimport { map, startWith } from 'rxjs/operators';\r\n\r\nconst simpleAutocomplete = {\r\n\tbeforeCodeTitle: 'Simple autocomplete',\r\n\thtmlCode: `<form class=\"example-full-width\">\r\n  <mat-form-field class=\"example-full-width\">\r\n    <input type=\"text\" placeholder=\"Pick one\" aria-label=\"Number\"\r\n      matInput [formControl]=\"myControl\"\r\n      [matAutocomplete]=\"auto\">\r\n      <mat-autocomplete #auto=\"matAutocomplete\">\r\n        <mat-option *ngFor=\"let option of options\" [value]=\"option\">\r\n          {{ option }}\r\n        </mat-option>\r\n       </mat-autocomplete>\r\n  </mat-form-field>\r\n</form>\r\n`,\r\n  tsCode: `\r\nimport {FormControl} from '@angular/forms';\r\nimport {Component} from '@angular/core';\\n\r\n/**\r\n* @title Simple autocomplete\r\n*/\r\n@Component({\r\n    selector: 'autocomplete-simple-example',\r\n    templateUrl: 'autocomplete-simple-example.html',\r\n    styleUrls: ['autocomplete-simple-example.css']\r\n})\r\nexport class AutocompleteSimpleExample {\r\n    myControl: FormControl = new FormControl();\r\n    options = [\r\n        'One',\r\n        'Two',\r\n        'Three'\r\n    ];\r\n}`,\r\n\tcssCode: `.example-form {\r\n    min-width: 150px;\r\n    max-width: 500px;\r\n    width: 100%;\r\n}\r\n.example-full-width {\r\n    width: 100%;\r\n}`,\r\n\tviewCode: ``,\r\n\tisCodeVisible: false,\r\n\tisExampleExpanded: true\r\n};\r\n\r\nconst addingACustomFilter = {\r\n\tbeforeCodeTitle: 'Adding a custom filter',\r\n\thtmlCode: `<form class=\"example-form\">\r\n  <mat-form-field class=\"example-full-width\">\r\n    <input type=\"text\" placeholder=\"Pick one\" aria-label=\"Number\" matInput [formControl]=\"myControl\" [matAutocomplete]=\"auto\">\r\n      <mat-autocomplete #auto=\"matAutocomplete\">\r\n        <mat-option *ngFor=\"let option of filteredOptions | async\" [value]=\"option\">\r\n          {{ option }}\r\n        </mat-option>\r\n      </mat-autocomplete>\r\n  </mat-form-field>\r\n</form>`,\r\n\ttsCode: `import {Component} from '@angular/core';\r\nimport {FormControl} from '@angular/forms';\r\nimport {Observable} from 'rxjs/Observable';\r\nimport {startWith} from 'rxjs/operators/startWith';\r\nimport {map} from 'rxjs/operators/map';\\n\r\n/**\r\n* @title Filter autocomplete\r\n*/\r\n@Component({\r\n  selector: 'autocomplete-filter-example',\r\n  templateUrl: 'autocomplete-filter-example.html',\r\n  styleUrls: ['autocomplete-filter-example.css']\r\n})\r\nexport class AutocompleteFilterExample {\\n\r\n  myControl: FormControl = new FormControl();\\n\r\n  options = [\r\n    'One',\r\n    'Two',\r\n\t'Three'\r\n  ];\\n\r\n  filteredOptions: Observable<string[]>;\\n\r\n  ngOnInit() {\r\n    this.filteredOptions = this.myControl.valueChanges\r\n      .pipe(\r\n        startWith(''),\r\n         map(val => this.filter(val))\r\n      );\r\n  }\\n\r\n  filter(val: string): string[] {\r\n    return this.options.filter(option =>\r\n\t\toption.toLowerCase().includes(val.toLowerCase()));\r\n  }\r\n}`,\r\n\tcssCode: `.example-form {\r\n  min-width: 150px;\r\n  max-width: 500px;\r\n  width: 100%;\r\n}\r\n.example-full-width {\r\n  width: 100%;\r\n}`,\r\n\tviewCode: ``,\r\n\tisCodeVisible: false\r\n};\r\n\r\nconst settingSeparateControlAndDisplayValues = {\r\n\tbeforeCodeTitle: 'Setting separate control and display valuess',\r\n\tbeforeCodeDescription: ``,\r\n\thtmlCode: `<form class=\"example-form\">\r\n  <mat-form-field class=\"example-full-width\">\r\n    <input type=\"text\" placeholder=\"Assignee\" aria-label=\"Assignee\" matInput [formControl]=\"myControl\" [matAutocomplete]=\"auto\">\r\n    <mat-autocomplete #auto=\"matAutocomplete\" [displayWith]=\"displayFn\">\r\n      <mat-option *ngFor=\"let option of filteredOptions | async\" [value]=\"option\">\r\n        {{ option.name }}\r\n      </mat-option>\r\n    </mat-autocomplete>\r\n  </mat-form-field>\r\n</form>`,\r\n\ttsCode: `import {Component} from '@angular/core';\r\nimport {FormControl} from '@angular/forms';\r\nimport {Observable} from 'rxjs/Observable';\r\nimport {startWith} from 'rxjs/operators/startWith';\r\nimport {map} from 'rxjs/operators/map';\\n\r\nexport class User {\r\n  constructor(public name: string) { }\r\n}\r\n/**\r\n* @title Display value autocomplete\r\n*/\r\n@Component({\r\n  selector: 'autocomplete-display-example',\r\n  templateUrl: 'autocomplete-display-example.html',\r\n  styleUrls: ['autocomplete-display-example.css']\r\n})\r\nexport class AutocompleteDisplayExample {\\n\r\n  myControl = new FormControl();\\n\r\n  options = [\r\n    new User('Mary'),\r\n    new User('Shelley'),\r\n    new User('Igor')\r\n  ];\\n\r\n  filteredOptions: Observable<User[]>;\\n\r\n  ngOnInit() {\r\n    this.filteredOptions = this.myControl.valueChanges\r\n      .pipe(\r\n        startWith<string | User>(''),\r\n        map(value => typeof value === 'string' ? value : value.name),\r\n        map(name => name ? this.filter(name) : this.options.slice())\r\n      );\r\n  }\\n\r\n  filter(name: string): User[] {\r\n    return this.options.filter(option =>\r\n      option.name.toLowerCase().indexOf(name.toLowerCase()) === 0);\r\n  }\\n\r\n  displayFn(user?: User): string | undefined {\r\n    return user ? user.name : undefined;\r\n  }\\n\r\n}`,\r\n\tcssCode: `.example-form {\r\n  min-width: 150px;\r\n  max-width: 500px;\r\n  width: 100%;\r\n}\r\n.example-full-width {\r\n  width: 100%;\r\n}`,\r\n\tviewCode: ``,\r\n\tisCodeVisible: false\r\n};\r\n\r\nconst automaticallyHighlightingTheFirstOption = {\r\n\tbeforeCodeTitle: 'Automatically highlighting the first option',\r\n\thtmlCode: `<form class=\"example-form\">\r\n  <mat-form-field class=\"example-full-width\">\r\n    <input type=\"text\" placeholder=\"Pick one\" aria-label=\"Number\" matInput [formControl]=\"myControl\" [matAutocomplete]=\"auto\">\r\n    <mat-autocomplete autoActiveFirstOption #auto=\"matAutocomplete\">\r\n      <mat-option *ngFor=\"let option of filteredOptions | async\" [value]=\"option\">\r\n        {{ option }}\r\n      </mat-option>\r\n    </mat-autocomplete>\r\n  </mat-form-field>\r\n</form>`,\r\n\ttsCode: `import {Component} from '@angular/core';\r\nimport {FormControl} from '@angular/forms';\r\nimport {Observable} from 'rxjs/Observable';\r\nimport {startWith} from 'rxjs/operators/startWith';\r\nimport {map} from 'rxjs/operators/map';\r\n/**\r\n* @title Highlight the first autocomplete option\r\n*/\r\n@Component({\r\n  selector: 'autocomplete-auto-active-first-option-example',\r\n  templateUrl: 'autocomplete-auto-active-first-option-example.html',\r\n  styleUrls: ['autocomplete-auto-active-first-option-example.css']\r\n})\r\nexport class AutocompleteAutoActiveFirstOptionExample {\r\n  myControl: FormControl = new FormControl();\r\n  options = ['One', 'Two', 'Three'];\r\n  filteredOptions: Observable<string[]>;\\n\r\n  ngOnInit() {\r\n    this.filteredOptions = this.myControl.valueChanges.pipe(\r\n      startWith(''),\r\n      map(val => this.filter(val))\r\n    );\\n\r\n  filter(val: string): string[] {\r\n    return this.options.filter(option => option.toLowerCase().indexOf(val.toLowerCase()) === 0);\r\n  }\\n\r\n}`,\r\n\tcssCode: `.example-form {\r\n  min-width: 150px;\r\n  max-width: 500px;\r\n  width: 100%;\r\n}\r\n.example-full-width {\r\n  width: 100%;\r\n}`,\r\n\tviewCode: ``,\r\n\tisCodeVisible: false\r\n};\r\n\r\nconst autocompleteOverview = {\r\n\tbeforeCodeTitle: 'Autocomplete overview',\r\n\thtmlCode: `<form class=\"example-form\">\r\n  <mat-form-field class=\"example-full-width\">\r\n    <input matInput placeholder=\"State\" aria-label=\"State\" [matAutocomplete]=\"auto\" [formControl]=\"stateCtrl\">\r\n    <mat-autocomplete #auto=\"matAutocomplete\">\r\n      <mat-option *ngFor=\"let state of filteredStates | async\" [value]=\"state.name\">\r\n        <img style=\"vertical-align:middle;\" aria-hidden src=\"{{state.flag}}\" height=\"25\" />\r\n        <span>{{ state.name }}</span> |\r\n        <small>Population: {{state.population}}</small>\r\n      </mat-option>\r\n    </mat-autocomplete>\r\n  </mat-form-field>\r\n  <br />\r\n  <mat-slide-toggle\r\n    [checked]=\"stateCtrl.disabled\"\r\n    (change)=\"stateCtrl.disabled ? stateCtrl.enable() : stateCtrl.disable()\">\r\n    Disable Input?\r\n  </mat-slide-toggle>\r\n</form>`,\r\n\ttsCode: `import {Component} from '@angular/core';\r\nimport {FormControl} from '@angular/forms';\\n\r\nimport {Observable} from 'rxjs/Observable';\r\nimport {startWith} from 'rxjs/operators/startWith';\r\nimport {map} from 'rxjs/operators/map';\\n\r\nexport class State {\r\n  constructor(public name: string, public population: string, public flag: string) { }\r\n}\\n\r\n/**\r\n * @title Autocomplete overview\r\n*/\r\n@Component({\r\n  selector: 'autocomplete-overview-example',\r\n  templateUrl: 'autocomplete-overview-example.html',\r\n  styleUrls: ['autocomplete-overview-example.css']\r\n})\r\nexport class AutocompleteOverviewExample {\r\n  stateCtrl: FormControl;\r\n  filteredStates: Observable<any[]>;\r\n  states: State[] = [\r\n  {\r\n    name: 'Arkansas',\r\n    population: '2.978M',\r\n    // https://commons.wikimedia.org/wiki/File:Flag_of_Arkansas.svg\r\n    flag: 'https://upload.wikimedia.org/wikipedia/commons/9/9d/Flag_of_Arkansas.svg'\r\n  },\r\n  {\r\n\tname: 'California',\r\n    population: '39.14M',\r\n    // https://commons.wikimedia.org/wiki/File:Flag_of_California.svg\r\n    flag: 'https://upload.wikimedia.org/wikipedia/commons/0/01/Flag_of_California.svg'\r\n  },\r\n  {\r\n    name: 'Florida',\r\n\tpopulation: '20.27M',\r\n\t// https://commons.wikimedia.org/wiki/File:Flag_of_Florida.svg\r\n\tflag: 'https://upload.wikimedia.org/wikipedia/commons/f/f7/Flag_of_Florida.svg'\r\n  },\r\n  {\r\n    name: 'Texas',\r\n    population: '27.47M',\r\n    // https://commons.wikimedia.org/wiki/File:Flag_of_Texas.svg\r\n    flag: 'https://upload.wikimedia.org/wikipedia/commons/f/f7/Flag_of_Texas.svg'\r\n  }\r\n];\r\n  constructor() {\r\n    this.stateCtrl = new FormControl();\r\n     this.filteredStates = this.stateCtrl.valueChanges\r\n      .pipe(\r\n        startWith(''),\r\n        map(state => state ? this.filterStates(state) : this.states.slice())\r\n      );\r\n}\r\n  filterStates(name: string) {\r\n    return this.states.filter(state =>\r\n      state.name.toLowerCase().indexOf(name.toLowerCase()) === 0);\r\n  }\r\n}\r\n`,\r\n\tviewCode: ``,\r\n\tisCodeVisible: false\r\n};\r\n\r\nconst optionGroupsAutocomplete = {\r\n\tbeforeCodeTitle: 'Option groups autocomplete',\r\n\thtmlCode: `<form [formGroup]=\"stateForm\">\r\n  <mat-form-field>\r\n    <input type=\"text\" matInput placeholder=\"States Group\" formControlName=\"stateGroup\" required [matAutocomplete]=\"autoGroup\"/>\r\n      <mat-autocomplete #autoGroup=\"matAutocomplete\">\r\n        <mat-optgroup *ngFor=\"let group of stateGroupOptions | async\" [label]=\"group.letter\">\r\n          <mat-option *ngFor=\"let name of group.names\" [value]=\"name\">\r\n            {{ name }}\r\n          </mat-option>\r\n        </mat-optgroup>\r\n      </mat-autocomplete>\r\n  </mat-form-field>\r\n</form>  `,\r\n\ttsCode: `import {Component, OnInit} from '@angular/core';\r\nimport {FormGroup, FormBuilder} from '@angular/forms';\r\nimport {Observable} from 'rxjs';\r\nimport {startWith, map} from 'rxjs/operators';\r\n\r\nexport interface StateGroup {\r\n  letter: string;\r\n  names: string[];\r\n}\r\n\r\n/**\r\n* @title Option groups autocomplete\r\n*/\r\n@Component({\r\n  templateUrl: './autocomplete-optgroup-example.html',\r\n  styleUrls: ['./autocomplete-optgroup-example.css'],\r\n})\r\n\r\nexport class AutocompleteOptgroupExample implements OnInit {\r\n  stateForm: FormGroup = this.fb.group({\r\n  stateGroup: '',\r\n});\r\n\r\nstateGroups: StateGroup[] = [{\r\n  letter: 'A',\r\n  names: ['Alabama', 'Alaska', 'Arizona', 'Arkansas']\r\n}, {\r\n  letter: 'C',\r\n  names: ['California', 'Colorado', 'Connecticut']\r\n}, {\r\n  letter: 'D',\r\n  names: ['Delaware']\r\n}, {\r\n  letter: 'F',\r\n  names: ['Florida']\r\n}, {\r\n  letter: 'G',\r\n  names: ['Georgia']\r\n}, {\r\n  letter: 'H',\r\n  names: ['Hawaii']\r\n}, {\r\n  letter: 'I',\r\n  names: ['Idaho', 'Illinois', 'Indiana', 'Iowa']\r\n}, {\r\n  letter: 'K',\r\n  names: ['Kansas', 'Kentucky']\r\n}, {\r\n  letter: 'L',\r\n  names: ['Louisiana']\r\n}, {\r\n  letter: 'M',\r\n  names: ['Maine', 'Maryland', 'Massachusetts', 'Michigan',\r\n  'Minnesota', 'Mississippi', 'Missouri', 'Montana']\r\n}, {\r\n  letter: 'N',\r\n  names: ['Nebraska', 'Nevada', 'New Hampshire', 'New Jersey',\r\n  'New Mexico', 'New York', 'North Carolina', 'North Dakota']\r\n}, {\r\n  letter: 'O',\r\n  names: ['Ohio', 'Oklahoma', 'Oregon']\r\n}, {\r\n  letter: 'P',\r\n  names: ['Pennsylvania']\r\n}, {\r\n  letter: 'R',\r\n  names: ['Rhode Island']\r\n}, {\r\n  letter: 'S',\r\n  names: ['South Carolina', 'South Dakota']\r\n}, {\r\n  letter: 'T',\r\n  names: ['Tennessee', 'Texas']\r\n}, {\r\n  letter: 'U',\r\n  names: ['Utah']\r\n}, {\r\n  letter: 'V',\r\n  names: ['Vermont', 'Virginia']\r\n}, {\r\n  letter: 'W',\r\n  names: ['Washington', 'West Virginia', 'Wisconsin', 'Wyoming']\r\n}];\r\n\r\n  stateGroupOptions: Observable<StateGroup[]>;\r\n\r\n  constructor(private fb: FormBuilder) { }\r\n\r\n  ngOnInit() {\r\n    this.stateGroupOptions = this.stateForm.get('stateGroup')!.valueChanges\r\n      .pipe(\r\n        startWith(''),\r\n          map(val => this.filterGroup(val))\r\n       );\r\n  }\r\n\r\n  filterGroup(val: string): StateGroup[] {\r\n    if (val) {\r\n      return this.stateGroups\r\n      .map(group => ({ letter: group.letter, names: this._filter(group.names, val) }))\r\n      .filter(group => group.names.length > 0);\r\n    }\r\n\r\n     return this.stateGroups;\r\n  }\r\n\r\n  private _filter(opt: string[], val: string) {\r\n    const filterValue = val.toLowerCase();\r\n      return opt.filter(item => item.toLowerCase().startsWith(filterValue));\r\n  }\r\n}`,\r\n\tcssCode: ``,\r\n\tviewCode: ``,\r\n\tisCodeVisible: false\r\n};\r\n\r\nexport class User {\r\n\tconstructor(public name: string) { }\r\n  }\r\n\r\nexport class State {\r\n\tconstructor(public name: string, public population: string, public flag: string) { }\r\n}\r\n\r\nexport interface StateGroup {\r\n\tletter: string;\r\n\tnames: string[];\r\n}\r\n\r\n@Component({\r\n\tselector: 'kt-autocomplete',\r\n\ttemplateUrl: './autocomplete.component.html',\r\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\r\n\tstyles: [`\r\n\t.example-form {\r\n\t\tmin-width: 150px;\r\n\t\tmax-width: 500px;\r\n\t\twidth: 100%;\r\n\t}\r\n\t.example-full-width {\r\n\t\twidth: 100%;\r\n\t}\r\n\t`]\r\n})\r\nexport class AutocompleteComponent implements OnInit {\r\n\r\n\texampleSimpleAutocomplete;\r\n\texampleAddingACustomFilter;\r\n\texampleSettingSeparateControlAndDisplayValues;\r\n\texampleAutomaticallyHighlightingTheFirstOption;\r\n\texampleAutocompleteOverview;\r\n\texampleOptionGroupsAutocomplete;\r\n\r\n\tmyControl: FormControl = new FormControl();\r\n\toptions = ['One', 'Two', 'Three'];\r\n\r\n\tmyControl2: FormControl = new FormControl();\r\n\tfilteredOptions: Observable<string[]>;\r\n\r\n\tmyControl33 = new FormControl();\r\n\toptions33 = [\r\n\t\tnew User('Mary'),\r\n\t\tnew User('Shelley'),\r\n\t\tnew User('Igor')\r\n\t];\r\n\tfilteredOptions33: Observable<User[]>;\r\n\r\n\tmyControl44: FormControl = new FormControl();\r\n\toptions44 = ['One', 'Two', 'Three'];\r\n\tfilteredOptions44: Observable<string[]>;\r\n\r\n\tstateCtrl: FormControl;\r\n\tfilteredStates: Observable<any[]>;\r\n\r\n\tmyControl3: FormControl = new FormControl();\r\n\r\n\tstates: State[] = [\r\n\t\t{\r\n\t\t\tname: 'Arkansas',\r\n\t\t\tpopulation: '2.978M',\r\n\t\t\t// https://commons.wikimedia.org/wiki/File:Flag_of_Arkansas.svg\r\n\t\t\tflag: 'https://upload.wikimedia.org/wikipedia/commons/9/9d/Flag_of_Arkansas.svg'\r\n\t\t},\r\n\t\t{\r\n\t\t\tname: 'California',\r\n\t\t\tpopulation: '39.14M',\r\n\t\t\t// https://commons.wikimedia.org/wiki/File:Flag_of_California.svg\r\n\t\t\tflag: 'https://upload.wikimedia.org/wikipedia/commons/0/01/Flag_of_California.svg'\r\n\t\t},\r\n\t\t{\r\n\t\t\tname: 'Florida',\r\n\t\t\tpopulation: '20.27M',\r\n\t\t\t// https://commons.wikimedia.org/wiki/File:Flag_of_Florida.svg\r\n\t\t\tflag: 'https://upload.wikimedia.org/wikipedia/commons/f/f7/Flag_of_Florida.svg'\r\n\t\t},\r\n\t\t{\r\n\t\t\tname: 'Texas',\r\n\t\t\tpopulation: '27.47M',\r\n\t\t\t// https://commons.wikimedia.org/wiki/File:Flag_of_Texas.svg\r\n\t\t\tflag: 'https://upload.wikimedia.org/wikipedia/commons/f/f7/Flag_of_Texas.svg'\r\n\t\t}\r\n\t];\r\n\r\n\tstateForm: FormGroup = this.fb.group({\r\n\t\tstateGroup: '',\r\n\t});\r\n\r\n\tstateGroups: StateGroup[] = [{\r\n\t\tletter: 'A',\r\n\t\tnames: ['Alabama', 'Alaska', 'Arizona', 'Arkansas']\r\n\t}, {\r\n\t\tletter: 'C',\r\n\t\tnames: ['California', 'Colorado', 'Connecticut']\r\n\t}, {\r\n\t\tletter: 'D',\r\n\t\tnames: ['Delaware']\r\n\t}, {\r\n\t\tletter: 'F',\r\n\t\tnames: ['Florida']\r\n\t}, {\r\n\t\tletter: 'G',\r\n\t\tnames: ['Georgia']\r\n\t}, {\r\n\t\tletter: 'H',\r\n\t\tnames: ['Hawaii']\r\n\t}, {\r\n\t\tletter: 'I',\r\n\t\tnames: ['Idaho', 'Illinois', 'Indiana', 'Iowa']\r\n\t}, {\r\n\t\tletter: 'K',\r\n\t\tnames: ['Kansas', 'Kentucky']\r\n\t}, {\r\n\t\tletter: 'L',\r\n\t\tnames: ['Louisiana']\r\n\t}, {\r\n\t\tletter: 'M',\r\n\t\tnames: ['Maine', 'Maryland', 'Massachusetts', 'Michigan',\r\n\t\t\t'Minnesota', 'Mississippi', 'Missouri', 'Montana']\r\n\t}, {\r\n\t\tletter: 'N',\r\n\t\tnames: ['Nebraska', 'Nevada', 'New Hampshire', 'New Jersey',\r\n\t\t\t'New Mexico', 'New York', 'North Carolina', 'North Dakota']\r\n\t}, {\r\n\t\tletter: 'O',\r\n\t\tnames: ['Ohio', 'Oklahoma', 'Oregon']\r\n\t}, {\r\n\t\tletter: 'P',\r\n\t\tnames: ['Pennsylvania']\r\n\t}, {\r\n\t\tletter: 'R',\r\n\t\tnames: ['Rhode Island']\r\n\t}, {\r\n\t\tletter: 'S',\r\n\t\tnames: ['South Carolina', 'South Dakota']\r\n\t}, {\r\n\t\tletter: 'T',\r\n\t\tnames: ['Tennessee', 'Texas']\r\n\t}, {\r\n\t\tletter: 'U',\r\n\t\tnames: ['Utah']\r\n\t}, {\r\n\t\tletter: 'V',\r\n\t\tnames: ['Vermont', 'Virginia']\r\n\t}, {\r\n\t\tletter: 'W',\r\n\t\tnames: ['Washington', 'West Virginia', 'Wisconsin', 'Wyoming']\r\n\t}];\r\n\r\n\tstateGroupOptions: Observable<StateGroup[]>;\r\n\r\n\tconstructor(private fb: FormBuilder) {\r\n\t\tthis.stateCtrl = new FormControl();\r\n\t\tthis.filteredStates = this.stateCtrl.valueChanges\r\n\t\t\t.pipe(\r\n\t\t\t\tstartWith(''),\r\n\t\t\t\tmap(state => state ? this.filterStates(state) : this.states.slice())\r\n\t\t\t);\r\n\t}\r\n\r\n\tfilterStates(name: string) {\r\n\t\treturn this.states.filter(state =>\r\n\t\t\tstate.name.toLowerCase().indexOf(name.toLowerCase()) === 0);\r\n\t}\r\n\r\n\tngOnInit() {\r\n\r\n\t\tthis.exampleSimpleAutocomplete = simpleAutocomplete;\r\n\t\tthis.exampleAddingACustomFilter = addingACustomFilter;\r\n\t\tthis.exampleSettingSeparateControlAndDisplayValues = settingSeparateControlAndDisplayValues;\r\n\t\tthis.exampleAutomaticallyHighlightingTheFirstOption = automaticallyHighlightingTheFirstOption;\r\n\t\tthis.exampleAutocompleteOverview = autocompleteOverview;\r\n\t\tthis.exampleOptionGroupsAutocomplete = optionGroupsAutocomplete;\r\n\r\n\t\tthis.filteredOptions = this.myControl.valueChanges\r\n\t\t\t.pipe(\r\n\t\t\t\tstartWith(''),\r\n\t\t\t\tmap(val => this.filter(val))\r\n\t\t\t);\r\n\r\n\t\tthis.filteredOptions33 = this.myControl33.valueChanges\r\n\t\t\t.pipe(\r\n\t\t\t\tstartWith<string | User>(''),\r\n\t\t\t\tmap(value => typeof value === 'string' ? value : value.name),\r\n\t\t\t\tmap(name => name ? this.filter33(name) : this.options33.slice())\r\n\t\t\t);\r\n\r\n\t\tthis.filteredOptions44 = this.myControl44.valueChanges.pipe(\r\n\t\t\tstartWith(''),\r\n\t\t\tmap(val => this.filter44(val))\r\n\t\t);\r\n\r\n\t\t// tslint:disable-next-line:no-non-null-assertion\r\n\t\tthis.stateGroupOptions = this.stateForm.get('stateGroup')!.valueChanges\r\n\t\t\t.pipe(\r\n\t\t\t\tstartWith(''),\r\n\t\t\t\tmap(val => this.filterGroup(val))\r\n\t\t\t);\r\n\t}\r\n\r\n\tfilter33(name: string): User[] {\r\n\t\treturn this.options33.filter(option =>\r\n\t\t\toption.name.toLowerCase().indexOf(name.toLowerCase()) === 0);\r\n\t}\r\n\r\n\tfilter44(val: string): string[] {\r\n\t\treturn this.options44.filter(option => option.toLowerCase().indexOf(val.toLowerCase()) === 0);\r\n\t}\r\n\r\n\tdisplayFn(user?: User): string | undefined {\r\n\t\treturn user ? user.name : undefined;\r\n\t}\r\n\r\n\r\n\tfilter(val: string): string[] {\r\n\t\treturn this.options.filter(option =>\r\n\t\t\toption.toLowerCase().includes(val.toLowerCase()));\r\n\t}\r\n\r\n\tfilterGroup(val: string): StateGroup[] {\r\n\t\tif (val) {\r\n\t\t\treturn this.stateGroups\r\n\t\t\t\t.map(group => ({ letter: group.letter, names: this._filter(group.names, val) }))\r\n\t\t\t\t.filter(group => group.names.length > 0);\r\n\t\t}\r\n\r\n\t\treturn this.stateGroups;\r\n\t}\r\n\r\n\tprivate _filter(opt: string[], val: string) {\r\n\t\tconst filterValue = val.toLowerCase();\r\n\t\treturn opt.filter(item => item.toLowerCase().startsWith(filterValue));\r\n\t}\r\n}\r\n","<kt-notice [svg]=\"'assets/media/svg/icons/Tools/Compass.svg'\">\r\n\tFor more info please check the components's official demos & documentation\r\n\t<a class=\"font-weight-bold\" href=\"https://material.angular.io/components/checkbox/overview\" target=\"_blank\">demos & documentation</a>\r\n</kt-notice>\r\n\r\n<div class=\"row\">\r\n\t<div class=\"col-xl-6\">\r\n\t\t<kt-code-preview [viewItem]=\"exampleBasicCheckboxes\">\r\n\t\t\t<div class=\"example-preview\">\r\n\t\t\t\t<span>\r\n\t\t\t\t\t<code>&lt;mat-checkbox&gt;</code> provides the same functionality as a native\r\n\t\t\t\t\t<code>&lt;input type=\"checkbox\"&gt;</code> enhanced with Material Design styling and animations.\r\n\t\t\t\t</span>\r\n\t\t\t\t<div class=\"separator separator-dashed my-6\"></div>\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<mat-checkbox [color]=\"'primary'\">Check me!</mat-checkbox>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</kt-code-preview>\r\n\r\n\t\t<kt-code-preview [viewItem]=\"exampleLabelPositions\">\r\n\t\t\t<div class=\"example-preview\">\r\n\t\t\t\t<span>\r\n\t\t\t\t\t<code>@Input() labelPosition: 'before' | 'after'</code> Whether the label should appear after or before the checkbox. Defaults to 'after'\r\n\t\t\t\t</span>\r\n\t\t\t\t<div class=\"separator separator-dashed my-6\"></div>\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<mat-checkbox [labelPosition]=\"labelPosition\" [color]=\"'primary'\">Check me!</mat-checkbox>\r\n\t\t\t\t\t<div class=\"separator separator-dashed my-6\"></div>\r\n\t\t\t\t\t<mat-slide-toggle (change)=\"changeLablesPositions()\">Slide labels position</mat-slide-toggle>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</kt-code-preview>\r\n\r\n\t\t<kt-code-preview [viewItem]=\"exampleChangeEvent\">\r\n\t\t\t<div class=\"example-preview\">\r\n\t\t\t\t<span>\r\n\t\t\t\t\t<code>@Output() change: EventEmitter&lt;MatCheckboxChange&gt;</code> Event emitted when the checkbox's checked value changes.\r\n\t\t\t\t</span>\r\n\t\t\t\t<div class=\"separator separator-dashed my-6\"></div>\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<mat-checkbox [(ngModel)]=\"myValue\" (change)=\"changeValueEvent()\" [color]=\"'primary'\">Check me!</mat-checkbox>\r\n\t\t\t\t\t<div class=\"separator separator-dashed my-6\"></div>\r\n\t\t\t\t\t<span>Checked: <mark>{{ myValue }}</mark></span>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</kt-code-preview>\r\n\r\n\r\n\t</div>\r\n\t<div class=\"col-xl-6\">\r\n\r\n\t\t<kt-code-preview [viewItem]=\"exampleConfigurableCheckbox\">\r\n\t\t\t<div class=\"example-preview\">\r\n\t\t\t\t<span>\r\n\t\t\t\t\tWhen user clicks on the\r\n\t\t\t\t\t<code>mat-checkbox</code>, the default behavior is toggle checked value and set indeterminate to false. This behavior can be customized by\r\n\t\t\t\t\t<a href=\"https://angular.io/guide/dependency-injection\" target=\"_blank\">providing a new value</a> of\r\n\t\t\t\t\t<code>MAT_CHECKBOX_CLICK_ACTION</code> to the checkbox.\r\n\t\t\t\t</span>\r\n\t\t\t\t<div class=\"separator separator-dashed my-6\"></div>\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<mat-checkbox class=\"example-margin\" [(ngModel)]=\"checked\" [color]=\"'primary'\">Checked</mat-checkbox>\r\n\t\t\t\t\t<mat-checkbox class=\"example-margin\" [(ngModel)]=\"indeterminate\" [color]=\"'primary'\">Indeterminate</mat-checkbox>\r\n\t\t\t\t\t<div class=\"separator separator-dashed my-6\"></div>\r\n\t\t\t\t\t<label class=\"example-margin\">Align:</label>\r\n\t\t\t\t\t<mat-radio-group [(ngModel)]=\"align\">\r\n\t\t\t\t\t\t<mat-radio-button class=\"example-margin\" value=\"start\">Start</mat-radio-button>\r\n\t\t\t\t\t\t<mat-radio-button class=\"example-margin\" value=\"end\">End</mat-radio-button>\r\n\t\t\t\t\t</mat-radio-group>\r\n\r\n\t\t\t\t\t<div class=\"separator separator-dashed my-6\"></div>\r\n\t\t\t\t\t<mat-checkbox class=\"example-margin\" [(ngModel)]=\"disabled\" [color]=\"'primary'\">Disabled</mat-checkbox>\r\n\r\n\t\t\t\t\t<div class=\"separator separator-dashed my-6\"></div>\r\n\r\n\r\n\t\t\t\t\tResult:\r\n\t\t\t\t\t<mat-checkbox class=\"example-margin\" [(ngModel)]=\"checked\" [(indeterminate)]=\"indeterminate\" [disabled]=\"disabled\" [color]=\"'primary'\">\r\n\t\t\t\t\t\tI'm a checkbox\r\n\t\t\t\t\t</mat-checkbox>\r\n\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</kt-code-preview>\r\n\t</div>\r\n</div>\r\n","import { Component, OnInit, ChangeDetectionStrategy } from '@angular/core';\r\n\r\nconst basicCheckboxes = {\r\n\tbeforeCodeTitle: 'Basic checkboxes',\r\n\thtmlCode: `<mat-checkbox>Check me!</mat-checkbox>`,\r\n\ttsCode: `\r\nimport {Component} from '@angular/core';\\n\r\n/**\r\n* @title Basic checkboxes\r\n*/\r\n@Component({\r\n  selector: 'checkbox-overview-example',\r\n  templateUrl: 'checkbox-overview-example.html',\r\n  styleUrls: ['checkbox-overview-example.css'],\r\n})\r\nexport class CheckboxOverviewExample {}`,\r\n\tcssCode: ``,\r\n\tviewCode: ``,\r\n\tisCodeVisible: false\r\n};\r\n\r\nconst configurableCheckbox = {\r\n\tbeforeCodeTitle: 'Configurable checkbox',\r\n\thtmlCode: `\r\n<mat-card>\r\n  <mat-card-content>\r\n    <h2 class=\"example-h2\">Checkbox configuration</h2>\r\n    <section class=\"example-section\">\r\n      <mat-checkbox class=\"example-margin\" [(ngModel)]=\"checked\">Checked</mat-checkbox>\r\n      <mat-checkbox class=\"example-margin\" [(ngModel)]=\"indeterminate\">Indeterminate</mat-checkbox>\r\n    </section>\r\n    <section class=\"example-section\">\r\n      <label class=\"example-margin\">Align:</label>\r\n      <mat-radio-group [(ngModel)]=\"align\">\r\n        <mat-radio-button class=\"example-margin\" value=\"start\">Start</mat-radio-button>\r\n        <mat-radio-button class=\"example-margin\" value=\"end\">End</mat-radio-button>\r\n      </mat-radio-group>\r\n\t</section>\r\n    <section class=\"example-section\">\r\n      <mat-checkbox class=\"example-margin\" [(ngModel)]=\"disabled\">Disabled</mat-checkbox>\r\n    </section>\r\n  </mat-card-content>\r\n</mat-card>\r\n<mat-card class=\"result\">\r\n  <mat-card-content>\r\n    <h2 class=\"example-h2\">Result</h2>\r\n    <section class=\"example-section\">\r\n      <mat-checkbox\r\n        class=\"example-margin\"\r\n        [(ngModel)]=\"checked\"\r\n        [(indeterminate)]=\"indeterminate\"\r\n        [align]=\"align\"\r\n        [disabled]=\"disabled\">\r\n        I'm a checkbox\r\n      </mat-checkbox>\r\n    </section>\r\n  </mat-card-content>\r\n</mat-card>`,\r\n\ttsCode: `\r\nimport {Component} from '@angular/core';\\n\r\n/**\r\n * @title Configurable checkbox\r\n */\r\n@Component({\r\n  selector: 'checkbox-configurable-example',\r\n  templateUrl: 'checkbox-configurable-example.html',\r\n  styleUrls: ['checkbox-configurable-example.css'],\r\n})\r\nexport class CheckboxConfigurableExample {\r\n  checked = false;\r\n  indeterminate = false;\r\n  align = 'start';\r\n  disabled = false;\r\n}`,\r\n\tviewCode: ``,\r\n\tcssCode: `\r\n.example-h2 {\r\n  margin: 10px;\r\n}\r\n.example-section {\r\n  display: flex;\r\n  align-content: center;\r\n  align-items: center;\r\n  height: 60px;\r\n}\r\n.example-margin {\r\n  margin: 0 10px;\r\n}`,\r\n\tisCodeVisible: false\r\n};\r\n\r\n\r\nconst labelPositions = {\r\n\tbeforeCodeTitle: 'Label positions',\r\n\thtmlCode: `<mat-checkbox>Check me!</mat-checkbox>`,\r\n\ttsCode: `\r\nimport {Component} from '@angular/core';\\n\r\n@Component({\r\n  selector: 'checkbox-label-positions-example',\r\n  templateUrl: 'checkbox-label-positions-example.html',\r\n  styleUrls: ['checkbox-label-positions-example.css'],\r\n})\r\nexport class CheckboxLabelPositionsExample {\\n\r\n  labelPosition: string = \"before\";\\n\r\n  changeLablesPositions() {\r\n    this.labelPosition = this.labelPosition == \"before\" ? \"after\" : \"before\";\r\n  }\r\n}`,\r\n\tcssCode: ``,\r\n\tviewCode: ``,\r\n\tisCodeVisible: false\r\n};\r\n\r\nconst changeEvent = {\r\n\tbeforeCodeTitle: 'Change event binding',\r\n\thtmlCode: `\r\n<mat-checkbox [(ngModel)]=\"myValue\" (change)=\"changeValueEvent()\">Check me!</mat-checkbox>\\n\r\n<div class=\"separator separator-dashed my-6\"></div>\\n\r\n<span>Checked: <mark>{{ myValue }}</mark></span>`,\r\n\ttsCode: `\r\nimport {Component} from '@angular/core';\\n\r\n@Component({\r\n  selector: 'checkbox-change-event-example',\r\n  templateUrl: 'checkbox-change-event-example.html',\r\n  styleUrls: ['checkbox-change-event-example.css'],\r\n})\r\nexport class CheckboxChangeEventExample {\r\n  myValue: boolean = true;\r\n  changeValueEvent() {\r\n    console.log(\"myValue:\", this.myValue);\r\n  }\r\n}`,\r\n\tcssCode: ``,\r\n\tviewCode: ``,\r\n\tisCodeVisible: false\r\n};\r\n@Component({\r\n\tselector: 'kt-checkbox',\r\n\ttemplateUrl: './checkbox.component.html',\r\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\r\n\tstyles: [\r\n\t\t`\r\n\t\t.example-h2 {\r\n\t\t\tmargin: 10px;\r\n\t\t}\r\n\t\t.example-section {\r\n\t\t\tdisplay: flex;\r\n\t\t\talign-content: center;\r\n\t\t\talign-items: center;\r\n\t\t\theight: 60px;\r\n\t\t}\r\n\t\t.example-margin {\r\n\t\t\tmargin: 0 10px;\r\n\t\t}\r\n\t`\r\n\t]\r\n})\r\nexport class CheckboxComponent implements OnInit {\r\n\r\n\texampleBasicCheckboxes;\r\n\texampleConfigurableCheckbox;\r\n\texampleLabelPositions;\r\n\texampleChangeEvent;\r\n\r\n\tchecked = false;\r\n\tindeterminate = false;\r\n\talign = 'start';\r\n\tdisabled = false;\r\n\tlabelPosition = 'before';\r\n\tmyValue = true;\r\n\r\n\tconstructor() { }\r\n\r\n\tngOnInit() {\r\n\t\tthis.exampleBasicCheckboxes = basicCheckboxes;\r\n\t\tthis.exampleConfigurableCheckbox = configurableCheckbox;\r\n\t\tthis.exampleLabelPositions = labelPositions;\r\n\t\tthis.exampleChangeEvent = changeEvent;\r\n\t}\r\n\r\n\tchangeLablesPositions() {\r\n\t\tthis.labelPosition = this.labelPosition === 'before' ? 'after' : 'before';\r\n\t}\r\n\r\n\tchangeValueEvent() {\r\n\t\tconsole.log('myValue:', this.myValue);\r\n\t}\r\n}\r\n","<kt-notice [svg]=\"'assets/media/svg/icons/Tools/Compass.svg'\">\r\n\tFor more info please check the components's official demos & documentation\r\n\t<a class=\"font-weight-bold\" href=\"https://material.angular.io/components/datepicker/overview\" target=\"_blank\">demos & documentation</a>\r\n</kt-notice>\r\n\r\n<div class=\"row\">\r\n\t<div class=\"col-xl-6\">\r\n\t\t<kt-code-preview [viewItem]=\"exampleBasicDatepicker\">\r\n\t\t\t<div class=\"example-preview\">\r\n\t\t\t\t<span>\r\n\t\t\t\t\tThe datepicker allows users to enter a date either through text input, or by choosing a date from the calendar. It is made up of several components and directives that work together.\r\n\t\t\t\t</span>\r\n\t\t\t\t<div class=\"separator separator-dashed my-6\"></div>\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<mat-form-field>\r\n\t\t\t\t\t\t<input matInput [matDatepicker]=\"picker\" placeholder=\"Choose a date\">\r\n\t\t\t\t\t\t<mat-datepicker-toggle matSuffix [for]=\"picker\"></mat-datepicker-toggle>\r\n\t\t\t\t\t\t<mat-datepicker #picker></mat-datepicker>\r\n\t\t\t\t\t</mat-form-field>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</kt-code-preview>\r\n\r\n\t\t<kt-code-preview [viewItem]=\"exampleDatepickerStartDate\">\r\n\t\t\t<div class=\"example-preview\">\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<mat-form-field>\r\n\t\t\t\t\t\t<input matInput [matDatepicker]=\"picker2\" placeholder=\"Choose a date\">\r\n\t\t\t\t\t\t<mat-datepicker-toggle matSuffix [for]=\"picker2\"></mat-datepicker-toggle>\r\n\t\t\t\t\t\t<mat-datepicker #picker2 startView=\"year\" [startAt]=\"startDate\"></mat-datepicker>\r\n\t\t\t\t\t</mat-form-field>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</kt-code-preview>\r\n\r\n\t\t<kt-code-preview [viewItem]=\"exampleDatepickerSelectedValue\">\r\n\t\t\t<div class=\"example-preview\">\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<mat-form-field>\r\n\t\t\t\t\t\t<input matInput [matDatepicker]=\"picker1\" placeholder=\"Angular forms\" [formControl]=\"date\">\r\n\t\t\t\t\t\t<mat-datepicker-toggle matSuffix [for]=\"picker1\"></mat-datepicker-toggle>\r\n\t\t\t\t\t\t<mat-datepicker #picker1></mat-datepicker>\r\n\t\t\t\t\t</mat-form-field>\r\n\t\t\t\t\t<div class=\"separator separator-dashed my-6\"></div>\r\n\t\t\t\t\t<mat-form-field>\r\n\t\t\t\t\t\t<input matInput [matDatepicker]=\"picker3\" placeholder=\"Angular forms (w/ deserialization)\" [formControl]=\"serializedDate\">\r\n\t\t\t\t\t\t<mat-datepicker-toggle matSuffix [for]=\"picker3\"></mat-datepicker-toggle>\r\n\t\t\t\t\t\t<mat-datepicker #picker3></mat-datepicker>\r\n\t\t\t\t\t</mat-form-field>\r\n\t\t\t\t\t<div class=\"separator separator-dashed my-6\"></div>\r\n\t\t\t\t\t<mat-form-field>\r\n\t\t\t\t\t\t<input matInput [matDatepicker]=\"picker4\" placeholder=\"Value binding\" [value]=\"date.value\">\r\n\t\t\t\t\t\t<mat-datepicker-toggle matSuffix [for]=\"picker4\"></mat-datepicker-toggle>\r\n\t\t\t\t\t\t<mat-datepicker #picker4></mat-datepicker>\r\n\t\t\t\t\t</mat-form-field>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</kt-code-preview>\r\n\r\n\t\t<kt-code-preview [viewItem]=\"exampleDatepickerWithMinMaxValidation\">\r\n\t\t\t<div class=\"example-preview\">\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<mat-form-field class=\"example-full-width\">\r\n\t\t\t\t\t\t<input matInput [min]=\"minDate\" [max]=\"maxDate\" [matDatepicker]=\"picker5\" placeholder=\"Choose a date\">\r\n\t\t\t\t\t\t<mat-datepicker-toggle matSuffix [for]=\"picker5\"></mat-datepicker-toggle>\r\n\t\t\t\t\t\t<mat-datepicker #picker5></mat-datepicker>\r\n\t\t\t\t\t</mat-form-field>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</kt-code-preview>\r\n\r\n\t\t<kt-code-preview [viewItem]=\"exampleDatepickerWithFilterValidation\">\r\n\t\t\t<div class=\"example-preview\">\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<mat-form-field class=\"example-full-width\">\r\n\t\t\t\t\t\t<input matInput [matDatepickerFilter]=\"myFilter\" [matDatepicker]=\"picker6\" placeholder=\"Choose a date\">\r\n\t\t\t\t\t\t<mat-datepicker-toggle matSuffix [for]=\"picker6\"></mat-datepicker-toggle>\r\n\t\t\t\t\t\t<mat-datepicker #picker6></mat-datepicker>\r\n\t\t\t\t\t</mat-form-field>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</kt-code-preview>\r\n\t</div>\r\n\r\n\t<div class=\"col-xl-6\">\r\n\t\t<kt-code-preview [viewItem]=\"exampleDatepickerInputAndChangeEvents\">\r\n\t\t\t<div class=\"example-preview\">\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<mat-form-field>\r\n\t\t\t\t\t\t<input matInput [matDatepicker]=\"picker7\" placeholder=\"Input & change events\" (dateInput)=\"addEvent('input', $event)\" (dateChange)=\"addEvent('change', $event)\">\r\n\t\t\t\t\t\t<mat-datepicker-toggle matSuffix [for]=\"picker7\"></mat-datepicker-toggle>\r\n\t\t\t\t\t\t<mat-datepicker #picker7></mat-datepicker>\r\n\t\t\t\t\t</mat-form-field>\r\n\t\t\t\t\t<div class=\"separator separator-dashed my-6\" *ngIf=\"events && events.length > 0\"></div>\r\n\t\t\t\t\t<div class=\"kt-demo\" *ngIf=\"events && events.length > 0\">\r\n\t\t\t\t\t\t<div class=\"kt-demo__preview\">\r\n\t\t\t\t\t\t\t<div *ngFor=\"let e of events\">{{e}}</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</kt-code-preview>\r\n\r\n\t\t<kt-code-preview [viewItem]=\"exampleDisabledDatepicker\">\r\n\t\t\t<div class=\"example-preview\">\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<mat-form-field>\r\n\t\t\t\t\t\t<input matInput [matDatepicker]=\"dp1\" placeholder=\"Completely disabled\" disabled>\r\n\t\t\t\t\t\t<mat-datepicker-toggle matSuffix [for]=\"dp1\"></mat-datepicker-toggle>\r\n\t\t\t\t\t\t<mat-datepicker #dp1></mat-datepicker>\r\n\t\t\t\t\t</mat-form-field>\r\n\t\t\t\t\t<div class=\"separator separator-dashed my-6\"></div>\r\n\t\t\t\t\t<mat-form-field>\r\n\t\t\t\t\t\t<input matInput [matDatepicker]=\"dp2\" placeholder=\"Popup disabled\">\r\n\t\t\t\t\t\t<mat-datepicker-toggle matSuffix [for]=\"dp2\" disabled></mat-datepicker-toggle>\r\n\t\t\t\t\t\t<mat-datepicker #dp2></mat-datepicker>\r\n\t\t\t\t\t</mat-form-field>\r\n\t\t\t\t\t<div class=\"separator separator-dashed my-6\"></div>\r\n\t\t\t\t\t<mat-form-field>\r\n\t\t\t\t\t\t<input matInput [matDatepicker]=\"dp3\" placeholder=\"Input disabled\" disabled>\r\n\t\t\t\t\t\t<mat-datepicker-toggle matSuffix [for]=\"dp3\"></mat-datepicker-toggle>\r\n\t\t\t\t\t\t<mat-datepicker #dp3 disabled=\"false\"></mat-datepicker>\r\n\t\t\t\t\t</mat-form-field>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</kt-code-preview>\r\n\r\n\t\t<kt-code-preview [viewItem]=\"exampleDatepickerTouchUI\">\r\n\t\t\t<div class=\"example-preview\">\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<mat-form-field class=\"example-full-width\">\r\n\t\t\t\t\t\t<input matInput [matDatepicker]=\"picker8\" placeholder=\"Choose a date\">\r\n\t\t\t\t\t\t<mat-datepicker-toggle matSuffix [for]=\"picker8\"></mat-datepicker-toggle>\r\n\t\t\t\t\t\t<mat-datepicker touchUi=\"true\" #picker8></mat-datepicker>\r\n\t\t\t\t\t</mat-form-field>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</kt-code-preview>\r\n\r\n\t\t<kt-code-preview [viewItem]=\"exampleDatepickerOpenMethod\">\r\n\t\t\t<div class=\"example-preview\">\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<mat-form-field class=\"example-full-width\">\r\n\t\t\t\t\t\t<input matInput [matDatepicker]=\"picker9\" placeholder=\"Choose a date\">\r\n\t\t\t\t\t\t<mat-datepicker #picker9></mat-datepicker>\r\n\t\t\t\t\t</mat-form-field>\r\n\t\t\t\t\t<button mat-raised-button (click)=\"picker9.open()\">Open</button>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</kt-code-preview>\r\n\r\n\t\t<kt-code-preview [viewItem]=\"exampleUsesMomentJsDates\">\r\n\t\t\t<div class=\"example-preview\">\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<mat-form-field>\r\n\t\t\t\t\t\t<input matInput [matDatepicker]=\"dp10\" placeholder=\"Moment.js datepicker\" [formControl]=\"date10\">\r\n\t\t\t\t\t\t<mat-datepicker-toggle matSuffix [for]=\"dp10\"></mat-datepicker-toggle>\r\n\t\t\t\t\t\t<mat-datepicker #dp10></mat-datepicker>\r\n\t\t\t\t\t</mat-form-field>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</kt-code-preview>\r\n\r\n\r\n\t</div>\r\n</div>\r\n","import { Component, OnInit, ChangeDetectionStrategy } from '@angular/core';\r\nimport { FormControl } from '@angular/forms';\r\nimport { MatDatepickerInputEvent } from '@angular/material/datepicker';\r\nimport { MAT_MOMENT_DATE_FORMATS, MomentDateAdapter } from '@angular/material-moment-adapter';\r\nimport { DateAdapter, MAT_DATE_FORMATS, MAT_DATE_LOCALE } from '@angular/material/core';\r\n// Depending on whether rollup is used, moment needs to be imported differently.\r\n// Since Moment.js doesn't have a default export, we normally need to import using the `* as`\r\n// syntax. However, rollup creates a synthetic default module and we thus need to import it using\r\n// the `default as` syntax.\r\nimport * as _moment from 'moment';\r\n\r\nconst basicDatepicker = {\r\n\tbeforeCodeTitle: 'Basic datepicker',\r\n\thtmlCode: `\r\n<mat-form-field>\r\n  <input matInput [matDatepicker]=\"picker\" placeholder=\"Choose a date\">\r\n  <mat-datepicker-toggle matSuffix [for]=\"picker\"></mat-datepicker-toggle>\r\n  <mat-datepicker #picker></mat-datepicker>\r\n</mat-form-field>`,\r\n\ttsCode: `\r\nimport {Component} from '@angular/core';\\n\r\n/** @title Basic datepicker */\r\n@Component({\r\n  selector: 'datepicker-overview-example',\r\n  templateUrl: 'datepicker-overview-example.html',\r\n  styleUrls: ['datepicker-overview-example.css'],\r\n})\r\nexport class DatepickerOverviewExample {}`,\r\n\tcssCode: ``,\r\n\tviewCode: ``,\r\n\tisCodeVisible: false\r\n};\r\n\r\nconst datepickerSelectedValue = {\r\n\tbeforeCodeTitle: 'Datepicker selected value',\r\n\thtmlCode: `\r\n<mat-card>\r\n  <mat-card-content>\r\n    <h2 class=\"example-h2\">Checkbox configuration</h2>\r\n    <section class=\"example-section\">\r\n      <mat-checkbox class=\"example-margin\" [(ngModel)]=\"checked\">Checked</mat-checkbox>\r\n      <mat-checkbox class=\"example-margin\" [(ngModel)]=\"indeterminate\">Indeterminate</mat-checkbox>\r\n    </section>\r\n    <section class=\"example-section\">\r\n      <label class=\"example-margin\">Align:</label>\r\n      <mat-radio-group [(ngModel)]=\"align\">\r\n        <mat-radio-button class=\"example-margin\" value=\"start\">Start</mat-radio-button>\r\n          <mat-radio-button class=\"example-margin\" value=\"end\">End</mat-radio-button>\r\n      </mat-radio-group>\r\n    </section>\r\n    <section class=\"example-section\">\r\n      <mat-checkbox class=\"example-margin\" [(ngModel)]=\"disabled\">Disabled</mat-checkbox>\r\n    </section>\r\n  </mat-card-content>\r\n</mat-card>\r\n<mat-card class=\"result\">\r\n  <mat-card-content>\r\n    <h2 class=\"example-h2\">Result</h2>\r\n    <section class=\"example-section\">\r\n      <mat-checkbox\r\n        class=\"example-margin\"\r\n        [(ngModel)]=\"checked\"\r\n        [(indeterminate)]=\"indeterminate\"\r\n        [align]=\"align\"\r\n        [disabled]=\"disabled\">\r\n        I'm a checkbox\r\n      </mat-checkbox>\r\n    </section>\r\n  </mat-card-content>\r\n</mat-card>`,\r\n\ttsCode: `\r\nimport {Component} from '@angular/core';\r\nimport {FormControl} from '@angular/forms';\\n\r\n/** @title Datepicker selected value */\r\n@Component({\r\n  selector: 'datepicker-value-example',\r\n  templateUrl: 'datepicker-value-example.html',\r\n  styleUrls: ['datepicker-value-example.css'],\r\n})\r\nexport class DatepickerValueExample {\r\n  date = new FormControl(new Date());\r\n  serializedDate = new FormControl((new Date()).toISOString());\r\n}`,\r\n\tviewCode: ``,\r\n\tcssCode: ``,\r\n\tisCodeVisible: false\r\n};\r\n\r\nconst datepickerStartDate = {\r\n\tbeforeCodeTitle: 'Datepicker start date',\r\n\thtmlCode: `\r\n<mat-form-field>\r\n  <input matInput [matDatepicker]=\"picker\" placeholder=\"Choose a date\">\r\n  <mat-datepicker-toggle matSuffix [for]=\"picker\"></mat-datepicker-toggle>\r\n  <mat-datepicker #picker startView=\"year\" [startAt]=\"startDate\"></mat-datepicker>\r\n</mat-form-field>`,\r\n\ttsCode: `\r\nimport {Component} from '@angular/core';\\n\r\n/** @title Datepicker start date */\r\n@Component({\r\n  selector: 'datepicker-start-view-example',\r\n  templateUrl: 'datepicker-start-view-example.html',\r\n  styleUrls: ['datepicker-start-view-example.css'],\r\n})\r\nexport class DatepickerStartViewExample {\r\n  startDate = new Date(1990, 0, 1);\r\n}`,\r\n\tviewCode: ``,\r\n\tcssCode: ``,\r\n\tisCodeVisible: false\r\n};\r\n\r\nconst datepickerWithMinMaxValidation = {\r\n\tbeforeCodeTitle: 'Datepicker with min & max validation',\r\n\thtmlCode: `\r\n<mat-form-field class=\"example-full-width\">\r\n  <input matInput [min]=\"minDate\" [max]=\"maxDate\" [matDatepicker]=\"picker\" placeholder=\"Choose a date\">\r\n  <mat-datepicker-toggle matSuffix [for]=\"picker\"></mat-datepicker-toggle>\r\n  <mat-datepicker #picker></mat-datepicker>\r\n</mat-form-field>`,\r\n\ttsCode: `\r\nimport {Component} from '@angular/core';\\n\r\n/** @title Datepicker with min & max validation */\r\n@Component({\r\n  selector: 'datepicker-min-max-example',\r\n  templateUrl: 'datepicker-min-max-example.html',\r\n  styleUrls: ['datepicker-min-max-example.css'],\r\n})\r\nexport class DatepickerMinMaxExample {\r\n  minDate = new Date(2000, 0, 1);\r\n  maxDate = new Date(2020, 0, 1);\r\n}`,\r\n\tviewCode: ``,\r\n\tcssCode: ``,\r\n\tisCodeVisible: false\r\n};\r\n\r\nconst datepickerWithFilterValidation = {\r\n\tbeforeCodeTitle: 'Datepicker with filter validation',\r\n\thtmlCode: `\r\n<mat-form-field class=\"example-full-width\">\r\n  <input matInput [matDatepickerFilter]=\"myFilter\" [matDatepicker]=\"picker\" placeholder=\"Choose a date\">\r\n  <mat-datepicker-toggle matSuffix [for]=\"picker\"></mat-datepicker-toggle>\r\n  <mat-datepicker #picker></mat-datepicker>\r\n</mat-form-field>`,\r\n\ttsCode: `\r\nimport {Component} from '@angular/core';\\n\r\n/** @title Datepicker with filter validation */\r\n@Component({\r\n  selector: 'datepicker-filter-example',\r\n  templateUrl: 'datepicker-filter-example.html',\r\n  styleUrls: ['datepicker-filter-example.css'],\r\n})\r\nexport class DatepickerFilterExample {\r\n  myFilter = (d: Date): boolean => {\r\n    const day = d.day();\r\n    // Prevent Saturday and Sunday from being selected.\r\n    return day !== 0 && day !== 6;\r\n  }\r\n}`,\r\n\tviewCode: ``,\r\n\tcssCode: ``,\r\n\tisCodeVisible: false\r\n};\r\n\r\nconst datepickerInputAndChangeEvents = {\r\n\tbeforeCodeTitle: 'Datepicker input and change events',\r\n\thtmlCode: `\r\n<mat-form-field>\r\n  <input matInput [matDatepicker]=\"picker\" placeholder=\"Input & change events\"\r\n    (dateInput)=\"addEvent('input', $event)\" (dateChange)=\"addEvent('change', $event)\">\r\n  <mat-datepicker-toggle matSuffix [for]=\"picker\"></mat-datepicker-toggle>\r\n  <mat-datepicker #picker></mat-datepicker>\r\n</mat-form-field>\r\n<div class=\"example-events\">\r\n  <div *ngFor=\"let e of events\">{{e}}</div>\r\n</div>`,\r\n\ttsCode: `\r\nimport {Component} from '@angular/core';\r\nimport {MatDatepickerInputEvent} from '@angular/material/datepicker';\\n\r\n/** @title Datepicker input and change events */\r\n@Component({\r\n  selector: 'datepicker-events-example',\r\n  templateUrl: 'datepicker-events-example.html',\r\n  styleUrls: ['datepicker-events-example.css'],\r\n})\r\nexport class DatepickerEventsExample {\r\n  events: string[] = [];\\n\r\n  addEvent(type: string, event: MatDatepickerInputEvent<Date>) {\r\n  this.events.push(\\`$\\{type\\}: $\\{event.value\\}\\`);\r\n  }\r\n}`,\r\n\tviewCode: ``,\r\n\tcssCode: ``,\r\n\tisCodeVisible: false\r\n};\r\n\r\nconst disabledDatepicker = {\r\n\tbeforeCodeTitle: 'Disabled datepicker',\r\n\thtmlCode: `\r\n<p>\r\n  <mat-form-field>\r\n    <input matInput [matDatepicker]=\"dp1\" placeholder=\"Completely disabled\" disabled>\r\n    <mat-datepicker-toggle matSuffix [for]=\"dp1\"></mat-datepicker-toggle>\r\n    <mat-datepicker #dp1></mat-datepicker>\r\n  </mat-form-field>\r\n</p>\r\n<p>\r\n  <mat-form-field>\r\n    <input matInput [matDatepicker]=\"dp2\" placeholder=\"Popup disabled\">\r\n    <mat-datepicker-toggle matSuffix [for]=\"dp2\" disabled></mat-datepicker-toggle>\r\n    <mat-datepicker #dp2></mat-datepicker>\r\n  </mat-form-field>\r\n</p>\r\n<p>\r\n  <mat-form-field>\r\n    <input matInput [matDatepicker]=\"dp3\" placeholder=\"Input disabled\" disabled>\r\n\t<mat-datepicker-toggle matSuffix [for]=\"dp3\">\r\n  </mat-datepicker-toggle>\r\n  <mat-datepicker #dp3 disabled=\"false\"></mat-datepicker>\r\n    </mat-form-field>\r\n</p>`,\r\n\ttsCode: `\r\nimport {Component} from '@angular/core';\\n\r\n/** @title Disabled datepicker */\r\n@Component({\r\n  selector: 'datepicker-disabled-example',\r\n  templateUrl: 'datepicker-disabled-example.html',\r\n  styleUrls: ['datepicker-disabled-example.css'],\r\n})\r\nexport class DatepickerDisabledExample {}`,\r\n\tviewCode: ``,\r\n\tcssCode: ``,\r\n\tisCodeVisible: false\r\n};\r\n\r\nconst datepickerTouchUI = {\r\n\tbeforeCodeTitle: 'Datepicker touch UI',\r\n\thtmlCode: `\r\n<mat-form-field class=\"example-full-width\">\r\n  <input matInput [matDatepicker]=\"picker\" placeholder=\"Choose a date\">\r\n  <mat-datepicker-toggle matSuffix [for]=\"picker\"></mat-datepicker-toggle>\r\n  <mat-datepicker touchUi=\"true\" #picker></mat-datepicker>`,\r\n\ttsCode: `\r\nimport {Component} from '@angular/core';\\n\r\n/** @title Datepicker touch UI */\r\n@Component({\r\n  selector: 'datepicker-touch-example',\r\n  templateUrl: 'datepicker-touch-example.html',\r\n  styleUrls: ['datepicker-touch-example.css'],\r\n})\r\nexport class DatepickerTouchExample {}`,\r\n\tviewCode: ``,\r\n\tcssCode: ``,\r\n\tisCodeVisible: false\r\n};\r\n\r\nconst datepickerOpenMethod = {\r\n\tbeforeCodeTitle: 'Datepicker open method',\r\n\thtmlCode: `\r\n<mat-form-field class=\"example-full-width\">\r\n  <input matInput [matDatepicker]=\"picker\" placeholder=\"Choose a date\">\r\n    <mat-datepicker #picker></mat-datepicker>\r\n</mat-form-field>\r\n<button mat-raised-button (click)=\"picker.open()\">Open</button>`,\r\n\ttsCode: `\r\nimport {Component} from '@angular/core';\\n\r\n/** @title Datepicker open method */\r\n@Component({\r\n  selector: 'datepicker-api-example',\r\n  templateUrl: 'datepicker-api-example.html',\r\n  styleUrls: ['datepicker-api-example.css'],\r\n})\r\nexport class DatepickerApiExample {}`,\r\n\tviewCode: ``,\r\n\tcssCode: ``,\r\n\tisCodeVisible: false\r\n};\r\n\r\nconst datepickerWithDifferentLocale = {\r\n\tbeforeCodeTitle: 'Datepicker with different locale',\r\n\thtmlCode: `\r\n<mat-form-field>\r\n  <input matInput [matDatepicker]=\"dp\" placeholder=\"Different locale\">\r\n  <mat-datepicker-toggle matSuffix [for]=\"dp\"></mat-datepicker-toggle>\r\n  <mat-datepicker #dp></mat-datepicker>\r\n</mat-form-field>\r\n<button mat-button (click)=\"french()\">Dynamically switch to French</button>`,\r\n\ttsCode: `\r\nimport {Component} from '@angular/core';\r\nimport {MAT_MOMENT_DATE_FORMATS, MomentDateAdapter} from '@angular/material-moment-adapter';\r\nimport {DateAdapter, MAT_DATE_FORMATS, MAT_DATE_LOCALE} from '@angular/material/core';\\n\r\n/** @title Datepicker with different locale */\r\n@Component({\r\n  selector: 'datepicker-locale-example',\r\n  templateUrl: 'datepicker-locale-example.html',\r\n  styleUrls: ['datepicker-locale-example.css'],\r\n  providers: [\r\n    // The locale would typically be provided on the root module of your application. We do it at\r\n    // the component level here, due to limitations of our example generation script.\r\n    {provide: MAT_DATE_LOCALE, useValue: 'ja-JP'},\\n\r\n    // \\`MomentDateAdapter\\` and \\`MAT_MOMENT_DATE_FORMATS\\` can be automatically provided by importing\r\n    // \\`MatMomentDateModule\\` in your applications root module. We provide it at the component level\r\n\t// here, due to limitations of our example generation script.\r\n    {provide: DateAdapter, useClass: MomentDateAdapter, deps: [MAT_DATE_LOCALE]},\r\n    {provide: MAT_DATE_FORMATS, useValue: MAT_MOMENT_DATE_FORMATS},\r\n  ],\r\n})\r\nexport class DatepickerLocaleExample {\r\n  constructor(private adapter: DateAdapter<any>) {}\r\n  french() {\r\n    this.adapter.setLocale('fr');\r\n  }\r\n}`,\r\n\tviewCode: ``,\r\n\tcssCode: ``,\r\n\tisCodeVisible: false\r\n};\r\n\r\nconst datepickerThatUsesMomentJsDates = {\r\n\tbeforeCodeTitle: 'Datepicker that uses Moment.js dates',\r\n\thtmlCode: `\r\n<mat-form-field>\r\n  <input matInput [matDatepicker]=\"dp\" placeholder=\"Moment.js datepicker\" [formControl]=\"date\">\r\n  <mat-datepicker-toggle matSuffix [for]=\"dp\"></mat-datepicker-toggle>\r\n  <mat-datepicker #dp></mat-datepicker>\r\n</mat-form-field>`,\r\n\ttsCode: `\r\nimport {Component} from '@angular/core';\r\nimport {FormControl} from '@angular/forms';\r\nimport {MAT_MOMENT_DATE_FORMATS, MomentDateAdapter} from '@angular/material-moment-adapter';\r\nimport {DateAdapter, MAT_DATE_FORMATS, MAT_DATE_LOCALE} from '@angular/material/core';\\n\r\n// Depending on whether rollup is used, moment needs to be imported differently.\r\n// Since Moment.js doesn't have a default export, we normally need to import using the \\`* as\\`\r\n// syntax. However, rollup creates a synthetic default module and we thus need to import it using\r\n// the \\`default as\\` syntax.\r\nimport * as _moment from 'moment';\r\nimport {default as _rollupMoment} from 'moment';\r\nconst moment = _rollupMoment || _moment;\\n\r\n/** @title Datepicker that uses Moment.js dates */\r\n@Component({\r\n  selector: 'datepicker-moment-example',\r\n  templateUrl: 'datepicker-moment-example.html',\r\n  styleUrls: ['datepicker-moment-example.css'],\r\n  providers: [\r\n    // \\`MomentDateAdapter\\` and \\`MAT_MOMENT_DATE_FORMATS\\` can be automatically provided by importing\r\n    // \\`MatMomentDateModule\\` in your applications root module. We provide it at the component level\r\n    // here, due to limitations of our example generation script.\r\n    {provide: DateAdapter, useClass: MomentDateAdapter, deps: [MAT_DATE_LOCALE]},\r\n    {provide: MAT_DATE_FORMATS, useValue: MAT_MOMENT_DATE_FORMATS},\r\n  ],\r\n})\r\nexport class DatepickerMomentExample {\r\n// Datepicker takes \\`Moment\\` objects instead of \\`Date\\` objects.\r\n  date = new FormControl(moment([2017, 0, 1]));\r\n}`,\r\n\tviewCode: ``,\r\n\tcssCode: ``,\r\n\tisCodeVisible: false\r\n};\r\n\r\nconst datepickerWithCustomFormats = {\r\n\tbeforeCodeTitle: 'Datepicker with custom formats',\r\n\thtmlCode: `\r\n<mat-form-field>\r\n  <input matInput [matDatepicker]=\"dp\" placeholder=\"Verbose datepicker\" [formControl]=\"date\">\r\n  <mat-datepicker-toggle matSuffix [for]=\"dp\"></mat-datepicker-toggle>\r\n  <mat-datepicker #dp></mat-datepicker>\r\n</mat-form-field>`,\r\n\ttsCode: `\r\nimport {Component} from '@angular/core';\r\nimport {FormControl} from '@angular/forms';\r\nimport {MomentDateAdapter} from '@angular/material-moment-adapter';\r\nimport {DateAdapter, MAT_DATE_FORMATS, MAT_DATE_LOCALE} from '@angular/material/core';\\n\r\n// Depending on whether rollup is used, moment needs to be imported differently.\r\n// Since Moment.js doesn't have a default export, we normally need to import using the \\`* as\\`\r\n// syntax. However, rollup creates a synthetic default module and we thus need to import it using\r\n// the \\`default as\\` syntax.\r\nimport * as _moment from 'moment';\r\nimport {default as _rollupMoment} from 'moment';\r\nconst moment = _rollupMoment || _moment;\r\n// See the Moment.js docs for the meaning of these formats:\r\n// https://momentjs.com/docs/#/displaying/format/\r\nexport const MY_FORMATS = {\r\n  parse: {\r\n    dateInput: 'LL',\r\n  },\r\n  display: {\r\n    dateInput: 'LL',\r\n    monthYearLabel: 'MMM YYYY',\r\n    dateA11yLabel: 'LL',\r\n    monthYearA11yLabel: 'MMMM YYYY',\r\n  },\r\n};\r\n/** @title Datepicker with custom formats */\r\n@Component({\r\n  selector: 'datepicker-formats-example',\r\n  templateUrl: 'datepicker-formats-example.html',\r\n  styleUrls: ['datepicker-formats-example.css'],\r\n  providers: [\r\n  // \\`MomentDateAdapter\\` can be automatically provided by importing \\`MomentDateModule\\` in your\r\n  // application's root module. We provide it at the component level here, due to limitations of\r\n  // our example generation script.\r\n    {provide: DateAdapter, useClass: MomentDateAdapter, deps: [MAT_DATE_LOCALE]},\r\n\t{provide: MAT_DATE_FORMATS, useValue: MY_FORMATS},\r\n  ],\r\n})\r\nexport class DatepickerFormatsExample {\r\n  date = new FormControl(moment());\r\n}`,\r\n\tviewCode: ``,\r\n\tcssCode: ``,\r\n\tisCodeVisible: false\r\n};\r\n\r\nconst usesMomentJsDates = {\r\n\tbeforeCodeTitle: 'Datepicker uses Moment.js dates',\r\n\thtmlCode: `\r\n<mat-form-field>\r\n  <input matInput [matDatepicker]=\"dp\" placeholder=\"Moment.js datepicker\" [formControl]=\"date\">\r\n  <mat-datepicker-toggle matSuffix [for]=\"dp\"></mat-datepicker-toggle>\r\n  <mat-datepicker #dp></mat-datepicker>\r\n</mat-form-field>`,\r\n\ttsCode: `\r\nimport {Component} from '@angular/core';\r\nimport {FormControl} from '@angular/forms';\r\nimport {MAT_MOMENT_DATE_FORMATS, MomentDateAdapter} from '@angular/material-moment-adapter';\r\nimport {DateAdapter, MAT_DATE_FORMATS, MAT_DATE_LOCALE} from '@angular/material/core';\r\n\r\n// Depending on whether rollup is used, moment needs to be imported differently.\r\n// Since Moment.js doesn't have a default export, we normally need to import using the \\`* as\\`\r\n// syntax. However, rollup creates a synthetic default module and we thus need to import it using\r\n// the \\`default as\\` syntax.\r\nimport * as _moment from 'moment';\r\n// tslint:disable-next-line:no-duplicate-imports\r\nimport {default as _rollupMoment} from 'moment';\r\n\r\nconst moment = _rollupMoment || _moment;\r\n\r\n/** @title Datepicker that uses Moment.js dates */\r\n@Component({\r\n  selector: 'datepicker-moment-example',\r\n  templateUrl: 'datepicker-moment-example.html',\r\n  styleUrls: ['datepicker-moment-example.css'],\r\n  providers: [\r\n  // \\`MomentDateAdapter\\` and \\`MAT_MOMENT_DATE_FORMATS\\` can be automatically provided by importing\r\n  // \\`MatMomentDateModule\\` in your applications root module. We provide it at the component level\r\n  // here, due to limitations of our example generation script.\r\n    {provide: DateAdapter, useClass: MomentDateAdapter, deps: [MAT_DATE_LOCALE]},\r\n    {provide: MAT_DATE_FORMATS, useValue: MAT_MOMENT_DATE_FORMATS},\r\n  ],\r\n})\r\nexport class DatepickerMomentExample {\r\n  // Datepicker takes \\`Moment\\` objects instead of \\`Date\\` objects.\r\n  date = new FormControl(moment([2017, 0, 1]));\r\n}`,\r\n\tcssCode: ``,\r\n\tviewCode: ``,\r\n\tisCodeVisible: false\r\n};\r\n\r\n\r\n\r\nconst moment = _moment;\r\n\r\n\r\n@Component({\r\n\tselector: 'kt-datepicker',\r\n\ttemplateUrl: './datepicker.component.html',\r\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\r\n\tstyles: [`\r\n\t.example-events {\r\n\t\twidth: 400px;\r\n\t\theight: 200px;\r\n\t\tborder: 1px solid #555;\r\n\t\toverflow: auto;\r\n\t  }\r\n\t`],\r\n\tproviders: [\r\n\t\t// `MomentDateAdapter` and `MAT_MOMENT_DATE_FORMATS` can be automatically provided by importing\r\n\t\t// `MatMomentDateModule` in your applications root module. We provide it at the component level\r\n\t\t// here, due to limitations of our example generation script.\r\n\t\t{provide: DateAdapter, useClass: MomentDateAdapter, deps: [MAT_DATE_LOCALE]},\r\n\t\t{provide: MAT_DATE_FORMATS, useValue: MAT_MOMENT_DATE_FORMATS},\r\n\t  ],\r\n})\r\nexport class DatepickerComponent implements OnInit {\r\n\r\n\texampleBasicDatepicker;\r\n\texampleDatepickerStartDate;\r\n\texampleDatepickerSelectedValue;\r\n\texampleDatepickerWithMinMaxValidation;\r\n\texampleDatepickerWithFilterValidation;\r\n\texampleDatepickerInputAndChangeEvents;\r\n\texampleDisabledDatepicker;\r\n\texampleDatepickerTouchUI;\r\n\texampleDatepickerOpenMethod;\r\n\texampleDatepickerWithDifferentLocale;\r\n\texampleDatepickerThatUsesMomentJsDates;\r\n\texampleDatepickerWithCustomFormats;\r\n\texampleUsesMomentJsDates;\r\n\r\n\tstartDate = new Date(1990, 0, 1);\r\n\tdate = new FormControl(new Date());\r\n\tdate10 = new FormControl(moment([2017, 0, 1]));\r\n\r\n\tserializedDate = new FormControl((new Date()).toISOString());\r\n\tminDate = new Date(2011, 0, 1);\r\n\tmaxDate = new Date(2018, 11, 1);\r\n\r\n\tevents: string[] = [];\r\n\tconstructor() { }\r\n\r\n\tngOnInit() {\r\n\t\tthis.exampleBasicDatepicker = basicDatepicker;\r\n\t\tthis.exampleDatepickerStartDate = datepickerStartDate;\r\n\t\tthis.exampleDatepickerSelectedValue = datepickerSelectedValue;\r\n\t\tthis.exampleDatepickerWithMinMaxValidation = datepickerWithMinMaxValidation;\r\n\t\tthis.exampleDatepickerWithFilterValidation = datepickerWithFilterValidation;\r\n\t\tthis.exampleDatepickerInputAndChangeEvents = datepickerInputAndChangeEvents;\r\n\t\tthis.exampleDisabledDatepicker = disabledDatepicker;\r\n\t\tthis.exampleDatepickerTouchUI = datepickerTouchUI;\r\n\t\tthis.exampleDatepickerOpenMethod = datepickerOpenMethod;\r\n\t\tthis.exampleDatepickerWithDifferentLocale = datepickerWithDifferentLocale;\r\n\t\tthis.exampleDatepickerThatUsesMomentJsDates = datepickerThatUsesMomentJsDates;\r\n\t\tthis.exampleDatepickerWithCustomFormats = datepickerWithCustomFormats;\r\n\t\tthis.exampleUsesMomentJsDates = usesMomentJsDates;\r\n\t}\r\n\r\n\tmyFilter = (d: any): boolean => {\r\n\t\tconst day = d.day();\r\n\t\t// Prevent Saturday and Sunday from being selected.\r\n\t\treturn day !== 0 && day !== 6;\r\n\t}\r\n\r\n\taddEvent(type: string, event: MatDatepickerInputEvent<Date>) {\r\n\t\tthis.events.push(`${type}: ${event.value}`);\r\n\t}\r\n}\r\n","<kt-notice [svg]=\"'assets/media/svg/icons/Tools/Compass.svg'\">\r\n\tFor more info please check the components's official demos & documentation\r\n\t<a class=\"font-weight-bold\" href=\"https://material.angular.io/components/form-field/overview\" target=\"_blank\">demos & documentation</a>\r\n</kt-notice>\r\n\r\n<div class=\"row\">\r\n\t<div class=\"col-xl-6\">\r\n\t\t<kt-code-preview [viewItem]=\"exampleSimpleFormField\">\r\n\t\t\t<div class=\"example-preview\">\r\n\t\t\t\t<span>\r\n\t\t\t\t\t<code>mat-form-field</code> is a component used to wrap several Angular Material components and apply common Text field styles such as the underline, floating label, and hint messages.\r\n\t\t\t\t\t<br /> The following Angular Material components are designed to work inside a\r\n\t\t\t\t\t<code>mat-form-field</code>:\r\n\t\t\t\t\t<ul>\r\n\t\t\t\t\t\t<li>\r\n\t\t\t\t\t\t\t<code>input matInput & textarea matInput</code>\r\n\t\t\t\t\t\t\t<li>\r\n\t\t\t\t\t\t\t\t<code>mat-select</code>\r\n\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t\t<li>\r\n\t\t\t\t\t\t\t\t<code>mat-chip-list</code>\r\n\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t</ul>\r\n\r\n\t\t\t\t</span>\r\n\t\t\t\t<div class=\"separator separator-dashed my-6\"></div>\r\n\t\t\t\t<div class=\"example-container\">\r\n\t\t\t\t\t<mat-form-field>\r\n\t\t\t\t\t\t<input matInput placeholder=\"Input\">\r\n\t\t\t\t\t</mat-form-field>\r\n\t\t\t\t\t<mat-form-field>\r\n\t\t\t\t\t\t<textarea matInput placeholder=\"Textarea\"></textarea>\r\n\t\t\t\t\t</mat-form-field>\r\n\t\t\t\t\t<mat-form-field>\r\n\t\t\t\t\t\t<mat-select placeholder=\"Select\">\r\n\t\t\t\t\t\t\t<mat-option value=\"option\">Alabama</mat-option>\r\n\t\t\t\t\t\t\t<mat-option value=\"option\">Alaska</mat-option>\r\n\t\t\t\t\t\t\t<mat-option value=\"option\">Florida</mat-option>\r\n\t\t\t\t\t\t\t<mat-option value=\"option\">Illinois</mat-option>\r\n\t\t\t\t\t\t\t<mat-option value=\"option\">Kansas</mat-option>\r\n\t\t\t\t\t\t\t<mat-option value=\"option\">Michigan</mat-option>\r\n\t\t\t\t\t\t</mat-select>\r\n\t\t\t\t\t</mat-form-field>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</kt-code-preview>\r\n\r\n\t\t<kt-code-preview [viewItem]=\"exampleFormFieldWithLabel\">\r\n\t\t\t<div class=\"example-preview\">\r\n\t\t\t\t<div class=\"example-container\">\r\n\t\t\t\t\t<form class=\"example-container\" [formGroup]=\"options\">\r\n\t\t\t\t\t\t<mat-checkbox formControlName=\"hideRequired\">Hide required marker</mat-checkbox>\r\n\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t<label>Float label: </label>\r\n\t\t\t\t\t\t\t<mat-radio-group formControlName=\"floatLabel\">\r\n\t\t\t\t\t\t\t\t<mat-radio-button value=\"auto\">Auto</mat-radio-button>\r\n\t\t\t\t\t\t\t\t<mat-radio-button value=\"always\">Always</mat-radio-button>\r\n\t\t\t\t\t\t\t\t<mat-radio-button value=\"never\">Never</mat-radio-button>\r\n\t\t\t\t\t\t\t</mat-radio-group>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</form>\r\n\t\t\t\t\t<mat-form-field [hideRequiredMarker]=\"options.value.hideRequired\" [floatLabel]=\"options.value.floatLabel\">\r\n\t\t\t\t\t\t<input matInput placeholder=\"Simple placeholder\" required>\r\n\t\t\t\t\t</mat-form-field>\r\n\t\t\t\t\t<mat-form-field [floatLabel]=\"options.value.floatLabel\">\r\n\t\t\t\t\t\t<mat-label>Both a label and a placeholder</mat-label>\r\n\t\t\t\t\t\t<input matInput placeholder=\"Simple placeholder\">\r\n\t\t\t\t\t</mat-form-field>\r\n\t\t\t\t\t<mat-form-field [hideRequiredMarker]=\"options.value.hideRequired\" [floatLabel]=\"options.value.floatLabel\">\r\n\t\t\t\t\t\t<mat-select required>\r\n\t\t\t\t\t\t\t<mat-option>-- None --</mat-option>\r\n\t\t\t\t\t\t\t<mat-option value=\"option\">Alabama</mat-option>\r\n\t\t\t\t\t\t\t<mat-option value=\"option\">Alaska</mat-option>\r\n\t\t\t\t\t\t\t<mat-option value=\"option\">Florida</mat-option>\r\n\t\t\t\t\t\t\t<mat-option value=\"option\">Illinois</mat-option>\r\n\t\t\t\t\t\t\t<mat-option value=\"option\">Kansas</mat-option>\r\n\t\t\t\t\t\t\t<mat-option value=\"option\">Michigan</mat-option>\r\n\t\t\t\t\t\t</mat-select>\r\n\t\t\t\t\t\t<mat-placeholder>\r\n\t\t\t\t\t\t\t<!-- <mat-icon>favorite</mat-icon> -->\r\n\t\t\t\t\t\t\t<b> Fancy</b>\r\n\t\t\t\t\t\t\t<i> placeholder</i>\r\n\t\t\t\t\t\t</mat-placeholder>\r\n\t\t\t\t\t</mat-form-field>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</kt-code-preview>\r\n\r\n\t\t<kt-code-preview [viewItem]=\"exampleFormFieldWithHints\">\r\n\t\t\t<div class=\"example-preview\">\r\n\t\t\t\t<div class=\"example-container\">\r\n\t\t\t\t\t<mat-form-field hintLabel=\"Max 10 characters\">\r\n\t\t\t\t\t\t<input matInput #input maxlength=\"10\" placeholder=\"Enter some input\">\r\n\t\t\t\t\t\t<mat-hint align=\"end\">{{input.value?.length || 0}}/10</mat-hint>\r\n\t\t\t\t\t</mat-form-field>\r\n\t\t\t\t\t<div class=\"separator separator-dashed my-6\"></div>\r\n\t\t\t\t\t<mat-form-field>\r\n\t\t\t\t\t\t<mat-select placeholder=\"Select me\">\r\n\t\t\t\t\t\t\t<mat-option value=\"option\">Option</mat-option>\r\n\t\t\t\t\t\t</mat-select>\r\n\t\t\t\t\t\t<mat-hint align=\"end\">Here's the dropdown arrow ^</mat-hint>\r\n\t\t\t\t\t</mat-form-field>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</kt-code-preview>\r\n\t</div>\r\n\t<div class=\"col-xl-6\">\r\n\r\n\t\t<kt-code-preview [viewItem]=\"exampleFormFieldWithErrorMessages\">\r\n\t\t\t<div class=\"example-preview\">\r\n\t\t\t\t<div class=\"example-container\">\r\n\t\t\t\t\t<mat-form-field>\r\n\t\t\t\t\t\t<input matInput placeholder=\"Enter your email\" [formControl]=\"email\" required>\r\n\t\t\t\t\t\t<mat-error *ngIf=\"email.invalid\">{{getErrorMessage()}}</mat-error>\r\n\t\t\t\t\t</mat-form-field>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</kt-code-preview>\r\n\r\n\t\t<kt-code-preview [viewItem]=\"exampleFormFieldWithPrefixSuffix\">\r\n\t\t\t<div class=\"example-preview\">\r\n\t\t\t\t<div class=\"example-container\">\r\n\t\t\t\t\t<mat-form-field>\r\n\t\t\t\t\t\t<input matInput placeholder=\"Enter your password\" [type]=\"hide ? 'password' : 'text'\">\r\n\t\t\t\t\t\t<i matSuffix (click)=\"hide = !hide\" class=\"la\" [ngClass]=\"{'la-toggle-on' : !hide, 'la-toggle-off': hide }\"></i>\r\n\t\t\t\t\t</mat-form-field>\r\n\t\t\t\t\t<mat-form-field>\r\n\t\t\t\t\t\t<input matInput placeholder=\"Amount\" type=\"number\" class=\"example-right-align\">\r\n\t\t\t\t\t\t<span matPrefix>$&nbsp;</span>\r\n\t\t\t\t\t\t<span matSuffix>.00</span>\r\n\t\t\t\t\t</mat-form-field>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</kt-code-preview>\r\n\r\n\t\t<kt-code-preview [viewItem]=\"exampleFormFieldTheming\">\r\n\t\t\t<div class=\"example-preview\">\r\n\t\t\t\t<div class=\"example-container\">\r\n\t\t\t\t\t<form class=\"example-container\" [formGroup]=\"options2\" [style.fontSize.px]=\"getFontSize()\">\r\n\t\t\t\t\t\t<mat-form-field [color]=\"options2.value.color\">\r\n\t\t\t\t\t\t\t<mat-select placeholder=\"Color\" formControlName=\"color\">\r\n\t\t\t\t\t\t\t\t<mat-option value=\"primary\">Primary</mat-option>\r\n\t\t\t\t\t\t\t\t<mat-option value=\"accent\">Accent</mat-option>\r\n\t\t\t\t\t\t\t\t<mat-option value=\"warn\">Warn</mat-option>\r\n\t\t\t\t\t\t\t</mat-select>\r\n\t\t\t\t\t\t</mat-form-field>\r\n\t\t\t\t\t\t<mat-form-field [color]=\"options2.value.color\">\r\n\t\t\t\t\t\t\t<input matInput type=\"number\" placeholder=\"Font size (px)\" formControlName=\"fontSize\" min=\"10\">\r\n\t\t\t\t\t\t\t<mat-error *ngIf=\"options2.get('fontSize')?.invalid\">Min size: 10px</mat-error>\r\n\t\t\t\t\t\t</mat-form-field>\r\n\t\t\t\t\t</form>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</kt-code-preview>\r\n\r\n\t\t<kt-code-preview [viewItem]=\"exampleFormFieldAppearanceVariants\">\r\n\t\t\t<div class=\"example-preview\">\r\n\t\t\t\t<div class=\"example-container\">\r\n\t\t\t\t\t<p>\r\n\t\t\t\t\t\t<mat-form-field appearance=\"legacy\">\r\n\t\t\t\t\t\t\t<mat-label>Legacy form field</mat-label>\r\n\t\t\t\t\t\t\t<input matInput placeholder=\"Placeholder\">\r\n\t\t\t\t\t\t\t<mat-icon matSuffix>sentiment_very_satisfied</mat-icon>\r\n\t\t\t\t\t\t\t<mat-hint>Hint</mat-hint>\r\n\t\t\t\t\t\t</mat-form-field>\r\n\t\t\t\t\t</p>\r\n\t\t\t\t\t<p>\r\n\t\t\t\t\t\t<mat-form-field appearance=\"standard\">\r\n\t\t\t\t\t\t\t<mat-label>Standard form field</mat-label>\r\n\t\t\t\t\t\t\t<input matInput placeholder=\"Placeholder\">\r\n\t\t\t\t\t\t\t<mat-icon matSuffix>sentiment_very_satisfied</mat-icon>\r\n\t\t\t\t\t\t\t<mat-hint>Hint</mat-hint>\r\n\t\t\t\t\t\t</mat-form-field>\r\n\t\t\t\t\t</p>\r\n\t\t\t\t\t<p>\r\n\t\t\t\t\t\t<mat-form-field appearance=\"fill\">\r\n\t\t\t\t\t\t\t<mat-label>Fill form field</mat-label>\r\n\t\t\t\t\t\t\t<input matInput placeholder=\"Placeholder\">\r\n\t\t\t\t\t\t\t<mat-icon matSuffix>sentiment_very_satisfied</mat-icon>\r\n\t\t\t\t\t\t\t<mat-hint>Hint</mat-hint>\r\n\t\t\t\t\t\t</mat-form-field>\r\n\t\t\t\t\t</p>\r\n\t\t\t\t\t<p>\r\n\t\t\t\t\t\t<mat-form-field appearance=\"outline\">\r\n\t\t\t\t\t\t\t<mat-label>Outline form field</mat-label>\r\n\t\t\t\t\t\t\t<input matInput placeholder=\"Placeholder\">\r\n\t\t\t\t\t\t\t<mat-icon matSuffix>sentiment_very_satisfied</mat-icon>\r\n\t\t\t\t\t\t\t<mat-hint>Hint</mat-hint>\r\n\t\t\t\t\t\t</mat-form-field>\r\n\t\t\t\t\t</p>\r\n\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</kt-code-preview>\r\n\t</div>\r\n</div>\r\n","import { Component, OnInit, ElementRef, Input, OnDestroy, ChangeDetectionStrategy } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators, FormControl } from '@angular/forms';\r\n\r\nconst simpleFormField = {\r\n\t\tbeforeCodeTitle: 'Simple form field',\r\n\t\thtmlCode: `\r\n<div class=\"example-container\">\r\n  <mat-form-field>\r\n     <input matInput placeholder=\"Input\">\r\n  </mat-form-field>\r\n\r\n  <mat-form-field>\r\n    <textarea matInput placeholder=\"Textarea\"></textarea>\r\n  </mat-form-field>\r\n\r\n  <mat-form-field>\r\n    <mat-select placeholder=\"Select\">\r\n      <mat-option value=\"option\">Option</mat-option>\r\n    </mat-select>\r\n  </mat-form-field>\r\n</div>`,\r\n\t\ttsCode: `\r\nimport {Component} from '@angular/core';\\n\r\n/** @title Simple form field */\r\n=@Component({\r\n  selector: 'form-field-overview-example',\r\n  templateUrl: 'form-field-overview-example.html',\r\n  styleUrls: ['form-field-overview-example.css']\r\n})\r\nexport class FormFieldOverviewExample {}`,\r\n\t\tcssCode: `\r\n.example-container {\r\n  display: flex;\r\n  flex-direction: column;\r\n}\r\n.example-container > * {\r\n  width: 100%;\r\n}`,\r\n\t\tviewCode: ``,\r\n\t\tisCodeVisible: false\r\n};\r\n\r\nconst formFieldAppearanceVariants = {\r\n\tbeforeCodeTitle: 'Form field appearance variants',\r\n\thtmlCode: `\r\n<p>\r\n  <mat-form-field appearance=\"legacy\">\r\n    <mat-label>Legacy form field</mat-label>\r\n      <input matInput placeholder=\"Placeholder\">\r\n      <mat-icon matSuffix>sentiment_very_satisfied</mat-icon>\r\n      <mat-hint>Hint</mat-hint>\r\n  </mat-form-field>\r\n</p>\r\n<p>\r\n  <mat-form-field appearance=\"standard\">\r\n    <mat-label>Standard form field</mat-label>\r\n    <input matInput placeholder=\"Placeholder\">\r\n    <mat-icon matSuffix>sentiment_very_satisfied</mat-icon>\r\n    <mat-hint>Hint</mat-hint>\r\n  </mat-form-field>\r\n</p>\r\n<p>\r\n  <mat-form-field appearance=\"fill\">\r\n    <mat-label>Fill form field</mat-label>\r\n    <input matInput placeholder=\"Placeholder\">\r\n    <mat-icon matSuffix>sentiment_very_satisfied</mat-icon>\r\n     <mat-hint>Hint</mat-hint>\r\n  </mat-form-field>\r\n</p>\r\n<p>\r\n  <mat-form-field appearance=\"outline\">\r\n    <mat-label>Outline form field</mat-label>\r\n    <input matInput placeholder=\"Placeholder\">\r\n    <mat-icon matSuffix>sentiment_very_satisfied</mat-icon>\r\n    <mat-hint>Hint</mat-hint>\r\n  </mat-form-field>\r\n</p>\r\n  `,\r\n\ttsCode: `\r\nimport {Component} from '@angular/core';\\n\r\n\r\n/** @title Form field appearance variants */\r\n@Component({\r\n  selector: 'form-field-appearance-example',\r\n  templateUrl: 'form-field-appearance-example.html',\r\n  styleUrls: ['form-field-appearance-example.css'],\r\n})\r\nexport class FormFieldAppearanceExample {}`,\r\n\tcssCode: ``,\r\n\tviewCode: ``,\r\n\tisCodeVisible: false\r\n};\r\n\r\nconst formFieldWithLabel = {\r\n\t\tbeforeCodeTitle: 'Form field with label',\r\n\t\thtmlCode: `\r\n<div class=\"example-container\">\r\n  <form class=\"example-container\" [formGroup]=\"options\">\r\n    <mat-checkbox formControlName=\"hideRequired\">Hide required marker</mat-checkbox>\r\n    <div>\r\n      <label>Float label: </label>\r\n      <mat-radio-group formControlName=\"floatLabel\">\r\n        <mat-radio-button value=\"auto\">Auto</mat-radio-button>\r\n        <mat-radio-button value=\"always\">Always</mat-radio-button>\r\n        <mat-radio-button value=\"never\">Never</mat-radio-button>\r\n      </mat-radio-group>\r\n    </div>\r\n  </form>\r\n  <mat-form-field\r\n    [hideRequiredMarker]=\"options.value.hideRequired\"\r\n    [floatLabel]=\"options.value.floatLabel\">\r\n    <input matInput placeholder=\"Simple placeholder\" required>\r\n  </mat-form-field>\r\n  <mat-form-field [floatLabel]=\"options.value.floatLabel\">\r\n    <mat-label>Both a label and a placeholder</mat-label>\r\n    <input matInput placeholder=\"Simple placeholder\">\r\n  </mat-form-field>\r\n  <mat-form-field\r\n    [hideRequiredMarker]=\"options.value.hideRequired\"\r\n    [floatLabel]=\"options.value.floatLabel\">\r\n    <mat-select required>\r\n      <mat-option>-- None --</mat-option>\r\n      <mat-option value=\"option\">Option</mat-option>\r\n    </mat-select>\r\n    <mat-placeholder><mat-icon>favorite</mat-icon> <b> Fancy</b> <i> placeholder</i></mat-placeholder>\r\n  </mat-form-field>\r\n</div>`,\r\n\t\ttsCode: `\r\nimport {Component} from '@angular/core';\r\nimport {FormBuilder, FormGroup} from '@angular/forms';\r\n/** @title Form field with label */\r\n@Component({\r\n  selector: 'form-field-label-example',\r\n  templateUrl: 'form-field-label-example.html',\r\n  styleUrls: ['form-field-label-example.css']\r\n})\r\nexport class FormFieldLabelExample {\r\n  options: FormGroup;\r\n  constructor(fb: FormBuilder) {\r\n    this.options = fb.group({\r\n      hideRequired: false,\r\n      floatLabel: 'auto',\r\n    });\r\n  }\r\n}`,\r\n\t\tviewCode: ``,\r\n\t\tcssCode: `\r\n.example-container {\r\n  display: flex;\r\n  flex-direction: column;\r\n}\r\n.example-container > * {\r\n  width: 100%;\r\n}\r\n.example-container form {\r\n  margin-bottom: 20px;\r\n}\r\n.example-container form > * {\r\n  margin: 5px 0;\r\n}\r\n.example-container .mat-radio-button {\r\n  margin: 0 5px;\r\n}`,\r\n\t\tisCodeVisible: false\r\n\t};\r\n\r\nconst formFieldWithHints = {\r\n\tbeforeCodeTitle: 'Form field with hints',\r\n\thtmlCode: `\r\n<div class=\"example-container\">\r\n  <mat-form-field hintLabel=\"Max 10 characters\">\r\n    <input matInput #input maxlength=\"10\" placeholder=\"Enter some input\">\r\n    <mat-hint align=\"end\">{{input.value?.length || 0}}/10</mat-hint>\r\n  </mat-form-field>\r\n  <mat-form-field>\r\n    <mat-select placeholder=\"Select me\">\r\n      <mat-option value=\"option\">Option</mat-option>\r\n    </mat-select>\r\n    <mat-hint align=\"end\">Here's the dropdown arrow ^</mat-hint>\r\n  </mat-form-field>\r\n</div>`,\r\n\ttsCode: `\r\nimport {Component} from '@angular/core';\\n\r\n/** @title Form field with hints */\r\n@Component({\r\n  selector: 'form-field-hint-example',\r\n  templateUrl: 'form-field-hint-example.html',\r\n  styleUrls: ['form-field-hint-example.css']\r\n})\r\nexport class FormFieldHintExample {}`,\r\n\tviewCode: ``,\r\n\tcssCode: `\r\n.example-container {\r\n  display: flex;\r\n  flex-direction: column;\r\n}\r\n.example-container > * {\r\n  width: 100%;\r\n}`,\r\n\tisCodeVisible: false\r\n};\r\n\r\nconst formFieldWithErrorMessages = {\r\n\tbeforeCodeTitle: 'Form field with error messages',\r\n\thtmlCode: `\r\n<div class=\"example-container\">\r\n  <mat-form-field>\r\n    <input matInput placeholder=\"Enter your email\" [formControl]=\"email\" required>\r\n      <mat-error *ngIf=\"email.invalid\">{{getErrorMessage()}}</mat-error>\r\n  </mat-form-field>\r\n</div>`,\r\n\ttsCode: `\r\nimport {Component} from '@angular/core';\r\nimport {FormControl, Validators} from '@angular/forms';\\n\r\n/** @title Form field with error messages */\r\n@Component({\r\n  selector: 'form-field-error-example',\r\n  templateUrl: 'form-field-error-example.html',\r\n  styleUrls: ['form-field-error-example.css']\r\n})\r\nexport class FormFieldErrorExample {\r\n  email = new FormControl('', [Validators.required, Validators.email]);\\n\r\n  getErrorMessage() {\r\n    return this.email.hasError('required') ? 'You must enter a value' :\r\n      this.email.hasError('email') ? 'Not a valid email' :\r\n    '';\r\n  }\r\n}`,\r\n\tviewCode: ``,\r\n\tcssCode: `\r\n.example-container {\r\n  display: flex;\r\n  flex-direction: column;\r\n}\r\n.example-container > * {\r\n  width: 100%;\r\n}`,\r\n\tisCodeVisible: false\r\n};\r\n\r\nconst formFieldWithPrefixSuffix = {\r\n\tbeforeCodeTitle: 'Form field with prefix & suffix',\r\n\thtmlCode: `\r\n<div class=\"example-container\">\r\n  <mat-form-field>\r\n    <input matInput placeholder=\"Enter your password\" [type]=\"hide ? 'password' : 'text'\">\r\n    <mat-icon matSuffix (click)=\"hide = !hide\">{{hide ? 'visibility' : 'visibility_off'}}</mat-icon>\r\n  </mat-form-field>\r\n  <mat-form-field>\r\n    <input matInput placeholder=\"Amount\" type=\"number\" class=\"example-right-align\">\r\n    <span matPrefix>$&nbsp;</span>\r\n    <span matSuffix>.00</span>\r\n  </mat-form-field>\r\n</div>`,\r\n\ttsCode: `\r\nimport {Component} from '@angular/core';\\n\r\n/** @title Form field with prefix & suffix */\r\n@Component({\r\n  selector: 'form-field-prefix-suffix-example',\r\n  templateUrl: 'form-field-prefix-suffix-example.html',\r\n  styleUrls: ['form-field-prefix-suffix-example.css']\r\n})\r\nexport class FormFieldPrefixSuffixExample {\r\n  hide = true;\r\n}`,\r\n\tviewCode: ``,\r\n\tcssCode: `\r\n.example-container {\r\n  display: flex;\r\n  flex-direction: column;\r\n}\r\n.example-container > * {\r\n  width: 100%;\r\n}\r\n.example-right-align {\r\n  text-align: right;\r\n}\r\ninput.example-right-align::-webkit-outer-spin-button,\r\ninput.example-right-align::-webkit-inner-spin-button {\r\n  display: none;\r\n}\r\ninput.example-right-align {\r\n  -moz-appearance: textfield;\r\n}`,\r\n\tisCodeVisible: false\r\n};\r\n\r\nconst formFieldTheming = {\r\n\tbeforeCodeTitle: 'Form field theming',\r\n\thtmlCode: `\r\n<form class=\"example-container\" [formGroup]=\"options\" [style.fontSize.px]=\"getFontSize()\">\r\n  <mat-form-field [color]=\"options.value.color\">\r\n    <mat-select placeholder=\"Color\" formControlName=\"color\">\r\n      <mat-option value=\"primary\">Primary</mat-option>\r\n      <mat-option value=\"accent\">Accent</mat-option>\r\n      <mat-option value=\"warn\">Warn</mat-option>\r\n    </mat-select>\r\n  </mat-form-field>\r\n  <mat-form-field [color]=\"options.value.color\">\r\n    <input matInput type=\"number\" placeholder=\"Font size (px)\" formControlName=\"fontSize\" min=\"10\">\r\n     <mat-error *ngIf=\"options.get('fontSize')?.invalid\">Min size: 10px</mat-error>\r\n  </mat-form-field>\r\n </form>`,\r\n\ttsCode: `\r\nimport {Component} from '@angular/core';\r\nimport {FormBuilder, FormGroup, Validators} from '@angular/forms';\\n\r\n/** @title Form field theming */\r\n@Component({\r\n  selector: 'form-field-theming-example',\r\n  templateUrl: 'form-field-theming-example.html',\r\n  styleUrls: ['form-field-theming-example.css']\r\n})\r\nexport class FormFieldThemingExample {\r\n  options: FormGroup;\\n\r\n  constructor(fb: FormBuilder) {\r\n    this.options = fb.group({\r\n      'color': 'primary',\r\n      'fontSize': [16, Validators.min(10)],\r\n    });\r\n  }\r\n  getFontSize() {\r\n    return Math.max(10, this.options.value.fontSize);\r\n  }\r\n}`,\r\n\tviewCode: ``,\r\n\tcssCode: `\r\n.example-container {\r\n  display: flex;\r\n  flex-direction: column;\r\n}\r\n.example-container > * {\r\n  width: 100%;\r\n}`,\r\n\tisCodeVisible: false\r\n};\r\n\r\nconst formFieldWithCustomTelephoneNumberInputControl = {\r\n\tbeforeCodeTitle: 'Form field with custom telephone number input control.',\r\n\thtmlCode: `\r\n<div [formGroup]=\"parts\">\r\n  <input class=\"area\" formControlName=\"area\" size=\"3\">\r\n  <span>&ndash;</span>\r\n  <input class=\"exchange\" formControlName=\"exchange\" size=\"3\">\r\n  <span>&ndash;</span>\r\n  <input class=\"subscriber\" formControlName=\"subscriber\" size=\"4\">\r\n</div>`,\r\n\ttsCode: `\r\nimport {FocusMonitor} from '@angular/cdk/a11y';\r\nimport {coerceBooleanProperty} from '@angular/cdk/coercion';\r\nimport {Component, ElementRef, Input, OnDestroy} from '@angular/core';\r\nimport {FormBuilder, FormGroup} from '@angular/forms';\r\nimport {MatFormFieldControl} from '@angular/material';\r\nimport {Subject} from 'rxjs/Subject';\\n\r\n/** Data structure for holding telephone number. */\r\nexport class MyTel {\r\n  constructor(public area: string, public exchange: string, public subscriber: string) {}\r\n}\r\n/** Custom \\`MatFormFieldControl\\` for telephone number input. */\r\n@Component({\r\n  selector: 'my-tel-input',\r\n  templateUrl: 'form-field-custom-control-example.html',\r\n  styleUrls: ['form-field-custom-control-example.css'],\r\n  providers: [{provide: MatFormFieldControl, useExisting: MyTelInput}],\r\n  host: {\r\n    '[class.floating]': 'shouldLabelFloat',\r\n    '[id]': 'id',\r\n    '[attr.aria-describedby]': 'describedBy',\r\n  }\r\n})\r\nexport class MyTelInput implements MatFormFieldControl<MyTel>, OnDestroy {\r\n  static nextId = 0;\r\n  parts: FormGroup;\r\n  stateChanges = new Subject<void>();\r\n  focused = false;\r\n  ngControl = null;\r\n  errorState = false;\r\n  controlType = 'my-tel-input';\r\n  get empty() {\r\n    let n = this.parts.value;\r\n    return !n.area && !n.exchange && !n.subscriber;\r\n  }\r\n  get shouldLabelFloat() { return this.focused || !this.empty; }\r\n  id = \\`my-tel-input-\\${MyTelInput.nextId++}\\`;\r\n  describedBy = '';\\n\r\n  @Input()\r\n  get placeholder() { return this._placeholder; }\r\n  set placeholder(plh) {\r\n    this._placeholder = plh;\r\n    this.stateChanges.next();\r\n  }\\n\r\n  private _placeholder: string;\r\n  @Input()\r\n  get required() { return this._required; }\r\n  set required(req) {\r\n    this._required = coerceBooleanProperty(req);\r\n    this.stateChanges.next();\r\n  }\\n\r\n  private _required = false;\\n\r\n  @Input()\r\n  get disabled() { return this._disabled; }\r\n  set disabled(dis) {\r\n    this._disabled = coerceBooleanProperty(dis);\r\n    this.stateChanges.next();\r\n  }\\n\r\n  private _disabled = false;\\n\r\n  @Input()\r\n  get value(): MyTel | null {\r\n    let n = this.parts.value;\r\n    if (n.area.length == 3 && n.exchange.length == 3 && n.subscriber.length == 4) {\r\n      return new MyTel(n.area, n.exchange, n.subscriber);\r\n    }\r\n    return null;\r\n  }\r\n  set value(tel: MyTel | null) {\r\n    tel = tel || new MyTel('', '', '');\r\n    this.parts.setValue({area: tel.area, exchange: tel.exchange, subscriber: tel.subscriber});\r\n    this.stateChanges.next();\r\n  }\\n\r\n  constructor(fb: FormBuilder, private fm: FocusMonitor, private elRef: ElementRef) {\r\n    this.parts = fb.group({\r\n      'area': '',\r\n      'exchange': '',\r\n     'subscriber': '',\r\n    });\\n\r\n    fm.monitor(elRef.nativeElement, true).subscribe((origin) => {\r\n      this.focused = !!origin;\r\n      this.stateChanges.next();\r\n    });\r\n  }\\n\r\n  ngOnDestroy() {\r\n    this.stateChanges.complete();\r\n    this.fm.stopMonitoring(this.elRef.nativeElement);\r\n  }\\n\r\n  setDescribedByIds(ids: string[]) {\r\n    this.describedBy = ids.join(' ');\r\n  }\\n\r\n  onContainerClick(event: MouseEvent) {\r\n    if ((event.target as Element).tagName.toLowerCase() != 'input') {\r\n      this.elRef.nativeElement.querySelector('input').focus();\r\n    }\r\n  }\r\n}\\n\\n\r\n/** @title Form field with custom telephone number input control. */\r\n@Component({\r\n  selector: 'form-field-custom-control-example',\r\n  template: \\`\r\n    <mat-form-field>\r\n      <my-tel-input placeholder=\"Phone number\" required></my-tel-input>\r\n      <mat-icon matSuffix>phone</mat-icon>\r\n      <mat-hint>Include area code</mat-hint>\r\n    </mat-form-field>\r\n  \\`\r\n})\r\nexport class FormFieldCustomControlExample {}`,\r\n\tviewCode: ``,\r\n\tcssCode: `\r\ndiv {\r\n  display: flex;\r\n}\\n\r\ninput {\r\n  border: none;\r\n  background: none;\r\n  padding: 0;\r\n  outline: none;\r\n  font: inherit;\r\n  text-align: center;\r\n}\\n\r\nspan {\r\n  opacity: 0;\r\n  transition: opacity 200ms;\r\n}\\n\r\n:host.floating span {\r\n  opacity: 1;\r\n}`,\r\n\tisCodeVisible: false\r\n};\r\n\r\n@Component({\r\n\tselector: 'kt-formfield',\r\n\ttemplateUrl: './formfield.component.html',\r\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\r\n\tstyles: [`\r\n\t.example-container {\r\n\t\tdisplay: flex;\r\n\t\tflex-direction: column;\r\n\t  }\r\n\t  .example-container > * {\r\n\t\twidth: 100%;\r\n\t  }\r\n\r\n\t  .example-container form {\r\n\t  \tmargin-bottom: 20px;\r\n  \t  }\r\n  \t  .example-container form > * {\r\n\t    margin: 5px 0;\r\n      }\r\n  \t  .example-container .mat-radio-button {\r\n\t    margin: 0 5px;\r\n\t  }\r\n\t  .example-right-align {\r\n\t\ttext-align: right;\r\n\t  }\r\n\t  input.example-right-align::-webkit-outer-spin-button,\r\n\t  input.example-right-align::-webkit-inner-spin-button {\r\n\t\tdisplay: none;\r\n\t  }\r\n\t  input.example-right-align {\r\n\t\t-moz-appearance: textfield;\r\n\t  }\r\n\t`]\r\n})\r\nexport class FormfieldComponent implements OnInit {\r\n\r\n\texampleSimpleFormField;\r\n\texampleFormFieldWithLabel;\r\n\texampleFormFieldWithHints;\r\n\texampleFormFieldWithErrorMessages;\r\n\texampleFormFieldWithPrefixSuffix;\r\n\texampleFormFieldTheming;\r\n\texampleFormFieldWithCustomTelephoneNumberInputControl;\r\n\texampleFormFieldAppearanceVariants;\r\n\toptions: FormGroup;\r\n\toptions2: FormGroup;\r\n\r\n\temail = new FormControl('', [Validators.required, Validators.email]);\r\n\thide = true;\r\n\r\n\tgetErrorMessage() {\r\n\t\treturn this.email.hasError('required') ? 'You must enter a value' :\r\n\t\t\tthis.email.hasError('email') ? 'Not a valid email' :\r\n\t\t\t\t'';\r\n\t}\r\n\r\n\tconstructor(fb: FormBuilder) {\r\n\t\tthis.options = fb.group({\r\n\t\t\thideRequired: false,\r\n\t\t\tfloatLabel: 'auto',\r\n\t\t});\r\n\r\n\t\tthis.options2 = fb.group({\r\n\t\t\t// tslint:disable-next-line:object-literal-key-quotes\r\n\t\t\t'color': 'primary',\r\n\t\t\t// tslint:disable-next-line:object-literal-key-quotes\r\n\t\t\t'fontSize': [16, Validators.min(10)],\r\n\t\t});\r\n\t}\r\n\r\n\tgetFontSize() {\r\n\t\treturn Math.max(10, this.options2.value.fontSize);\r\n\t}\r\n\r\n\tngOnInit() {\r\n\t\tthis.exampleSimpleFormField = simpleFormField;\r\n\t\tthis.exampleFormFieldWithLabel = formFieldWithLabel;\r\n\t\tthis.exampleFormFieldWithHints = formFieldWithHints;\r\n\t\tthis.exampleFormFieldWithErrorMessages = formFieldWithErrorMessages;\r\n\t\tthis.exampleFormFieldWithPrefixSuffix = formFieldWithPrefixSuffix;\r\n\t\tthis.exampleFormFieldTheming = formFieldTheming;\r\n\t\tthis.exampleFormFieldWithCustomTelephoneNumberInputControl = formFieldWithCustomTelephoneNumberInputControl;\r\n\t\tthis.exampleFormFieldAppearanceVariants = formFieldAppearanceVariants;\r\n\t}\r\n}\r\n","<kt-notice [svg]=\"'assets/media/svg/icons/Tools/Compass.svg'\">\r\n\tFor more info please check the components's official demos & documentation\r\n\t<a class=\"font-weight-bold\" href=\"https://material.angular.io/components/input/overview\" target=\"_blank\">demos & documentation</a>\r\n</kt-notice>\r\n\r\n<div class=\"row\">\r\n\t<div class=\"col-xl-6\">\r\n\t\t<kt-code-preview [viewItem]=\"exampleBasicInputs\">\r\n\t\t\t<div class=\"example-preview\">\r\n\t\t\t\t<span>\r\n\t\t\t\t\tmatInput is a directive that allows native\r\n\t\t\t\t\t<mark>input</mark> and\r\n\t\t\t\t\t<mark>textarea</mark> elements to work with\r\n\t\t\t\t\t<code>mat-form-field</code>.\r\n\t\t\t\t</span>\r\n\t\t\t\t<div class=\"separator separator-dashed my-6\"></div>\r\n\t\t\t\t<div class=\"example-container\">\r\n\t\t\t\t\t<form class=\"example-container\">\r\n\t\t\t\t\t\t<mat-form-field class=\"example-full-width\">\r\n\t\t\t\t\t\t\t<input matInput placeholder=\"Favorite food\" value=\"Sushi\">\r\n\t\t\t\t\t\t</mat-form-field>\r\n\t\t\t\t\t\t<div class=\"separator separator-dashed my-6\"></div>\r\n\t\t\t\t\t\t<mat-form-field class=\"example-full-width\">\r\n\t\t\t\t\t\t\t<textarea matInput placeholder=\"Leave a comment\"></textarea>\r\n\t\t\t\t\t\t</mat-form-field>\r\n\t\t\t\t\t</form>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</kt-code-preview>\r\n\r\n\t\t<kt-code-preview [viewItem]=\"exampleInputWithACustomErrorStateMatcher\">\r\n\t\t\t<div class=\"example-preview\">\r\n\t\t\t\t<div class=\"example-container\">\r\n\t\t\t\t\t<form class=\"example-container\">\r\n\t\t\t\t\t\t<mat-form-field class=\"example-full-width\">\r\n\t\t\t\t\t\t\t<input matInput placeholder=\"Email\" [formControl]=\"emailFormControl\" [errorStateMatcher]=\"matcher\">\r\n\t\t\t\t\t\t\t<mat-hint>Errors appear instantly!</mat-hint>\r\n\t\t\t\t\t\t\t<mat-error *ngIf=\"emailFormControl.hasError('email') && !emailFormControl.hasError('required')\">\r\n\t\t\t\t\t\t\t\tPlease enter a valid email address\r\n\t\t\t\t\t\t\t</mat-error>\r\n\t\t\t\t\t\t\t<mat-error *ngIf=\"emailFormControl.hasError('required')\">\r\n\t\t\t\t\t\t\t\tEmail is\r\n\t\t\t\t\t\t\t\t<strong>required</strong>\r\n\t\t\t\t\t\t\t</mat-error>\r\n\t\t\t\t\t\t</mat-form-field>\r\n\t\t\t\t\t</form>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</kt-code-preview>\r\n\r\n\t\t<kt-code-preview [viewItem]=\"exampleAutoResizingTextarea\">\r\n\t\t\t<div class=\"example-preview\">\r\n\t\t\t\t<div class=\"example-container\">\r\n\t\t\t\t\t<form class=\"example-container\">\r\n\t\t\t\t\t\t<mat-form-field>\r\n\t\t\t\t\t\t\t<textarea matInput placeholder=\"Autosize textarea\" matTextareaAutosize matAutosizeMinRows=\"2\" matAutosizeMaxRows=\"5\"></textarea>\r\n\t\t\t\t\t\t</mat-form-field>\r\n\t\t\t\t\t</form>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</kt-code-preview>\r\n\r\n\t\t<kt-code-preview [viewItem]=\"exampleInputWithAClearButton\">\r\n\t\t\t<div class=\"example-preview\">\r\n\t\t\t\t<div class=\"example-container\">\r\n\t\t\t\t\t<mat-form-field class=\"example-form-field\">\r\n\t\t\t\t\t\t<input matInput type=\"text\" placeholder=\"Clearable input\" [(ngModel)]=\"value\" />\r\n\t\t\t\t\t\t<button mat-button *ngIf=\"value\" matSuffix mat-icon-button aria-label=\"Clear\" (click)=\"value=''\">\r\n\t\t\t\t\t\t\t<i class=\"la la-close\"></i>\r\n\t\t\t\t\t\t</button>\r\n\t\t\t\t\t</mat-form-field>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\r\n\t\t</kt-code-preview>\r\n\t</div>\r\n\t<div class=\"col-xl-6\">\r\n\t\t<kt-code-preview [viewItem]=\"exampleInputWithErrorMessages\">\r\n\t\t\t<div class=\"example-preview\">\r\n\t\t\t\t<div class=\"example-container\">\r\n\t\t\t\t\t<form class=\"example-container\">\r\n\t\t\t\t\t\t<mat-form-field class=\"example-full-width\">\r\n\t\t\t\t\t\t\t<input matInput placeholder=\"Email\" [formControl]=\"emailFormControl2\">\r\n\t\t\t\t\t\t\t<mat-error *ngIf=\"emailFormControl2.hasError('email') && !emailFormControl2.hasError('required')\">\r\n\t\t\t\t\t\t\t\tPlease enter a valid email address\r\n\t\t\t\t\t\t\t</mat-error>\r\n\t\t\t\t\t\t\t<mat-error *ngIf=\"emailFormControl2.hasError('required')\">\r\n\t\t\t\t\t\t\t\tEmail is\r\n\t\t\t\t\t\t\t\t<strong>required</strong>\r\n\t\t\t\t\t\t\t</mat-error>\r\n\t\t\t\t\t\t</mat-form-field>\r\n\t\t\t\t\t</form>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</kt-code-preview>\r\n\r\n\t\t<kt-code-preview [viewItem]=\"exampleInputsInAForm\">\r\n\t\t\t<div class=\"example-preview\">\r\n\t\t\t\t<div class=\"example-container\">\r\n\t\t\t\t\t<form class=\"example-container\">\r\n\t\t\t\t\t\t<mat-form-field class=\"example-full-width\">\r\n\t\t\t\t\t\t\t<input matInput placeholder=\"Company (disabled)\" disabled value=\"Google\">\r\n\t\t\t\t\t\t</mat-form-field>\r\n\t\t\t\t\t\t<div class=\"separator separator-dashed my-6\"></div>\r\n\t\t\t\t\t\t<table class=\"example-full-width\" cellspacing=\"0\">\r\n\t\t\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t\t\t<td>\r\n\t\t\t\t\t\t\t\t\t<mat-form-field class=\"example-full-width\">\r\n\t\t\t\t\t\t\t\t\t\t<input matInput placeholder=\"First name\">\r\n\t\t\t\t\t\t\t\t\t</mat-form-field>\r\n\t\t\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t\t\t<td>\r\n\t\t\t\t\t\t\t\t\t<mat-form-field class=\"example-full-width\">\r\n\t\t\t\t\t\t\t\t\t\t<input matInput placeholder=\"Long Last Name That Will Be Truncated\">\r\n\t\t\t\t\t\t\t\t\t</mat-form-field>\r\n\t\t\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t</table>\r\n\r\n\t\t\t\t\t\t<div class=\"separator separator-dashed my-6\"></div>\r\n\t\t\t\t\t\t<mat-form-field class=\"example-full-width\">\r\n\t\t\t\t\t\t\t<textarea matInput placeholder=\"Address\">1600 Amphitheatre Pkwy</textarea>\r\n\t\t\t\t\t\t</mat-form-field>\r\n\t\t\t\t\t\t<mat-form-field class=\"example-full-width\">\r\n\t\t\t\t\t\t\t<textarea matInput placeholder=\"Address 2\"></textarea>\r\n\t\t\t\t\t\t</mat-form-field>\r\n\t\t\t\t\t\t<div class=\"separator separator-dashed my-6\"></div>\r\n\t\t\t\t\t\t<table class=\"example-full-width\" cellspacing=\"0\">\r\n\t\t\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t\t\t<td>\r\n\t\t\t\t\t\t\t\t\t<mat-form-field class=\"example-full-width\">\r\n\t\t\t\t\t\t\t\t\t\t<input matInput placeholder=\"City\">\r\n\t\t\t\t\t\t\t\t\t</mat-form-field>\r\n\t\t\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t\t\t<td>\r\n\t\t\t\t\t\t\t\t\t<mat-form-field class=\"example-full-width\">\r\n\t\t\t\t\t\t\t\t\t\t<input matInput placeholder=\"State\">\r\n\t\t\t\t\t\t\t\t\t</mat-form-field>\r\n\t\t\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t\t\t<td>\r\n\t\t\t\t\t\t\t\t\t<mat-form-field class=\"example-full-width\">\r\n\t\t\t\t\t\t\t\t\t\t<input matInput #postalCode maxlength=\"5\" placeholder=\"Postal Code\" value=\"94043\">\r\n\t\t\t\t\t\t\t\t\t\t<mat-hint align=\"end\">{{postalCode.value.length}} / 5</mat-hint>\r\n\t\t\t\t\t\t\t\t\t</mat-form-field>\r\n\t\t\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t</table>\r\n\t\t\t\t\t</form>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</kt-code-preview>\r\n\r\n\t\t<kt-code-preview [viewItem]=\"exampleInputWithHints\">\r\n\t\t\t<div class=\"example-preview\">\r\n\t\t\t\t<div class=\"example-container\">\r\n\t\t\t\t\t<form class=\"example-container\">\r\n\t\t\t\t\t\t<mat-form-field class=\"example-full-width\">\r\n\t\t\t\t\t\t\t<input matInput #message maxlength=\"256\" placeholder=\"Message\">\r\n\t\t\t\t\t\t\t<mat-hint align=\"start\">\r\n\t\t\t\t\t\t\t\t<strong>Don't disclose personal info</strong>\r\n\t\t\t\t\t\t\t</mat-hint>\r\n\t\t\t\t\t\t\t<mat-hint align=\"end\">{{message.value.length}} / 256</mat-hint>\r\n\t\t\t\t\t\t</mat-form-field>\r\n\t\t\t\t\t</form>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\r\n\t\t</kt-code-preview>\r\n\r\n\r\n\t\t<kt-code-preview [viewItem]=\"exampleInputsWithPrefixesAndSuffixes\">\r\n\t\t\t<div class=\"example-preview\">\r\n\t\t\t\t<div class=\"example-container\">\r\n\t\t\t\t\t<form class=\"example-container\">\r\n\t\t\t\t\t\t<mat-form-field class=\"example-full-width\">\r\n\t\t\t\t\t\t\t<span matPrefix>+1 &nbsp;</span>\r\n\t\t\t\t\t\t\t<input type=\"tel\" matInput placeholder=\"Telephone\">\r\n\t\t\t\t\t\t\t<i class=\"la la-edit\" matSuffix></i>\r\n\t\t\t\t\t\t</mat-form-field>\r\n\t\t\t\t\t</form>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</kt-code-preview>\r\n\t</div>\r\n</div>\r\n","import { Component, OnInit, ChangeDetectionStrategy } from '@angular/core';\r\nimport { FormControl, FormGroupDirective, NgForm, Validators } from '@angular/forms';\r\nimport { ErrorStateMatcher } from '@angular/material/core';\r\n\r\nconst basicInputs = {\r\n\tbeforeCodeTitle: 'Basic Inputs',\r\n\thtmlCode: `\r\n<form class=\"example-form\">\r\n  <mat-form-field class=\"example-full-width\">\r\n    <input matInput placeholder=\"Favorite food\" value=\"Sushi\">\r\n  </mat-form-field>\r\n  <mat-form-field class=\"example-full-width\">\r\n    <textarea matInput placeholder=\"Leave a comment\"></textarea>\r\n  </mat-form-field>\r\n</form>`,\r\n\ttsCode: `\r\nimport {Component} from '@angular/core';\\n\r\n/**\r\n* @title Basic Inputs\r\n*/\r\n@Component({\r\n  selector: 'input-overview-example',\r\n  styleUrls: ['input-overview-example.css'],\r\n  templateUrl: 'input-overview-example.html',\r\n})\r\nexport class InputOverviewExample {}`,\r\n\tcssCode: `\r\n.example-form {\r\n  min-width: 150px;\r\n  max-width: 500px;\r\n  width: 100%;\r\n}\r\n.example-full-width {\r\n  width: 100%;\r\n}`,\r\n\tviewCode: ``,\r\n\tisCodeVisible: false\r\n};\r\n\r\nconst inputWithACustomErrorStateMatcher = {\r\n\tbeforeCodeTitle: 'Input with a custom ErrorStateMatcher',\r\n\thtmlCode: `\r\n<form class=\"example-form\">\r\n  <mat-form-field class=\"example-full-width\">\r\n    <input matInput placeholder=\"Email\" [formControl]=\"emailFormControl\"\r\n      [errorStateMatcher]=\"matcher\">\r\n    <mat-hint>Errors appear instantly!</mat-hint>\r\n    <mat-error *ngIf=\"emailFormControl.hasError('email') && !emailFormControl.hasError('required')\">\r\n      Please enter a valid email address\r\n    </mat-error>\r\n    <mat-error *ngIf=\"emailFormControl.hasError('required')\">\r\n      Email is <strong>required</strong>\r\n    </mat-error>\r\n  </mat-form-field>\r\n</form>`,\r\n\ttsCode: `\r\nimport {Component} from '@angular/core';\r\nimport {FormControl, FormGroupDirective, NgForm, Validators} from '@angular/forms';\r\nimport {ErrorStateMatcher} from '@angular/material/core';\\n\r\n/** Error when invalid control is dirty, touched, or submitted. */\r\nexport class MyErrorStateMatcher implements ErrorStateMatcher {\r\n  isErrorState(control: FormControl | null, form: FormGroupDirective | NgForm | null): boolean {\r\n  const isSubmitted = form && form.submitted;\r\n    return !!(control && control.invalid && (control.dirty || control.touched || isSubmitted));\r\n  }\r\n}\r\n/** @title Input with a custom ErrorStateMatcher */\r\n@Component({\r\n  selector: 'input-error-state-matcher-example',\r\n  templateUrl: './input-error-state-matcher-example.html',\r\n  styleUrls: ['./input-error-state-matcher-example.css'],\r\n})\r\nexport class InputErrorStateMatcherExample {\r\n  emailFormControl = new FormControl('', [\r\n  Validators.required,\r\n  Validators.email,\r\n]);\r\n  matcher = new MyErrorStateMatcher();\r\n}`,\r\n\tviewCode: ``,\r\n\tcssCode: `\r\n.example-form {\r\n  min-width: 150px;\r\n  max-width: 500px;\r\n  width: 100%;\r\n}\r\n.example-full-width {\r\n  width: 100%;\r\n}`,\r\n\tisCodeVisible: false\r\n};\r\n\r\nconst autoResizingTextarea = {\r\n\tbeforeCodeTitle: 'Auto-resizing textarea',\r\n\thtmlCode: `\r\n<mat-form-field>\r\n  <textarea matInput placeholder=\"Autosize textarea\" matTextareaAutosize matAutosizeMinRows=\"2\"\r\n    matAutosizeMaxRows=\"5\"></textarea>\r\n</mat-form-field>`,\r\n\ttsCode: `\r\nimport {Component} from '@angular/core';'n\r\n/** @title Auto-resizing textarea */\r\n@Component({\r\n  selector: 'input-autosize-textarea-example',\r\n  templateUrl: './input-autosize-textarea-example.html',\r\n  styleUrls: ['./input-autosize-textarea-example.css'],\r\n})\r\nexport class InputAutosizeTextareaExample {}`,\r\n\tviewCode: ``,\r\n\tcssCode: ``,\r\n\tisCodeVisible: false\r\n};\r\n\r\nconst inputWithAClearButton = {\r\n\tbeforeCodeTitle: 'Input with a clear button',\r\n\thtmlCode: `\r\n<mat-form-field class=\"example-form-field\">\r\n  <input matInput type=\"text\" placeholder=\"Clearable input\" [(ngModel)]=\"value\"/>\r\n  <button mat-button *ngIf=\"value\" matSuffix mat-icon-button aria-label=\"Clear\" (click)=\"value=''\">\r\n    <mat-icon>close</mat-icon>\r\n  </button>\r\n </mat-form-field>\r\n\t\t`,\r\n\ttsCode: `\r\nimport {Component} from '@angular/core';\\n\r\n/**\r\n* @title Input with a clear button\r\n*/\r\n@Component({\r\n  selector: 'input-clearable-example',\r\n  templateUrl: './input-clearable-example.html',\r\n  styleUrls: ['./input-clearable-example.css'],\r\n})\r\nexport class InputClearableExample {\r\n  value = 'Clear me';\r\n}`,\r\n\tviewCode: ``,\r\n\tcssCode: `\r\n.example-form-field {\r\n  width: 200px;\r\n}`,\r\n\tisCodeVisible: false\r\n};\r\n\r\nconst inputWithErrorMessages = {\r\n\tbeforeCodeTitle: 'Input with error messages',\r\n\thtmlCode: `\r\n<form class=\"example-form\">\r\n  <mat-form-field class=\"example-full-width\">\r\n    <input matInput placeholder=\"Email\" [formControl]=\"emailFormControl\">\r\n    <mat-error *ngIf=\"emailFormControl.hasError('email') && !emailFormControl.hasError('required')\">\r\n      Please enter a valid email address\r\n    </mat-error>\r\n    <mat-error *ngIf=\"emailFormControl.hasError('required')\">\r\n      Email is <strong>required</strong>\r\n    </mat-error>\r\n  </mat-form-field>\r\n </form>`,\r\n\ttsCode: `\r\nimport {Component} from '@angular/core';\r\nimport {FormControl, Validators} from '@angular/forms';\\n\r\n/**\r\n* @title Input with error messages\r\n*/\r\n@Component({\r\n  selector: 'input-errors-example',\r\n  templateUrl: 'input-errors-example.html',\r\n  styleUrls: ['input-errors-example.css'],\r\n})\r\nexport class InputErrorsExample {\r\n  emailFormControl = new FormControl('', [\r\n    Validators.required,\r\n    Validators.email,\r\n  ]);\r\n}`,\r\n\tviewCode: ``,\r\n\tcssCode: `\r\n.example-form {\r\n  min-width: 150px;\r\n  max-width: 500px;\r\n  width: 100%;\r\n}\r\n.example-full-width {\r\n  width: 100%;\r\n}`,\r\n\tisCodeVisible: false\r\n};\r\n\r\nconst inputsInAForm = {\r\n\tbeforeCodeTitle: 'Inputs in a form',\r\n\thtmlCode: `\r\n<form class=\"example-form\">\r\n  <mat-form-field class=\"example-full-width\">\r\n    <input matInput placeholder=\"Company (disabled)\" disabled value=\"Google\">\r\n  </mat-form-field>\r\n  <table class=\"example-full-width\" cellspacing=\"0\"><tr>\r\n    <td><mat-form-field class=\"example-full-width\">\r\n      <input matInput placeholder=\"First name\">\r\n    </mat-form-field></td>\r\n    <td><mat-form-field class=\"example-full-width\">\r\n      <input matInput placeholder=\"Long Last Name That Will Be Truncated\">\r\n    </mat-form-field></td>\r\n  </tr></table>\r\n  <p>\r\n    <mat-form-field class=\"example-full-width\">\r\n      <textarea matInput placeholder=\"Address\">1600 Amphitheatre Pkwy</textarea>\r\n    </mat-form-field>\r\n    <mat-form-field class=\"example-full-width\">\r\n      <textarea matInput placeholder=\"Address 2\"></textarea>\r\n    </mat-form-field>\r\n  </p>\r\n  <table class=\"example-full-width\" cellspacing=\"0\"><tr>\r\n    <td><mat-form-field class=\"example-full-width\">\r\n      <input matInput placeholder=\"City\">\r\n    </mat-form-field></td>\r\n    <td><mat-form-field class=\"example-full-width\">\r\n      <input matInput placeholder=\"State\">\r\n    </mat-form-field></td>\r\n    <td><mat-form-field class=\"example-full-width\">\r\n      <input matInput #postalCode maxlength=\"5\" placeholder=\"Postal Code\" value=\"94043\">\r\n      <mat-hint align=\"end\">{{postalCode.value.length}} / 5</mat-hint>\r\n    </mat-form-field></td>\r\n  </tr></table>\r\n</form>`,\r\n\ttsCode: `\r\nimport {Component} from '@angular/core';\\n\r\n/**\r\n* @title Inputs in a form\r\n*/\r\n@Component({\r\n  selector: 'input-form-example',\r\n  templateUrl: 'input-form-example.html',\r\n  styleUrls: ['input-form-example.css'],\r\n})\r\nexport class InputFormExample {}`,\r\n\tviewCode: ``,\r\n\tcssCode: `\r\n.example-form {\r\n  min-width: 150px;\r\n  max-width: 500px;\r\n  width: 100%;\r\n}\r\n.example-full-width {\r\n  width: 100%;\r\n}`,\r\n\tisCodeVisible: false\r\n};\r\n\r\nconst inputWithHints = {\r\n\tbeforeCodeTitle: 'Input with hints',\r\n\thtmlCode: `\r\n<form class=\"example-form\">\r\n  <mat-form-field class=\"example-full-width\">\r\n    <input matInput #message maxlength=\"256\" placeholder=\"Message\">\r\n    <mat-hint align=\"start\"><strong>Don't disclose personal info</strong> </mat-hint>\r\n    <mat-hint align=\"end\">{{message.value.length}} / 256</mat-hint>\r\n  </mat-form-field>\r\n</form>`,\r\n\ttsCode: `\r\nimport {Component} from '@angular/core';\\n\r\n/**\r\n* @title Input with hints\r\n*/\r\n@Component({\r\n  selector: 'input-hint-example',\r\n  templateUrl: 'input-hint-example.html',\r\n  styleUrls: ['input-hint-example.css'],\r\n})\r\nexport class InputHintExample {}`,\r\n\tviewCode: ``,\r\n\tcssCode: `\r\n.example-form {\r\n  min-width: 150px;\r\n  max-width: 500px;\r\n  width: 100%;\r\n}\r\n.example-full-width {\r\n  width: 100%;\r\n}`,\r\n\tisCodeVisible: false\r\n};\r\n\r\nconst inputsWithPrefixesAndSuffixes = {\r\n\tbeforeCodeTitle: 'Inputs with prefixes and suffixes',\r\n\thtmlCode: `\r\n<form class=\"example-form\">\r\n  <mat-form-field class=\"example-full-width\">\r\n    <span matPrefix>+1 &nbsp;</span>\r\n    <input type=\"tel\" matInput placeholder=\"Telephone\">\r\n    <mat-icon matSuffix>mode_edit</mat-icon>\r\n  </mat-form-field>\r\n</form>`,\r\n\ttsCode: `\r\nimport {Component} from '@angular/core';\\n\r\n/**\r\n* @title Inputs with prefixes and suffixes\r\n*/\r\n@Component({\r\n  selector: 'input-prefix-suffix-example',\r\n  templateUrl: 'input-prefix-suffix-example.html',\r\n styleUrls: ['input-prefix-suffix-example.css'],\r\n})\r\nexport class InputPrefixSuffixExample {}`,\r\n\tviewCode: ``,\r\n\tcssCode: `\r\n.example-form {\r\n  min-width: 150px;\r\n  max-width: 500px;\r\n  width: 100%;\r\n}\r\n.example-full-width {\r\n  width: 100%;\r\n}`,\r\n\tisCodeVisible: false\r\n};\r\n\r\nconst datepickerOpenMethod = {\r\n\tbeforeCodeTitle: 'Datepicker open method',\r\n\thtmlCode: `\r\n<mat-form-field class=\"example-full-width\">\r\n  <input matInput [matDatepicker]=\"picker\" placeholder=\"Choose a date\">\r\n    <mat-datepicker #picker></mat-datepicker>\r\n</mat-form-field>\r\n<button mat-raised-button (click)=\"picker.open()\">Open</button>`,\r\n\ttsCode: `\r\nimport {Component} from '@angular/core';\\n\r\n/** @title Datepicker open method */\r\n@Component({\r\n  selector: 'datepicker-api-example',\r\n  templateUrl: 'datepicker-api-example.html',\r\n  styleUrls: ['datepicker-api-example.css'],\r\n})\r\nexport class DatepickerApiExample {}`,\r\n\tviewCode: ``,\r\n\tcssCode: ``,\r\n\tisCodeVisible: false\r\n};\r\n\r\nconst datepickerWithDifferentLocale = {\r\n\tbeforeCodeTitle: 'Datepicker with different locale',\r\n\thtmlCode: `\r\n<mat-form-field>\r\n  <input matInput [matDatepicker]=\"dp\" placeholder=\"Different locale\">\r\n  <mat-datepicker-toggle matSuffix [for]=\"dp\"></mat-datepicker-toggle>\r\n  <mat-datepicker #dp></mat-datepicker>\r\n</mat-form-field>\r\n<button mat-button (click)=\"french()\">Dynamically switch to French</button>`,\r\n\ttsCode: `\r\nimport {Component} from '@angular/core';\r\nimport {MAT_MOMENT_DATE_FORMATS, MomentDateAdapter} from '@angular/material-moment-adapter';\r\nimport {DateAdapter, MAT_DATE_FORMATS, MAT_DATE_LOCALE} from '@angular/material/core';\r\n/** @title Datepicker with different locale */\r\n@Component({\r\n  selector: 'datepicker-locale-example',\r\n  templateUrl: 'datepicker-locale-example.html',\r\n  styleUrls: ['datepicker-locale-example.css'],\r\n  providers: [\r\n    // The locale would typically be provided on the root module of your application. We do it at\r\n    // the component level here, due to limitations of our example generation script.\r\n    {provide: MAT_DATE_LOCALE, useValue: 'ja-JP'},\r\n    // \\`MomentDateAdapter\\` and \\`MAT_MOMENT_DATE_FORMATS\\` can be automatically provided by importing\r\n    // \\`MatMomentDateModule\\` in your applications root module. We provide it at the component level\r\n\t// here, due to limitations of our example generation script.\r\n    {provide: DateAdapter, useClass: MomentDateAdapter, deps: [MAT_DATE_LOCALE]},\r\n    {provide: MAT_DATE_FORMATS, useValue: MAT_MOMENT_DATE_FORMATS},\r\n  ],\r\n})\r\nexport class DatepickerLocaleExample {\r\n  constructor(private adapter: DateAdapter<any>) {}\r\n  french() {\r\n    this.adapter.setLocale('fr');\r\n  }\r\n}`,\r\n\tviewCode: ``,\r\n\tcssCode: `\r\n\t\t`,\r\n\tisCodeVisible: false\r\n};\r\n\r\n\r\n\r\nconst datepickerThatUsesMomentJsDates = {\r\n\tbeforeCodeTitle: 'Datepicker that uses Moment.js dates',\r\n\thtmlCode: `\r\n<mat-form-field>\r\n  <input matInput [matDatepicker]=\"dp\" placeholder=\"Moment.js datepicker\" [formControl]=\"date\">\r\n  <mat-datepicker-toggle matSuffix [for]=\"dp\"></mat-datepicker-toggle>\r\n  <mat-datepicker #dp></mat-datepicker>\r\n</mat-form-field>`,\r\n\ttsCode: `\r\nimport {Component} from '@angular/core';\r\nimport {FormControl} from '@angular/forms';\r\nimport {MAT_MOMENT_DATE_FORMATS, MomentDateAdapter} from '@angular/material-moment-adapter';\r\nimport {DateAdapter, MAT_DATE_FORMATS, MAT_DATE_LOCALE} from '@angular/material/core';\\n\r\n// Depending on whether rollup is used, moment needs to be imported differently.\r\n// Since Moment.js doesn't have a default export, we normally need to import using the \\`* as\\`\r\n// syntax. However, rollup creates a synthetic default module and we thus need to import it using\r\n// the \\`default as\\` syntax.\r\nimport * as _moment from 'moment';\r\nimport {default as _rollupMoment} from 'moment';\r\nconst moment = _rollupMoment || _moment;\\n\r\n/** @title Datepicker that uses Moment.js dates */\r\n@Component({\r\n  selector: 'datepicker-moment-example',\r\n  templateUrl: 'datepicker-moment-example.html',\r\n  styleUrls: ['datepicker-moment-example.css'],\r\n  providers: [\r\n    // \\`MomentDateAdapter\\` and \\`MAT_MOMENT_DATE_FORMATS\\` can be automatically provided by importing\r\n    // \\`MatMomentDateModule\\` in your applications root module. We provide it at the component level\r\n    // here, due to limitations of our example generation script.\r\n    {provide: DateAdapter, useClass: MomentDateAdapter, deps: [MAT_DATE_LOCALE]},\r\n    {provide: MAT_DATE_FORMATS, useValue: MAT_MOMENT_DATE_FORMATS},\r\n  ],\r\n})\r\nexport class DatepickerMomentExample {\r\n// Datepicker takes \\`Moment\\` objects instead of \\`Date\\` objects.\r\n  date = new FormControl(moment([2017, 0, 1]));\r\n}`,\r\n\tviewCode: ``,\r\n\tcssCode: `\r\n\t\t`,\r\n\tisCodeVisible: false\r\n};\r\n\r\n/** Error when invalid control is dirty, touched, or submitted. */\r\nexport class MyErrorStateMatcher implements ErrorStateMatcher {\r\n\tisErrorState(control: FormControl | null, form: FormGroupDirective | NgForm | null): boolean {\r\n\t\tconst isSubmitted = form && form.submitted;\r\n\t\treturn !!(control && control.invalid && (control.dirty || control.touched || isSubmitted));\r\n\t}\r\n}\r\n\r\n@Component({\r\n\tselector: 'kt-input',\r\n\ttemplateUrl: './input.component.html',\r\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\r\n\tstyles: [`\r\n\t.example-form {\r\n\t\tmin-width: 150px;\r\n\t\tmax-width: 500px;\r\n\t\twidth: 100%;\r\n\t  }\r\n\t  .example-full-width {\r\n\t\twidth: 100%;\r\n\t  }\r\n\t  .example-form-field {\r\n\t\twidth: 200px;\r\n\t  }\r\n\t`]\r\n})\r\nexport class InputComponent implements OnInit {\r\n\r\n\texampleBasicInputs;\r\n\texampleInputWithACustomErrorStateMatcher;\r\n\texampleAutoResizingTextarea;\r\n\texampleInputWithAClearButton;\r\n\texampleInputWithErrorMessages;\r\n\texampleInputsInAForm;\r\n\texampleInputWithHints;\r\n\texampleInputsWithPrefixesAndSuffixes;\r\n\r\n\tconstructor() { }\r\n\temailFormControl = new FormControl('', [\r\n\t\tValidators.required,\r\n\t\tValidators.email,\r\n\t]);\r\n\temailFormControl2 = new FormControl('', [\r\n\t\tValidators.required,\r\n\t\tValidators.email,\r\n\t]);\r\n\r\n\tmatcher = new MyErrorStateMatcher();\r\n\tvalue = 'Clear me';\r\n\r\n\tngOnInit() {\r\n\r\n\t\tthis.exampleBasicInputs = basicInputs;\r\n\t\tthis.exampleInputWithACustomErrorStateMatcher = inputWithACustomErrorStateMatcher;\r\n\t\tthis.exampleAutoResizingTextarea = autoResizingTextarea;\r\n\t\tthis.exampleInputWithAClearButton = inputWithAClearButton;\r\n\t\tthis.exampleInputWithErrorMessages = inputWithErrorMessages;\r\n\t\tthis.exampleInputsInAForm = inputsInAForm;\r\n\t\tthis.exampleInputWithHints = inputWithHints;\r\n\t\tthis.exampleInputsWithPrefixesAndSuffixes = inputsWithPrefixesAndSuffixes;\r\n\t}\r\n}\r\n","<kt-notice [svg]=\"'assets/media/svg/icons/Tools/Compass.svg'\">\r\n\tFor more info please check the components's official demos & documentation\r\n\t<a class=\"font-weight-bold\" href=\"https://material.angular.io/components/radio/overview\" target=\"_blank\">demos & documentation</a>\r\n</kt-notice>\r\n\r\n<div class=\"row\">\r\n\t<div class=\"col-xl-6\">\r\n\t\t<kt-code-preview [viewItem]=\"exampleBasicRadios\">\r\n\t\t\t<div class=\"example-preview\">\r\n\t\t\t\t<span>\r\n\t\t\t\t\t<code>mat-radio</code> provides the same functionality as a native\r\n\t\t\t\t\t<code>&lt;input type=\"radio\"&gt;</code> enhanced with Material Design styling and animations.\r\n\t\t\t\t</span>\r\n\t\t\t\t<div class=\"separator separator-dashed my-6\"></div>\r\n\t\t\t\t<div class=\"example-container\">\r\n\t\t\t\t\t<mat-radio-group>\r\n\t\t\t\t\t\t<mat-radio-button  value=\"Alabama\">Alabama</mat-radio-button>\r\n\t\t\t\t\t\t<mat-radio-button  value=\"Alaska\">Alaska</mat-radio-button>\r\n\t\t\t\t\t\t<mat-radio-button  value=\"Florida\">Florida</mat-radio-button>\r\n\t\t\t\t\t\t<mat-radio-button  value=\"Illinois\">Illinois</mat-radio-button>\r\n\t\t\t\t\t\t<mat-radio-button  value=\"Kansas\">Kansas</mat-radio-button>\r\n\t\t\t\t\t</mat-radio-group>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</kt-code-preview>\r\n\r\n\t\t<kt-code-preview [viewItem]=\"exampleDisabledRadios\">\r\n\t\t\t<div class=\"example-preview\">\r\n\t\t\t\t<span>\r\n\t\t\t\t\t<code>@Input() disabled: boolean</code> Whether the radio group is disabled\r\n\t\t\t\t</span>\r\n\t\t\t\t<div class=\"separator separator-dashed my-6\"></div>\r\n\t\t\t\t<div class=\"example-container\">\r\n\t\t\t\t\t<mat-radio-group disabled=\"true\">\r\n\t\t\t\t\t\t<mat-radio-button  value=\"Alabama\">Alabama</mat-radio-button>\r\n\t\t\t\t\t\t<mat-radio-button  value=\"Alaska\">Alaska</mat-radio-button>\r\n\t\t\t\t\t\t<mat-radio-button  value=\"Florida\">Florida</mat-radio-button>\r\n\t\t\t\t\t\t<mat-radio-button  value=\"Illinois\">Illinois</mat-radio-button>\r\n\t\t\t\t\t\t<mat-radio-button  value=\"Kansas\">Kansas</mat-radio-button>\r\n\t\t\t\t\t</mat-radio-group>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</kt-code-preview>\r\n\r\n\t\t<kt-code-preview [viewItem]=\"exmapleLabelPosition\">\r\n\t\t\t<div class=\"example-preview\">\r\n\t\t\t\t<span>\r\n\t\t\t\t\t<code>@Input() labelPosition: 'before' | 'after'</code> Whether the labels should appear after or before the radio-buttons. Defaults to 'after'\r\n\t\t\t\t</span>\r\n\t\t\t\t<div class=\"separator separator-dashed my-6\"></div>\r\n\t\t\t\t<div class=\"example-container\">\r\n\t\t\t\t\t<mat-radio-group [labelPosition]=\"labelPosition\">\r\n\t\t\t\t\t\t<mat-radio-button  value=\"Alabama\">Alabama</mat-radio-button>\r\n\t\t\t\t\t\t<mat-radio-button  value=\"Alaska\">Alaska</mat-radio-button>\r\n\t\t\t\t\t\t<mat-radio-button  value=\"Florida\">Florida</mat-radio-button>\r\n\t\t\t\t\t\t<mat-radio-button  value=\"Illinois\">Illinois</mat-radio-button>\r\n\t\t\t\t\t\t<mat-radio-button  value=\"Kansas\">Kansas</mat-radio-button>\r\n\t\t\t\t\t</mat-radio-group>\r\n\t\t\t\t\t<div class=\"separator separator-dashed my-6\"></div>\r\n\t\t\t\t\t<mat-slide-toggle (change)=\"changeLablesPositions()\">Slide labels position</mat-slide-toggle>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</kt-code-preview>\r\n\t</div>\r\n\t<div class=\"col-xl-6\">\r\n\t\t<kt-code-preview [viewItem]=\"exampleRadiosWithNgModel\">\r\n\t\t\t<div class=\"example-preview\">\r\n\t\t\t\t<div class=\"example-container\">\r\n\t\t\t\t\t<mat-radio-group class=\"example-radio-group\" [(ngModel)]=\"favoriteSeason\">\r\n\t\t\t\t\t\t<mat-radio-button class=\"example-radio-button\" *ngFor=\"let season of seasons\" [value]=\"season\">\r\n\t\t\t\t\t\t\t{{season}}\r\n\t\t\t\t\t\t</mat-radio-button>\r\n\t\t\t\t\t</mat-radio-group>\r\n\t\t\t\t\t<div class=\"separator separator-dashed my-6\"></div>\r\n\t\t\t\t\t<div class=\"example-selected-value\">Your favorite season is: <mark *ngIf=\"favoriteSeason\">{{favoriteSeason}}</mark></div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</kt-code-preview>\r\n\r\n\t\t<kt-code-preview [viewItem]=\"exampleChangeEvent\">\r\n\t\t\t<div class=\"example-preview\">\r\n\t\t\t\t<span>\r\n\t\t\t\t\t<code>@Output() change: EventEmitter&lt;MatRadioChange&gt;</code>\r\n\t\t\t\t\t\tEvent emitted when the group value changes. Change events are only emitted when the value changes due to user interaction with a radio button (the same behavior as\r\n\t\t\t\t\t\t<code>&lt;input type-\"radio\"&gt;</code>).\r\n\t\t\t\t</span>\r\n\t\t\t\t<div class=\"separator separator-dashed my-6\"></div>\r\n\t\t\t\t<div class=\"example-container\">\r\n\t\t\t\t\t<mat-radio-group (change)=\"changeState()\" [(ngModel)]=\"selectedState\">\r\n\t\t\t\t\t\t<mat-radio-button  value=\"Alabama\">Alabama</mat-radio-button>\r\n\t\t\t\t\t\t<mat-radio-button  value=\"Alaska\">Alaska</mat-radio-button>\r\n\t\t\t\t\t\t<mat-radio-button  value=\"Florida\">Florida</mat-radio-button>\r\n\t\t\t\t\t\t<mat-radio-button  value=\"Illinois\">Illinois</mat-radio-button>\r\n\t\t\t\t\t\t<mat-radio-button  value=\"Kansas\">Kansas</mat-radio-button>\r\n\t\t\t\t\t</mat-radio-group>\r\n\t\t\t\t\t<div class=\"separator separator-dashed my-6\" *ngIf=\"state\"></div>\r\n\t\t\t\t\t<span *ngIf=\"state\">Welcome to <mark>{{ state }}</mark>!</span>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</kt-code-preview>\r\n\t</div>\r\n</div>\r\n","import { Component, OnInit, ChangeDetectionStrategy } from '@angular/core';\r\n\r\nconst basicRadios = {\r\n\tbeforeCodeTitle: 'Basic radios',\r\n\thtmlCode: `\r\n<mat-radio-group>\r\n  <mat-radio-button value=\"1\">Option 1</mat-radio-button>\r\n  <mat-radio-button value=\"2\">Option 2</mat-radio-button>\r\n</mat-radio-group>\r\n\t\t`,\r\n\ttsCode: `\r\nimport {Component} from '@angular/core';\\n\r\n/**\r\n* @title Basic radios\r\n*/\r\n@Component({\r\n  selector: 'radio-overview-example',\r\n  templateUrl: 'radio-overview-example.html',\r\n styleUrls: ['radio-overview-example.css'],\r\n})\r\nexport class RadioOverviewExample {}`,\r\n\tcssCode: `\r\n.mat-radio-button ~ .mat-radio-button {\r\n  padding-right: 16px;\r\n}`,\r\n\tviewCode: ``,\r\n\tisCodeVisible: false\r\n};\r\n\r\nconst radiosWithNgModel = {\r\n\tbeforeCodeTitle: 'Radios with ngModel',\r\n\thtmlCode: `\r\n<mat-radio-group class=\"example-radio-group\" [(ngModel)]=\"favoriteSeason\">\r\n  <mat-radio-button class=\"example-radio-button\" *ngFor=\"let season of seasons\" [value]=\"season\">\r\n    {{season}}\r\n  </mat-radio-button>\r\n</mat-radio-group>\r\n<div class=\"example-selected-value\">Your favorite season is: {{favoriteSeason}}</div>`,\r\n\ttsCode: `\r\nimport {Component} from '@angular/core';\\n\r\n/**\r\n* @title Radios with ngModel\r\n*/\r\n@Component({\r\n  selector: 'radio-ng-model-example',\r\n  templateUrl: 'radio-ng-model-example.html',\r\n  styleUrls: ['radio-ng-model-example.css'],\r\n})\r\nexport class RadioNgModelExample {\r\n  favoriteSeason: string;\\n\r\n  seasons = [\r\n    'Winter',\r\n    'Spring',\r\n    'Summer',\r\n    'Autumn',\r\n  ];\r\n}`,\r\n\tviewCode: ``,\r\n\tcssCode: `\r\n.example-radio-group {\r\n  display: inline-flex;\r\n  flex-direction: column;\r\n}\r\n.example-radio-button {\r\n  margin: 5px;\r\n}\r\n.example-selected-value {\r\n  margin: 15px 0;\r\n}\r\n\t\t`,\r\n\tisCodeVisible: false\r\n};\r\n\r\nconst disabledRadios = {\r\n\tbeforeCodeTitle: 'Disabled radios',\r\n\thtmlCode: `\r\n<mat-radio-group disabled=\"true\">\r\n  <mat-radio-button  value=\"Alabama\">Alabama</mat-radio-button>\r\n  <mat-radio-button  value=\"Alaska\">Alaska</mat-radio-button>\r\n  <mat-radio-button  value=\"Florida\">Florida</mat-radio-button>\r\n  <mat-radio-button  value=\"Illinois\">Illinois</mat-radio-button>\r\n  <mat-radio-button  value=\"Kansas\">Kansas</mat-radio-button>\r\n</mat-radio-group>`,\r\n\ttsCode: `\r\nimport {Component} from '@angular/core';\\n\r\n@Component({\r\n  selector: 'radio-disabled-example',\r\n  templateUrl: 'radio-disabled-example.html',\r\n styleUrls: ['radio-disabled-example.css'],\r\n})\r\nexport class RadioDisabledExample {}`,\r\n\tcssCode: `\r\n.mat-radio-button ~ .mat-radio-button {\r\n  padding-right: 16px;\r\n}`,\r\n\tviewCode: ``,\r\n\tisCodeVisible: false\r\n};\r\n\r\nconst labelPosition = {\r\n\tbeforeCodeTitle: 'Label position',\r\n\thtmlCode: `\r\n<mat-radio-group [labelPosition]=\"labelPosition\">\r\n  <mat-radio-button  value=\"Alabama\">Alabama</mat-radio-button>\r\n  <mat-radio-button  value=\"Alaska\">Alaska</mat-radio-button>\r\n  <mat-radio-button  value=\"Florida\">Florida</mat-radio-button>\r\n  <mat-radio-button  value=\"Illinois\">Illinois</mat-radio-button>\r\n  <mat-radio-button  value=\"Kansas\">Kansas</mat-radio-button>\r\n</mat-radio-group>\r\n<div class=\"separator separator-dashed my-6\"></div>\r\n<mat-slide-toggle (change)=\"changeLablesPositions()\">Slide labels position</mat-slide-toggle>`,\r\n\ttsCode: `\r\nimport {Component} from '@angular/core';\\n\r\n@Component({\r\n  selector: 'radio-label-position-example',\r\n  templateUrl: 'radio-lablel-position.html',\r\n styleUrls: ['radio-label-position-example.css'],\r\n})\r\nexport class RadioLabelPositionExample {\r\n  labelPosition: string = \"before\";\\n\r\n  changeLablesPositions() {\r\n    this.labelPosition = this.labelPosition == \"before\" ? \"after\" : \"before\";\r\n  }\r\n}`,\r\n\tcssCode: `\r\n.mat-radio-button ~ .mat-radio-button {\r\n  padding-right: 16px;\r\n}`,\r\n\tviewCode: ``,\r\n\tisCodeVisible: false\r\n};\r\n\r\nconst changeEvent = {\r\n\tbeforeCodeTitle: 'Change event binding',\r\n\thtmlCode: `\r\n<mat-radio-group (change)=\"changeState()\" [(ngModel)]=\"selectedState\">\r\n  <mat-radio-button  value=\"Alabama\">Alabama</mat-radio-button>\r\n  <mat-radio-button  value=\"Alaska\">Alaska</mat-radio-button>\r\n  <mat-radio-button  value=\"Florida\">Florida</mat-radio-button>\r\n  <mat-radio-button  value=\"Illinois\">Illinois</mat-radio-button>\r\n  <mat-radio-button  value=\"Kansas\">Kansas</mat-radio-button>\r\n</mat-radio-group>\r\n<div class=\"separator separator-dashed my-6\" *ngIf=\"state\"></div>\r\n<span *ngIf=\"state\">Welcome to <mark>{{ state }}</mark>!</span>`,\r\n\ttsCode: `\r\nimport {Component} from '@angular/core';\\n\r\n@Component({\r\nselector: 'radio-change-event-example',\r\ntemplateUrl: 'radio-change-event.html',\r\nstyleUrls: ['radio-change-event-example.css'],\r\n})\r\nexport class RadioChangeEventExample {\r\n  state: string = \"\";\r\n  selectedState: string = \"\";\r\n\r\n  changeState() {\r\n    this.state = this.selectedState;\r\n  }\r\n}`,\r\n\tcssCode: `\r\n.mat-radio-button ~ .mat-radio-button {\r\n  padding-right: 16px;\r\n}`,\r\n\tviewCode: ``,\r\n\tisCodeVisible: false\r\n};\r\n\r\n@Component({\r\n\tselector: 'kt-radiobutton',\r\n\ttemplateUrl: './radiobutton.component.html',\r\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\r\n\tstyles: [`\r\n\tmat-radio-button {\r\n\t\tpadding-right: 16px;\r\n\t}\r\n\t.example-radio-group {\r\n\t\tdisplay: inline-flex;\r\n\t\tflex-direction: column;\r\n\t  }\r\n\t  .example-radio-button {\r\n\t\tmargin: 15px;\r\n\t  }\r\n\t.example-selected-value {\r\n\t\tmargin: 15px 0;\r\n\t}\r\n\t`]\r\n})\r\nexport class RadiobuttonComponent implements OnInit {\r\n\r\n\texampleBasicRadios;\r\n\texampleRadiosWithNgModel;\r\n\texampleDisabledRadios;\r\n\texmapleLabelPosition;\r\n\texampleChangeEvent;\r\n\r\n\tfavoriteSeason: string;\r\n\r\n\tseasons = [\r\n\t\t'Winter',\r\n\t\t'Spring',\r\n\t\t'Summer',\r\n\t\t'Autumn',\r\n\t];\r\n\r\n\tstate = '';\r\n\tselectedState = '';\r\n\r\n\tlabelPosition = 'before';\r\n\r\n\tchangeLablesPositions() {\r\n\t\tthis.labelPosition = this.labelPosition === 'before' ? 'after' : 'before';\r\n\t}\r\n\r\n\tconstructor() { }\r\n\r\n\tngOnInit() {\r\n\t\tthis.exampleBasicRadios = basicRadios;\r\n\t\tthis.exampleRadiosWithNgModel = radiosWithNgModel;\r\n\t\tthis.exampleDisabledRadios = disabledRadios;\r\n\t\tthis.exmapleLabelPosition = labelPosition;\r\n\t\tthis.exampleChangeEvent = changeEvent;\r\n\t}\r\n\r\n\tchangeState() {\r\n\t\tthis.state = this.selectedState;\r\n\t}\r\n}\r\n","<kt-notice [svg]=\"'assets/media/svg/icons/Tools/Compass.svg'\">\r\n\tFor more info please check the components's official demos & documentation\r\n\t<a class=\"font-weight-bold\" href=\"https://material.angular.io/components/select/overview\" target=\"_blank\">demos & documentation</a>\r\n</kt-notice>\r\n\r\n\r\n<div class=\"row\">\r\n\t<div class=\"col-xl-6\">\r\n\t\t<kt-code-preview [viewItem]=\"exampleBasicSelect\">\r\n\t\t\t<div class=\"example-preview\">\r\n\t\t\t\t<span>\r\n\t\t\t\t\t<code>mat-select</code> is a form control for selecting a value from a set of options, similar to the native\r\n\t\t\t\t\t<code>&lt;select&gt;</code> element. You can read more about selects in the Material Design spec. It is designed to work inside of a\r\n\t\t\t\t\t<code>mat-form-field</code> element.\r\n\t\t\t\t</span>\r\n\t\t\t\t<div class=\"separator separator-dashed my-6\"></div>\r\n\t\t\t\t<div class=\"example-container\">\r\n\t\t\t\t\t<mat-form-field>\r\n\t\t\t\t\t\t<mat-select placeholder=\"Favorite food\">\r\n\t\t\t\t\t\t\t<mat-option *ngFor=\"let food of foods\" [value]=\"food.value\">\r\n\t\t\t\t\t\t\t\t{{ food.viewValue }}\r\n\t\t\t\t\t\t\t</mat-option>\r\n\t\t\t\t\t\t</mat-select>\r\n\t\t\t\t\t</mat-form-field>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</kt-code-preview>\r\n\r\n\t\t<kt-code-preview [viewItem]=\"exampleSelectWith2WayValueBinding\">\r\n\t\t\t<div class=\"example-preview\">\r\n\t\t\t\t<div class=\"example-container\">\r\n\t\t\t\t\t<mat-form-field>\r\n\t\t\t\t\t\t<mat-select [(value)]=\"selected\">\r\n\t\t\t\t\t\t\t<mat-option>None</mat-option>\r\n\t\t\t\t\t\t\t<mat-option value=\"option1\">Option 1</mat-option>\r\n\t\t\t\t\t\t\t<mat-option value=\"option2\">Option 2</mat-option>\r\n\t\t\t\t\t\t\t<mat-option value=\"option3\">Option 3</mat-option>\r\n\t\t\t\t\t\t</mat-select>\r\n\t\t\t\t\t</mat-form-field>\r\n\t\t\t\t\t<div class=\"separator separator-dashed my-6\"></div>\r\n\r\n\t\t\t\t\tYou selected:\r\n\t\t\t\t\t<mark *ngIf=\"selected\">{{selected}}</mark>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\r\n\t\t</kt-code-preview>\r\n\r\n\t\t<kt-code-preview [viewItem]=\"exampleSelectInAForm\">\r\n\t\t\t<div class=\"example-preview\">\r\n\t\t\t\t<div class=\"example-container\">\r\n\t\t\t\t\t<form class=\"example-container\">\r\n\t\t\t\t\t\t<mat-form-field>\r\n\t\t\t\t\t\t\t<mat-select placeholder=\"Favorite food\" [(ngModel)]=\"selectedValue\" name=\"food\">\r\n\t\t\t\t\t\t\t\t<mat-option *ngFor=\"let food of foods\" [value]=\"food.value\">\r\n\t\t\t\t\t\t\t\t\t{{food.viewValue}}\r\n\t\t\t\t\t\t\t\t</mat-option>\r\n\t\t\t\t\t\t\t</mat-select>\r\n\t\t\t\t\t\t</mat-form-field>\r\n\r\n\t\t\t\t\t\t<div class=\"separator separator-dashed my-6\"></div>Selected value:\r\n\t\t\t\t\t\t<mark *ngIf=\"selectedValue\">{{selectedValue}}</mark>\r\n\t\t\t\t\t</form>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\r\n\t\t</kt-code-preview>\r\n\r\n\t\t<kt-code-preview [viewItem]=\"exampleSelectWithFormFieldFeature\">\r\n\t\t\t<div class=\"example-preview\">\r\n\t\t\t\t<div class=\"example-container\">\r\n\t\t\t\t\t<mat-form-field>\r\n\t\t\t\t\t\t<mat-select placeholder=\"Favorite animal\" [formControl]=\"animalControl\" required>\r\n\t\t\t\t\t\t\t<mat-option>--</mat-option>\r\n\t\t\t\t\t\t\t<mat-option *ngFor=\"let animal of animals\" [value]=\"animal\">\r\n\t\t\t\t\t\t\t\t{{animal.name}}\r\n\t\t\t\t\t\t\t</mat-option>\r\n\t\t\t\t\t\t</mat-select>\r\n\t\t\t\t\t\t<mat-error *ngIf=\"animalControl.hasError('required')\">Please choose an animal</mat-error>\r\n\t\t\t\t\t\t<mat-hint>{{animalControl.value?.sound}}</mat-hint>\r\n\t\t\t\t\t</mat-form-field>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</kt-code-preview>\r\n\r\n\t\t<kt-code-preview [viewItem]=\"exampleSelectWithResetOption\">\r\n\t\t\t<div class=\"example-preview\">\r\n\t\t\t\t<div class=\"example-container\">\r\n\t\t\t\t\t<mat-form-field>\r\n\t\t\t\t\t\t<mat-select placeholder=\"State\">\r\n\t\t\t\t\t\t\t<mat-option>None</mat-option>\r\n\t\t\t\t\t\t\t<mat-option *ngFor=\"let state of states\" [value]=\"state\">{{state}}</mat-option>\r\n\t\t\t\t\t\t</mat-select>\r\n\t\t\t\t\t</mat-form-field>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</kt-code-preview>\r\n\t</div>\r\n\t<div class=\"col-xl-6\">\r\n\r\n\t\t<kt-code-preview [viewItem]=\"exampleSelectWithOptionGroups\">\r\n\t\t\t<div class=\"example-preview\">\r\n\t\t\t\t<div class=\"example-container\">\r\n\t\t\t\t\t<mat-form-field>\r\n\t\t\t\t\t\t<mat-select placeholder=\"Pokemon\" [formControl]=\"pokemonControl\">\r\n\t\t\t\t\t\t\t<mat-option>-- None --</mat-option>\r\n\t\t\t\t\t\t\t<mat-optgroup *ngFor=\"let group of pokemonGroups\" [label]=\"group.name\" [disabled]=\"group.disabled\">\r\n\t\t\t\t\t\t\t\t<mat-option *ngFor=\"let pokemon of group.pokemon\" [value]=\"pokemon.value\">\r\n\t\t\t\t\t\t\t\t\t{{ pokemon.viewValue }}\r\n\t\t\t\t\t\t\t\t</mat-option>\r\n\t\t\t\t\t\t\t</mat-optgroup>\r\n\t\t\t\t\t\t</mat-select>\r\n\t\t\t\t\t</mat-form-field>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</kt-code-preview>\r\n\r\n\t\t<kt-code-preview [viewItem]=\"exampleSelectWithMultipleSelection\">\r\n\t\t\t<div class=\"example-preview\">\r\n\t\t\t\t<div class=\"example-container\">\r\n\t\t\t\t\t<mat-form-field>\r\n\t\t\t\t\t\t<mat-select placeholder=\"Toppings\" [formControl]=\"toppings\" multiple>\r\n\t\t\t\t\t\t\t<mat-option *ngFor=\"let topping of toppingList\" [value]=\"topping\">{{topping}}</mat-option>\r\n\t\t\t\t\t\t</mat-select>\r\n\t\t\t\t\t</mat-form-field>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</kt-code-preview>\r\n\r\n\t\t<kt-code-preview [viewItem]=\"exampleSelectWithCustomTriggerText\">\r\n\t\t\t<div class=\"example-preview\">\r\n\t\t\t\t<div class=\"example-container\">\r\n\t\t\t\t\t<mat-form-field>\r\n\t\t\t\t\t\t<mat-select placeholder=\"Toppings\" [formControl]=\"toppings2\" multiple>\r\n\t\t\t\t\t\t\t<mat-select-trigger>\r\n\t\t\t\t\t\t\t\t{{toppings2.value ? toppings2.value[0] : ''}}\r\n\t\t\t\t\t\t\t\t<span *ngIf=\"toppings2.value?.length > 1\" class=\"example-additional-selection\">\r\n\t\t\t\t\t\t\t\t\t(+{{toppings2.value.length - 1}} others)\r\n\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t</mat-select-trigger>\r\n\t\t\t\t\t\t\t<mat-option *ngFor=\"let topping of toppingList2\" [value]=\"topping\">{{topping}}</mat-option>\r\n\t\t\t\t\t\t</mat-select>\r\n\t\t\t\t\t</mat-form-field>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</kt-code-preview>\r\n\r\n\t\t<kt-code-preview [viewItem]=\"exampleSelectWithCustomPanelStyling\">\r\n\t\t\t<div class=\"example-preview\">\r\n\t\t\t\t<div class=\"example-container\">\r\n\t\t\t\t\t<mat-form-field>\r\n\t\t\t\t\t\t<mat-select placeholder=\"Panel color\" [formControl]=\"panelColor\" panelClass=\"example-panel-{{panelColor.value}}\">\r\n\t\t\t\t\t\t\t<mat-option value=\"red\">Red</mat-option>\r\n\t\t\t\t\t\t\t<mat-option value=\"green\">Green</mat-option>\r\n\t\t\t\t\t\t\t<mat-option value=\"blue\">Blue</mat-option>\r\n\t\t\t\t\t\t</mat-select>\r\n\t\t\t\t\t</mat-form-field>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</kt-code-preview>\r\n\r\n\t\t<kt-code-preview [viewItem]=\"exampleSelectWithACustomErrorStateMatcher\">\r\n\t\t\t<div class=\"example-preview\">\r\n\t\t\t\t<div class=\"example-container\">\r\n\t\t\t\t\t<mat-form-field>\r\n\t\t\t\t\t\t<mat-select placeholder=\"Choose one\" [formControl]=\"selected2\" [errorStateMatcher]=\"matcher\">\r\n\t\t\t\t\t\t\t<mat-option>Clear</mat-option>\r\n\t\t\t\t\t\t\t<mat-option value=\"valid\">Valid option</mat-option>\r\n\t\t\t\t\t\t\t<mat-option value=\"invalid\">Invalid option</mat-option>\r\n\t\t\t\t\t\t</mat-select>\r\n\t\t\t\t\t\t<mat-hint>Errors appear instantly!</mat-hint>\r\n\t\t\t\t\t\t<mat-error *ngIf=\"selected2.hasError('required')\">You must make a selection</mat-error>\r\n\t\t\t\t\t\t<mat-error *ngIf=\"selected2.hasError('pattern') && !selected2.hasError('required')\">\r\n\t\t\t\t\t\t\tYour selection is invalid\r\n\t\t\t\t\t\t</mat-error>\r\n\t\t\t\t\t</mat-form-field>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</kt-code-preview>\r\n\t</div>\r\n</div>\r\n","import { Component, OnInit, ChangeDetectionStrategy } from '@angular/core';\r\nimport { FormControl, Validators, FormGroupDirective, NgForm } from '@angular/forms';\r\nimport {ErrorStateMatcher} from '@angular/material/core';\r\n\r\nconst basicSelect = {\r\n\t\tbeforeCodeTitle: 'Basic select',\r\n\t\thtmlCode: `\r\n<mat-form-field>\r\n  <mat-select placeholder=\"Favorite food\">\r\n    <mat-option *ngFor=\"let food of foods\" [value]=\"food.value\">\r\n      {{ food.viewValue }}\r\n    </mat-option>\r\n  </mat-select>\r\n</mat-form-field>\r\n\t\t`,\r\n\t\ttsCode: `\r\nimport {Component} from '@angular/core';\\n\r\n/**\r\n* @title Basic select\r\n*/\r\n@Component({\r\n  selector: 'select-overview-example',\r\n  templateUrl: 'select-overview-example.html',\r\n  styleUrls: ['select-overview-example.css'],\r\n})\r\nexport class SelectOverviewExample {\r\n  foods = [\r\n    {value: 'steak-0', viewValue: 'Steak'},\r\n    {value: 'pizza-1', viewValue: 'Pizza'},\r\n    {value: 'tacos-2', viewValue: 'Tacos'}\r\n  ];\r\n}`,\r\n\t\tcssCode: ``,\r\n\t\tviewCode: ``,\r\n\t\tisCodeVisible: false\r\n\t};\r\n\r\nconst selectWith2WayValueBinding = {\r\n\tbeforeCodeTitle: 'Select with 2-way value binding',\r\n\thtmlCode: `\r\n<mat-form-field>\r\n  <mat-select [(value)]=\"selected\">\r\n    <mat-option>None</mat-option>\r\n    <mat-option value=\"option1\">Option 1</mat-option>\r\n    <mat-option value=\"option2\">Option 2</mat-option>\r\n    <mat-option value=\"option3\">Option 3</mat-option>\r\n  </mat-select>\r\n</mat-form-field>\r\n<p>You selected: {{selected}}</p>`,\r\n\ttsCode: `\r\nimport {Component} from '@angular/core';\\n\r\n/** @title Select with 2-way value binding */\r\n@Component({\r\n  selector: 'select-value-binding-example',\r\n  templateUrl: 'select-value-binding-example.html',\r\n  styleUrls: ['select-value-binding-example.css'],\r\n})\r\nexport class SelectValueBindingExample {\r\n  selected = 'option2';\r\n}`,\r\n\tviewCode: ``,\r\n\tcssCode: ``,\r\n\tisCodeVisible: false\r\n};\r\n\r\nconst selectInAForm = {\r\n\tbeforeCodeTitle: 'Select in a form',\r\n\thtmlCode: `\r\n<form>\r\n  <mat-form-field>\r\n    <mat-select placeholder=\"Favorite food\" [(ngModel)]=\"selectedValue\" name=\"food\">\r\n      <mat-option *ngFor=\"let food of foods\" [value]=\"food.value\">\r\n        {{food.viewValue}}\r\n      </mat-option>\r\n    </mat-select>\r\n  </mat-form-field>\r\n\t<p> Selected value: {{selectedValue}} </p>\r\n</form>`,\r\n\ttsCode: `\r\nimport {Component} from '@angular/core';\\n\r\n/**\r\n* @title Select in a form\r\n*/\r\n@Component({\r\n  selector: 'select-form-example',\r\n  templateUrl: 'select-form-example.html',\r\n  styleUrls: ['select-form-example.css'],\r\n})\r\nexport class SelectFormExample {\r\n selectedValue: string;\r\n  foods = [\r\n    {value: 'steak-0', viewValue: 'Steak'},\r\n    {value: 'pizza-1', viewValue: 'Pizza'},\r\n    {value: 'tacos-2', viewValue: 'Tacos'}\r\n  ];\r\n}`,\r\n\tviewCode: ``,\r\n\tcssCode: ``,\r\n\tisCodeVisible: false\r\n};\r\n\r\nconst selectWithFormFieldFeature = {\r\n\tbeforeCodeTitle: 'Select with form field features',\r\n\thtmlCode: `\r\n<mat-form-field>\r\n  <mat-select placeholder=\"Favorite animal\" [formControl]=\"animalControl\" required>\r\n    <mat-option>--</mat-option>\r\n    <mat-option *ngFor=\"let animal of animals\" [value]=\"animal\">\r\n      {{animal.name}}\r\n\t</mat-option>\r\n  </mat-select>\r\n  <mat-error *ngIf=\"animalControl.hasError('required')\">Please choose an animal</mat-error>\r\n  <mat-hint>{{animalControl.value?.sound}}</mat-hint>\r\n</mat-form-field>`,\r\n\ttsCode: `\r\nimport {Component} from '@angular/core';\r\nimport {FormControl, Validators} from '@angular/forms';\\n\r\n/** @title Select with form field features */\r\n@Component({\r\n  selector: 'select-hint-error-example',\r\n  templateUrl: 'select-hint-error-example.html',\r\n  styleUrls: ['select-hint-error-example.css'],\r\n})\r\nexport class SelectHintErrorExample {\r\n  animalControl = new FormControl('', [Validators.required]);\r\n  animals = [\r\n    {name: 'Dog', sound: 'Woof!'},\r\n    {name: 'Cat', sound: 'Meow!'},\r\n    {name: 'Cow', sound: 'Moo!'},\r\n    {name: 'Fox', sound: 'Wa-pa-pa-pa-pa-pa-pow!'},\r\n  ];\r\n}\r\n`,\r\n\tviewCode: ``,\r\n\tcssCode: ``,\r\n\tisCodeVisible: false\r\n};\r\n\r\n\r\nconst selectWithResetOption = {\r\n\tbeforeCodeTitle: 'Select with reset option',\r\n\thtmlCode: `\r\n<mat-form-field>\r\n  <mat-select placeholder=\"State\">\r\n    <mat-option>None</mat-option>\r\n    <mat-option *ngFor=\"let state of states\" [value]=\"state\">{{state}}</mat-option>\r\n  </mat-select>\r\n</mat-form-field>`,\r\n\ttsCode: `\r\nimport {Component} from '@angular/core';\\n\r\n/** @title Select with reset option */\r\n@Component({\r\n  selector: 'select-reset-example',\r\n  templateUrl: 'select-reset-example.html',\r\n  styleUrls: ['select-reset-example.css'],\r\n})\r\nexport class SelectResetExample {\r\n  states = [\r\n    'Alabama', 'Alaska', 'Arizona', 'Arkansas', 'California', 'Colorado', 'Connecticut', 'Delaware',\r\n    'Florida', 'Georgia', 'Hawaii', 'Idaho', 'Illinois', 'Indiana', 'Iowa', 'Kansas', 'Kentucky',\r\n    'Louisiana', 'Maine', 'Maryland', 'Massachusetts', 'Michigan', 'Minnesota', 'Mississippi',\r\n    'Missouri', 'Montana', 'Nebraska', 'Nevada', 'New Hampshire', 'New Jersey', 'New Mexico',\r\n    'New York', 'North Carolina', 'North Dakota', 'Ohio', 'Oklahoma', 'Oregon', 'Pennsylvania',\r\n    'Rhode Island', 'South Carolina', 'South Dakota', 'Tennessee', 'Texas', 'Utah', 'Vermont',\r\n    'Virginia', 'Washington', 'West Virginia', 'Wisconsin', 'Wyoming'\r\n  ];\r\n}\r\n`,\r\n\tviewCode: ``,\r\n\tcssCode: ``,\r\n\tisCodeVisible: false\r\n};\r\n\r\nconst selectWithOptionGroups = {\r\n\tbeforeCodeTitle: 'Select with option groups',\r\n\thtmlCode: `\r\n<mat-form-field>\r\n  <mat-select placeholder=\"Pokemon\" [formControl]=\"pokemonControl\">\r\n    <mat-option>-- None --</mat-option>\r\n    <mat-optgroup *ngFor=\"let group of pokemonGroups\" [label]=\"group.name\"\r\n      [disabled]=\"group.disabled\">\r\n      <mat-option *ngFor=\"let pokemon of group.pokemon\" [value]=\"pokemon.value\">\r\n         {{ pokemon.viewValue }}\r\n        </mat-option>\r\n    </mat-optgroup>\r\n  </mat-select>\r\n</mat-form-field>`,\r\n\ttsCode: `\r\nimport {Component} from '@angular/core';\r\nimport {FormControl} from '@angular/forms';\\n\r\n/** @title Select with option groups */\r\n@Component({\r\n  selector: 'select-optgroup-example',\r\n  templateUrl: 'select-optgroup-example.html',\r\n  styleUrls: ['select-optgroup-example.css'],\r\n})\r\nexport class SelectOptgroupExample {\r\n  pokemonControl = new FormControl();\r\n  pokemonGroups = [\r\n  {\r\n    name: 'Grass',\r\n    pokemon: [\r\n    { value: 'bulbasaur-0', viewValue: 'Bulbasaur' },\r\n    { value: 'oddish-1', viewValue: 'Oddish' },\r\n    { value: 'bellsprout-2', viewValue: 'Bellsprout' }\r\n  ]\r\n  },\r\n  {\r\n    name: 'Water',\r\n    pokemon: [\r\n    { value: 'squirtle-3', viewValue: 'Squirtle' },\r\n    { value: 'psyduck-4', viewValue: 'Psyduck' },\r\n    { value: 'horsea-5', viewValue: 'Horsea' }\r\n  ]\r\n  },\r\n  {\r\n    name: 'Fire',\r\n    disabled: true,\r\n    pokemon: [\r\n    { value: 'charmander-6', viewValue: 'Charmander' },\r\n    { value: 'vulpix-7', viewValue: 'Vulpix' },\r\n    { value: 'flareon-8', viewValue: 'Flareon' }\r\n  ]\r\n  },\r\n  {\r\n    name: 'Psychic',\r\n    pokemon: [\r\n    { value: 'mew-9', viewValue: 'Mew' },\r\n    { value: 'mewtwo-10', viewValue: 'Mewtwo' },\r\n  ]\r\n  }\r\n  ];\r\n}`,\r\n\tviewCode: ``,\r\n\tcssCode: ``,\r\n\tisCodeVisible: false\r\n};\r\n\r\nconst selectWithMultipleSelection = {\r\n\tbeforeCodeTitle: 'Select with multiple selection',\r\n\thtmlCode: `\r\n<mat-form-field>\r\n  <mat-select placeholder=\"Toppings\" [formControl]=\"toppings\" multiple>\r\n    <mat-option *ngFor=\"let topping of toppingList\" [value]=\"topping\">{{topping}}</mat-option>\r\n  </mat-select>\r\n</mat-form-field>`,\r\n\ttsCode: `\r\nimport {Component} from '@angular/core';\r\nimport {FormControl} from '@angular/forms';\\n\r\n/** @title Select with multiple selection */\r\n@Component({\r\n  selector: 'select-multiple-example',\r\n  templateUrl: 'select-multiple-example.html',\r\n  styleUrls: ['select-multiple-example.css'],\r\n})\r\nexport class SelectMultipleExample {\r\n  toppings = new FormControl();\r\n  toppingList = ['Extra cheese', 'Mushroom', 'Onion', 'Pepperoni', 'Sausage', 'Tomato'];\r\n}\r\n\t\t`,\r\n\tviewCode: ``,\r\n\tcssCode: ``,\r\n\tisCodeVisible: false\r\n};\r\n\r\nconst selectWithCustomTriggerText = {\r\n\tbeforeCodeTitle: 'Select with custom trigger text',\r\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\r\n\thtmlCode: `\r\n<mat-form-field>\r\n  <mat-select placeholder=\"Toppings\" [formControl]=\"toppings\" multiple>\r\n    <mat-select-trigger>\r\n      {{toppings.value ? toppings.value[0] : ''}}\r\n      <span *ngIf=\"toppings.value?.length > 1\" class=\"example-additional-selection\">\r\n        (+{{toppings.value.length - 1}} others)\r\n       </span>\r\n    </mat-select-trigger>\r\n    <mat-option *ngFor=\"let topping of toppingList\" [value]=\"topping\">{{topping}}</mat-option>\r\n  </mat-select>\r\n</mat-form-field>`,\r\n\ttsCode: `\r\nimport {Component} from '@angular/core';\r\nimport {FormControl} from '@angular/forms';\\n\r\n/** @title Select with custom trigger text */\r\n@Component({\r\n  selector: 'select-custom-trigger-example',\r\n  templateUrl: 'select-custom-trigger-example.html',\r\n  styleUrls: ['select-custom-trigger-example.css'],\r\n})\r\nexport class SelectCustomTriggerExample {\r\n  toppings = new FormControl();\r\n  toppingList = ['Extra cheese', 'Mushroom', 'Onion', 'Pepperoni', 'Sausage', 'Tomato'];\r\n}`,\r\n\tviewCode: ``,\r\n\tcssCode: `\r\n.example-additional-selection {\r\n  opacity: 0.75;\r\n  font-size: 0.75em;\r\n}`,\r\n\tisCodeVisible: false\r\n};\r\n\r\nconst selectWithNoOptionRipple = {\r\n\tbeforeCodeTitle: 'Select with no option ripple',\r\n\thtmlCode: `\r\n<mat-form-field>\r\n  <mat-select placeholder=\"Select an option\" disableRipple>\r\n    <mat-option value=\"1\">Option 1</mat-option>\r\n    <mat-option value=\"2\">Option 2</mat-option>\r\n    <mat-option value=\"3\">Option 3</mat-option>\r\n  </mat-select>\r\n</mat-form-field>`,\r\n\ttsCode: `\r\nimport {Component} from '@angular/core';\\n\r\n/** @title Select with no option ripple */\r\n@Component({\r\n  selector: 'select-no-ripple-example',\r\n  templateUrl: 'select-no-ripple-example.html',\r\n  styleUrls: ['select-no-ripple-example.css'],\r\n})\r\nexport class SelectNoRippleExample {}`,\r\n\tviewCode: ``,\r\n\tcssCode: ``,\r\n\tisCodeVisible: false\r\n};\r\n\r\nconst selectWithCustomPanelStyling = {\r\n\tbeforeCodeTitle: 'Select with custom panel styling',\r\n\thtmlCode: `\r\n<mat-form-field>\r\n  <mat-select placeholder=\"Panel color\" [formControl]=\"panelColor\"\r\n    panelClass=\"example-panel-{{panelColor.value}}\">\r\n    <mat-option value=\"red\">Red</mat-option>\r\n    <mat-option value=\"green\">Green</mat-option>\r\n    <mat-option value=\"blue\">Blue</mat-option>\r\n  </mat-select>\r\n</mat-form-field>`,\r\n\ttsCode: `\r\nimport {Component, ViewEncapsulation} from '@angular/core';\r\nimport {FormControl} from '@angular/forms';\\n\r\n/**\r\n* @title Select with custom panel styling\r\n*/\r\n@Component({\r\n  selector: 'select-panel-class-example',\r\n  templateUrl: 'select-panel-class-example.html',\r\n  styleUrls: ['select-panel-class-example.css'],\r\n  encapsulation: ViewEncapsulation.None,\r\n})\r\nexport class SelectPanelClassExample {\r\n  panelColor = new FormControl('red');\r\n}`,\r\n\tviewCode: ``,\r\n\tcssCode: `\r\n.example-panel-red .mat-select-content {\r\n  background: rgba(255, 0, 0, 0.5);\r\n}\r\n.example-panel-green .mat-select-content {\r\n  background: rgba(0, 255, 0, 0.5);\r\n}\r\n.example-panel-blue .mat-select-content {\r\n  background: rgba(0, 0, 255, 0.5);\r\n}`,\r\n\tisCodeVisible: false\r\n};\r\n\r\nconst selectWithACustomErrorStateMatcher = {\r\n\tbeforeCodeTitle: 'Select with a custom ErrorStateMatcher',\r\n\thtmlCode: `\r\n<mat-form-field>\r\n  <mat-select placeholder=\"Choose one\" [formControl]=\"selected\" [errorStateMatcher]=\"matcher\">\r\n    <mat-option>Clear</mat-option>\r\n    <mat-option value=\"valid\">Valid option</mat-option>\r\n    <mat-option value=\"invalid\">Invalid option</mat-option>\r\n  </mat-select>\r\n  <mat-hint>Errors appear instantly!</mat-hint>\r\n  <mat-error *ngIf=\"selected.hasError('required')\">You must make a selection</mat-error>\r\n  <mat-error *ngIf=\"selected.hasError('pattern') && !selected.hasError('required')\">\r\n    Your selection is invalid\r\n  </mat-error>\r\n</mat-form-field>\r\n\t  \t`,\r\n\ttsCode: `\r\nimport {Component} from '@angular/core';\r\nimport {FormControl, FormGroupDirective, NgForm, Validators} from '@angular/forms';\r\nimport {ErrorStateMatcher} from '@angular/material/core';\\n\r\n/** Error when invalid control is dirty, touched, or submitted. */\r\nexport class MyErrorStateMatcher implements ErrorStateMatcher {\r\n  isErrorState(control: FormControl | null, form: FormGroupDirective | NgForm | null): boolean {\r\n    const isSubmitted = form && form.submitted;\r\n    return !!(control && control.invalid && (control.dirty || control.touched || isSubmitted));\r\n  }\r\n}\\n\r\n/** @title Select with a custom ErrorStateMatcher */\r\n@Component({\r\n  selector: 'select-error-state-matcher-example',\r\n  templateUrl: 'select-error-state-matcher-example.html',\r\n  styleUrls: ['select-error-state-matcher-example.css'],\r\n})\r\nexport class SelectErrorStateMatcherExample {\r\n  selected = new FormControl('valid', [\r\n    Validators.required,\r\n    Validators.pattern('valid'),\r\n  ]);\\n\r\n  matcher = new MyErrorStateMatcher();\r\n}`,\r\n\tviewCode: ``,\r\n\tcssCode: `\r\n\t\t`,\r\n\tisCodeVisible: false\r\n};\r\n\r\n\r\n/** Error when invalid control is dirty, touched, or submitted. */\r\nexport class MyErrorStateMatcher implements ErrorStateMatcher {\r\n\tisErrorState(control: FormControl | null, form: FormGroupDirective | NgForm | null): boolean {\r\n\t  const isSubmitted = form && form.submitted;\r\n\t  return !!(control && control.invalid && (control.dirty || control.touched || isSubmitted));\r\n\t}\r\n  }\r\n\r\n@Component({\r\n\tselector: 'kt-select',\r\n\ttemplateUrl: './select.component.html',\r\n\tstyles: [`\r\n\t.example-additional-selection {\r\n\t\topacity: 0.75;\r\n\t\tfont-size: 0.75em;\r\n\t  }\r\n\t  .example-panel-red .mat-select-content {\r\n\t\tbackground: rgba(255, 0, 0, 0.5);\r\n\t  }\r\n\t  .example-panel-green .mat-select-content {\r\n\t\tbackground: rgba(0, 255, 0, 0.5);\r\n\t  }\r\n\t  .example-panel-blue .mat-select-content {\r\n\t\tbackground: rgba(0, 0, 255, 0.5);\r\n\t  }\r\n\t`]\r\n})\r\nexport class SelectComponent implements OnInit {\r\n\r\n\texampleBasicSelect;\r\n\texampleSelectWith2WayValueBinding;\r\n\texampleSelectInAForm;\r\n\texampleSelectWithFormFieldFeature;\r\n\texampleSelectWithResetOption;\r\n\texampleSelectWithOptionGroups;\r\n\texampleSelectWithMultipleSelection;\r\n\texampleSelectWithCustomTriggerText;\r\n\texampleSelectWithCustomPanelStyling;\r\n\texampleSelectWithACustomErrorStateMatcher;\r\n\r\n\ttoppings = new FormControl();\r\n\ttoppings2 = new FormControl();\r\n\tpanelColor = new FormControl('red');\r\n\r\n  \ttoppingList2 = ['Extra cheese', 'Mushroom', 'Onion', 'Pepperoni', 'Sausage', 'Tomato'];\r\n\ttoppingList = ['Extra cheese', 'Mushroom', 'Onion', 'Pepperoni', 'Sausage', 'Tomato'];\r\n\r\n\tfoods = [\r\n\t\t{ value: 'steak-0', viewValue: 'Steak' },\r\n\t\t{ value: 'pizza-1', viewValue: 'Pizza' },\r\n\t\t{ value: 'tacos-2', viewValue: 'Tacos' }\r\n\t];\r\n\r\n\tstates = [\r\n\t\t'Alabama', 'Alaska', 'Arizona', 'Arkansas', 'California', 'Colorado', 'Connecticut', 'Delaware',\r\n\t\t'Florida', 'Georgia', 'Hawaii', 'Idaho', 'Illinois', 'Indiana', 'Iowa', 'Kansas', 'Kentucky',\r\n\t\t'Louisiana', 'Maine', 'Maryland', 'Massachusetts', 'Michigan', 'Minnesota', 'Mississippi',\r\n\t\t'Missouri', 'Montana', 'Nebraska', 'Nevada', 'New Hampshire', 'New Jersey', 'New Mexico',\r\n\t\t'New York', 'North Carolina', 'North Dakota', 'Ohio', 'Oklahoma', 'Oregon', 'Pennsylvania',\r\n\t\t'Rhode Island', 'South Carolina', 'South Dakota', 'Tennessee', 'Texas', 'Utah', 'Vermont',\r\n\t\t'Virginia', 'Washington', 'West Virginia', 'Wisconsin', 'Wyoming'\r\n\t];\r\n\tselected = 'option2';\r\n\r\n\tselectedValue: string;\r\n\r\n\tpokemonControl = new FormControl();\r\n\r\n\tpokemonGroups = [\r\n\t\t{\r\n\t\t\tname: 'Grass',\r\n\t\t\tpokemon: [\r\n\t\t\t\t{ value: 'bulbasaur-0', viewValue: 'Bulbasaur' },\r\n\t\t\t\t{ value: 'oddish-1', viewValue: 'Oddish' },\r\n\t\t\t\t{ value: 'bellsprout-2', viewValue: 'Bellsprout' }\r\n\t\t\t]\r\n\t\t},\r\n\t\t{\r\n\t\t\tname: 'Water',\r\n\t\t\tpokemon: [\r\n\t\t\t\t{ value: 'squirtle-3', viewValue: 'Squirtle' },\r\n\t\t\t\t{ value: 'psyduck-4', viewValue: 'Psyduck' },\r\n\t\t\t\t{ value: 'horsea-5', viewValue: 'Horsea' }\r\n\t\t\t]\r\n\t\t},\r\n\t\t{\r\n\t\t\tname: 'Fire',\r\n\t\t\tdisabled: true,\r\n\t\t\tpokemon: [\r\n\t\t\t\t{ value: 'charmander-6', viewValue: 'Charmander' },\r\n\t\t\t\t{ value: 'vulpix-7', viewValue: 'Vulpix' },\r\n\t\t\t\t{ value: 'flareon-8', viewValue: 'Flareon' }\r\n\t\t\t]\r\n\t\t},\r\n\t\t{\r\n\t\t\tname: 'Psychic',\r\n\t\t\tpokemon: [\r\n\t\t\t\t{ value: 'mew-9', viewValue: 'Mew' },\r\n\t\t\t\t{ value: 'mewtwo-10', viewValue: 'Mewtwo' },\r\n\t\t\t]\r\n\t\t}\r\n\t];\r\n\r\n\tanimalControl = new FormControl('', [Validators.required]);\r\n\r\n\tanimals = [\r\n\t\t{ name: 'Dog', sound: 'Woof!' },\r\n\t\t{ name: 'Cat', sound: 'Meow!' },\r\n\t\t{ name: 'Cow', sound: 'Moo!' },\r\n\t\t{ name: 'Fox', sound: 'Wa-pa-pa-pa-pa-pa-pow!' },\r\n\t];\r\n\r\n\tselected2 = new FormControl('valid', [\r\n\t\tValidators.required,\r\n\t\tValidators.pattern('valid'),\r\n\t]);\r\n\r\n\tmatcher = new MyErrorStateMatcher();\r\n\r\n\tconstructor() { }\r\n\r\n\tngOnInit() {\r\n\t\tthis.exampleBasicSelect = basicSelect;\r\n\t\tthis.exampleSelectWith2WayValueBinding = selectWith2WayValueBinding;\r\n\t\tthis.exampleSelectInAForm = selectInAForm;\r\n\t\tthis.exampleSelectWithFormFieldFeature = selectWithFormFieldFeature;\r\n\t\tthis.exampleSelectWithResetOption = selectWithResetOption;\r\n\t\tthis.exampleSelectWithOptionGroups = selectWithOptionGroups;\r\n\t\tthis.exampleSelectWithMultipleSelection = selectWithMultipleSelection;\r\n\t\tthis.exampleSelectWithCustomTriggerText = selectWithCustomTriggerText;\r\n\t\tthis.exampleSelectWithCustomPanelStyling = selectWithCustomPanelStyling;\r\n\t\tthis.exampleSelectWithACustomErrorStateMatcher = selectWithACustomErrorStateMatcher;\r\n\t}\r\n}\r\n","<kt-notice [svg]=\"'assets/media/svg/icons/Tools/Compass.svg'\">\r\n\tFor more info please check the components's official demos & documentation\r\n\t<a class=\"font-weight-bold\" href=\"https://material.angular.io/components/slider/overview\" target=\"_blank\">demos & documentation</a>\r\n</kt-notice>\r\n\r\n<div class=\"row\">\r\n\t<div class=\"col-xl-6\">\r\n\t\t<kt-code-preview [viewItem]=\"exampleBasicSlider\">\r\n\t\t\t<div class=\"example-preview\">\r\n\t\t\t\t<span>\r\n\t\t\t\t\t<code>mat-slider</code> allows for the selection of a value from a range via mouse, touch, or keyboard, similar to\r\n\t\t\t\t\t<code>&lt;input type=\"range\"&gt;</code>.\r\n\t\t\t\t</span>\r\n\t\t\t\t<div class=\"separator separator-dashed my-6\"></div>\r\n\t\t\t\t<div class=\"example-container\">\r\n\t\t\t\t\t<mat-slider></mat-slider>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</kt-code-preview>\r\n\r\n\t\t<kt-code-preview [viewItem]=\"exampleChangeEvent\">\r\n\t\t\t<div class=\"example-preview\">\r\n\t\t\t\t<span>\r\n\t\t\t\t\t<code>@Output() change: EventEmitter&lt;MatSliderChange&gt;</code> Event emitted when the slider value has changed.\r\n\t\t\t\t</span>\r\n\t\t\t\t<div class=\"separator separator-dashed my-6\"></div>\r\n\t\t\t\t<div class=\"example-container\">\r\n\t\t\t\t\t<mat-slider (change)=\"changeSlider()\" [(ngModel)]=\"myValue\" min=\"0\" max=\"100\" step=\"1\"></mat-slider>\r\n\t\t\t\t\t<div class=\"separator separator-dashed my-6\" *ngIf=\"myValue\"></div>\r\n\t\t\t\t\t<span *ngIf=\"myValue\">Selected: <mark>{{ myValue }}</mark>%</span>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</kt-code-preview>\r\n\t</div>\r\n\t<div class=\"col-xl-6\">\r\n\t\t<kt-code-preview [viewItem]=\"exampleConfigurableSlider\">\r\n\t\t\t<div class=\"example-preview\">\r\n\t\t\t\t<div class=\"example-container\">\r\n\t\t\t\t\t<section class=\"example-section\">\r\n\t\t\t\t\t\t<mat-form-field class=\"example-margin\">\r\n\t\t\t\t\t\t\t<input matInput type=\"number\" placeholder=\"Value\" [(ngModel)]=\"value\">\r\n\t\t\t\t\t\t</mat-form-field>\r\n\t\t\t\t\t\t<mat-form-field class=\"example-margin\">\r\n\t\t\t\t\t\t\t<input matInput type=\"number\" placeholder=\"Min value\" [(ngModel)]=\"min\">\r\n\t\t\t\t\t\t</mat-form-field>\r\n\t\t\t\t\t\t<mat-form-field class=\"example-margin\">\r\n\t\t\t\t\t\t\t<input matInput type=\"number\" placeholder=\"Max value\" [(ngModel)]=\"max\">\r\n\t\t\t\t\t\t</mat-form-field>\r\n\t\t\t\t\t\t<mat-form-field class=\"example-margin\">\r\n\t\t\t\t\t\t\t<input matInput type=\"number\" placeholder=\"Step size\" [(ngModel)]=\"step\">\r\n\t\t\t\t\t\t</mat-form-field>\r\n\t\t\t\t\t</section>\r\n\t\t\t\t\t<div class=\"separator separator-dashed my-6\"></div>\r\n\t\t\t\t\t<section class=\"example-section\">\r\n\t\t\t\t\t\t<mat-checkbox class=\"example-margin\" [(ngModel)]=\"showTicks\">Show ticks</mat-checkbox>\r\n\t\t\t\t\t\t<mat-checkbox class=\"example-margin\" [(ngModel)]=\"autoTicks\" *ngIf=\"showTicks\">\r\n\t\t\t\t\t\t\tAuto ticks\r\n\t\t\t\t\t\t</mat-checkbox>\r\n\t\t\t\t\t\t<mat-form-field class=\"example-margin\" *ngIf=\"showTicks && !autoTicks\">\r\n\t\t\t\t\t\t\t<input matInput type=\"number\" placeholder=\"Tick interval\" [(ngModel)]=\"tickInterval\">\r\n\t\t\t\t\t\t</mat-form-field>\r\n\t\t\t\t\t</section>\r\n\t\t\t\t\t<div class=\"separator separator-dashed my-6\"></div>\r\n\t\t\t\t\t<section class=\"example-section\">\r\n\t\t\t\t\t\t<mat-checkbox class=\"example-margin\" [(ngModel)]=\"thumbLabel\">Show thumb label</mat-checkbox>\r\n\t\t\t\t\t</section>\r\n\t\t\t\t\t<div class=\"separator separator-dashed my-6\"></div>\r\n\t\t\t\t\t<section class=\"example-section\">\r\n\t\t\t\t\t\t<mat-checkbox class=\"example-margin\" [(ngModel)]=\"vertical\">Vertical</mat-checkbox>\r\n\t\t\t\t\t\t<mat-checkbox class=\"example-margin\" [(ngModel)]=\"invert\">Inverted</mat-checkbox>\r\n\t\t\t\t\t</section>\r\n\t\t\t\t\t<div class=\"separator separator-dashed my-6\"></div>\r\n\t\t\t\t\t<section class=\"example-section\">\r\n\t\t\t\t\t\t<mat-checkbox class=\"example-margin\" [(ngModel)]=\"disabled\">Disabled</mat-checkbox>\r\n\t\t\t\t\t</section>\r\n\t\t\t\t\t<div class=\"separator separator-dashed my-6\"></div>\r\n\t\t\t\t\t<h5>Result</h5>\r\n\t\t\t\t\t<mat-slider class=\"example-margin\" [disabled]=\"disabled\" [invert]=\"invert\" [max]=\"max\" [min]=\"min\" [step]=\"step\" [thumbLabel]=\"thumbLabel\" [tickInterval]=\"tickInterval\" [(ngModel)]=\"value\" [vertical]=\"vertical\">\r\n\t\t\t\t\t</mat-slider>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</kt-code-preview>\r\n\t</div>\r\n</div>\r\n","import { Component, OnInit, ViewEncapsulation, ChangeDetectionStrategy } from '@angular/core';\r\n\r\nconst basicSlider = {\r\n\t\tbeforeCodeTitle: 'Basic slider',\r\n\t\thtmlCode: `<mat-slider></mat-slider>`,\r\n\t\ttsCode: `\r\nimport {Component} from '@angular/core';\\n\r\n/**\r\n * @title Basic slider\r\n */\r\n@Component({\r\n  selector: 'slider-overview-example',\r\n  templateUrl: 'slider-overview-example.html',\r\n  styleUrls: ['slider-overview-example.css'],\r\n})\r\nexport class SliderOverviewExample {}\r\n\t\t`,\r\n\t\tcssCode: `\r\n/** No CSS for this example */\r\n.mat-slider {\r\n  width: 300px;\r\n}`,\r\n\t\tviewCode: ``,\r\n\t\tisCodeVisible: false\r\n\t};\r\n\r\nconst configurableSlider = {\r\n\tbeforeCodeTitle: 'Configurable slider',\r\n\thtmlCode: `\r\n<mat-card>\r\n  <mat-card-content>\r\n    <h2 class=\"example-h2\">Slider configuration</h2>\r\n    <section class=\"example-section\">\r\n      <mat-form-field class=\"example-margin\">\r\n        <input matInput type=\"number\" placeholder=\"Value\" [(ngModel)]=\"value\">\r\n      </mat-form-field>\r\n      <mat-form-field class=\"example-margin\">\r\n        <input matInput type=\"number\" placeholder=\"Min value\" [(ngModel)]=\"min\">\r\n      </mat-form-field>\r\n      <mat-form-field class=\"example-margin\">\r\n        <input matInput type=\"number\" placeholder=\"Max value\" [(ngModel)]=\"max\">\r\n      </mat-form-field>\r\n      <mat-form-field class=\"example-margin\">\r\n        <input matInput type=\"number\" placeholder=\"Step size\" [(ngModel)]=\"step\">\r\n      </mat-form-field>\r\n    </section>\r\n    <section class=\"example-section\">\r\n      <mat-checkbox class=\"example-margin\" [(ngModel)]=\"showTicks\">Show ticks</mat-checkbox>\r\n      <mat-checkbox class=\"example-margin\" [(ngModel)]=\"autoTicks\" *ngIf=\"showTicks\">\r\n        Auto ticks\r\n      </mat-checkbox>\r\n      <mat-form-field class=\"example-margin\" *ngIf=\"showTicks && !autoTicks\">\r\n        <input matInput type=\"number\" placeholder=\"Tick interval\" [(ngModel)]=\"tickInterval\">\r\n      </mat-form-field>\r\n     </section>\r\n    <section class=\"example-section\">\r\n      <mat-checkbox class=\"example-margin\" [(ngModel)]=\"thumbLabel\">Show thumb label</mat-checkbox>\r\n    </section>\r\n    <section class=\"example-section\">\r\n      <mat-checkbox class=\"example-margin\" [(ngModel)]=\"vertical\">Vertical</mat-checkbox>\r\n      <mat-checkbox class=\"example-margin\" [(ngModel)]=\"invert\">Inverted</mat-checkbox>\r\n    </section>\r\n    <section class=\"example-section\">\r\n      <mat-checkbox class=\"example-margin\" [(ngModel)]=\"disabled\">Disabled</mat-checkbox>\r\n    </section>\r\n  </mat-card-content>\r\n</mat-card>\r\n<mat-card class=\"result\">\r\n  <mat-card-content>\r\n    <h2 class=\"example-h2\">Result</h2>\r\n    <mat-slider\r\n      class=\"example-margin\"\r\n      [disabled]=\"disabled\"\r\n      [invert]=\"invert\"\r\n      [max]=\"max\"\r\n      [min]=\"min\"\r\n      [step]=\"step\"\r\n      [thumb-label]=\"thumbLabel\"\r\n      [tick-interval]=\"tickInterval\"\r\n      [(ngModel)]=\"value\"\r\n      [vertical]=\"vertical\">\r\n    </mat-slider>\r\n  </mat-card-content>\r\n</mat-card>`,\r\n\ttsCode: `\r\nimport {Component, ViewEncapsulation} from '@angular/core';\\n\r\n/**\r\n* @title Configurable slider\r\n*/\r\n@Component({\r\n  selector: 'slider-configurable-example',\r\n  templateUrl: 'slider-configurable-example.html',\r\n  styleUrls: ['slider-configurable-example.css'],\r\n  encapsulation: ViewEncapsulation.None,\r\n  preserveWhitespaces: false,\r\n})\r\nexport class SliderConfigurableExample {\r\n  autoTicks = false;\r\n  disabled = false;\r\n  invert = false;\r\n  max = 100;\r\n  min = 0;\r\n  showTicks = false;\r\n  step = 1;\r\n  thumbLabel = false;\r\n  value = 0;\r\n  vertical = false;\\n\r\n  get tickInterval(): number | 'auto' {\r\n    return this.showTicks ? (this.autoTicks ? 'auto' : this._tickInterval) : 0;\r\n  }\r\n  set tickInterval(v) {\r\n    this._tickInterval = Number(v);\r\n  }\r\n  private _tickInterval = 1;\r\n}`,\r\n\tviewCode: ``,\r\n\tcssCode: `\r\n.example-h2 {\r\n  margin: 10px;\r\n}\r\n.example-section {\r\n  display: flex;\r\n  align-content: center;\r\n  align-items: center;\r\n  height: 60px;\r\n}\r\n.example-margin {\r\n  margin: 10px;\r\n}\r\n.mat-slider-horizontal {\r\n  width: 300px;\r\n}\r\n.mat-slider-vertical {\r\n  height: 300px;\r\n}`,\r\n\tisCodeVisible: false\r\n};\r\n\r\nconst changeEvent = {\r\n\tbeforeCodeTitle: 'Change event binding',\r\n\thtmlCode: `\r\n<mat-slider (change)=\"changeSlider()\" [(ngModel)]=\"myValue\" min=\"0\" max=\"100\" step=\"1\"></mat-slider>\r\n<div class=\"separator separator-dashed my-6\" *ngIf=\"myValue\"></div>\r\n<span *ngIf=\"myValue\">Selected: <mark>{{ myValue }}</mark>%</span>\r\n`,\r\n\ttsCode: `\r\nimport {Component} from '@angular/core';\\n\r\n@Component({\r\n  selector: 'slider-change-event-example',\r\n  templateUrl: 'slider-change-event-example.html',\r\n  styleUrls: ['slider-change-event-example.css'],\r\n})\r\nexport class SliderChangeEventExample {\\n\r\n  myValue = 50;\r\n  changeSlider() {\r\n    console.log('myValue:', this.myValue);\r\n  }\r\n}`,\r\n\tcssCode: `\r\n.mat-slider {\r\n  width: 300px;\r\n}`,\r\n\tviewCode: ``,\r\n\tisCodeVisible: false\r\n};\r\n\r\n@Component({\r\n\tselector: 'kt-slider',\r\n\ttemplateUrl: './slider.component.html',\r\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\r\n\tstyles: [`\r\n\t.mat-slider {\r\n\t\twidth: 300px;\r\n\t}\r\n\t.example-margin {\r\n\t\t  margin: 15px;\r\n\t  }\r\n\t`],\r\n\tencapsulation: ViewEncapsulation.None,\r\n\tpreserveWhitespaces: false,\r\n})\r\nexport class SliderComponent implements OnInit {\r\n\r\n\texampleBasicSlider;\r\n\texampleConfigurableSlider;\r\n\texampleChangeEvent;\r\n\r\n\tautoTicks = false;\r\n\tdisabled = false;\r\n\tinvert = false;\r\n\tmax = 100;\r\n\tmin = 0;\r\n\tshowTicks = false;\r\n\tstep = 1;\r\n\tthumbLabel = false;\r\n\tvalue = 0;\r\n\tvertical = false;\r\n\r\n\tprivate _tickInterval = 1;\r\n\tmyValue = 50;\r\n\r\n\tget tickInterval(): number | 'auto' {\r\n\t\treturn this.showTicks ? (this.autoTicks ? 'auto' : this._tickInterval) : 0;\r\n\t}\r\n\tset tickInterval(v) {\r\n\t\tthis._tickInterval = Number(v);\r\n\t}\r\n\r\n\tngOnInit() {\r\n\t\tthis.exampleBasicSlider = basicSlider;\r\n\t\tthis.exampleConfigurableSlider = configurableSlider;\r\n\t\tthis.exampleChangeEvent = changeEvent;\r\n\t}\r\n\r\n\tchangeSlider() {\r\n\t\tconsole.log('myValue', this.myValue);\r\n\t}\r\n}\r\n","<kt-notice [svg]=\"'assets/media/svg/icons/Tools/Compass.svg'\">\r\n\tFor more info please check the components's official demos & documentation\r\n\t<a class=\"font-weight-bold\" href=\"https://material.angular.io/components/slide-toggle/overview\" target=\"_blank\">demos & documentation</a>\r\n</kt-notice>\r\n\r\n<div class=\"row\">\r\n\t<div class=\"col-xl-6\">\r\n\t\t<kt-code-preview [viewItem]=\"exampleBasicSlideToggles\">\r\n\t\t\t<div class=\"example-preview\">\r\n\t\t\t\t<span>\r\n\t\t\t\t\t<code>mat-slide-toggle</code> is an\r\n\t\t\t\t\t<mark>on/off</mark> control that can be toggled via clicking or dragging.\r\n\t\t\t\t</span>\r\n\t\t\t\t<div class=\"separator separator-dashed my-6\"></div>\r\n\t\t\t\t<div class=\"example-container\">\r\n\t\t\t\t\t<mat-slide-toggle>Slide me!</mat-slide-toggle>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</kt-code-preview>\r\n\r\n\t\t<kt-code-preview [viewItem]=\"exampleLabelPositions\">\r\n\t\t\t<div class=\"example-preview\">\r\n\t\t\t\t<p>\r\n\t\t\t\t\t<code>@Input() labelPosition: 'before' | 'after'</code> Whether the label should appear after or before the slide-toggle. Defaults to 'after'\r\n\t\t\t\t</p>\r\n\t\t\t\t<p>\r\n\t\t\t\t\t<code>@Output() change: EventEmitter&lt;MatSlideToggleChange&gt;</code> An event will be dispatched each time the slide-toggle changes its value.\r\n\t\t\t\t</p>\r\n\t\t\t\t<div class=\"separator separator-dashed my-6\"></div>\r\n\t\t\t\t<div class=\"example-container\">\r\n\t\t\t\t\t<mat-slide-toggle [labelPosition]=\"labelPosition\">Slide me!</mat-slide-toggle>\r\n\t\t\t\t\t<div class=\"separator separator-dashed my-6\"></div>\r\n\t\t\t\t\t<mat-slide-toggle (change)=\"changeLablesPositions()\">Slide labels position</mat-slide-toggle>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</kt-code-preview>\r\n\r\n\t</div>\r\n\t<div class=\"col-xl-6\">\r\n\t\t<kt-code-preview [viewItem]=\"exampleConfigurableSlideToggle\">\r\n\t\t\t<div class=\"example-preview\">\r\n\t\t\t\t<div class=\"example-container\">\r\n\t\t\t\t\t<section class=\"example-section\">\r\n\t\t\t\t\t\t<label class=\"example-margin\">Color:</label>\r\n\t\t\t\t\t\t<mat-radio-group [(ngModel)]=\"color\">\r\n\t\t\t\t\t\t\t<mat-radio-button class=\"example-margin\" value=\"primary\">\r\n\t\t\t\t\t\t\t\tPrimary\r\n\t\t\t\t\t\t\t</mat-radio-button>\r\n\t\t\t\t\t\t\t<mat-radio-button class=\"example-margin\" value=\"accent\">\r\n\t\t\t\t\t\t\t\tAccent\r\n\t\t\t\t\t\t\t</mat-radio-button>\r\n\t\t\t\t\t\t\t<mat-radio-button class=\"example-margin\" value=\"warn\">\r\n\t\t\t\t\t\t\t\tWarn\r\n\t\t\t\t\t\t\t</mat-radio-button>\r\n\t\t\t\t\t\t</mat-radio-group>\r\n\t\t\t\t\t</section>\r\n\t\t\t\t\t<div class=\"separator separator-dashed my-6\"></div>\r\n\t\t\t\t\t<section class=\"example-section\">\r\n\t\t\t\t\t\t<mat-checkbox class=\"example-margin\" [(ngModel)]=\"checked\">Checked</mat-checkbox>\r\n\t\t\t\t\t</section>\r\n\t\t\t\t\t<div class=\"separator separator-dashed my-6\"></div>\r\n\t\t\t\t\t<section class=\"example-section\">\r\n\t\t\t\t\t\t<mat-checkbox class=\"example-margin\" [(ngModel)]=\"disabled\">Disabled</mat-checkbox>\r\n\t\t\t\t\t</section>\r\n\t\t\t\t\t<div class=\"separator separator-dashed my-6\"></div>\r\n\t\t\t\t\t<h5 class=\"example-h2\">Result</h5>\r\n\t\t\t\t\t<section class=\"example-section\">\r\n\t\t\t\t\t\t<mat-slide-toggle class=\"example-margin\" [color]=\"color\" [checked]=\"checked\" [disabled]=\"disabled\">\r\n\t\t\t\t\t\t\tSlide me!\r\n\t\t\t\t\t\t</mat-slide-toggle>\r\n\t\t\t\t\t</section>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\r\n\t\t</kt-code-preview>\r\n\t</div>\r\n</div>\r\n","import { Component, OnInit, ChangeDetectionStrategy } from '@angular/core';\r\n\r\nconst basicSlideToggles = {\r\n\t\tbeforeCodeTitle: 'Basic slide-toggles',\r\n\t\thtmlCode: `<mat-slide-toggle>Slide me!</mat-slide-toggle>`,\r\n\t\ttsCode: `\r\nimport {Component} from '@angular/core';\\n\r\n/**\r\n* @title Basic slide-toggles\r\n*/\r\n@Component({\r\n  selector: 'slide-toggle-overview-example',\r\n  templateUrl: 'slide-toggle-overview-example.html',\r\n  styleUrls: ['slide-toggle-overview-example.css'],\r\n})\r\nexport class SlideToggleOverviewExample {}`,\r\n\t\tcssCode: ``,\r\n\t\tviewCode: ``,\r\n\t\tisCodeVisible: false\r\n\t};\r\n\r\nconst configurableSlideToggle = {\r\n\tbeforeCodeTitle: 'Configurable slide-toggle',\r\n\thtmlCode: `\r\n<mat-card>\r\n  <mat-card-content>\r\n    <h2 class=\"example-h2\">Slider configuration</h2>\r\n    <section class=\"example-section\">\r\n      <label class=\"example-margin\">Color:</label>\r\n      <mat-radio-group [(ngModel)]=\"color\">\r\n        <mat-radio-button class=\"example-margin\" value=\"primary\">\r\n          Primary\r\n        </mat-radio-button>\r\n        <mat-radio-button class=\"example-margin\" value=\"accent\">\r\n          Accent\r\n        </mat-radio-button>\r\n        <mat-radio-button class=\"example-margin\" value=\"warn\">\r\n          Warn\r\n        </mat-radio-button>\r\n      </mat-radio-group>\r\n    </section>\r\n    <section class=\"example-section\">\r\n      <mat-checkbox class=\"example-margin\" [(ngModel)]=\"checked\">Checked</mat-checkbox>\r\n    </section>\r\n    <section class=\"example-section\">\r\n      <mat-checkbox class=\"example-margin\" [(ngModel)]=\"disabled\">Disabled</mat-checkbox>\r\n    </section>\r\n  </mat-card-content>\r\n</mat-card>\r\n<mat-card class=\"result\">\r\n  <mat-card-content>\r\n    <h2 class=\"example-h2\">Result</h2>\r\n    <section class=\"example-section\">\r\n      <mat-slide-toggle\r\n        class=\"example-margin\"\r\n        [color]=\"color\"\r\n        [checked]=\"checked\"\r\n        [disabled]=\"disabled\">\r\n        Slide me!\r\n      </mat-slide-toggle>\r\n    </section>\r\n  </mat-card-content>\r\n</mat-card>`,\r\n\ttsCode: `\r\nimport {Component} from '@angular/core';\\n\r\n/**\r\n* @title Configurable slide-toggle\r\n*/\r\n@Component({\r\n  selector: 'slide-toggle-configurable-example',\r\n  templateUrl: 'slide-toggle-configurable-example.html',\r\n  styleUrls: ['slide-toggle-configurable-example.css'],\r\n})\r\nexport class SlideToggleConfigurableExample {\r\n  color = 'accent';\r\n  checked = false;\r\n  disabled = false;\r\n}\r\n\t\t`,\r\n\tviewCode: ``,\r\n\tcssCode: `\r\n.example-h2 {\r\n  margin: 10px;\r\n}\r\n.example-section {\r\n  display: flex;\r\n  align-content: center;\r\n  align-items: center;\r\n  height: 60px;\r\n}\r\n.example-margin {\r\n  margin: 10px;\r\n}\r\n\t\t`,\r\n\tisCodeVisible: false\r\n};\r\n\r\nconst labelPositions = {\r\n\t\tbeforeCodeTitle: 'Label positions and \\'Change\\' event binding examples',\r\n\t\thtmlCode: `\r\n<mat-slide-toggle [labelPosition]=\"labelPosition\">Slide me!</mat-slide-toggle>\r\n<div class=\"separator separator-dashed my-6\"></div>\r\n<mat-slide-toggle (change)=\"changeLablesPositions()\">Slide labels position</mat-slide-toggle>`,\r\n\t\ttsCode: `\r\nimport {Component} from '@angular/core';\\n\r\n@Component({\r\n  selector: 'slide-toggle-label-positions-example',\r\n  templateUrl: 'slide-toggle-lable-positions-example.html',\r\n  styleUrls: ['slide-toggle-label-positions--example.css'],\r\n})\r\nexport class SlideToggleLabelPositionsExample {\\n\r\n  labelPosition: string = \"before\";\\n\r\n  changeLablesPositions() {\r\n    this.labelPosition = this.labelPosition == \"before\" ? \"after\" : \"before\";\r\n  }\r\n}`,\r\n\t\tcssCode: ``,\r\n\t\tviewCode: ``,\r\n\t\tisCodeVisible: false\r\n\t};\r\n@Component({\r\n\tselector: 'kt-slidertoggle',\r\n\ttemplateUrl: './slidertoggle.component.html',\r\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\r\n\tstyles: [`\r\n\t.example-h2 {\r\n\t\tmargin: 10px;\r\n\t  }\r\n\t  .example-section {\r\n\t\tdisplay: flex;\r\n\t\talign-content: center;\r\n\t\talign-items: center;\r\n\t\theight: 60px;\r\n\t  }\r\n\t  .example-margin {\r\n\t\tmargin: 10px;\r\n\t  }\r\n\t`]\r\n})\r\nexport class SlidertoggleComponent implements OnInit {\r\n\r\n\texampleBasicSlideToggles;\r\n\texampleConfigurableSlideToggle;\r\n\texampleLabelPositions;\r\n\r\n\tcolor = 'accent';\r\n\tchecked = false;\r\n\tdisabled = false;\r\n\r\n\tlabelPosition = 'before';\r\n\r\n\tconstructor() { }\r\n\r\n\tngOnInit() {\r\n\t\tthis.exampleBasicSlideToggles = basicSlideToggles;\r\n\t\tthis.exampleConfigurableSlideToggle = configurableSlideToggle;\r\n\t\tthis.exampleLabelPositions = labelPositions;\r\n\t}\r\n\r\n\tchangeLablesPositions() {\r\n\t\tthis.labelPosition = this.labelPosition === 'before' ? 'after' : 'before';\r\n\t}\r\n}\r\n","<kt-notice [svg]=\"'assets/media/svg/icons/Tools/Compass.svg'\">\r\n\tFor more info please check the components's official demos & documentation\r\n\t<a class=\"font-weight-bold\" href=\"https://material.angular.io/components/card/overview\" target=\"_blank\">demos & documentation</a>\r\n</kt-notice>\r\n\r\n<div class=\"row\">\r\n\t<div class=\"col-xl-6\">\r\n\t\t<kt-code-preview [viewItem]=\"exampleBasicCards\">\r\n\t\t\t<div class=\"example-preview\">\r\n\t\t\t\t<span>\r\n\t\t\t\t\t<code>&lt;mat-card&gt;</code> is a content container for text, photos, and actions in the context of a single subject.\r\n\t\t\t\t</span>\r\n\t\t\t\t<div class=\"separator separator-dashed my-6\"></div>\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<mat-card>Simple card</mat-card>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</kt-code-preview>\r\n\t\t<kt-code-preview [viewItem]=\"exampleCardWithTitle\">\r\n\t\t\t<div class=\"example-preview\">\r\n\t\t\t\t<span>\r\n\t\t\t\t\tIn addition to the aforementioned sections,\r\n\t\t\t\t\t<code>&lt;mat-card-header&gt;</code> gives the ability to add a rich header to a card.\r\n\t\t\t\t</span>\r\n\t\t\t\t<div class=\"separator separator-dashed my-6\"></div>\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<mat-card>\r\n\t\t\t\t\t\t<mat-card-header>\r\n\t\t\t\t\t\t\t<div mat-card-avatar class=\"example-header-image\"></div>\r\n\t\t\t\t\t\t\t<mat-card-title>Shiba Inu</mat-card-title>\r\n\t\t\t\t\t\t\t<mat-card-subtitle>Dog Breed</mat-card-subtitle>\r\n\t\t\t\t\t\t</mat-card-header>\r\n\t\t\t\t\t\t<mat-card-content>Simple card</mat-card-content>\r\n\t\t\t\t\t</mat-card>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</kt-code-preview>\r\n\t</div>\r\n\t<div class=\"col-xl-6\">\r\n\t\t<kt-code-preview [viewItem]=\"examplBigExample\">\r\n\t\t\t<div class=\"example-preview\">\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<mat-card class=\"example-card\">\r\n\t\t\t\t\t\t<mat-card-header>\r\n\t\t\t\t\t\t\t<div mat-card-avatar class=\"example-header-image\"></div>\r\n\t\t\t\t\t\t\t<mat-card-title>Shiba Inu</mat-card-title>\r\n\t\t\t\t\t\t\t<mat-card-subtitle>Dog Breed</mat-card-subtitle>\r\n\t\t\t\t\t\t</mat-card-header>\r\n\t\t\t\t\t\t<img mat-card-image src=\"https://material.angular.io/assets/img/examples/shiba2.jpg\" alt=\"Photo of a Shiba Inu\">\r\n\t\t\t\t\t\t<mat-card-content>\r\n\t\t\t\t\t\t\t<p>\r\n\t\t\t\t\t\t\t\tThe Shiba Inu is the smallest of the six original and distinct spitz breeds of dog from Japan. A small, agile dog that copes very well with mountainous terrain, the Shiba Inu was originally bred for hunting.\r\n\t\t\t\t\t\t\t</p>\r\n\t\t\t\t\t\t</mat-card-content>\r\n\t\t\t\t\t\t<mat-card-actions>\r\n\t\t\t\t\t\t\t<button mat-button>LIKE</button>\r\n\t\t\t\t\t\t\t<button mat-button>SHARE</button>\r\n\t\t\t\t\t\t</mat-card-actions>\r\n\t\t\t\t\t</mat-card>\r\n\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</kt-code-preview>\r\n\t</div>\r\n</div>\r\n","import { Component, OnInit, ChangeDetectionStrategy } from '@angular/core';\r\n\r\nconst basicCards = {\r\n\t\tbeforeCodeTitle: 'Basic cards',\r\n\t\thtmlCode: `<mat-card>Simple card</mat-card>`,\r\n\t\ttsCode: `\r\nimport {Component} from '@angular/core';\r\n/**\r\n* @title Basic cards\r\n*/\r\n@Component({\r\n  selector: 'card-overview-example',\r\n  templateUrl: 'card-overview-example.html',\r\n  styleUrls: ['card-overview-example.css'],\r\n})\r\nexport class CardOverviewExample {}\r\n`,\r\n\t\tcssCode: ``,\r\n\t\tviewCode: ``,\r\n\t\tisCodeVisible: false,\r\n\t\tisExampleExpanded: true\r\n\t};\r\n\r\nconst cardWithTitle = {\r\n\tbeforeCodeTitle: 'Card header',\r\n\thtmlCode: `\r\n<mat-toolbar>\r\n  <mat-toolbar-row>\r\n    <span>First Row</span>\r\n  </mat-toolbar-row>\r\n  <mat-toolbar-row>\r\n    <span>Second Row</span>\r\n  </mat-toolbar-row>\r\n</mat-toolbar>\r\n`,\r\n\ttsCode: `\r\nimport {Component} from '@angular/core';\\n\r\n/**\r\n* @title Card with title\r\n*/\r\n@Component({\r\nselector: 'card-title-example',\r\ntemplateUrl: 'card-title-example.html',\r\nstyleUrls: ['card-title-example.css'],\r\n})\r\nexport class CardTitleExample {}\r\n`,\r\n\tcssCode: ``,\r\n\tviewCode: ``,\r\n\tisCodeVisible: false,\r\n\tisExampleExpanded: true\r\n};\r\n\r\nconst bigExample = {\r\n\tbeforeCodeTitle: 'Example with image',\r\n\thtmlCode: `\r\n<mat-card class=\"example-card\">\r\n  <mat-card-header>\r\n    <div mat-card-avatar class=\"example-header-image\"></div>\r\n    <mat-card-title>Shiba Inu</mat-card-title>\r\n    <mat-card-subtitle>Dog Breed</mat-card-subtitle>\r\n  </mat-card-header>\r\n  <img mat-card-image src=\"https://material.angular.io/assets/img/examples/shiba2.jpg\" alt=\"Photo of a Shiba Inu\">\r\n  <mat-card-content>\r\n    <p>\r\n      The Shiba Inu is the smallest of the six original and distinct spitz breeds of dog from Japan.\r\n      A small, agile dog that copes very well with mountainous terrain, the Shiba Inu was originally\r\n      bred for hunting.\r\n  </p>\r\n  </mat-card-content>\r\n  <mat-card-actions>\r\n    <button mat-button>LIKE</button>\r\n    <button mat-button>SHARE</button>\r\n  </mat-card-actions>\r\n</mat-card>\r\n`,\r\n\ttsCode: `\r\nimport {Component} from '@angular/core';\\n\r\n/**\r\n* @title Card with iamge\r\n*/\r\n@Component({\r\nselector: 'card-image-example',\r\ntemplateUrl: 'card-image-example.html',\r\nstyleUrls: ['card-image-example.css'],\r\n})\r\nexport class CardImageExample {}\r\n`,\r\n\t\tcssCode: `\r\n.example-card {\r\n  max-width: 400px;\r\n}\r\n.example-header-image {\r\n  background-image: url('https://material.angular.io/assets/img/examples/shiba1.jpg');\r\n  background-size: cover;\r\n}`,\r\n\tviewCode: ``,\r\n\tisCodeVisible: false,\r\n\tisExampleExpanded: true\r\n};\r\n@Component({\r\n\tselector: 'kt-card',\r\n\ttemplateUrl: './card.component.html',\r\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\r\n\tstyles: [`\r\n\t.example-card {\r\n\t\tmax-width: 400px;\r\n\t  }\r\n\t.example-header-image {\r\n\t\tbackground-image: url('https://material.angular.io/assets/img/examples/shiba1.jpg');\r\n\t\tbackground-size: cover;\r\n\t  }\r\n\t`]\r\n})\r\nexport class CardComponent implements OnInit {\r\n\texampleBasicCards;\r\n\texampleCardWithTitle;\r\n\texamplBigExample;\r\n\tngOnInit() {\r\n\t\tthis.exampleBasicCards = basicCards;\r\n\t\tthis.exampleCardWithTitle = cardWithTitle;\r\n\t\tthis.examplBigExample = bigExample;\r\n\t}\r\n}\r\n","<kt-notice [svg]=\"'assets/media/svg/icons/Tools/Compass.svg'\">\r\n\tFor more info please check the components's official demos & documentation\r\n\t<a class=\"font-weight-bold\" href=\"https://material.angular.io/components/divider\" target=\"_blank\">demos & documentation</a>\r\n</kt-notice>\r\n\r\n<div class=\"row\">\r\n\t<div class=\"col-xl-6\">\r\n\t\t<kt-code-preview [viewItem]=\"exampleBasicDivider\">\r\n\t\t\t<div class=\"example-preview\">\r\n\t\t\t\t<span>\r\n\t\t\t\t\t<code>&lt;mat-divider&gt;</code> is a component that allows for Material styling of a line separator with various orientation options.\r\n\t\t\t\t</span>\r\n\t\t\t\t<div class=\"separator separator-dashed my-6\"></div>\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<mat-list>\r\n\t\t\t\t\t\t<mat-list-item>Alabama</mat-list-item>\r\n\t\t\t\t\t\t<mat-divider></mat-divider>\r\n\t\t\t\t\t\t<mat-list-item>Alaska</mat-list-item>\r\n\t\t\t\t\t\t<mat-divider></mat-divider>\r\n\t\t\t\t\t\t<mat-list-item>Arizona</mat-list-item>\r\n\t\t\t\t\t\t<mat-divider></mat-divider>\r\n\t\t\t\t\t\t<mat-list-item>Arizona</mat-list-item>\r\n\t\t\t\t\t\t<mat-divider></mat-divider>\r\n\t\t\t\t\t\t<mat-list-item>California</mat-list-item>\r\n\t\t\t\t\t\t<mat-divider></mat-divider>\r\n\t\t\t\t\t\t<mat-list-item>Colorado</mat-list-item>\r\n\t\t\t\t\t\t<mat-divider></mat-divider>\r\n\t\t\t\t\t\t<mat-list-item>Connecticut</mat-list-item>\r\n\t\t\t\t\t\t<mat-divider></mat-divider>\r\n\t\t\t\t\t\t<mat-list-item>Delaware</mat-list-item>\r\n\t\t\t\t\t\t<mat-divider></mat-divider>\r\n\t\t\t\t\t\t<mat-list-item>Florida</mat-list-item>\r\n\t\t\t\t\t</mat-list>\r\n\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</kt-code-preview>\r\n\t\t<kt-code-preview [viewItem]=\"exampleVertical\">\r\n\t\t\t<div class=\"example-preview\">\r\n\t\t\t\t<span>\r\n\t\t\t\t\tAdd the\r\n\t\t\t\t\t<mark>vertical</mark> attribute in order to set whether or not the divider is vertically-oriented.\r\n\t\t\t\t</span>\r\n\t\t\t\t<div class=\"separator separator-dashed my-6\"></div>\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<mat-list>\r\n\t\t\t\t\t\t<mat-list-item>Item 1</mat-list-item>\r\n\t\t\t\t\t\t<mat-divider [vertical]=\"true\"></mat-divider>\r\n\t\t\t\t\t\t<mat-list-item>Item 2</mat-list-item>\r\n\t\t\t\t\t\t<mat-divider [vertical]=\"true\"></mat-divider>\r\n\t\t\t\t\t\t<mat-list-item>Item 3</mat-list-item>\r\n\t\t\t\t\t</mat-list>\r\n\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</kt-code-preview>\r\n\t</div>\r\n\t<div class=\"col-xl-6\">\r\n\t\t<kt-code-preview [viewItem]=\"exampleList\">\r\n\t\t\t<div class=\"example-preview\">\r\n\t\t\t\t<span>\r\n\t\t\t\t\tDividers can be added to lists as a means of separating content into distinct sections. Inset dividers can also be added to provide the appearance of distinct elements in a list without cluttering content like avatar images or icons. Make sure to avoid adding an inset divider to the last element in a list, because it will overlap with the section divider.\r\n\t\t\t\t</span>\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<mat-list>\r\n\t\t\t\t\t\t<h3 mat-subheader>Folders</h3>\r\n\t\t\t\t\t\t<mat-list-item *ngFor=\"let folder of folders\">\r\n\t\t\t\t\t\t\t<mat-icon mat-list-icon>folder</mat-icon>\r\n\t\t\t\t\t\t\t<h4 mat-line>{{folder.name}}</h4>\r\n\t\t\t\t\t\t\t<p mat-line> {{folder.updated | date}} </p>\r\n\t\t\t\t\t\t</mat-list-item>\r\n\t\t\t\t\t\t<mat-divider></mat-divider>\r\n\t\t\t\t\t\t<h3 mat-subheader>Notes</h3>\r\n\t\t\t\t\t\t<mat-list-item *ngFor=\"let note of notes\">\r\n\t\t\t\t\t\t\t<mat-icon mat-list-icon>note</mat-icon>\r\n\t\t\t\t\t\t\t<h4 mat-line>{{note.name}}</h4>\r\n\t\t\t\t\t\t\t<p mat-line> {{note.updated | date}} </p>\r\n\t\t\t\t\t\t</mat-list-item>\r\n\t\t\t\t\t</mat-list>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</kt-code-preview>\r\n\t</div>\r\n</div>\r\n","import { Component, OnInit, ChangeDetectionStrategy } from '@angular/core';\r\n\r\nconst basicDivider = {\r\n\t\tbeforeCodeTitle: 'Basic divider',\r\n\t\thtmlCode: `\r\n\t\t<mat-list>\r\n\t\t<mat-list-item>Item 1</mat-list-item>\r\n\t\t<mat-divider></mat-divider>\r\n\t\t<mat-list-item>Item 2</mat-list-item>\r\n\t\t<mat-divider></mat-divider>\r\n\t\t<mat-list-item>Item 3</mat-list-item>\r\n\t  </mat-list>\r\n`,\r\n\t\ttsCode: `\r\nimport {Component} from '@angular/core';\\n\r\n/**\r\n* @title Basic divider\r\n*/\r\n@Component({\r\n  selector: 'divider-overview-example',\r\n  templateUrl: 'divider-overview-example.html',\r\n  styleUrls: ['divider-overview-example.css'],\r\n})\r\nexport class DividerOverviewExample {}\r\n`,\r\n\t\tcssCode: ``,\r\n\t\tviewCode: ``,\r\n\t\tisCodeVisible: false,\r\n\t\tisExampleExpanded: true\r\n\t};\r\n\r\nconst verticalDivider = {\r\n\t\tbeforeCodeTitle: 'Vertical divider',\r\n\t\thtmlCode: `\r\n<mat-divider [vertical]=\"true\"></mat-divider>\r\n`,\r\n\t\ttsCode: `\r\nimport {Component} from '@angular/core';\\n\r\n/**\r\n* @title vertical divider\r\n*/\r\n@Component({\r\n  selector: 'divider-vertical-example',\r\n  templateUrl: 'divider-vertical-example.html',\r\n  styleUrls: ['divider-vertical-example.css'],\r\n})\r\nexport class DividerVerticalExample {}\r\n`,\r\n\t\tcssCode: ``,\r\n\t\tviewCode: ``,\r\n\t\tisCodeVisible: false,\r\n\t\tisExampleExpanded: true\r\n\t};\r\n\r\nconst listExample = {\r\n\t\tbeforeCodeTitle: 'Lists with inset dividers',\r\n\t\thtmlCode: `\r\n<mat-list>\r\n  <h3 mat-subheader>Folders</h3>\r\n  <mat-list-item *ngFor=\"let folder of folders; last as last\">\r\n    <mat-icon mat-list-icon>folder</mat-icon>\r\n    <h4 mat-line>{{folder.name}}</h4>\r\n    <p mat-line class=\"demo-2\"> {{folder.updated}} </p>\r\n    <mat-divider [inset]=\"true\" *ngIf=\"!last\"></mat-divider>\r\n  </mat-list-item>\r\n  <mat-divider></mat-divider>\r\n  <h3 md-subheader>Notes</h3>\r\n  <mat-list-item *ngFor=\"let note of notes\">\r\n    <mat-icon md-list-icon>note</mat-icon>\r\n    <h4 md-line>{{note.name}}</h4>\r\n    <p md-line class=\"demo-2\"> {{note.updated}} </p>\r\n  </mat-list-item>\r\n</mat-list>\r\n`,\r\n\t\ttsCode: `\r\nimport {Component} from '@angular/core';\\n\r\n/**\r\n* @title list divider\r\n*/\r\n@Component({\r\n  selector: 'divider-list-example',\r\n  templateUrl: 'divider-list-example.html',\r\n  styleUrls: ['divider-list-example.css'],\r\n})\r\nexport class DividerListExample {}\r\n`,\r\n\t\tcssCode: ``,\r\n\t\tviewCode: ``,\r\n\t\tisCodeVisible: false,\r\n\t\tisExampleExpanded: true\r\n\t};\r\n\r\n@Component({\r\n\tselector: 'kt-divider',\r\n\ttemplateUrl: './divider.component.html',\r\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\r\n\tstyles: [`\r\n\t.mat-list-icon {\r\n\t\tcolor: rgba(0, 0, 0, 0.54);\r\n\t  }\r\n\t  .mat-toolbar > * + .mat-divider-vertical {\r\n\t\tmargin-right: 16px;\r\n\t}\r\n\t.mat-toolbar > .mat-divider-vertical + * {\r\n\t\tmargin-right: 24px;\r\n\t\tmargin-left: -1px;\r\n\t}\r\n\t`]\r\n})\r\nexport class DividerComponent implements OnInit {\r\n\r\n\tfolders = [\r\n\t\t{\r\n\t\t\tname: 'Photos',\r\n\t\t\tupdated: new Date('1/1/16'),\r\n\t\t},\r\n\t\t{\r\n\t\t\tname: 'Recipes',\r\n\t\t\tupdated: new Date('1/17/16'),\r\n\t\t},\r\n\t\t{\r\n\t\t\tname: 'Work',\r\n\t\t\tupdated: new Date('1/28/16'),\r\n\t\t}\r\n\t];\r\n\tnotes = [\r\n\t\t{\r\n\t\t\tname: 'Vacation Itinerary',\r\n\t\t\tupdated: new Date('2/20/16'),\r\n\t\t},\r\n\t\t{\r\n\t\t\tname: 'Kitchen Remodel',\r\n\t\t\tupdated: new Date('1/18/16'),\r\n\t\t}\r\n\t];\r\n\r\n\texampleBasicDivider;\r\n\texampleVertical;\r\n\texampleList;\r\n\tngOnInit() {\r\n\t\tthis.exampleBasicDivider = basicDivider;\r\n\t\tthis.exampleVertical = verticalDivider;\r\n\t\tthis.exampleList = listExample;\r\n\t}\r\n}\r\n","<kt-notice [svg]=\"'assets/media/svg/icons/Tools/Compass.svg'\">\r\n\tFor more info please check the components's official demos & documentation\r\n\t<a class=\"font-weight-bold\" href=\"https://material.angular.io/components/expansion/overview\" target=\"_blank\">demos & documentation</a>\r\n</kt-notice>\r\n\r\n<div class=\"row\">\r\n\t<div class=\"col-xl-6\">\r\n\t\t<kt-code-preview [viewItem]=\"exampleBasicPanel\">\r\n\t\t\t<div class=\"example-preview\">\r\n\t\t\t\t<span>\r\n\t\t\t\t\t<code>&lt;mat-expansion-panel&gt;</code> provides an expandable details-summary view.is a component that allows for Material styling of a line separator with various orientation options.\r\n\t\t\t\t</span>\r\n\t\t\t\t<div class=\"separator separator-dashed my-6\"></div>\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<mat-accordion>\r\n\t\t\t\t\t\t<mat-expansion-panel>\r\n\t\t\t\t\t\t\t<mat-expansion-panel-header>\r\n\t\t\t\t\t\t\t\t<mat-panel-title>\r\n\t\t\t\t\t\t\t\t\tPersonal data\r\n\t\t\t\t\t\t\t\t</mat-panel-title>\r\n\t\t\t\t\t\t\t\t<mat-panel-description>\r\n\t\t\t\t\t\t\t\t\tType your name and age\r\n\t\t\t\t\t\t\t\t</mat-panel-description>\r\n\t\t\t\t\t\t\t</mat-expansion-panel-header>\r\n\r\n\t\t\t\t\t\t\t<mat-form-field>\r\n\t\t\t\t\t\t\t\t<input matInput placeholder=\"First name\">\r\n\t\t\t\t\t\t\t</mat-form-field>\r\n\r\n\t\t\t\t\t\t\t<mat-form-field>\r\n\t\t\t\t\t\t\t\t<input matInput placeholder=\"Age\">\r\n\t\t\t\t\t\t\t</mat-form-field>\r\n\t\t\t\t\t\t</mat-expansion-panel>\r\n\t\t\t\t\t\t<mat-expansion-panel (opened)=\"panelOpenState = true\" (closed)=\"panelOpenState = false\">\r\n\t\t\t\t\t\t\t<mat-expansion-panel-header>\r\n\t\t\t\t\t\t\t\t<mat-panel-title>\r\n\t\t\t\t\t\t\t\t\tSelf aware panel\r\n\t\t\t\t\t\t\t\t</mat-panel-title>\r\n\t\t\t\t\t\t\t\t<mat-panel-description>\r\n\t\t\t\t\t\t\t\t\tCurrently I am {{panelOpenState ? 'open' : 'closed'}}\r\n\t\t\t\t\t\t\t\t</mat-panel-description>\r\n\t\t\t\t\t\t\t</mat-expansion-panel-header>\r\n\t\t\t\t\t\t\t<p>I'm visible because I am open</p>\r\n\t\t\t\t\t\t</mat-expansion-panel>\r\n\t\t\t\t\t</mat-accordion>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</kt-code-preview>\r\n\t\t<kt-code-preview [viewItem]=\"exampleDisabledPanel\">\r\n\t\t\t<div class=\"example-preview\">\r\n\t\t\t\t<span>\r\n\t\t\t\t\tExpansion panels can be\r\n\t\t\t\t\t<mark>disabled</mark> using the disabled attribute. A disabled expansion panel can't be toggled by the user, but can still be manipulated programmatically.\r\n\t\t\t\t</span>\r\n\t\t\t\t<div class=\"separator separator-dashed my-6\"></div>\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<mat-expansion-panel [disabled]=\"isDisabled\">\r\n\t\t\t\t\t\t<mat-expansion-panel-header>\r\n\t\t\t\t\t\t\tThis is the expansion title\r\n\t\t\t\t\t\t</mat-expansion-panel-header>\r\n\t\t\t\t\t\t<mat-panel-description>\r\n\t\t\t\t\t\t\tThis is a summary of the content\r\n\t\t\t\t\t\t</mat-panel-description>\r\n\t\t\t\t\t</mat-expansion-panel>\r\n\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</kt-code-preview>\r\n\t</div>\r\n\t<div class=\"col-xl-6\">\r\n\t\t<kt-code-preview [viewItem]=\"exampleAccordion\">\r\n\t\t\t<div class=\"example-preview\">\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<mat-accordion class=\"example-headers-align\">\r\n\t\t\t\t\t\t<mat-expansion-panel [expanded]=\"step === 0\" (opened)=\"setStep(0)\" hideToggle=\"true\">\r\n\t\t\t\t\t\t\t<mat-expansion-panel-header>\r\n\t\t\t\t\t\t\t\t<mat-panel-title>\r\n\t\t\t\t\t\t\t\t\tPersonal data\r\n\t\t\t\t\t\t\t\t</mat-panel-title>\r\n\t\t\t\t\t\t\t\t<mat-panel-description>\r\n\t\t\t\t\t\t\t\t\tType your name and age\r\n\t\t\t\t\t\t\t\t\t<mat-icon>account_circle</mat-icon>\r\n\t\t\t\t\t\t\t\t</mat-panel-description>\r\n\t\t\t\t\t\t\t</mat-expansion-panel-header>\r\n\r\n\t\t\t\t\t\t\t<mat-form-field>\r\n\t\t\t\t\t\t\t\t<input matInput placeholder=\"First name\">\r\n\t\t\t\t\t\t\t</mat-form-field>\r\n\r\n\t\t\t\t\t\t\t<mat-form-field>\r\n\t\t\t\t\t\t\t\t<input matInput type=\"number\" min=\"1\" placeholder=\"Age\">\r\n\t\t\t\t\t\t\t</mat-form-field>\r\n\r\n\t\t\t\t\t\t\t<mat-action-row>\r\n\t\t\t\t\t\t\t\t<button mat-button color=\"primary\" (click)=\"nextStep()\">Next</button>\r\n\t\t\t\t\t\t\t</mat-action-row>\r\n\t\t\t\t\t\t</mat-expansion-panel>\r\n\r\n\t\t\t\t\t\t<mat-expansion-panel [expanded]=\"step === 1\" (opened)=\"setStep(1)\" hideToggle=\"true\">\r\n\t\t\t\t\t\t\t<mat-expansion-panel-header>\r\n\t\t\t\t\t\t\t\t<mat-panel-title>\r\n\t\t\t\t\t\t\t\t\tDestination\r\n\t\t\t\t\t\t\t\t</mat-panel-title>\r\n\t\t\t\t\t\t\t\t<mat-panel-description>\r\n\t\t\t\t\t\t\t\t\tType the country name\r\n\t\t\t\t\t\t\t\t\t<mat-icon>map</mat-icon>\r\n\t\t\t\t\t\t\t\t</mat-panel-description>\r\n\t\t\t\t\t\t\t</mat-expansion-panel-header>\r\n\r\n\t\t\t\t\t\t\t<mat-form-field>\r\n\t\t\t\t\t\t\t\t<input matInput placeholder=\"Country\">\r\n\t\t\t\t\t\t\t</mat-form-field>\r\n\r\n\t\t\t\t\t\t\t<mat-action-row>\r\n\t\t\t\t\t\t\t\t<button mat-button color=\"warn\" (click)=\"prevStep()\">Previous</button>\r\n\t\t\t\t\t\t\t\t<button mat-button color=\"primary\" (click)=\"nextStep()\">Next</button>\r\n\t\t\t\t\t\t\t</mat-action-row>\r\n\t\t\t\t\t\t</mat-expansion-panel>\r\n\r\n\t\t\t\t\t\t<mat-expansion-panel [expanded]=\"step === 2\" (opened)=\"setStep(2)\" hideToggle=\"true\">\r\n\t\t\t\t\t\t\t<mat-expansion-panel-header>\r\n\t\t\t\t\t\t\t\t<mat-panel-title>\r\n\t\t\t\t\t\t\t\t\tDay of the trip\r\n\t\t\t\t\t\t\t\t</mat-panel-title>\r\n\t\t\t\t\t\t\t\t<mat-panel-description>\r\n\t\t\t\t\t\t\t\t\tInform the date you wish to travel\r\n\t\t\t\t\t\t\t\t\t<mat-icon>date_range</mat-icon>\r\n\t\t\t\t\t\t\t\t</mat-panel-description>\r\n\t\t\t\t\t\t\t</mat-expansion-panel-header>\r\n\r\n\t\t\t\t\t\t\t<mat-form-field>\r\n\t\t\t\t\t\t\t\t<input matInput placeholder=\"Date\" [matDatepicker]=\"picker\" (focus)=\"picker.open()\" readonly>\r\n\t\t\t\t\t\t\t</mat-form-field>\r\n\t\t\t\t\t\t\t<mat-datepicker #picker></mat-datepicker>\r\n\r\n\t\t\t\t\t\t\t<mat-action-row>\r\n\t\t\t\t\t\t\t\t<button mat-button color=\"warn\" (click)=\"prevStep()\">Previous</button>\r\n\t\t\t\t\t\t\t\t<button mat-button color=\"primary\" (click)=\"nextStep()\">End</button>\r\n\t\t\t\t\t\t\t</mat-action-row>\r\n\t\t\t\t\t\t</mat-expansion-panel>\r\n\r\n\t\t\t\t\t</mat-accordion>\r\n\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</kt-code-preview>\r\n\t</div>\r\n</div>\r\n","import { Component, OnInit, ChangeDetectionStrategy } from '@angular/core';\r\n\r\nconst basicPanel = {\r\n\t\tbeforeCodeTitle: 'Basic expansion panel',\r\n\t\thtmlCode: `\r\n<mat-accordion>\r\n  <mat-expansion-panel>\r\n    <mat-expansion-panel-header>\r\n      <mat-panel-title>\r\n        Personal data\r\n      </mat-panel-title>\r\n\t  <mat-panel-description>\r\n        Type your name and age\r\n      </mat-panel-description>\r\n    </mat-expansion-panel-header>\r\n    <mat-form-field>\r\n      <input matInput placeholder=\"First name\">\r\n    </mat-form-field>\r\n    <mat-form-field>\r\n      <input matInput placeholder=\"Age\">\r\n    </mat-form-field>\r\n  </mat-expansion-panel>\r\n  <mat-expansion-panel (opened)=\"panelOpenState = true\"\r\n    (closed)=\"panelOpenState = false\">\r\n    <mat-expansion-panel-header>\r\n      <mat-panel-title>\r\n        Self aware panel\r\n      </mat-panel-title>\r\n      <mat-panel-description>\r\n        Currently I am {{panelOpenState ? 'open' : 'closed'}}\r\n      </mat-panel-description>\r\n    </mat-expansion-panel-header>\r\n    <p>I'm visible because I am open</p>\r\n  </mat-expansion-panel>\r\n</mat-accordion>\r\n`,\r\n\t\ttsCode: `\r\nimport {Component} from '@angular/core';\\n\r\n/**\r\n* @title Basic expansion panel\r\n*/\r\n@Component({\r\n  selector: 'expansion-overview-example',\r\n  templateUrl: 'expansion-overview-example.html',\r\n  styleUrls: ['expansion-overview-example.css'],\r\n})\r\nexport class ExpansionOverviewExample {\r\n  panelOpenState: boolean = false;\r\n}\r\n`,\r\n\t\tcssCode: ``,\r\n\t\tviewCode: ``,\r\n\t\tisCodeVisible: false,\r\n\t\tisExampleExpanded: true\r\n\t};\r\n\r\nconst disabledPanel = {\r\n\t\tbeforeCodeTitle: 'Disabling a panel',\r\n\t\thtmlCode: `\r\n<mat-expansion-panel [disabled]=\"isDisabled\">\r\n  <mat-expansion-panel-header>\r\n\tThis is the expansion title\r\n  </mat-expansion-panel-header>\r\n  <mat-panel-description>\r\n    This is a summary of the content\r\n  </mat-panel-description>\r\n</mat-expansion-panel>\r\n`,\r\n\t\ttsCode: `\r\nimport {Component} from '@angular/core';\\n\r\n/**\r\n* @title Disabled expansion panel\r\n*/\r\n@Component({\r\n  selector: 'expansion-disabled-example',\r\n  templateUrl: 'expansion-disabled-example.html',\r\n  styleUrls: ['expansion-disabled-example.css'],\r\n})\r\nexport class ExpansionDisabledExample {\r\n  isDisabled: boolean = true;\r\n}\r\n`,\r\n\t\tcssCode: ``,\r\n\t\tviewCode: ``,\r\n\t\tisCodeVisible: false,\r\n\t\tisExampleExpanded: true\r\n\t};\r\n\r\nconst accordion = {\r\n\t\tbeforeCodeTitle: 'Expansion panel as accordion',\r\n\t\thtmlCode: `\r\n<mat-accordion class=\"example-headers-align\">\r\n  <mat-expansion-panel [expanded]=\"step === 0\" (opened)=\"setStep(0)\" hideToggle=\"true\">\r\n    <mat-expansion-panel-header>\r\n      <mat-panel-title>\r\n        Personal data\r\n      </mat-panel-title>\r\n\t  <mat-panel-description>\r\n\t\tType your name and age\r\n        <mat-icon>account_circle</mat-icon>\r\n      </mat-panel-description>\r\n    </mat-expansion-panel-header>\r\n    <mat-form-field>\r\n      <input matInput placeholder=\"First name\">\r\n    </mat-form-field>\r\n    <mat-form-field>\r\n      <input matInput type=\"number\" min=\"1\" placeholder=\"Age\">\r\n    </mat-form-field>\r\n    <mat-action-row>\r\n      <button mat-button color=\"primary\" (click)=\"nextStep()\">Next</button>\r\n    </mat-action-row>\r\n  </mat-expansion-panel>\r\n  <mat-expansion-panel [expanded]=\"step === 1\" (opened)=\"setStep(1)\" hideToggle=\"true\">\r\n    <mat-expansion-panel-header>\r\n      <mat-panel-title>\r\n        Destination\r\n      </mat-panel-title>\r\n      <mat-panel-description>\r\n        Type the country name\r\n        <mat-icon>map</mat-icon>\r\n      </mat-panel-description>\r\n    </mat-expansion-panel-header>\r\n    <mat-form-field>\r\n      <input matInput placeholder=\"Country\">\r\n    </mat-form-field>\r\n    <mat-action-row>\r\n      <button mat-button color=\"warn\" (click)=\"prevStep()\">Previous</button>\r\n      <button mat-button color=\"primary\" (click)=\"nextStep()\">Next</button>\r\n    </mat-action-row>\r\n   </mat-expansion-panel>\r\n  <mat-expansion-panel [expanded]=\"step === 2\" (opened)=\"setStep(2)\" hideToggle=\"true\">\r\n    <mat-expansion-panel-header>\r\n      <mat-panel-title>\r\n        Day of the trip\r\n\t  </mat-panel-title>\r\n      <mat-panel-description>\r\n        Inform the date you wish to travel\r\n        <mat-icon>date_range</mat-icon>\r\n      </mat-panel-description>\r\n     </mat-expansion-panel-header>\r\n    <mat-form-field>\r\n      <input matInput placeholder=\"Date\" [matDatepicker]=\"picker\" (focus)=\"picker.open()\" readonly>\r\n    </mat-form-field>\r\n    <mat-datepicker #picker></mat-datepicker>\r\n    <mat-action-row>\r\n      <button mat-button color=\"warn\" (click)=\"prevStep()\">Previous</button>\r\n      <button mat-button color=\"primary\" (click)=\"nextStep()\">End</button>\r\n    </mat-action-row>\r\n  </mat-expansion-panel>\r\n</mat-accordion>\r\n`,\r\n\t\ttsCode: `\r\nimport {Component} from '@angular/core';\\n\r\n/**\r\n* @title Expansion panel as accordion\r\n*/\r\n@Component({\r\n  selector: 'expansion-steps-example',\r\n  templateUrl: 'expansion-steps-example.html',\r\n  styleUrls: ['expansion-steps-example.css']\r\n})\r\nexport class ExpansionStepsExample {\r\n  step = 0;\\n\r\n  setStep(index: number) {\r\n    this.step = index;\r\n  }\\n\r\n  nextStep() {\r\n    this.step++;\r\n   }\\n\r\n  prevStep() {\r\n    this.step--;\r\n  }\r\n}\r\n`,\r\n\t\tcssCode: `\r\n.example-headers-align .mat-expansion-panel-header-title,\r\n.example-headers-align .mat-expansion-panel-header-description {\r\n  flex-basis: 0;\r\n}\\n\r\n.example-headers-align .mat-expansion-panel-header-description {\r\n  justify-content: space-between;\r\n  align-items: center;\r\n}\r\n`,\r\n\t\tviewCode: ``,\r\n\t\tisCodeVisible: false,\r\n\t\tisExampleExpanded: true\r\n\t};\r\n\r\n@Component({\r\n\tselector: 'kt-expansion-panel',\r\n\ttemplateUrl: './expansion-panel.component.html',\r\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\r\n\tstyles: [`\r\n.example-headers-align .mat-expansion-panel-header-title,\r\n.example-headers-align .mat-expansion-panel-header-description {\r\n  flex-basis: 0;\r\n}\r\n.example-headers-align .mat-expansion-panel-header-description {\r\n  justify-content: space-between;\r\n  align-items: center;\r\n}\r\n\t`]\r\n})\r\nexport class ExpansionPanelComponent implements OnInit {\r\n\r\n\texampleBasicPanel;\r\n\texampleDisabledPanel;\r\n\texampleAccordion;\r\n\tpanelOpenState = false;\r\n\tisDisabled = true;\r\n\tstep = 0;\r\n\r\n\tngOnInit() {\r\n\t\tthis.exampleBasicPanel = basicPanel;\r\n\t\tthis.exampleDisabledPanel = disabledPanel;\r\n\t\tthis.exampleAccordion = accordion;\r\n\t}\r\n\r\n\tsetStep(index: number) {\r\n\t\tthis.step = index;\r\n\t}\r\n\r\n\tnextStep() {\r\n\t\tthis.step++;\r\n\t}\r\n\r\n\tprevStep() {\r\n\t\tthis.step--;\r\n\t}\r\n}\r\n","<kt-notice [svg]=\"'assets/media/svg/icons/Tools/Compass.svg'\">\r\n\tFor more info please check the components's official demos & documentation\r\n\t<a class=\"font-weight-bold\" href=\"https://material.angular.io/components/grid-list\" target=\"_blank\">demos & documentation</a>\r\n</kt-notice>\r\n<kt-code-preview [viewItem]=\"exampleBasicGrid\">\r\n\t<div class=\"example-preview\">\r\n\t\t<span>\r\n\t\t\t<code>&lt;mat-grid-list&gt;</code> is a two-dimensional list view that arranges cells into grid-based layout. See Material Design spec here.\r\n\t\t</span>\r\n\t\t<div class=\"separator separator-dashed my-6\"></div>\r\n\t\t<div>\r\n\t\t\t<mat-grid-list cols=\"2\" rowHeight=\"2:1\">\r\n\t\t\t\t<mat-grid-tile>1</mat-grid-tile>\r\n\t\t\t\t<mat-grid-tile>2</mat-grid-tile>\r\n\t\t\t\t<mat-grid-tile>3</mat-grid-tile>\r\n\t\t\t\t<mat-grid-tile>4</mat-grid-tile>\r\n\t\t\t</mat-grid-list>\r\n\r\n\t\t</div>\r\n\t</div>\r\n</kt-code-preview>\r\n\r\n\r\n<kt-code-preview [viewItem]=\"exampleDynamicGrid\">\r\n\t<div class=\"example-preview\">\r\n\t\t<div>\r\n\t\t\t<mat-grid-list cols=\"4\" rowHeight=\"100px\">\r\n\t\t\t\t<mat-grid-tile *ngFor=\"let tile of tiles\" [colspan]=\"tile.cols\" [rowspan]=\"tile.rows\" [style.background]=\"tile.color\">\r\n\t\t\t\t\t{{tile.text}}\r\n\t\t\t\t</mat-grid-tile>\r\n\t\t\t</mat-grid-list>\r\n\t\t</div>\r\n\t</div>\r\n</kt-code-preview>\r\n","import { Component, OnInit, ChangeDetectionStrategy } from '@angular/core';\r\n\r\nconst dynamicGrid = {\r\n\tbeforeCodeTitle: 'Dynamic grid-list',\r\n\thtmlCode: `\r\n<mat-grid-list cols=\"4\" rowHeight=\"100px\">\r\n<mat-grid-tile\r\n*ngFor=\"let tile of tiles\"\r\n[colspan]=\"tile.cols\"\r\n[rowspan]=\"tile.rows\"\r\n[style.background]=\"tile.color\">\r\n{{tile.text}}\r\n</mat-grid-tile>\r\n</mat-grid-list>\r\n`,\r\n\ttsCode: `\r\nimport {Component} from '@angular/core';\\n\r\n/**\r\n* @title Dynamic grid-list\r\n*/\r\n@Component({\r\nselector: 'grid-list-dynamic-example',\r\ntemplateUrl: 'grid-list-dynamic-example.html',\r\nstyleUrls: ['grid-list-dynamic-example.css'],\r\n})\r\nexport class GridListDynamicExample {\r\ntiles = [\r\n{text: 'One', cols: 3, rows: 1, color: 'lightblue'},\r\n{text: 'Two', cols: 1, rows: 2, color: 'lightgreen'},\r\n{text: 'Three', cols: 1, rows: 1, color: 'lightpink'},\r\n{text: 'Four', cols: 2, rows: 1, color: '#DDBDF1'},\r\n];\r\n}\r\n`,\r\n\tcssCode: ``,\r\n\tviewCode: ``,\r\n\tisCodeVisible: false,\r\n\tisExampleExpanded: true\r\n};\r\n\r\n\r\nconst basicGrid = {\r\n\tbeforeCodeTitle: 'Basic grid-list',\r\n\thtmlCode: `\r\n<mat-grid-list cols=\"2\" rowHeight=\"2:1\">\r\n<mat-grid-tile>1</mat-grid-tile>\r\n<mat-grid-tile>2</mat-grid-tile>\r\n<mat-grid-tile>3</mat-grid-tile>\r\n<mat-grid-tile>4</mat-grid-tile>\r\n</mat-grid-list>\r\n`,\r\n\ttsCode: `\r\nimport {Component} from '@angular/core';\\n\r\n/**\r\n* @title Basic grid-list\r\n*/\r\n@Component({\r\nselector: 'grid-list-overview-example',\r\nstyleUrls: ['grid-list-overview-example.css'],\r\ntemplateUrl: 'grid-list-overview-example.html',\r\n})\r\nexport class GridListOverviewExample {}\r\n`,\r\n\tcssCode: `\r\nmat-grid-tile {\r\nbackground: lightblue;\r\n}\r\n\t`,\r\n\tviewCode: ``,\r\n\tisCodeVisible: false,\r\n\tisExampleExpanded: true\r\n};\r\n\r\n@Component({\r\n\tselector: 'kt-grid-list',\r\n\ttemplateUrl: './grid-list.component.html',\r\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\r\n\tstyles: [`\r\n\tmat-grid-tile {\r\n\t\tbackground: lightblue;\r\n\t  }\r\n\t`]\r\n})\r\nexport class GridListComponent implements OnInit {\r\n\r\n\ttiles = [\r\n\t\t{ text: 'One', cols: 3, rows: 1, color: 'lightblue' },\r\n\t\t{ text: 'Two', cols: 1, rows: 2, color: 'lightgreen' },\r\n\t\t{ text: 'Three', cols: 1, rows: 1, color: 'lightpink' },\r\n\t\t{ text: 'Four', cols: 2, rows: 1, color: '#DDBDF1' },\r\n\t];\r\n\r\n\texampleBasicGrid;\r\n\texampleDynamicGrid;\r\n\tngOnInit() {\r\n\t\tthis.exampleBasicGrid = basicGrid;\r\n\t\tthis.exampleDynamicGrid = dynamicGrid;\r\n\t}\r\n\r\n}\r\n","<kt-notice [svg]=\"'assets/media/svg/icons/Tools/Compass.svg'\">\r\n\tFor more info please check the components's official demos & documentation\r\n\t<a class=\"font-weight-bold\" href=\"https://material.angular.io/components/list/overview\" target=\"_blank\">demos & documentation</a>\r\n</kt-notice>\r\n\r\n<div class=\"row\">\r\n\t<div class=\"col-xl-6\">\r\n\t\t<kt-code-preview [viewItem]=\"exampleBasicList\">\r\n\t\t\t<div class=\"example-preview\">\r\n\t\t\t\t<span>\r\n\t\t\t\t\t<code>&lt;mat-list&gt;</code> is a container component that wraps and formats a series of line items. As the base list component, it provides Material Design styling, but no behavior of its own.\r\n\t\t\t\t</span>\r\n\t\t\t\t<div class=\"separator separator-dashed my-6\"></div>\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<mat-list role=\"list\">\r\n\t\t\t\t\t\t<mat-list-item role=\"listitem\">Item 1</mat-list-item>\r\n\t\t\t\t\t\t<mat-list-item role=\"listitem\">Item 2</mat-list-item>\r\n\t\t\t\t\t\t<mat-list-item role=\"listitem\">Item 3</mat-list-item>\r\n\t\t\t\t\t</mat-list>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</kt-code-preview>\r\n\t\t<kt-code-preview [viewItem]=\"exampleListWithSelection\">\r\n\t\t\t<div class=\"example-preview\">\r\n\t\t\t\t<span>\r\n\t\t\t\t\tA selection list provides an interface for selecting values, where each list item is an option.\r\n\t\t\t\t</span>\r\n\t\t\t\t<div class=\"separator separator-dashed my-6\"></div>\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<mat-selection-list #shoes>\r\n\t\t\t\t\t\t<mat-list-option *ngFor=\"let shoe of typesOfShoes\">\r\n\t\t\t\t\t\t\t{{shoe}}\r\n\t\t\t\t\t\t</mat-list-option>\r\n\t\t\t\t\t</mat-selection-list>\r\n\t\t\t\t\t<div class=\"separator separator-dashed my-6\"></div>\r\n\t\t\t\t\t<div>\r\n\t\t\t\t\t\tOptions selected: <mark>{{shoes.selectedOptions.selected.length}}</mark>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</kt-code-preview>\r\n\t</div>\r\n\t<div class=\"col-xl-6\">\r\n\t\t<kt-code-preview [viewItem]=\"exampleListWithSection\">\r\n\t\t\t<div class=\"example-preview\">\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<mat-list>\r\n\t\t\t\t\t\t<h3 mat-subheader>Folders</h3>\r\n\t\t\t\t\t\t<mat-list-item *ngFor=\"let folder of folders\">\r\n\t\t\t\t\t\t\t<mat-icon mat-list-icon>folder</mat-icon>\r\n\t\t\t\t\t\t\t<h4 mat-line>{{folder.name}}</h4>\r\n\t\t\t\t\t\t\t<p mat-line> {{folder.updated | date}} </p>\r\n\t\t\t\t\t\t</mat-list-item>\r\n\t\t\t\t\t\t<mat-divider></mat-divider>\r\n\t\t\t\t\t\t<h3 mat-subheader>Notes</h3>\r\n\t\t\t\t\t\t<mat-list-item *ngFor=\"let note of notes\">\r\n\t\t\t\t\t\t\t<mat-icon mat-list-icon>note</mat-icon>\r\n\t\t\t\t\t\t\t<h4 mat-line>{{note.name}}</h4>\r\n\t\t\t\t\t\t\t<p mat-line> {{note.updated | date}} </p>\r\n\t\t\t\t\t\t</mat-list-item>\r\n\t\t\t\t\t</mat-list>\r\n\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</kt-code-preview>\r\n\t</div>\r\n</div>\r\n","import { Component, OnInit, ChangeDetectionStrategy } from '@angular/core';\r\n\r\nconst basicList = {\r\n\t\tbeforeCodeTitle: 'Basic list',\r\n\t\thtmlCode: `\r\n<mat-list role=\"list\">\r\n  <mat-list-item role=\"listitem\">Item 1</mat-list-item>\r\n  <mat-list-item role=\"listitem\">Item 2</mat-list-item>\r\n  <mat-list-item role=\"listitem\">Item 3</mat-list-item>\r\n</mat-list>\r\n`,\r\n\t\ttsCode: `\r\nimport {Component} from '@angular/core';\\n\r\n/**\r\n* @title Basic list\r\n*/\r\n@Component({\r\n  selector: 'list-overview-example',\r\n  templateUrl: 'list-overview-example.html',\r\n  styleUrls: ['list-overview-example.css'],\r\n})\r\nexport class ListOverviewExample {}\r\n`,\r\n\t\tcssCode: ``,\r\n\t\tviewCode: ``,\r\n\t\tisCodeVisible: false,\r\n\t\tisExampleExpanded: true\r\n\t};\r\nconst listWithSelection = {\r\n\t\tbeforeCodeTitle: 'List with selection',\r\n\t\thtmlCode: `\r\n<mat-selection-list #shoes>\r\n  <mat-list-option *ngFor=\"let shoe of typesOfShoes\">\r\n    {{shoe}}\r\n  </mat-list-option>\r\n</mat-selection-list>\r\n<p>\r\n  Options selected: {{shoes.selectedOptions.selected.length}}\r\n</p>\r\n`,\r\n\t\ttsCode: `\r\nimport {Component} from '@angular/core';\r\n\r\n/**\r\n* @title List with selection\r\n*/\r\n@Component({\r\n  selector: 'list-selection-example',\r\n  styleUrls: ['list-selection-example.css'],\r\n  templateUrl: 'list-selection-example.html',\r\n})\r\nexport class ListSelectionExample {\r\n  typesOfShoes = ['Boots', 'Clogs', 'Loafers', 'Moccasins', 'Sneakers'];\r\n}\r\n`,\r\n\t\tcssCode: ``,\r\n\t\tviewCode: ``,\r\n\t\tisCodeVisible: false,\r\n\t\tisExampleExpanded: true\r\n\t};\r\n\r\n\r\nconst listWithSection = {\r\n\t\tbeforeCodeTitle: 'List with sections',\r\n\t\thtmlCode: `\r\n<mat-list>\r\n  <h3 mat-subheader>Folders</h3>\r\n  <mat-list-item *ngFor=\"let folder of folders\">\r\n    <mat-icon mat-list-icon>folder</mat-icon>\r\n\t<h4 mat-line>{{folder.name}}</h4>\r\n    <p mat-line> {{folder.updated | date}} </p>\r\n  </mat-list-item>\r\n  <mat-divider></mat-divider>\r\n  <h3 mat-subheader>Notes</h3>\r\n  <mat-list-item *ngFor=\"let note of notes\">\r\n    <mat-icon mat-list-icon>note</mat-icon>\r\n    <h4 mat-line>{{note.name}}</h4>\r\n    <p mat-line> {{note.updated | date}} </p>\r\n  </mat-list-item>\r\n</mat-list>\r\n`,\r\n\t\ttsCode: `\r\nimport {Component} from '@angular/core';\\n\r\n/**\r\n* @title List with sections\r\n*/\r\n@Component({\r\n  selector: 'list-sections-example',\r\n  styleUrls: ['list-sections-example.css'],\r\ntemplateUrl: 'list-sections-example.html',\r\n})\r\nexport class ListSectionsExample {\r\n  folders = [\r\n  {\r\n    name: 'Photos',\r\n    updated: new Date('1/1/16'),\r\n  },\r\n  {\r\n    name: 'Recipes',\r\n    updated: new Date('1/17/16'),\r\n  },\r\n  {\r\n    name: 'Work',\r\n    updated: new Date('1/28/16'),\r\n  }\r\n  ];\r\n  notes = [\r\n  {\r\n    name: 'Vacation Itinerary',\r\n    updated: new Date('2/20/16'),\r\n  },\r\n  {\r\n    name: 'Kitchen Remodel',\r\n    updated: new Date('1/18/16'),\r\n  }\r\n  ];\r\n}\r\n`,\r\n\t\tcssCode: `\r\n.mat-list-icon {\r\n  color: rgba(0, 0, 0, 0.54);\r\n}\r\n`,\r\n\t\tviewCode: ``,\r\n\t\tisCodeVisible: false,\r\n\t\tisExampleExpanded: true\r\n\t};\r\n\r\n@Component({\r\n\tselector: 'kt-list',\r\n\ttemplateUrl: './list.component.html',\r\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\r\n\tstyles: [`\r\n\t.mat-list-icon {\r\n\t\tcolor: rgba(0, 0, 0, 0.54);\r\n\t  }\r\n\t`]\r\n})\r\nexport class ListComponent implements OnInit {\r\n\texampleBasicList;\r\n\texampleListWithSelection;\r\n\texampleListWithSection;\r\n\tfolders = [\r\n\t\t{\r\n\t\t\tname: 'Photos',\r\n\t\t\tupdated: new Date('1/1/16'),\r\n\t\t},\r\n\t\t{\r\n\t\t\tname: 'Recipes',\r\n\t\t\tupdated: new Date('1/17/16'),\r\n\t\t},\r\n\t\t{\r\n\t\t\tname: 'Work',\r\n\t\t\tupdated: new Date('1/28/16'),\r\n\t\t}\r\n\t];\r\n\tnotes = [\r\n\t\t{\r\n\t\t\tname: 'Vacation Itinerary',\r\n\t\t\tupdated: new Date('2/20/16'),\r\n\t\t},\r\n\t\t{\r\n\t\t\tname: 'Kitchen Remodel',\r\n\t\t\tupdated: new Date('1/18/16'),\r\n\t\t}\r\n\t];\r\n\ttypesOfShoes = ['Boots', 'Clogs', 'Loafers', 'Moccasins', 'Sneakers'];\r\n\tngOnInit() {\r\n\t\tthis.exampleBasicList = basicList;\r\n\t\tthis.exampleListWithSelection = listWithSelection;\r\n\t\tthis.exampleListWithSection = listWithSection;\r\n\t}\r\n}\r\n","<kt-notice [svg]=\"'assets/media/svg/icons/Tools/Compass.svg'\">\r\n\tFor more info please check the components's official demos & documentation\r\n\t<a class=\"font-weight-bold\" href=\"https://material.angular.io/components/tabs/examples\" target=\"_blank\">demos & documentation</a>\r\n</kt-notice>\r\n\r\n<kt-code-preview [viewItem]=\"exampleBasicTabs\">\r\n\t<div class=\"example-preview\">\r\n\t\t<span>\r\n\t\t\tAngular Material\r\n\t\t\t<mark>tabs</mark> organize content into separate views where only one view can be visible at a time. Each tab's label is shown in the tab header and the active tab's label is designated with the animated ink bar. When the list of tab labels exceeds the width of the header, pagination controls appear to let the user scroll left and right across the labels.\r\n\t\t</span>\r\n\t\t<div class=\"separator separator-dashed my-6\"></div>\r\n\t\t<div>\r\n\t\t\t<mat-tab-group>\r\n\t\t\t\t<mat-tab label=\"Tab 1\">Content 1</mat-tab>\r\n\t\t\t\t<mat-tab label=\"Tab 2\">Content 2</mat-tab>\r\n\t\t\t</mat-tab-group>\r\n\t\t</div>\r\n\t</div>\r\n</kt-code-preview>\r\n\r\n\r\n<kt-code-preview [viewItem]=\"exampleComplex\">\r\n\t<div class=\"example-preview\">\r\n\t\t<div>\r\n\t\t\t<mat-card>\r\n\t\t\t\t<mat-card-content>\r\n\t\t\t\t\t<h5 class=\"example-h2\">Tabs with text labels</h5>\r\n\t\t\t\t\t<mat-tab-group class=\"demo-tab-group\">\r\n\t\t\t\t\t\t<mat-tab label=\"Tab 1\">\r\n\t\t\t\t\t\t\t<div class=\"demo-tab-content\">\r\n\t\t\t\t\t\t\t\tLorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla venenatis ante augue. Phasellus volutpat neque ac dui mattis vulputate. Etiam consequat aliquam cursus. In sodales pretium ultrices. Maecenas lectus est, sollicitudin consectetur felis nec, feugiat ultricies mi. Aliquam erat volutpat. Nam placerat, tortor in ultrices porttitor, orci enim rutrum enim, vel tempor sapien arcu a tellus.\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</mat-tab>\r\n\t\t\t\t\t\t<mat-tab label=\"Tab 2\">\r\n\t\t\t\t\t\t\t<div \tclass=\"demo-tab-content\">\r\n\t\t\t\t\t\t\t\tLorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla venenatis ante augue. Phasellus volutpat neque ac dui mattis vulputate. Etiam consequat aliquam cursus. In sodales pretium ultrices. Maecenas lectus est, sollicitudin consectetur felis nec, feugiat ultricies mi. Aliquam erat volutpat. Nam placerat, tortor in ultrices porttitor, orci enim rutrum enim, vel tempor sapien arcu a tellus.\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</mat-tab>\r\n\t\t\t\t\t\t<mat-tab label=\"Tab 3\" disabled>\r\n\t\t\t\t\t\t\tNo content\r\n\t\t\t\t\t\t</mat-tab>\r\n\t\t\t\t\t\t<mat-tab label=\"Tab 4\">\r\n\t\t\t\t\t\t\t<div class=\"demo-tab-content\">\r\n\t\t\t\t\t\t\t\tLorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla venenatis ante augue. Phasellus volutpat neque ac dui mattis vulputate. Etiam consequat aliquam cursus. In sodales pretium ultrices. Maecenas lectus est, sollicitudin consectetur felis nec, feugiat ultricies mi. Aliquam erat volutpat. Nam placerat, tortor in ultrices porttitor, orci enim rutrum enim, vel tempor sapien arcu a tellus.\r\n\t\t\t\t\t\t\t\t<br />\r\n\t\t\t\t\t\t\t\t<br /> Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla venenatis ante augue. Phasellus volutpat neque ac dui mattis vulputate. Etiam consequat aliquam cursus. In sodales pretium ultrices. Maecenas lectus est, sollicitudin consectetur felis nec, feugiat ultricies mi. Aliquam erat volutpat. Nam placerat, tortor in ultrices porttitor, orci enim rutrum enim, vel tempor sapien arcu a tellus.\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</mat-tab>\r\n\t\t\t\t\t\t<mat-tab label=\"Tab 5\">\r\n\t\t\t\t\t\t\tNo content\r\n\t\t\t\t\t\t</mat-tab>\r\n\t\t\t\t\t\t<mat-tab label=\"Tab 6\">\r\n\t\t\t\t\t\t\tNo content\r\n\t\t\t\t\t\t</mat-tab>\r\n\t\t\t\t\t</mat-tab-group>\r\n\t\t\t\t</mat-card-content>\r\n\t\t\t</mat-card>\r\n\r\n\t\t\t<mat-card>\r\n\t\t\t\t<mat-card-content>\r\n\t\t\t\t\t<h5 class=\"example-h2\">Tabs with icon labels</h5>\r\n\t\t\t\t\t<mat-tab-group class=\"demo-tab-group\">\r\n\t\t\t\t\t\t<mat-tab label=\"Tab 1\">\r\n\t\t\t\t\t\t\t<ng-template mat-tab-label>\r\n\t\t\t\t\t\t\t\t<mat-icon>security</mat-icon>\r\n\t\t\t\t\t\t\t</ng-template>\r\n\t\t\t\t\t\t\t<div class=\"demo-tab-content\">\r\n\t\t\t\t\t\t\t\tLorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla venenatis ante augue. Phasellus volutpat neque ac dui mattis vulputate. Etiam consequat aliquam cursus. In sodales pretium ultrices. Maecenas lectus est, sollicitudin consectetur felis nec, feugiat ultricies mi. Aliquam erat volutpat. Nam placerat, tortor in ultrices porttitor, orci enim rutrum enim, vel tempor sapien arcu a tellus.\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</mat-tab>\r\n\t\t\t\t\t\t<mat-tab label=\"Tab 2\">\r\n\t\t\t\t\t\t\t<ng-template mat-tab-label>\r\n\t\t\t\t\t\t\t\t<mat-icon>attach_file</mat-icon>\r\n\t\t\t\t\t\t\t</ng-template>\r\n\t\t\t\t\t\t\t<div class=\"demo-tab-content\">\r\n\t\t\t\t\t\t\t\tLorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla venenatis ante augue. Phasellus volutpat neque ac dui mattis vulputate. Etiam consequat aliquam cursus. In sodales pretium ultrices. Maecenas lectus est, sollicitudin consectetur felis nec, feugiat ultricies mi. Aliquam erat volutpat. Nam placerat, tortor in ultrices porttitor, orci enim rutrum enim, vel tempor sapien arcu a tellus.\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</mat-tab>\r\n\t\t\t\t\t\t<mat-tab label=\"Tab 3\" disabled>\r\n\t\t\t\t\t\t\t<ng-template mat-tab-label>\r\n\t\t\t\t\t\t\t\t<mat-icon>block</mat-icon>\r\n\t\t\t\t\t\t\t</ng-template>\r\n\t\t\t\t\t\t\tNo content\r\n\t\t\t\t\t\t</mat-tab>\r\n\t\t\t\t\t\t<mat-tab label=\"Tab 4\">\r\n\t\t\t\t\t\t\t<ng-template mat-tab-label>\r\n\t\t\t\t\t\t\t\t<mat-icon>loop</mat-icon>\r\n\t\t\t\t\t\t\t</ng-template>\r\n\t\t\t\t\t\t\t<div class=\"demo-tab-content\">\r\n\t\t\t\t\t\t\t\tLorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla venenatis ante augue. Phasellus volutpat neque ac dui mattis vulputate. Etiam consequat aliquam cursus. In sodales pretium ultrices. Maecenas lectus est, sollicitudin consectetur felis nec, feugiat ultricies mi. Aliquam erat volutpat. Nam placerat, tortor in ultrices porttitor, orci enim rutrum enim, vel tempor sapien arcu a tellus.\r\n\t\t\t\t\t\t\t\t<br />\r\n\t\t\t\t\t\t\t\t<br /> Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla venenatis ante augue. Phasellus volutpat neque ac dui mattis vulputate. Etiam consequat aliquam cursus. In sodales pretium ultrices. Maecenas lectus est, sollicitudin consectetur felis nec, feugiat ultricies mi. Aliquam erat volutpat. Nam placerat, tortor in ultrices porttitor, orci enim rutrum enim, vel tempor sapien arcu a tellus.\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</mat-tab>\r\n\t\t\t\t\t\t<mat-tab label=\"Tab 5\">\r\n\t\t\t\t\t\t\t<ng-template mat-tab-label>\r\n\t\t\t\t\t\t\t\t<mat-icon>build</mat-icon>\r\n\t\t\t\t\t\t\t</ng-template>\r\n\t\t\t\t\t\t\tNo content\r\n\t\t\t\t\t\t</mat-tab>\r\n\t\t\t\t\t\t<mat-tab label=\"Tab 6\">\r\n\t\t\t\t\t\t\t<ng-template mat-tab-label>\r\n\t\t\t\t\t\t\t\t<mat-icon>thumb_down</mat-icon>\r\n\t\t\t\t\t\t\t</ng-template>\r\n\t\t\t\t\t\t\tNo content\r\n\t\t\t\t\t\t</mat-tab>\r\n\t\t\t\t\t</mat-tab-group>\r\n\t\t\t\t</mat-card-content>\r\n\t\t\t</mat-card>\r\n\r\n\t\t</div>\r\n\t</div>\r\n</kt-code-preview>\r\n","import { Component, OnInit, ChangeDetectionStrategy } from '@angular/core';\r\n\r\nconst basicTabs = {\r\n\t\tbeforeCodeTitle: 'Basic tabs',\r\n\t\thtmlCode: `\r\n<mat-tab-group>\r\n  <mat-tab label=\"Tab 1\">Content 1</mat-tab>\r\n  <mat-tab label=\"Tab 2\">Content 2</mat-tab>\r\n</mat-tab-group>\r\n`,\r\n\t\ttsCode: `\r\nimport {Component} from '@angular/core';\r\n\r\n/**\r\n* @title Basic tabs\r\n*/\r\n@Component({\r\n  selector: 'tabs-overview-example',\r\n  templateUrl: 'tabs-overview-example.html',\r\n  styleUrls: ['tabs-overview-example.css'],\r\n})\r\nexport class TabsOverviewExample {}\r\n`,\r\n\t\tcssCode: ``,\r\n\t\tviewCode: ``,\r\n\t\tisCodeVisible: false,\r\n\t\tisExampleExpanded: true\r\n\t};\r\n\r\nconst complex = {\r\n\t\tbeforeCodeTitle: 'Complex Example',\r\n\t\thtmlCode: `\r\n<mat-card>\r\n  <mat-card-content>\r\n    <h2 class=\"example-h2\">Tabs with text labels</h2>\r\n    <mat-tab-group class=\"demo-tab-group\">\r\n      <mat-tab label=\"Tab 1\">\r\n        <div class=\"demo-tab-content\">\r\n          Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla venenatis ante augue.\r\n          Phasellus volutpat neque ac dui mattis vulputate. Etiam consequat aliquam cursus.\r\n          In sodales pretium ultrices. Maecenas lectus est, sollicitudin consectetur felis nec,\r\n          feugiat ultricies mi. Aliquam erat volutpat. Nam placerat, tortor in ultrices porttitor,\r\n          orci enim rutrum enim, vel tempor sapien arcu a tellus.\r\n        </div>\r\n      </mat-tab>\r\n      <mat-tab label=\"Tab 2\">\r\n        <div class=\"demo-tab-content\">\r\n          Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla venenatis ante augue.\r\n          Phasellus volutpat neque ac dui mattis vulputate. Etiam consequat aliquam cursus.\r\n          In sodales pretium ultrices. Maecenas lectus est, sollicitudin consectetur felis nec,\r\n          feugiat ultricies mi. Aliquam erat volutpat. Nam placerat, tortor in ultrices porttitor,\r\n          orci enim rutrum enim, vel tempor sapien arcu a tellus.\r\n        </div>\r\n      </mat-tab>\r\n      <mat-tab label=\"Tab 3\" disabled>\r\n        No content\r\n      </mat-tab>\r\n      <mat-tab label=\"Tab 4\">\r\n        <div class=\"demo-tab-content\">\r\n          Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla venenatis ante augue.\r\n          Phasellus volutpat neque ac dui mattis vulputate. Etiam consequat aliquam cursus.\r\n          In sodales pretium ultrices. Maecenas lectus est, sollicitudin consectetur felis nec,\r\n          feugiat ultricies mi. Aliquam erat volutpat. Nam placerat, tortor in ultrices porttitor,\r\n          orci enim rutrum enim, vel tempor sapien arcu a tellus.\r\n          <br />\r\n          <br />\r\n          Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla venenatis ante augue.\r\n          Phasellus volutpat neque ac dui mattis vulputate. Etiam consequat aliquam cursus.\r\n          In sodales pretium ultrices. Maecenas lectus est, sollicitudin consectetur felis nec,\r\n          feugiat ultricies mi. Aliquam erat volutpat. Nam placerat, tortor in ultrices porttitor,\r\n          orci enim rutrum enim, vel tempor sapien arcu a tellus.\r\n        </div>\r\n      </mat-tab>\r\n      <mat-tab label=\"Tab 5\">\r\n        No content\r\n      </mat-tab>\r\n      <mat-tab label=\"Tab 6\">\r\n        No content\r\n      </mat-tab>\r\n    </mat-tab-group>\r\n  </mat-card-content>\r\n</mat-card>\r\n<mat-card>\r\n  <mat-card-content>\r\n    <h2 class=\"example-h2\">Tabs with icon labels</h2>\r\n    <mat-tab-group class=\"demo-tab-group\">\r\n      <mat-tab label=\"Tab 1\">\r\n        <ng-template mat-tab-label>\r\n          <mat-icon>security</mat-icon>\r\n        </ng-template>\r\n        <div class=\"demo-tab-content\">\r\n          Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla venenatis ante augue.\r\n          Phasellus volutpat neque ac dui mattis vulputate. Etiam consequat aliquam cursus.\r\n\t\t  In sodales pretium ultrices. Maecenas lectus est, sollicitudin consectetur felis nec,\r\n          feugiat ultricies mi. Aliquam erat volutpat. Nam placerat, tortor in ultrices porttitor,\r\n          orci enim rutrum enim, vel tempor sapien arcu a tellus.\r\n        </div>\r\n      </mat-tab>\r\n      <mat-tab label=\"Tab 2\">\r\n        <ng-template mat-tab-label>\r\n          <mat-icon>attach_file</mat-icon>\r\n        </ng-template>\r\n        <div class=\"demo-tab-content\">\r\n          Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla venenatis ante augue.\r\n          Phasellus volutpat neque ac dui mattis vulputate. Etiam consequat aliquam cursus.\r\n          In sodales pretium ultrices. Maecenas lectus est, sollicitudin consectetur felis nec,\r\n          feugiat ultricies mi. Aliquam erat volutpat. Nam placerat, tortor in ultrices porttitor,\r\n          orci enim rutrum enim, vel tempor sapien arcu a tellus.\r\n        </div>\r\n      </mat-tab>\r\n      <mat-tab label=\"Tab 3\" disabled>\r\n        <ng-template mat-tab-label>\r\n          <mat-icon>block</mat-icon>\r\n        </ng-template>\r\n        No content\r\n      </mat-tab>\r\n      <mat-tab label=\"Tab 4\">\r\n        <ng-template mat-tab-label>\r\n          <mat-icon>loop</mat-icon>\r\n        </ng-template>\r\n        <div class=\"demo-tab-content\">\r\n          Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla venenatis ante augue.\r\n          Phasellus volutpat neque ac dui mattis vulputate. Etiam consequat aliquam cursus.\r\n          In sodales pretium ultrices. Maecenas lectus est, sollicitudin consectetur felis nec,\r\n          feugiat ultricies mi. Aliquam erat volutpat. Nam placerat, tortor in ultrices porttitor,\r\n          orci enim rutrum enim, vel tempor sapien arcu a tellus.\r\n          <br />\r\n          <br />\r\n          Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla venenatis ante augue.\r\n          Phasellus volutpat neque ac dui mattis vulputate. Etiam consequat aliquam cursus.\r\n          In sodales pretium ultrices. Maecenas lectus est, sollicitudin consectetur felis nec,\r\n          feugiat ultricies mi. Aliquam erat volutpat. Nam placerat, tortor in ultrices porttitor,\r\n          orci enim rutrum enim, vel tempor sapien arcu a tellus.\r\n\t\t</div>\r\n      </mat-tab>\r\n      <mat-tab label=\"Tab 5\">\r\n        <ng-template mat-tab-label>\r\n          <mat-icon>build</mat-icon>\r\n        </ng-template>\r\n        No content\r\n      </mat-tab>\r\n\t  <mat-tab label=\"Tab 6\">\r\n        <ng-template mat-tab-label>\r\n          <mat-icon>thumb_down</mat-icon>\r\n        </ng-template>\r\n        No content\r\n\t  </mat-tab>\r\n\t</mat-tab-group>\r\n  </mat-card-content>\r\n</mat-card>\r\n`,\r\n\t\ttsCode: `\r\nimport {Component} from '@angular/core';\r\n\r\n/**\r\n* @title Complex Example\r\n*/\r\n@Component({\r\n  selector: 'tabs-template-label-example',\r\n  templateUrl: 'tabs-template-label-example.html',\r\n  styleUrls: ['./tabs-template-label-example.css']\r\n  })\r\nexport class TabsTemplateLabelExample {}\r\n`,\r\n\t\tcssCode: `\r\n.demo-tab-group {\r\n  border: 1px solid #e8e8e8;\r\n}\r\n.demo-tab-content {\r\n  padding: 16px;\r\n}\r\n\t\t`,\r\n\t\tviewCode: ``,\r\n\t\tisCodeVisible: false,\r\n\t\tisExampleExpanded: true\r\n\t};\r\n\r\n@Component({\r\n\tselector: 'kt-material-tabs',\r\n\ttemplateUrl: './material-tabs.component.html',\r\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\r\n\tstyles: [`\r\n\t.demo-tab-group {\r\n\t\tborder: 1px solid #e8e8e8;\r\n\t  }\r\n\t  .demo-tab-content {\r\n\t\tpadding: 16px;\r\n\t  }\r\n\t`]\r\n})\r\nexport class MaterialTabsComponent implements OnInit {\r\n\r\n\texampleBasicTabs;\r\n\texampleComplex;\r\n\tngOnInit() {\r\n\t\tthis.exampleBasicTabs = basicTabs;\r\n\t\tthis.exampleComplex = complex;\r\n\t}\r\n}\r\n","<kt-notice [svg]=\"'assets/media/svg/icons/Tools/Compass.svg'\">\r\n\tFor more info please check the components's official demos & documentation\r\n\t<a class=\"font-weight-bold\" href=\"https://material.angular.io/components/list/overview\" target=\"_blank\">demos & documentation</a>\r\n</kt-notice>\r\n\r\n<div class=\"row\">\r\n\t<div class=\"col-xl-6\">\r\n\t\t<kt-code-preview [viewItem]=\"exampleBasicStepper\">\r\n\t\t\t<div class=\"example-preview\">\r\n\t\t\t\t<span>\r\n\t\t\t\t\tAngular Material's stepper provides a wizard-like workflow by dividing content into logical steps.\r\n\t\t\t\t</span>\r\n\t\t\t\t<div class=\"separator separator-dashed my-6\"></div>\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<mat-vertical-stepper>\r\n\t\t\t\t\t\t<mat-step label=\"Step 1\">\r\n\t\t\t\t\t\t\tContent 1\r\n\t\t\t\t\t\t</mat-step>\r\n\t\t\t\t\t\t<mat-step label=\"Step 1\">\r\n\t\t\t\t\t\t\tContent 2\r\n\t\t\t\t\t\t</mat-step>\r\n\t\t\t\t\t</mat-vertical-stepper>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</kt-code-preview>\r\n\t\t<kt-code-preview [viewItem]=\"exampleHorizontalStepper\">\r\n\t\t\t<div class=\"example-preview\">\r\n\t\t\t\t<span>\r\n\t\t\t\t\tThe only difference is the orientation of stepper.\r\n\t\t\t\t\t<code>&lt;mat-horizontal-steppert&gt;</code> selector can be used to create a horizontal stepper\r\n\t\t\t\t</span>\r\n\t\t\t\t<div class=\"separator separator-dashed my-6\"></div>\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<mat-horizontal-stepper>\r\n\t\t\t\t\t\t<mat-step label=\"Step 1\">\r\n\t\t\t\t\t\t\tContent 1\r\n\t\t\t\t\t\t</mat-step>\r\n\t\t\t\t\t\t<mat-step label=\"Step 1\">\r\n\t\t\t\t\t\t\tContent 2\r\n\t\t\t\t\t\t</mat-step>\r\n\t\t\t\t\t</mat-horizontal-stepper>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</kt-code-preview>\r\n\t</div>\r\n\t<div class=\"col-xl-6\">\r\n\t\t<kt-code-preview [viewItem]=\"exampleStepperOverview\">\r\n\t\t\t<div class=\"example-preview\">\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<button mat-raised-button (click)=\"isLinear = true\" id=\"toggle-linear\">Enable linear mode</button>\r\n\r\n\t\t\t\t\t<mat-horizontal-stepper [linear]=\"isLinear\" #stepper=\"matHorizontalStepper\">\r\n\t\t\t\t\t\t<mat-step [stepControl]=\"firstFormGroup\">\r\n\t\t\t\t\t\t\t<form [formGroup]=\"firstFormGroup\">\r\n\t\t\t\t\t\t\t\t<ng-template matStepLabel>Fill out your name</ng-template>\r\n\t\t\t\t\t\t\t\t<mat-form-field>\r\n\t\t\t\t\t\t\t\t\t<input matInput placeholder=\"Last name, First name\" formControlName=\"firstCtrl\" required>\r\n\t\t\t\t\t\t\t\t</mat-form-field>\r\n\t\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t\t<button mat-button matStepperNext>Next</button>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</form>\r\n\t\t\t\t\t\t</mat-step>\r\n\t\t\t\t\t\t<mat-step [stepControl]=\"secondFormGroup\">\r\n\t\t\t\t\t\t\t<form [formGroup]=\"secondFormGroup\">\r\n\t\t\t\t\t\t\t\t<ng-template matStepLabel>Fill out your address</ng-template>\r\n\t\t\t\t\t\t\t\t<mat-form-field>\r\n\t\t\t\t\t\t\t\t\t<input matInput placeholder=\"Address\" formControlName=\"secondCtrl\" required>\r\n\t\t\t\t\t\t\t\t</mat-form-field>\r\n\t\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t\t<button mat-button matStepperPrevious>Back</button>\r\n\t\t\t\t\t\t\t\t\t<button mat-button matStepperNext>Next</button>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</form>\r\n\t\t\t\t\t\t</mat-step>\r\n\t\t\t\t\t\t<mat-step>\r\n\t\t\t\t\t\t\t<ng-template matStepLabel>Done</ng-template>\r\n\t\t\t\t\t\t\tYou are now done.\r\n\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t<button mat-button matStepperPrevious>Back</button>\r\n\t\t\t\t\t\t\t\t<button mat-button (click)=\"stepper.reset()\">Reset</button>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</mat-step>\r\n\t\t\t\t\t</mat-horizontal-stepper>\r\n\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</kt-code-preview>\r\n\t</div>\r\n</div>\r\n","import { Component, OnInit, ChangeDetectionStrategy } from '@angular/core';\r\nimport {FormBuilder, FormGroup, Validators} from '@angular/forms';\r\n\r\nconst basicStepper = {\r\n\t\tbeforeCodeTitle: 'Basic stepper',\r\n\t\thtmlCode: `\r\n<button mat-raised-button (click)=\"isLinear = true\" id=\"toggle-linear\">Enable linear mode</button>\r\n<mat-horizontal-stepper [linear]=\"isLinear\" #stepper=\"matHorizontalStepper\">\r\n  <mat-step [stepControl]=\"firstFormGroup\">\r\n    <form [formGroup]=\"firstFormGroup\">\r\n      <ng-template matStepLabel>Fill out your name</ng-template>\r\n      <mat-form-field>\r\n        <input matInput placeholder=\"Last name, First name\" formControlName=\"firstCtrl\" required>\r\n      </mat-form-field>\r\n      <div>\r\n        <button mat-button matStepperNext>Next</button>\r\n      </div>\r\n    </form>\r\n  </mat-step>\r\n  <mat-step [stepControl]=\"secondFormGroup\">\r\n    <form [formGroup]=\"secondFormGroup\">\r\n      <ng-template matStepLabel>Fill out your address</ng-template>\r\n      <mat-form-field>\r\n        <input matInput placeholder=\"Address\" formControlName=\"secondCtrl\" required>\r\n      </mat-form-field>\r\n      <div>\r\n        <button mat-button matStepperPrevious>Back</button>\r\n        <button mat-button matStepperNext>Next</button>\r\n      </div>\r\n    </form>\r\n  </mat-step>\r\n  <mat-step>\r\n    <ng-template matStepLabel>Done</ng-template>\r\n    You are now done.\r\n     <div>\r\n      <button mat-button matStepperPrevious>Back</button>\r\n      <button mat-button (click)=\"stepper.reset()\">Reset</button>\r\n    </div>\r\n  </mat-step>\r\n</mat-horizontal-stepper>\r\n`,\r\n\t\ttsCode: `\r\nimport {Component} from '@angular/core';\r\nimport {FormBuilder, FormGroup, Validators} from '@angular/forms';\r\n/**\r\n* @title Stepper overview\r\n*/\r\n@Component({\r\n  selector: 'stepper-overview-example',\r\n  templateUrl: 'stepper-overview-example.html',\r\n  styleUrls: ['stepper-overview-example.css']\r\n})\r\nexport class StepperOverviewExample {\r\n  isLinear = false;\r\n  firstFormGroup: FormGroup;\r\n  secondFormGroup: FormGroup;\r\n  constructor(private _formBuilder: FormBuilder) { }\r\n  ngOnInit() {\r\n    this.firstFormGroup = this._formBuilder.group({\r\n      firstCtrl: ['', Validators.required]\r\n    });\r\n    this.secondFormGroup = this._formBuilder.group({\r\n      secondCtrl: ['', Validators.required]\r\n    });\r\n  }\r\n}\r\n`,\r\n\t\tcssCode: ``,\r\n\t\tviewCode: ``,\r\n\t\tisCodeVisible: false,\r\n\t\tisExampleExpanded: true\r\n\t};\r\n\r\nconst horizontalStepper = {\r\n\t\tbeforeCodeTitle: 'Horizontal stepper',\r\n\t\thtmlCode: `\r\n<mat-horizontal-stepper>\r\n  <mat-step label=\"Step 1\">\r\n    Content 1\r\n  </mat-step>\r\n  <mat-step label=\"Step 1\">\r\n    Content 2\r\n  </mat-step>\r\n</mat-horizontal-stepper>\r\n`,\r\n\t\ttsCode: `\r\nimport {Component} from '@angular/core';\\n\r\n/**\r\n* @title Horizontal stepper\r\n*/\r\n@Component({\r\n  selector: 'stepper-horizontal-example',\r\n  styleUrls: ['stepper-horizontal-example.css'],\r\n  templateUrl: 'stepper-horizontal-example.html',\r\n})\r\nexport class StepperHorizontalExample {}\r\n`,\r\n\t\tcssCode: ``,\r\n\t\tviewCode: ``,\r\n\t\tisCodeVisible: false,\r\n\t\tisExampleExpanded: true\r\n\t};\r\n\r\n\r\nconst stepperOverview =\t{\r\n\t\tbeforeCodeTitle: 'Stepper overview',\r\n\t\thtmlCode: `\r\n<mat-list>\r\n  <h3 mat-subheader>Folders</h3>\r\n  <mat-list-item *ngFor=\"let folder of folders\">\r\n    <mat-icon mat-list-icon>folder</mat-icon>\r\n\t<h4 mat-line>{{folder.name}}</h4>\r\n    <p mat-line> {{folder.updated | date}} </p>\r\n  </mat-list-item>\r\n  <mat-divider></mat-divider>\r\n  <h3 mat-subheader>Notes</h3>\r\n  <mat-list-item *ngFor=\"let note of notes\">\r\n    <mat-icon mat-list-icon>note</mat-icon>\r\n    <h4 mat-line>{{note.name}}</h4>\r\n    <p mat-line> {{note.updated | date}} </p>\r\n  </mat-list-item>\r\n</mat-list>\r\n`,\r\n\t\ttsCode: `\r\nimport {Component} from '@angular/core';\\n\r\n/**\r\n* @title List with sections\r\n*/\r\n@Component({\r\n  selector: 'list-sections-example',\r\n  styleUrls: ['list-sections-example.css'],\r\ntemplateUrl: 'list-sections-example.html',\r\n})\r\nexport class ListSectionsExample {\r\n  folders = [\r\n  {\r\n    name: 'Photos',\r\n    updated: new Date('1/1/16'),\r\n  },\r\n  {\r\n    name: 'Recipes',\r\n    updated: new Date('1/17/16'),\r\n  },\r\n  {\r\n    name: 'Work',\r\n    updated: new Date('1/28/16'),\r\n  }\r\n  ];\r\n  notes = [\r\n  {\r\n    name: 'Vacation Itinerary',\r\n    updated: new Date('2/20/16'),\r\n  },\r\n  {\r\n    name: 'Kitchen Remodel',\r\n    updated: new Date('1/18/16'),\r\n  }\r\n  ];\r\n}\r\n`,\r\n\t\tcssCode: `\r\n.mat-list-icon {\r\n  color: rgba(0, 0, 0, 0.54);\r\n}\r\n`,\r\n\t\tviewCode: ``,\r\n\t\tisCodeVisible: false,\r\n\t\tisExampleExpanded: true\r\n\t};\r\n@Component({\r\n\tselector: 'kt-stepper',\r\n\ttemplateUrl: './stepper.component.html',\r\n\tchangeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class StepperComponent implements OnInit {\r\n\texampleBasicStepper;\r\n\texampleHorizontalStepper;\r\n\texampleStepperOverview;\r\n\r\n\tisLinear = false;\r\n\tfirstFormGroup: FormGroup;\r\n\tsecondFormGroup: FormGroup;\r\n\r\n\tconstructor(private _formBuilder: FormBuilder) { }\r\n\r\n\tngOnInit() {\r\n\t\tthis.exampleBasicStepper = basicStepper;\r\n\t\tthis.exampleHorizontalStepper = horizontalStepper;\r\n\t\tthis.exampleStepperOverview = stepperOverview;\r\n\r\n\t\tthis.firstFormGroup = this._formBuilder.group({\r\n\t\t\tfirstCtrl: ['', Validators.required]\r\n\t\t  });\r\n\t\tthis.secondFormGroup = this._formBuilder.group({\r\n\t\t\tsecondCtrl: ['', Validators.required]\r\n\t\t  });\r\n\t}\r\n}\r\n\r\n","<kt-notice [svg]=\"'assets/media/svg/icons/Tools/Compass.svg'\">\r\n\tFor more info please check the components's official demos & documentation\r\n\t<a class=\"font-weight-bold\" href=\"https://material.angular.io/components/tree/overview\" target=\"_blank\">demos & documentation</a>\r\n</kt-notice>\r\n\r\n<div class=\"row\">\r\n\r\n\t<div class=\"col-xl-6\">\r\n\t\t<kt-code-preview [viewItem]=\"exampleTreeWithDynamicData\">\r\n\t\t\t<div class=\"example-preview\">\r\n\t\t\t\t<span>\r\n\t\t\t\t\tThe\r\n\t\t\t\t\t<code>mat-tree</code> provides a Material Design styled tree that can be used to display hierarchy data.\r\n\t\t\t\t</span>\r\n\t\t\t\t<div class=\"separator separator-dashed my-6\"></div>\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<mat-tree [dataSource]=\"dataSource\" [treeControl]=\"treeControl\">\r\n\t\t\t\t\t\t<mat-tree-node *matTreeNodeDef=\"let node\" matTreeNodePadding>\r\n\t\t\t\t\t\t\t<button mat-icon-button disabled></button>\r\n\t\t\t\t\t\t\t{{node.item}}\r\n\t\t\t\t\t\t</mat-tree-node>\r\n\t\t\t\t\t\t<mat-tree-node *matTreeNodeDef=\"let node; when: hasChild\" matTreeNodePadding>\r\n\t\t\t\t\t\t\t<button mat-icon-button [attr.aria-label]=\"'toggle ' + node.filename\" matTreeNodeToggle>\r\n\t\t\t\t\t\t\t\t<mat-icon class=\"mat-icon-rtl-mirror\">\r\n\t\t\t\t\t\t\t\t\t{{treeControl.isExpanded(node) ? 'expand_more' : 'chevron_right'}}\r\n\t\t\t\t\t\t\t\t</mat-icon>\r\n\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t\t{{node.item}}\r\n\t\t\t\t\t\t\t<mat-progress-bar *ngIf=\"node.isLoading\" mode=\"indeterminate\" class=\"example-tree-progress-bar\"></mat-progress-bar>\r\n\t\t\t\t\t\t</mat-tree-node>\r\n\t\t\t\t\t</mat-tree>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</kt-code-preview>\r\n\r\n\t\t<kt-code-preview [viewItem]=\"exampleTreeWithFlatNodes\">\r\n\t\t\t<div class=\"example-preview\">\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<mat-tree [dataSource]=\"dataSource2\" [treeControl]=\"treeControl2\">\r\n\t\t\t\t\t\t<mat-tree-node *matTreeNodeDef=\"let node\" matTreeNodeToggle matTreeNodePadding>\r\n\t\t\t\t\t\t\t<button mat-icon-button disabled></button>\r\n\t\t\t\t\t\t\t{{node.filename}} : {{node.type}}\r\n\t\t\t\t\t\t</mat-tree-node>\r\n\r\n\t\t\t\t\t\t<mat-tree-node *matTreeNodeDef=\"let node;when: hasChild2\" matTreeNodePadding>\r\n\t\t\t\t\t\t\t<button mat-icon-button matTreeNodeToggle [attr.aria-label]=\"'toggle ' + node.filename\">\r\n\t\t\t\t\t\t\t\t<mat-icon class=\"mat-icon-rtl-mirror\">\r\n\t\t\t\t\t\t\t\t\t{{treeControl2.isExpanded(node) ? 'expand_more' : 'chevron_right'}}\r\n\t\t\t\t\t\t\t\t</mat-icon>\r\n\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t\t{{node.filename}} : {{node.type}}\r\n\t\t\t\t\t\t</mat-tree-node>\r\n\t\t\t\t\t</mat-tree>\r\n\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</kt-code-preview>\r\n\r\n\t</div>\r\n\t<div class=\"col-xl-6\">\r\n\t\t<kt-code-preview [viewItem]=\"exampleTreeWithCheckboxes\">\r\n\t\t\t<div class=\"example-preview\">\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<mat-tree [dataSource]=\"dataSource3\" [treeControl]=\"treeControl3\">\r\n\t\t\t\t\t\t<mat-tree-node *matTreeNodeDef=\"let node\" matTreeNodeToggle matTreeNodePadding>\r\n\t\t\t\t\t\t\t<button mat-icon-button disabled></button>\r\n\t\t\t\t\t\t\t<mat-checkbox class=\"checklist-leaf-node\" [checked]=\"checklistSelection3.isSelected(node)\" (change)=\"checklistSelection3.toggle(node);\">{{node.item}}</mat-checkbox>\r\n\t\t\t\t\t\t</mat-tree-node>\r\n\r\n\t\t\t\t\t\t<mat-tree-node *matTreeNodeDef=\"let node; when: hasNoContent3\" matTreeNodePadding>\r\n\t\t\t\t\t\t\t<button mat-icon-button disabled></button>\r\n\t\t\t\t\t\t\t<mat-form-field>\r\n\t\t\t\t\t\t\t\t<input matInput #itemValue placeholder=\"New item...\">\r\n\t\t\t\t\t\t\t</mat-form-field>\r\n\t\t\t\t\t\t\t<button mat-button (click)=\"saveNode3(node, itemValue.value)\">Save</button>\r\n\t\t\t\t\t\t</mat-tree-node>\r\n\r\n\t\t\t\t\t\t<mat-tree-node *matTreeNodeDef=\"let node; when: hasChild3\" matTreeNodePadding>\r\n\t\t\t\t\t\t\t<button mat-icon-button matTreeNodeToggle [attr.aria-label]=\"'toggle ' + node.filename\">\r\n\t\t\t\t\t\t\t\t<mat-icon class=\"mat-icon-rtl-mirror\">\r\n\t\t\t\t\t\t\t\t\t{{treeControl3.isExpanded(node) ? 'expand_more' : 'chevron_right'}}\r\n\t\t\t\t\t\t\t\t</mat-icon>\r\n\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t\t<mat-checkbox [checked]=\"descendantsAllSelected3(node)\" [indeterminate]=\"descendantsPartiallySelected3(node)\" (change)=\"todoItemSelectionToggle3(node)\">{{node.item}}</mat-checkbox>\r\n\t\t\t\t\t\t\t<button mat-icon-button (click)=\"addNewItem3(node)\">\r\n\t\t\t\t\t\t\t\t<mat-icon>add</mat-icon>\r\n\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t</mat-tree-node>\r\n\t\t\t\t\t</mat-tree>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</kt-code-preview>\r\n\r\n\t\t<kt-code-preview [viewItem]=\"exampleTreeWithPartiallyLoadedData\">\r\n\t\t\t<div class=\"example-preview\">\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<mat-tree [dataSource]=\"dataSource4\" [treeControl]=\"treeControl4\">\r\n\t\t\t\t\t\t<!-- Leaf node -->\r\n\t\t\t\t\t\t<mat-tree-node *matTreeNodeDef=\"let node\" matTreeNodePadding>\r\n\t\t\t\t\t\t\t<button mat-icon-button disabled></button>\r\n\t\t\t\t\t\t\t{{node.item}}\r\n\t\t\t\t\t\t</mat-tree-node>\r\n\r\n\t\t\t\t\t\t<!-- expandable node -->\r\n\t\t\t\t\t\t<mat-tree-node *matTreeNodeDef=\"let node; when: hasChild4\" matTreeNodePadding>\r\n\t\t\t\t\t\t\t<button mat-icon-button [attr.aria-label]=\"'toggle ' + node.filename\" (click)=\"loadChildren4(node)\" matTreeNodeToggle>\r\n\t\t\t\t\t\t\t\t<mat-icon class=\"mat-icon-rtl-mirror\">\r\n\t\t\t\t\t\t\t\t\t{{treeControl4.isExpanded(node) ? 'expand_more' : 'chevron_right'}}\r\n\t\t\t\t\t\t\t\t</mat-icon>\r\n\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t\t{{node.item}}\r\n\t\t\t\t\t\t</mat-tree-node>\r\n\r\n\t\t\t\t\t\t<mat-tree-node *matTreeNodeDef=\"let node; when: isLoadMore4\">\r\n\t\t\t\t\t\t\t<button mat-button (click)=\"loadMore4(node.loadMoreParentItem)\">\r\n\t\t\t\t\t\t\t\tLoad more...\r\n\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t</mat-tree-node>\r\n\t\t\t\t\t</mat-tree>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</kt-code-preview>\r\n\t</div>\r\n</div>\r\n","import { CollectionViewer, SelectionChange, SelectionModel } from '@angular/cdk/collections';\r\nimport { FlatTreeControl } from '@angular/cdk/tree';\r\nimport {MatTreeFlatDataSource, MatTreeFlattener } from '@angular/material/tree';\r\nimport { Component, Injectable, ChangeDetectionStrategy, OnInit, ChangeDetectorRef } from '@angular/core';\r\nimport {BehaviorSubject, merge, Observable,  of as observableOf} from 'rxjs';\r\nimport {map} from 'rxjs/operators';\r\n\r\nconst treeWithDynamicData = {\r\n\t\tbeforeCodeTitle: 'Tree with dynamic data',\r\n\t\thtmlCode: `\r\n<mat-tree [dataSource]=\"dataSource\" [treeControl]=\"treeControl\">\r\n  <mat-tree-node *matTreeNodeDef=\"let node\" matTreeNodePadding>\r\n    <button mat-icon-button disabled></button>\r\n    {{node.item}}\r\n  </mat-tree-node>\r\n  <mat-tree-node *matTreeNodeDef=\"let node; when: hasChild\" matTreeNodePadding>\r\n    <button mat-icon-button\r\n      [attr.aria-label]=\"'toggle ' + node.filename\" matTreeNodeToggle>\r\n      <mat-icon class=\"mat-icon-rtl-mirror\">\r\n        {{treeControl.isExpanded(node) ? 'expand_more' : 'chevron_right'}}\r\n      </mat-icon>\r\n    </button>\r\n    {{node.item}}\r\n    <mat-progress-bar *ngIf=\"node.isLoading\"\r\n      mode=\"indeterminate\"\r\n      class=\"example-tree-progress-bar\"></mat-progress-bar>\r\n  </mat-tree-node>\r\n</mat-tree>`,\r\n\t\ttsCode: `\r\nimport {CollectionViewer, SelectionChange} from '@angular/cdk/collections';\r\nimport {FlatTreeControl} from '@angular/cdk/tree';\r\nimport {Component, Injectable} from '@angular/core';\r\nimport {BehaviorSubject, merge, Observable} from 'rxjs';\r\nimport {map} from 'rxjs/operators';\r\n\r\n/** Flat node with expandable and level information */\r\nexport class DynamicFlatNode {\r\n  constructor(public item: string, public level = 1, public expandable = false,\r\n    public isLoading = false) {}\r\n  }\\n\r\n  /**\r\n  * Database for dynamic data. When expanding a node in the tree, the data source will need to fetch\r\n  * the descendants data from the database.\r\n  */\r\n  export class DynamicDatabase {\r\n    dataMap = new Map<string, string[]>([\r\n      ['Vegetables', ['Tomato', 'Potato', 'Onion']],\r\n      ['Apple', ['Fuji', 'Macintosh']],\r\n      ['Onion', ['Yellow', 'White', 'Purple']]\r\n    ]);\r\n\r\n    rootLevelNodes: string[] = ['Fruits', 'Vegetables'];\r\n    /** Initial data from database */\r\n    initialData(): DynamicFlatNode[] {\r\n    return this.rootLevelNodes.map(name => new DynamicFlatNode(name, 0, true));\r\n  }\r\n\r\n  getChildren(node: string): string[] | undefined {\r\n    return this.dataMap.get(node);\r\n  }\r\n\r\n  isExpandable(node: string): boolean {\r\n    return this.dataMap.has(node);\r\n  }\r\n}\\n\r\n/**\r\n* File database, it can build a tree structured Json object from string.\r\n* Each node in Json object represents a file or a directory. For a file, it has filename and type.\r\n* For a directory, it has filename and children (a list of files or directories).\r\n* The input will be a json object string, and the output is a list of \\`FileNode\\` with nested\r\n* structure.\r\n*/\r\n@Injectable()\r\nexport class DynamicDataSource {\r\n\r\n  dataChange = new BehaviorSubject<DynamicFlatNode[]>([]);\r\n\r\n  get data(): DynamicFlatNode[] { return this.dataChange.value; }\r\n  set data(value: DynamicFlatNode[]) {\r\n    this.treeControl.dataNodes = value;\r\n    this.dataChange.next(value);\r\n  }\r\n\r\n  constructor(private treeControl: FlatTreeControl<DynamicFlatNode>,\r\n    private database: DynamicDatabase) {}\r\n\r\n  connect(collectionViewer: CollectionViewer): Observable<DynamicFlatNode[]> {\r\n    this.treeControl.expansionModel.onChange!.subscribe(change => {\r\n    if ((change as SelectionChange<DynamicFlatNode>).added ||\r\n      (change as SelectionChange<DynamicFlatNode>).removed) {\r\n        this.handleTreeControl(change as SelectionChange<DynamicFlatNode>);\r\n      }\r\n    });\r\n\r\n    return merge(collectionViewer.viewChange, this.dataChange).pipe(map(() => this.data));\r\n  }\\n\r\n\r\n  /** Handle expand/collapse behaviors */\r\n  handleTreeControl(change: SelectionChange<DynamicFlatNode>) {\r\n    if (change.added) {\r\n      change.added.forEach(node => this.toggleNode(node, true));\r\n    }\r\n    if (change.removed) {\r\n      change.removed.slice().reverse().forEach(node => this.toggleNode(node, false));\r\n    }\r\n  }\\n\r\n\r\n  /**\r\n  * Toggle the node, remove from display list\r\n  */\r\n  toggleNode(node: DynamicFlatNode, expand: boolean) {\r\n    const children = this.database.getChildren(node.item);\r\n    const index = this.data.indexOf(node);\r\n    if (!children || index < 0) { // If no children, or cannot find the node, no op\r\n      return;\r\n    }\\n\r\n\r\n    node.isLoading = true;\r\n\r\n    setTimeout(() => {\r\n      if (expand) {\r\n        const nodes = children.map(name =>\r\n          new DynamicFlatNode(name, node.level + 1, this.database.isExpandable(name)));\r\n          this.data.splice(index + 1, 0, ...nodes);\r\n      } else {\r\n        let count = 0;\r\n        for (let i = index + 1; i < this.data.length\r\n          && this.data[i].level > node.level; i++, count++) {}\r\n          this.data.splice(index + 1, count);\r\n        }\\n\r\n\r\n        // notify the change\r\n        this.dataChange.next(this.data);\r\n        node.isLoading = false;\r\n    }, 1000);\r\n  }\r\n}\\n\r\n\r\n/**\r\n* @title Tree with dynamic data\r\n*/\r\n@Component({\r\n  selector: 'tree-dynamic-example',\r\n  templateUrl: 'tree-dynamic-example.html',\r\n  styleUrls: ['tree-dynamic-example.css'],\r\n  providers: [DynamicDatabase]\r\n})\r\nexport class TreeDynamicExample {\r\n  constructor(database: DynamicDatabase) {\r\n    this.treeControl = new FlatTreeControl<DynamicFlatNode>(this.getLevel, this.isExpandable);\r\n    this.dataSource = new DynamicDataSource(this.treeControl, database);\r\n\r\n    this.dataSource.data = database.initialData();\r\n  }\r\n\r\n  treeControl: FlatTreeControl<DynamicFlatNode>;\r\n\r\n  dataSource: DynamicDataSource;\r\n\r\n  getLevel = (node: DynamicFlatNode) => node.level;\r\n\r\n  isExpandable = (node: DynamicFlatNode) => node.expandable;\r\n\r\n  hasChild = (_: number, _nodeData: DynamicFlatNode) => _nodeData.expandable;\r\n}\r\n`,\r\n\t\tcssCode: ``,\r\n\t\tviewCode: ``,\r\n\t\tisCodeVisible: false,\r\n\t\tisExampleExpanded: true\r\n\t};\r\n\r\nconst treeWithFlatNodes = {\r\n\t\tbeforeCodeTitle: 'Tree with flat nodes',\r\n\t\thtmlCode: `\r\n<mat-tree [dataSource]=\"dataSource\" [treeControl]=\"treeControl\">\r\n  <mat-tree-node *matTreeNodeDef=\"let node\" matTreeNodeToggle matTreeNodePadding>\r\n    <button mat-icon-button disabled></button>\r\n    {{node.filename}} : {{node.type}}\r\n  </mat-tree-node>\r\n\r\n  <mat-tree-node *matTreeNodeDef=\"let node;when: hasChild\" matTreeNodePadding>\r\n    <button mat-icon-button matTreeNodeToggle\r\n      [attr.aria-label]=\"'toggle ' + node.filename\">\r\n      <mat-icon class=\"mat-icon-rtl-mirror\">\r\n        {{treeControl.isExpanded(node) ? 'expand_more' : 'chevron_right'}}\r\n      </mat-icon>\r\n    </button>\r\n    {{node.filename}} : {{node.type}}\r\n  </mat-tree-node>\r\n</mat-tree>`,\r\n\t\ttsCode: `\r\nimport {FlatTreeControl} from '@angular/cdk/tree';\r\nimport {Component, Injectable} from '@angular/core';\r\nimport {MatTreeFlatDataSource, MatTreeFlattener} from '@angular/material/tree';\r\nimport {BehaviorSubject, Observable, of as observableOf} from 'rxjs';\r\n\r\n/**\r\n* File node data with nested structure.\r\n* Each node has a filename, and a type or a list of children.\r\n*/\r\nexport class FileNode {\r\n  children: FileNode[];\r\n  filename: string;\r\n  type: any;\r\n}\r\n\r\n/** Flat node with expandable and level information */\r\n  export class FileFlatNode {\r\n  constructor(\r\n  public expandable: boolean, public filename: string, public level: number, public type: any) {}\\n\r\n}\r\n\r\n/**\r\n* The file structure tree data in string. The data could be parsed into a Json object\r\n*/\r\nconst TREE_DATA = JSON.stringify({\r\n  Applications: {\r\n    Calendar: 'app',\r\n    Chrome: 'app',\r\n    Webstorm: 'app'\r\n  },\r\n  Documents: {\r\n    angular: {\r\n      src: {\r\n        compiler: 'ts',\r\n        core: 'ts'\r\n      }\r\n    },\r\n    material2: {\r\n      src: {\r\n        button: 'ts',\r\n        checkbox: 'ts',\r\n        input: 'ts'\r\n      }\r\n    }\r\n  },\r\n  Downloads: {\r\n    October: 'pdf',\r\n    November: 'pdf',\r\n    Tutorial: 'html'\r\n  },\r\n  Pictures: {\r\n    'Photo Booth Library': {\r\n      Contents: 'dir',\r\n      Pictures: 'dir'\r\n    },\r\n    Sun: 'png',\r\n    Woods: 'jpg'\r\n   }\r\n});\r\n\r\n/**\r\n* File database, it can build a tree structured Json object from string.\r\n* Each node in Json object represents a file or a directory. For a file, it has filename and type.\r\n* For a directory, it has filename and children (a list of files or directories).\r\n* The input will be a json object string, and the output is a list of \\`FileNode\\` with nested\r\n* structure.\r\n*/\r\n@Injectable()\r\n  export class FileDatabase {\r\n  dataChange = new BehaviorSubject<FileNode[]>([]);\r\n\r\n  get data(): FileNode[] { return this.dataChange.value; }\r\n\r\n  constructor() {\r\n    this.initialize();\r\n  }\r\n\r\n  initialize() {\r\n    // Parse the string to json object.\r\n    const dataObject = JSON.parse(TREE_DATA);\r\n\r\n    // Build the tree nodes from Json object. The result is a list of \\`FileNode\\` with nested\r\n    //     file node as children.\r\n    const data = this.buildFileTree(dataObject, 0);\r\n\r\n    // Notify the change.\r\n    this.dataChange.next(data);\r\n  }\r\n\r\n  /**\r\n  * Build the file structure tree. The \\`value\\` is the Json object, or a sub-tree of a Json object.\r\n  * The return value is the list of \\`FileNode\\`.\r\n  */\r\n  buildFileTree(obj: object, level: number): FileNode[] {\r\n    return Object.keys(obj).reduce<FileNode[]>((accumulator, key) => {\r\n    const value = obj[key];\r\n    const node = new FileNode();\r\n    node.filename = key;\r\n\r\n     if (value != null) {\r\n       if (typeof value === 'object') {\r\n         node.children = this.buildFileTree(value, level + 1);\r\n       } else {\r\n         node.type = value;\r\n       }\r\n      }\r\n\r\n      return accumulator.concat(node);\r\n    }, []);\r\n  }\r\n}\\n\r\n\r\n/**\r\n* @title Tree with flat nodes\r\n*/\r\n@Component({\r\n  selector: 'tree-flat-overview-example',\r\n  templateUrl: 'tree-flat-overview-example.html',\r\n  styleUrls: ['tree-flat-overview-example.css'],\r\n  providers: [FileDatabase]\r\n})\r\nexport class TreeFlatOverviewExample {\r\n  treeControl: FlatTreeControl<FileFlatNode>;\r\n  treeFlattener: MatTreeFlattener<FileNode, FileFlatNode>;\r\n  dataSource: MatTreeFlatDataSource<FileNode, FileFlatNode>;\r\n\r\n  constructor(database: FileDatabase) {\r\n    this.treeFlattener = new MatTreeFlattener(this.transformer, this._getLevel,\r\n    this._isExpandable, this._getChildren);\r\n    this.treeControl = new FlatTreeControl<FileFlatNode>(this._getLevel, this._isExpandable);\r\n    this.dataSource = new MatTreeFlatDataSource(this.treeControl, this.treeFlattener);\r\n\r\n    database.dataChange.subscribe(data => this.dataSource.data = data);\r\n  }\r\n\r\n  transformer = (node: FileNode, level: number) => {\r\n    return new FileFlatNode(!!node.children, node.filename, level, node.type);\r\n  }\r\n\r\n  private _getLevel = (node: FileFlatNode) => node.level;\r\n  private _isExpandable = (node: FileFlatNode) => node.expandable;\r\n  private _getChildren = (node: FileNode): Observable<FileNode[]> => observableOf(node.children);\r\n  hasChild = (_: number, _nodeData: FileFlatNode) => _nodeData.expandable;\r\n}\r\n`,\r\n\t\tcssCode: ``,\r\n\t\tviewCode: ``,\r\n\t\tisCodeVisible: false,\r\n\t\tisExampleExpanded: true\r\n\t};\r\n\r\nconst treeWithCheckboxes = {\r\n\tbeforeCodeTitle: 'Tree with checkboxes',\r\n\thtmlCode: `\r\n<mat-tree [dataSource]=\"dataSource\" [treeControl]=\"treeControl\">\r\n  <mat-tree-node *matTreeNodeDef=\"let node\" matTreeNodeToggle matTreeNodePadding>\r\n    <button mat-icon-button disabled></button>\r\n    <mat-checkbox class=\"checklist-leaf-node\"\r\n      [checked]=\"checklistSelection.isSelected(node)\"\r\n      (change)=\"checklistSelection.toggle(node);\">{{node.item}}</mat-checkbox>\r\n  </mat-tree-node>\r\n\r\n  <mat-tree-node *matTreeNodeDef=\"let node; when: hasNoContent\" matTreeNodePadding>\r\n     <button mat-icon-button disabled></button>\r\n     <mat-form-field>\r\n       <input matInput #itemValue placeholder=\"New item...\">\r\n     </mat-form-field>\r\n     <button mat-button (click)=\"saveNode(node, itemValue.value)\">Save</button>\r\n  </mat-tree-node>\r\n\r\n  <mat-tree-node *matTreeNodeDef=\"let node; when: hasChild\" matTreeNodePadding>\r\n    <button mat-icon-button matTreeNodeToggle\r\n      [attr.aria-label]=\"'toggle ' + node.filename\">\r\n      <mat-icon class=\"mat-icon-rtl-mirror\">\r\n        {{treeControl.isExpanded(node) ? 'expand_more' : 'chevron_right'}}\r\n      </mat-icon>\r\n    </button>\r\n    <mat-checkbox [checked]=\"descendantsAllSelected(node)\"\r\n      [indeterminate]=\"descendantsPartiallySelected(node)\"\r\n      (change)=\"todoItemSelectionToggle(node)\">{{node.item}}</mat-checkbox>\r\n    <button mat-icon-button (click)=\"addNewItem(node)\"><mat-icon>add</mat-icon></button>\r\n  </mat-tree-node>\r\n</mat-tree>`,\r\n\ttsCode: `\r\nimport {SelectionModel} from '@angular/cdk/collections';\r\nimport {FlatTreeControl} from '@angular/cdk/tree';\r\nimport {Component, Injectable} from '@angular/core';\r\nimport {MatTreeFlatDataSource, MatTreeFlattener} from '@angular/material/tree';\r\nimport {BehaviorSubject} from 'rxjs';\\n\r\n/**\r\n* Node for to-do item\r\n*/\r\nexport class TodoItemNode {\r\n  children: TodoItemNode[];\r\n  item: string;\r\n}\r\n\r\n/** Flat to-do item node with expandable and level information */\r\nexport class TodoItemFlatNode {\r\n  item: string;\r\n  level: number;\r\n  expandable: boolean;\r\n}\r\n\r\n/**\r\n* The Json object for to-do list data.\r\n*/\r\nconst TREE_DATA = {\r\n  Groceries: {\r\n    'Almond Meal flour': null,\r\n    'Organic eggs': null,\r\n    'Protein Powder': null,\r\n    Fruits: {\r\n      Apple: null,\r\n      Berries: ['Blueberry', 'Raspberry'],\r\n      Orange: null\r\n    }\r\n  },\r\n  Reminders: [\r\n    'Cook dinner',\r\n    'Read the Material Design spec',\r\n    'Upgrade Application to Angular'\r\n  ]\r\n};\r\n\r\n/**\r\n* Checklist database, it can build a tree structured Json object.\r\n* Each node in Json object represents a to-do item or a category.\r\n* If a node is a category, it has children items and new items can be added under the category.\r\n*/\r\n@Injectable()\r\nexport class ChecklistDatabase {\r\n  dataChange = new BehaviorSubject<TodoItemNode[]>([]);\r\n\r\n  get data(): TodoItemNode[] { return this.dataChange.value; }\r\n\r\n  constructor() {\r\n    this.initialize();\r\n  }\r\n\r\n  initialize() {\r\n    // Build the tree nodes from Json object. The result is a list of \\`TodoItemNode\\` with nested\r\n    //     file node as children.\r\n    const data = this.buildFileTree(TREE_DATA, 0);\r\n\r\n    // Notify the change.\r\n    this.dataChange.next(data);\r\n  }\r\n\r\n  /**\r\n  * Build the file structure tree. The \\`value\\` is the Json object, or a sub-tree of a Json object.\r\n  * The return value is the list of \\`TodoItemNode\\`.\r\n  */\r\n  buildFileTree(obj: object, level: number): TodoItemNode[] {\r\n    return Object.keys(obj).reduce<TodoItemNode[]>((accumulator, key) => {\r\n      const value = obj[key];\r\n      const node = new TodoItemNode();\r\n      node.item = key;\r\n\r\n      if (value != null) {\r\n        if (typeof value === 'object') {\r\n          node.children = this.buildFileTree(value, level + 1);\r\n        } else {\r\n          node.item = value;\r\n        }\r\n      }\r\n\r\n      return accumulator.concat(node);\r\n    }, []);\r\n  }\r\n\r\n/** Add an item to to-do list */\r\n  insertItem(parent: TodoItemNode, name: string) {\r\n    if (parent.children) {\r\n      parent.children.push({item: name} as TodoItemNode);\r\n      this.dataChange.next(this.data);\r\n    }\r\n  }\r\n\r\n  updateItem(node: TodoItemNode, name: string) {\r\n    node.item = name;\r\n\tthis.dataChange.next(this.data);\r\n  }\r\n}\r\n\r\n/**\r\n* @title Tree with checkboxes\r\n*/\r\n@Component({\r\n  selector: 'tree-checklist-example',\r\n  templateUrl: 'tree-checklist-example.html',\r\n  styleUrls: ['tree-checklist-example.css'],\r\n  providers: [ChecklistDatabase]\r\n)\r\nexport class TreeChecklistExample {\r\n  /** Map from flat node to nested node. This helps us finding the nested node to be modified */\r\n  flatNodeMap = new Map<TodoItemFlatNode, TodoItemNode>();\r\n\r\n  /** Map from nested node to flattened node. This helps us to keep the same object for selection */\r\n  nestedNodeMap = new Map<TodoItemNode, TodoItemFlatNode>();\r\n\r\n  /** A selected parent node to be inserted */\r\n  selectedParent: TodoItemFlatNode | null = null;\r\n\r\n  /** The new item's name */\r\n  newItemName = '';\r\n\r\n  treeControl: FlatTreeControl<TodoItemFlatNode>;\r\n\r\n  treeFlattener: MatTreeFlattener<TodoItemNode, TodoItemFlatNode>;\r\n\r\n  dataSource: MatTreeFlatDataSource<TodoItemNode, TodoItemFlatNode>;\r\n\r\n  /** The selection for checklist */\r\n  checklistSelection = new SelectionModel<TodoItemFlatNode>(true /* multiple */);\r\n\r\n  constructor(private database: ChecklistDatabase) {\r\n    this.treeFlattener = new MatTreeFlattener(this.transformer, this.getLevel,\r\n    this.isExpandable, this.getChildren);\r\n    this.treeControl = new FlatTreeControl<TodoItemFlatNode>(this.getLevel, this.isExpandable);\r\n    this.dataSource = new MatTreeFlatDataSource(this.treeControl, this.treeFlattener);\r\n\r\n    database.dataChange.subscribe(data => {\r\n      this.dataSource.data = data;\r\n    });\r\n  }\r\n\r\n  getLevel = (node: TodoItemFlatNode) => node.level;\r\n\r\n  isExpandable = (node: TodoItemFlatNode) => node.expandable;\r\n\r\n  getChildren = (node: TodoItemNode): TodoItemNode[] => node.children;\r\n\r\n  hasChild = (_: number, _nodeData: TodoItemFlatNode) => _nodeData.expandable;\r\n\r\n  hasNoContent = (_: number, _nodeData: TodoItemFlatNode) => _nodeData.item === '';\r\n\r\n  /**\r\n  * Transformer to convert nested node to flat node. Record the nodes in maps for later use.\r\n  */\r\n  transformer = (node: TodoItemNode, level: number) => {\r\n    const existingNode = this.nestedNodeMap.get(node);\r\n    const flatNode = existingNode && existingNode.item === node.item\r\n      ? existingNode\r\n      : new TodoItemFlatNode();\r\n    flatNode.item = node.item;\r\n    flatNode.level = level;\r\n    flatNode.expandable = !!node.children;\r\n    this.flatNodeMap.set(flatNode, node);\r\n    this.nestedNodeMap.set(node, flatNode);\r\n    return flatNode;\r\n  }\r\n\r\n  /** Whether all the descendants of the node are selected */\r\n  descendantsAllSelected(node: TodoItemFlatNode): boolean {\r\n  const descendants = this.treeControl.getDescendants(node);\r\n     return descendants.every(child => this.checklistSelection.isSelected(child));\r\n  }\r\n\r\n  /** Whether part of the descendants are selected */\r\n  descendantsPartiallySelected(node: TodoItemFlatNode): boolean {\r\n  const descendants = this.treeControl.getDescendants(node);\r\n  const result = descendants.some(child => this.checklistSelection.isSelected(child));\r\n    return result && !this.descendantsAllSelected(node);\r\n  }\r\n\r\n  /** Toggle the to-do item selection. Select/deselect all the descendants node */\r\n  todoItemSelectionToggle(node: TodoItemFlatNode): void {\r\n    this.checklistSelection.toggle(node);\r\n    const descendants = this.treeControl.getDescendants(node);\r\n    this.checklistSelection.isSelected(node) ? this.checklistSelection.select(...descendants)\r\n      : this.checklistSelection.deselect(...descendants);\r\n  }\r\n\r\n  /** Select the category so we can insert the new item. */\r\n  addNewItem(node: TodoItemFlatNode) {\r\n    const parentNode = this.flatNodeMap.get(node);\r\n    this.database.insertItem(parentNode!, '');\r\n    this.treeControl.expand(node);\r\n  }\r\n\r\n  /** Save the node to database */\r\n  saveNode(node: TodoItemFlatNode, itemValue: string) {\r\n    const nestedNode = this.flatNodeMap.get(node);\r\n    this.database.updateItem(nestedNode!, itemValue);\r\n  }\r\n}\r\n`,\r\n\tcssCode: ``,\r\n\tviewCode: ``,\r\n\tisCodeVisible: false,\r\n\tisExampleExpanded: true\r\n};\r\n\r\nconst treeWithPartiallyLoadedData = {\r\n\tbeforeCodeTitle: 'Tree with partially loaded data',\r\n\thtmlCode: `\r\n<mat-tree [dataSource]=\"dataSource\" [treeControl]=\"treeControl\">\r\n  <!-- Leaf node -->\r\n  <mat-tree-node *matTreeNodeDef=\"let node\" matTreeNodePadding>\r\n    <button mat-icon-button disabled></button>\r\n      {{node.item}}\r\n  </mat-tree-node>\r\n\r\n  <!-- expandable node -->\r\n  <mat-tree-node *matTreeNodeDef=\"let node; when: hasChild\" matTreeNodePadding>\r\n    <button mat-icon-button\r\n      [attr.aria-label]=\"'toggle ' + node.filename\"\r\n      (click)=\"loadChildren(node)\"\r\n      matTreeNodeToggle>\r\n      <mat-icon class=\"mat-icon-rtl-mirror\">\r\n        {{treeControl.isExpanded(node) ? 'expand_more' : 'chevron_right'}}\r\n      </mat-icon>\r\n   </button>\r\n   {{node.item}}\r\n  </mat-tree-node>\r\n\r\n  <mat-tree-node *matTreeNodeDef=\"let node; when: isLoadMore\">\r\n    <button mat-button (click)=\"loadMore(node.loadMoreParentItem)\">\r\n      Load more...\r\n    </button>\r\n  </mat-tree-node>\r\n</mat-tree>`,\r\n\ttsCode: `\r\n/**\r\n* @license\r\n* Copyright Google LLC All Rights Reserved.\r\n*\r\n* Use of this source code is governed by an MIT-style license that can be\r\n* found in the LICENSE file at https://angular.io/license\r\n*/\r\nimport {FlatTreeControl} from '@angular/cdk/tree';\r\nimport {Component, Injectable} from '@angular/core';\r\nimport {MatTreeFlatDataSource, MatTreeFlattener} from '@angular/material/tree';\r\nimport {BehaviorSubject, Observable} from 'rxjs';\r\n\r\nconst LOAD_MORE = 'LOAD_MORE';\r\n/** Nested node */\r\nexport class LoadmoreNode {\r\n  childrenChange = new BehaviorSubject<LoadmoreNode[]>([]);\r\n\r\n  get children(): LoadmoreNode[] {\r\n    return this.childrenChange.value;\r\n  }\r\n\r\n  constructor(public item: string,\r\n  public hasChildren = false,\r\n  public loadMoreParentItem: string | null = null) {}\r\n}\r\n\r\n/** Flat node with expandable and level information */\r\nexport class LoadmoreFlatNode {\r\n  constructor(public item: string,\r\n  public level = 1,\r\n  public expandable = false,\r\n  public loadMoreParentItem: string | null = null) {}\r\n}\r\n\r\n/**\r\n* A database that only load part of the data initially. After user clicks on the \\`Load more\\`\r\n* button, more data will be loaded.\r\n*/\r\n@Injectable()\r\nexport class LoadmoreDatabase {\r\n  batchNumber = 5;\r\n  dataChange = new BehaviorSubject<LoadmoreNode[]>([]);\r\n  nodeMap = new Map<string, LoadmoreNode>();\r\n\r\n  /** The data */\r\n  rootLevelNodes: string[] = ['Vegetables', 'Fruits'];\r\n  dataMap = new Map<string, string[]>([\r\n    ['Fruits', ['Apple', 'Orange', 'Banana']],\r\n    ['Vegetables', ['Tomato', 'Potato', 'Onion']],\r\n    ['Apple', ['Fuji', 'Macintosh']],\r\n    ['Onion', ['Yellow', 'White', 'Purple', 'Green', 'Shallot', 'Sweet', 'Red', 'Leek']],\r\n  ]);\r\n\r\n  initialize() {\r\n    const data = this.rootLevelNodes.map(name => this._generateNode(name));\r\n    this.dataChange.next(data);\r\n  }\r\n\r\n  /** Expand a node whose children are not loaded */\r\n  loadMore(item: string, onlyFirstTime = false) {\r\n    if (!this.nodeMap.has(item) || !this.dataMap.has(item)) {\r\n      return;\r\n    }\r\n    const parent = this.nodeMap.get(item)!;\r\n    const children = this.dataMap.get(item)!;\r\n    if (onlyFirstTime && parent.children!.length > 0) {\r\n      return;\r\n    }\r\n    const newChildrenNumber = parent.children!.length + this.batchNumber;\r\n    const nodes = children.slice(0, newChildrenNumber).map(name => this._generateNode(name));\r\n    if (newChildrenNumber < children.length) {\r\n    // Need a new load more node\r\n      nodes.push(new LoadmoreNode(LOAD_MORE, false, item));\r\n    }\r\n\r\n    parent.childrenChange.next(nodes);\r\n    this.dataChange.next(this.dataChange.value);\r\n  }\r\n\r\n  private _generateNode(item: string): LoadmoreNode {\r\n    if (this.nodeMap.has(item)) {\r\n      return this.nodeMap.get(item)!;\r\n    }\r\n    const result = new LoadmoreNode(item, this.dataMap.has(item));\r\n    this.nodeMap.set(item, result);\r\n    return result;\r\n  }\r\n}\r\n\r\n/**\r\n* @title Tree with partially loaded data\r\n*/\r\nComponent({\r\n  selector: 'tree-loadmore-example',\r\n  templateUrl: 'tree-loadmore-example.html',\r\n  styleUrls: ['tree-loadmore-example.css'],\r\n  providers: [LoadmoreDatabase]\r\n})\r\nexport class TreeLoadmoreExample {\r\n  nodeMap = new Map<string, LoadmoreFlatNode>();\r\n  treeControl: FlatTreeControl<LoadmoreFlatNode>;\r\n  treeFlattener: MatTreeFlattener<LoadmoreNode, LoadmoreFlatNode>;\r\n  // Flat tree data source\r\n  dataSource: MatTreeFlatDataSource<LoadmoreNode, LoadmoreFlatNode>;\r\n\r\n  constructor(private database: LoadmoreDatabase) {\r\n    this.treeFlattener = new MatTreeFlattener(this.transformer, this.getLevel,\r\n    this.isExpandable, this.getChildren);\r\n\r\n    this.treeControl = new FlatTreeControl<LoadmoreFlatNode>(this.getLevel, this.isExpandable);\r\n\r\n    this.dataSource = new MatTreeFlatDataSource(this.treeControl, this.treeFlattener);\r\n\r\n    database.dataChange.subscribe(data => {\r\n      this.dataSource.data = data;\r\n    });\r\n\r\n    database.initialize();\r\n  }\r\n\r\n  getChildren = (node: LoadmoreNode): Observable<LoadmoreNode[]> => node.childrenChange;\r\n\r\n  transformer = (node: LoadmoreNode, level: number) => {\r\n    const existingNode = this.nodeMap.get(node.item);\r\n\r\n    if (existingNode) {\r\n      return existingNode;\r\n    }\r\n\r\n    const newNode = new LoadmoreFlatNode(node.item, level, node.hasChildren, node.loadMoreParentItem);\r\n    this.nodeMap.set(node.item, newNode);\r\n    return newNode;\r\n  }\r\n\r\n  getLevel = (node: LoadmoreFlatNode) => node.level;\r\n\r\n  isExpandable = (node: LoadmoreFlatNode) => node.expandable;\r\n\r\n  hasChild = (_: number, _nodeData: LoadmoreFlatNode) => _nodeData.expandable;\r\n\r\n  isLoadMore = (_: number, _nodeData: LoadmoreFlatNode) => _nodeData.item === LOAD_MORE;\r\n\r\n  /** Load more nodes from data source */\r\n  loadMore(item: string) {\r\n    this.database.loadMore(item);\r\n  }\r\n\r\n  loadChildren(node: LoadmoreFlatNode) {\r\n    this.database.loadMore(node.item, true);\r\n  }\r\n}`,\r\n\tcssCode: ``,\r\n\tviewCode: ``,\r\n\tisCodeVisible: false,\r\n\tisExampleExpanded: true\r\n};\r\n\r\n/**\r\n * File node data with nested structure.\r\n * Each node has a filename, and a type or a list of children.\r\n */\r\nexport class FileNode {\r\n\tchildren: FileNode[];\r\n\tfilename: string;\r\n\ttype: any;\r\n}\r\n\r\n/** Flat node with expandable and level information */\r\nexport class FileFlatNode {\r\n\tconstructor(\r\n\t\tpublic expandable: boolean, public filename: string, public level: number, public type: any) { }\r\n}\r\n\r\n/**\r\n * The file structure tree data in string. The data could be parsed into a Json object\r\n */\r\nconst TREE_DATA = JSON.stringify({\r\n\tApplications: {\r\n\t\tCalendar: 'app',\r\n\t\tChrome: 'app',\r\n\t\tWebstorm: 'app'\r\n\t},\r\n\tDocuments: {\r\n\t\tangular: {\r\n\t\t\tsrc: {\r\n\t\t\t\tcompiler: 'ts',\r\n\t\t\t\tcore: 'ts'\r\n\t\t\t}\r\n\t\t},\r\n\t\tmaterial2: {\r\n\t\t\tsrc: {\r\n\t\t\t\tbutton: 'ts',\r\n\t\t\t\tcheckbox: 'ts',\r\n\t\t\t\tinput: 'ts'\r\n\t\t\t}\r\n\t\t}\r\n\t},\r\n\tDownloads: {\r\n\t\tOctober: 'pdf',\r\n\t\tNovember: 'pdf',\r\n\t\tTutorial: 'html'\r\n\t},\r\n\tPictures: {\r\n\t\t'Photo Booth Library': {\r\n\t\t\tContents: 'dir',\r\n\t\t\tPictures: 'dir'\r\n\t\t},\r\n\t\tSun: 'png',\r\n\t\tWoods: 'jpg'\r\n\t}\r\n});\r\n\r\n/**\r\n * File database, it can build a tree structured Json object from string.\r\n * Each node in Json object represents a file or a directory. For a file, it has filename and type.\r\n * For a directory, it has filename and children (a list of files or directories).\r\n * The input will be a json object string, and the output is a list of `FileNode` with nested\r\n * structure.\r\n */\r\n@Injectable()\r\nexport class FileDatabase {\r\n\tdataChange = new BehaviorSubject<FileNode[]>([]);\r\n\r\n\tget data(): FileNode[] {\r\n    if (this.dataChange) {\r\n      return this.dataChange.value;\r\n    }\r\n\r\n    return undefined;\r\n  }\r\n\r\n\tconstructor() {\r\n\t\tthis.initialize();\r\n\t}\r\n\r\n\tinitialize() {\r\n\t\t// Parse the string to json object.\r\n\t\tconst dataObject = JSON.parse(TREE_DATA);\r\n\r\n\t\t// Build the tree nodes from Json object. The result is a list of `FileNode` with nested\r\n\t\t//     file node as children.\r\n\t\tconst data = this.buildFileTree(dataObject, 0);\r\n\r\n\t\t// Notify the change.\r\n\t\tthis.dataChange.next(data);\r\n\t}\r\n\r\n\t/**\r\n\t * Build the file structure tree. The `value` is the Json object, or a sub-tree of a Json object.\r\n\t * The return value is the list of `FileNode`.\r\n\t */\r\n\tbuildFileTree(obj: object, level: number): FileNode[] {\r\n\t\treturn Object.keys(obj).reduce<FileNode[]>((accumulator, key) => {\r\n\t\t\tconst value = obj[key];\r\n\t\t\tconst node = new FileNode();\r\n\t\t\tnode.filename = key;\r\n\r\n\t\t\tif (value != null) {\r\n\t\t\t\tif (typeof value === 'object') {\r\n\t\t\t\t\tnode.children = this.buildFileTree(value, level + 1);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tnode.type = value;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\treturn accumulator.concat(node);\r\n\t\t}, []);\r\n\t}\r\n}\r\n\r\n/** Flat node with expandable and level information */\r\nexport class DynamicFlatNode {\r\n\tconstructor(public item: string, public level = 1, public expandable = false,\r\n\t\t           public isLoading = false) { }\r\n}\r\n\r\n/**\r\n * Database for dynamic data. When expanding a node in the tree, the data source will need to fetch\r\n * the descendants data from the database.\r\n */\r\nexport class DynamicDatabase {\r\n\tdataMap = new Map<string, string[]>([\r\n\t\t['Fruits', ['Apple', 'Orange', 'Banana']],\r\n\t\t['Vegetables', ['Tomato', 'Potato', 'Onion']],\r\n\t\t['Apple', ['Fuji', 'Macintosh']],\r\n\t\t['Onion', ['Yellow', 'White', 'Purple']]\r\n\t]);\r\n\r\n\trootLevelNodes: string[] = ['Fruits', 'Vegetables'];\r\n\r\n\t/** Initial data from database */\r\n\tinitialData(): DynamicFlatNode[] {\r\n\t\treturn this.rootLevelNodes.map(name => new DynamicFlatNode(name, 0, true));\r\n\t}\r\n\r\n\tgetChildren(node: string): string[] | undefined {\r\n\t\treturn this.dataMap.get(node);\r\n\t}\r\n\r\n\tisExpandable(node: string): boolean {\r\n\t\treturn this.dataMap.has(node);\r\n\t}\r\n}\r\n\r\n/**\r\n * File database, it can build a tree structured Json object from string.\r\n * Each node in Json object represents a file or a directory. For a file, it has filename and type.\r\n * For a directory, it has filename and children (a list of files or directories).\r\n * The input will be a json object string, and the output is a list of `FileNode` with nested\r\n * structure.\r\n */\r\n@Injectable()\r\nexport class DynamicDataSource {\r\n\r\n\tdataChange = new BehaviorSubject<DynamicFlatNode[]>([]);\r\n\r\n\tget data(): DynamicFlatNode[] { return this.dataChange.value; }\r\n\tset data(value: DynamicFlatNode[]) {\r\n\t\tthis.treeControl.dataNodes = value;\r\n\t\tthis.dataChange.next(value);\r\n\t}\r\n\r\n\tconstructor(private treeControl: FlatTreeControl<DynamicFlatNode>,\r\n             private database: DynamicDatabase,\r\n             private cdr: ChangeDetectorRef) { }\r\n\r\n\tconnect(collectionViewer: CollectionViewer): Observable<DynamicFlatNode[]> {\r\n\t\t// tslint:disable-next-line:no-non-null-assertion\r\n\t\tthis.treeControl.expansionModel.changed!.subscribe(change => {\r\n\t\t\tif ((change as SelectionChange<DynamicFlatNode>).added ||\r\n\t\t\t\t(change as SelectionChange<DynamicFlatNode>).removed) {\r\n\t\t\t\tthis.handleTreeControl(change as SelectionChange<DynamicFlatNode>);\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\treturn merge(collectionViewer.viewChange, this.dataChange).pipe(map(() => this.data));\r\n\t}\r\n\r\n\t/** Handle expand/collapse behaviors */\r\n\thandleTreeControl(change: SelectionChange<DynamicFlatNode>) {\r\n\t\tif (change.added) {\r\n\t\t\tchange.added.forEach(node => this.toggleNode(node, true));\r\n\t\t}\r\n\t\tif (change.removed) {\r\n\t\t\tchange.removed.slice().reverse().forEach(node => this.toggleNode(node, false));\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Toggle the node, remove from display list\r\n\t */\r\n\ttoggleNode(node: DynamicFlatNode, expand: boolean) {\r\n\t\tconst children = this.database.getChildren(node.item);\r\n\t\tconst index = this.data.indexOf(node);\r\n\t\tif (!children || index < 0) { // If no children, or cannot find the node, no op\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tnode.isLoading = true;\r\n\r\n\t\tsetTimeout(() => {\r\n\t\t\tif (expand) {\r\n\t\t\t\tconst nodes = children.map(name =>\r\n\t\t\t\t\tnew DynamicFlatNode(name, node.level + 1, this.database.isExpandable(name)));\r\n\t\t\t\tthis.data.splice(index + 1, 0, ...nodes);\r\n\t\t\t} else {\r\n\t\t\t\tlet count = 0;\r\n\t\t\t\tfor (let i = index + 1; i < this.data.length\r\n\t\t\t\t\t&& this.data[i].level > node.level; i++ , count++) { }\r\n\t\t\t\tthis.data.splice(index + 1, count);\r\n\t\t\t}\r\n\r\n\t\t\t// notify the change\r\n   this.dataChange.next(this.data);\r\n   node.isLoading = false;\r\n   this.cdr.markForCheck();\r\n\t\t}, 500);\r\n\t}\r\n}\r\n\r\n/**\r\n * Node for to-do item\r\n */\r\nexport class TodoItemNode {\r\n\tchildren: TodoItemNode[];\r\n\titem: string;\r\n}\r\n\r\n/** Flat to-do item node with expandable and level information */\r\nexport class TodoItemFlatNode {\r\n\titem: string;\r\n\tlevel: number;\r\n\texpandable: boolean;\r\n}\r\n\r\n/**\r\n * The Json object for to-do list data.\r\n */\r\nconst TREE_DATA_3 = {\r\n\tGroceries: {\r\n\t\t'Almond Meal flour': null,\r\n\t\t'Organic eggs': null,\r\n\t\t'Protein Powder': null,\r\n\t\tFruits: {\r\n\t\t\tApple: null,\r\n\t\t\tBerries: ['Blueberry', 'Raspberry'],\r\n\t\t\tOrange: null\r\n\t\t}\r\n\t},\r\n\tReminders: [\r\n\t\t'Cook dinner',\r\n\t\t'Read the Material Design spec',\r\n\t\t'Upgrade Application to Angular'\r\n\t]\r\n};\r\n\r\n/**\r\n * Checklist database, it can build a tree structured Json object.\r\n * Each node in Json object represents a to-do item or a category.\r\n * If a node is a category, it has children items and new items can be added under the category.\r\n */\r\n@Injectable()\r\nexport class ChecklistDatabase {\r\n\tdataChange = new BehaviorSubject<TodoItemNode[]>([]);\r\n\r\n\tget data(): TodoItemNode[] {\r\n    if (this.dataChange) {\r\n      return this.dataChange.value;\r\n    }\r\n\r\n    return undefined;\r\n  }\r\n\r\n\tconstructor() {\r\n\t\tthis.initialize();\r\n\t}\r\n\r\n\tinitialize() {\r\n\t\t// Build the tree nodes from Json object. The result is a list of `TodoItemNode` with nested\r\n\t\t//     file node as children.\r\n\t\tconst data = this.buildFileTree(TREE_DATA_3, 0);\r\n\r\n\t\t// Notify the change.\r\n\t\tthis.dataChange.next(data);\r\n\t}\r\n\r\n\t/**\r\n\t * Build the file structure tree. The `value` is the Json object, or a sub-tree of a Json object.\r\n\t * The return value is the list of `TodoItemNode`.\r\n\t */\r\n\tbuildFileTree(obj: object, level: number): TodoItemNode[] {\r\n\t\treturn Object.keys(obj).reduce<TodoItemNode[]>((accumulator, key) => {\r\n\t\t\tconst value = obj[key];\r\n\t\t\tconst node = new TodoItemNode();\r\n\t\t\tnode.item = key;\r\n\r\n\t\t\tif (value != null) {\r\n\t\t\t\tif (typeof value === 'object') {\r\n\t\t\t\t\tnode.children = this.buildFileTree(value, level + 1);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tnode.item = value;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\treturn accumulator.concat(node);\r\n\t\t}, []);\r\n\t}\r\n\r\n\t/** Add an item to to-do list */\r\n\tinsertItem(parent: TodoItemNode, name: string) {\r\n\t\tif (parent.children) {\r\n\t\t\tparent.children.push({ item: name } as TodoItemNode);\r\n\t\t\tthis.dataChange.next(this.data);\r\n\t\t}\r\n\t}\r\n\r\n\tupdateItem(node: TodoItemNode, name: string) {\r\n\t\tnode.item = name;\r\n\t\tthis.dataChange.next(this.data);\r\n\t}\r\n}\r\n\r\nconst LOAD_MORE = 'LOAD_MORE';\r\n/** Nested node */\r\nexport class LoadmoreNode {\r\n\tchildrenChange = new BehaviorSubject<LoadmoreNode[]>([]);\r\n\r\n\tget children(): LoadmoreNode[] {\r\n\t\treturn this.childrenChange.value;\r\n\t}\r\n\r\n\tconstructor(public item: string,\r\n\t\t           public hasChildren = false,\r\n\t\t           public loadMoreParentItem: string | null = null) { }\r\n}\r\n\r\n  /** Flat node with expandable and level information */\r\nexport class LoadmoreFlatNode {\r\n\tconstructor(public item: string,\r\n\t\t           public level = 1,\r\n\t\t           public expandable = false,\r\n\t\t           public loadMoreParentItem: string | null = null) { }\r\n}\r\n\r\n/**\r\n * A database that only load part of the data initially. After user clicks on the `Load more`\r\n * button, more data will be loaded.\r\n */\r\n@Injectable()\r\nexport class LoadmoreDatabase {\r\n\tbatchNumber = 5;\r\n\tdataChange = new BehaviorSubject<LoadmoreNode[]>([]);\r\n\tnodeMap = new Map<string, LoadmoreNode>();\r\n\r\n\t/** The data */\r\n\trootLevelNodes: string[] = ['Vegetables', 'Fruits'];\r\n\tdataMap = new Map<string, string[]>([\r\n\t\t['Fruits', ['Apple', 'Orange', 'Banana']],\r\n\t\t['Vegetables', ['Tomato', 'Potato', 'Onion']],\r\n\t\t['Apple', ['Fuji', 'Macintosh']],\r\n\t\t['Onion', ['Yellow', 'White', 'Purple', 'Green', 'Shallot', 'Sweet', 'Red', 'Leek']],\r\n\t]);\r\n\r\n\tinitialize() {\r\n\t\tconst data = this.rootLevelNodes.map(name => this._generateNode(name));\r\n\t\tthis.dataChange.next(data);\r\n\t}\r\n\r\n\t/** Expand a node whose children are not loaded */\r\n\tloadMore(item: string, onlyFirstTime = false) {\r\n\t\tif (!this.nodeMap.has(item) || !this.dataMap.has(item)) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\t// tslint:disable-next-line:no-non-null-assertion\r\n\t\tconst parent = this.nodeMap.get(item)!;\r\n\t\t// tslint:disable-next-line:no-non-null-assertion\r\n\t\tconst children = this.dataMap.get(item)!;\r\n\t\t// tslint:disable-next-line:no-non-null-assertion\r\n\t\tif (onlyFirstTime && parent.children!.length > 0) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\t// tslint:disable-next-line:no-non-null-assertion\r\n\t\tconst newChildrenNumber = parent.children!.length + this.batchNumber;\r\n\t\tconst nodes = children.slice(0, newChildrenNumber)\r\n\t\t\t.map(name => this._generateNode(name));\r\n\t\tif (newChildrenNumber < children.length) {\r\n\t\t\t// Need a new load more node\r\n\t\t\tnodes.push(new LoadmoreNode(LOAD_MORE, false, item));\r\n\t\t}\r\n\r\n\t\tparent.childrenChange.next(nodes);\r\n\t\tthis.dataChange.next(this.dataChange.value);\r\n\t}\r\n\r\n\tprivate _generateNode(item: string): LoadmoreNode {\r\n\t\tif (this.nodeMap.has(item)) {\r\n\t\t\t// tslint:disable-next-line:no-non-null-assertion\r\n\t\t\treturn this.nodeMap.get(item)!;\r\n\t\t}\r\n\t\tconst result = new LoadmoreNode(item, this.dataMap.has(item));\r\n\t\tthis.nodeMap.set(item, result);\r\n\t\treturn result;\r\n\t}\r\n}\r\n\r\n\r\n/**\r\n * @title Tree with dynamic data\r\n */\r\n@Component({\r\n\tselector: 'kt-tree',\r\n\ttemplateUrl: './tree.component.html',\r\n\tstyles: [`\r\n\t.example-tree-progress-bar {\r\n\t\tmargin-left: 30px;\r\n\t  }\r\n\t`],\r\n\tchangeDetection: ChangeDetectionStrategy.Default,\r\n\tproviders: [DynamicDatabase, FileDatabase, ChecklistDatabase, LoadmoreDatabase]\r\n})\r\nexport class TreeComponent implements OnInit {\r\n\texampleTreeWithDynamicData;\r\n\texampleTreeWithFlatNodes;\r\n\texampleTreeWithCheckboxes;\r\n\texampleTreeWithPartiallyLoadedData;\r\n\r\n\ttreeControl: FlatTreeControl<DynamicFlatNode>;\r\n\tdataSource: DynamicDataSource;\r\n\r\n\ttreeControl2: FlatTreeControl<FileFlatNode>;\r\n\ttreeFlattener2: MatTreeFlattener<FileNode, FileFlatNode>;\r\n\tdataSource2: MatTreeFlatDataSource<FileNode, FileFlatNode>;\r\n\r\n\t/** Map from flat node to nested node. This helps us finding the nested node to be modified */\r\n\tflatNodeMap3 = new Map<TodoItemFlatNode, TodoItemNode>();\r\n\t/** Map from nested node to flattened node. This helps us to keep the same object for selection */\r\n\tnestedNodeMap3 = new Map<TodoItemNode, TodoItemFlatNode>();\r\n\t/** A selected parent node to be inserted */\r\n\tselectedParent3: TodoItemFlatNode | null = null;\r\n\t/** The new item's name */\r\n\tnewItemName3 = '';\r\n\ttreeControl3: FlatTreeControl<TodoItemFlatNode>;\r\n\ttreeFlattener3: MatTreeFlattener<TodoItemNode, TodoItemFlatNode>;\r\n\tdataSource3: MatTreeFlatDataSource<TodoItemNode, TodoItemFlatNode>;\r\n\t/** The selection for checklist */\r\n\tchecklistSelection3 = new SelectionModel<TodoItemFlatNode>(true /* multiple */);\r\n\r\n\tnodeMap4 = new Map<string, LoadmoreFlatNode>();\r\n\ttreeControl4: FlatTreeControl<LoadmoreFlatNode>;\r\n\ttreeFlattener4: MatTreeFlattener<LoadmoreNode, LoadmoreFlatNode>;\r\n\t// Flat tree data source\r\n\tdataSource4: MatTreeFlatDataSource<LoadmoreNode, LoadmoreFlatNode>;\r\n\r\n\tconstructor(database: DynamicDatabase,\r\n\t\t           database2: FileDatabase,\r\n\t\t           private database3: ChecklistDatabase,\r\n             private database4: LoadmoreDatabase,\r\n             private cdr: ChangeDetectorRef) {\r\n\t\tthis.treeControl = new FlatTreeControl<DynamicFlatNode>(this.getLevel, this.isExpandable);\r\n\t\tthis.dataSource = new DynamicDataSource(this.treeControl, database, this.cdr);\r\n\t\tthis.dataSource.data = database.initialData();\r\n\r\n\t\tthis.treeFlattener2 = new MatTreeFlattener(this.transformer2, this._getLevel2,\r\n\t\t\tthis._isExpandable2, this._getChildren2);\r\n\t\tthis.treeControl2 = new FlatTreeControl<FileFlatNode>(this._getLevel2, this._isExpandable2);\r\n\t\tthis.dataSource2 = new MatTreeFlatDataSource(this.treeControl2, this.treeFlattener2);\r\n\t\tdatabase2.dataChange.subscribe(data => this.dataSource2.data = data);\r\n\r\n\t\tthis.treeFlattener3 = new MatTreeFlattener(this.transformer3, this.getLevel3,\r\n\t\t\tthis.isExpandable3, this.getChildren3);\r\n\t\tthis.treeControl3 = new FlatTreeControl<TodoItemFlatNode>(this.getLevel3, this.isExpandable3);\r\n\t\tthis.dataSource3 = new MatTreeFlatDataSource(this.treeControl3, this.treeFlattener3);\r\n\t\tdatabase3.dataChange.subscribe(data => {\r\n\t\t\tthis.dataSource3.data = data;\r\n\t\t});\r\n\r\n\r\n\t\tthis.treeFlattener4 = new MatTreeFlattener(this.transformer4, this.getLevel4,\r\n\t\t\tthis.isExpandable4, this.getChildren4);\r\n\t\tthis.treeControl4 = new FlatTreeControl<LoadmoreFlatNode>(this.getLevel4, this.isExpandable4);\r\n\t\tthis.dataSource4 = new MatTreeFlatDataSource(this.treeControl4, this.treeFlattener4);\r\n\t\tdatabase4.dataChange.subscribe(data => {\r\n\t\t\tthis.dataSource4.data = data;\r\n\t\t});\r\n  database4.initialize();\r\n\t}\r\n\r\n\tngOnInit() {\r\n\t\tthis.exampleTreeWithDynamicData = treeWithDynamicData;\r\n\t\tthis.exampleTreeWithFlatNodes = treeWithFlatNodes;\r\n\t\tthis.exampleTreeWithCheckboxes = treeWithCheckboxes;\r\n  this.exampleTreeWithPartiallyLoadedData = treeWithPartiallyLoadedData;\r\n\t}\r\n\r\n\tgetLevel = (node: DynamicFlatNode) => node.level;\r\n\tisExpandable = (node: DynamicFlatNode) => node.expandable;\r\n\thasChild = (_: number, _nodeData: DynamicFlatNode) => _nodeData.expandable;\r\n\r\n\ttransformer2 = (node: FileNode, level: number) => {\r\n\t\treturn new FileFlatNode(!!node.children, node.filename, level, node.type);\r\n\t}\r\n\tprivate _getLevel2 = (node: FileFlatNode) => node.level;\r\n\tprivate _isExpandable2 = (node: FileFlatNode) => node.expandable;\r\n\tprivate _getChildren2 = (node: FileNode): Observable<FileNode[]> => observableOf(node.children);\r\n\thasChild2 = (_: number, _nodeData: FileFlatNode) => _nodeData.expandable;\r\n\r\n\tgetLevel3 = (node: TodoItemFlatNode) => node.level;\r\n\tisExpandable3 = (node: TodoItemFlatNode) => node.expandable;\r\n\tgetChildren3 = (node: TodoItemNode): TodoItemNode[] => node.children;\r\n\thasChild3 = (_: number, _nodeData: TodoItemFlatNode) => _nodeData.expandable;\r\n\thasNoContent3 = (_: number, _nodeData: TodoItemFlatNode) => _nodeData.item === '';\r\n\r\n\t/**\r\n\t * Transformer to convert nested node to flat node. Record the nodes in maps for later use.\r\n\t */\r\n\ttransformer3 = (node: TodoItemNode, level: number) => {\r\n\t\tconst existingNode = this.nestedNodeMap3.get(node);\r\n\t\tconst flatNode = existingNode && existingNode.item === node.item\r\n\t\t\t? existingNode\r\n\t\t\t: new TodoItemFlatNode();\r\n\t\tflatNode.item = node.item;\r\n\t\tflatNode.level = level;\r\n\t\tflatNode.expandable = !!node.children;\r\n\t\tthis.flatNodeMap3.set(flatNode, node);\r\n\t\tthis.nestedNodeMap3.set(node, flatNode);\r\n\t\treturn flatNode;\r\n\t}\r\n\r\n\t/** Whether all the descendants of the node are selected */\r\n\tdescendantsAllSelected3(node: TodoItemFlatNode): boolean {\r\n\t\tconst descendants = this.treeControl3.getDescendants(node);\r\n\t\treturn descendants.every(child => this.checklistSelection3.isSelected(child));\r\n\t}\r\n\r\n\t/** Whether part of the descendants are selected */\r\n\tdescendantsPartiallySelected3(node: TodoItemFlatNode): boolean {\r\n\t\tconst descendants = this.treeControl3.getDescendants(node);\r\n\t\tconst result = descendants.some(child => this.checklistSelection3.isSelected(child));\r\n\t\treturn result && !this.descendantsAllSelected3(node);\r\n\t}\r\n\r\n\t/** Toggle the to-do item selection. Select/deselect all the descendants node */\r\n\ttodoItemSelectionToggle3(node: TodoItemFlatNode): void {\r\n\t\tthis.checklistSelection3.toggle(node);\r\n\t\tconst descendants = this.treeControl3.getDescendants(node);\r\n\t\tthis.checklistSelection3.isSelected(node)\r\n\t\t\t? this.checklistSelection3.select(...descendants)\r\n\t\t\t: this.checklistSelection3.deselect(...descendants);\r\n\t}\r\n\r\n\t/** Select the category so we can insert the new item. */\r\n\taddNewItem3(node: TodoItemFlatNode) {\r\n\t\tconst parentNode = this.flatNodeMap3.get(node);\r\n\t\t// tslint:disable-next-line:no-non-null-assertion\r\n\t\tthis.database3.insertItem(parentNode!, '');\r\n\t\tthis.treeControl3.expand(node);\r\n\t}\r\n\r\n\t/** Save the node to database */\r\n\tsaveNode3(node: TodoItemFlatNode, itemValue: string) {\r\n\t\tconst nestedNode = this.flatNodeMap3.get(node);\r\n\t\t// tslint:disable-next-line:no-non-null-assertion\r\n\t\tthis.database3.updateItem(nestedNode!, itemValue);\r\n\t}\r\n\r\n\tgetChildren4 = (node: LoadmoreNode): Observable<LoadmoreNode[]> => node.childrenChange;\r\n\r\n\ttransformer4 = (node: LoadmoreNode, level: number) => {\r\n\t\tconst existingNode = this.nodeMap4.get(node.item);\r\n\r\n\t\tif (existingNode) {\r\n\t\t\treturn existingNode;\r\n\t\t}\r\n\r\n\t\tconst newNode =\r\n\t\t\tnew LoadmoreFlatNode(node.item, level, node.hasChildren, node.loadMoreParentItem);\r\n\t\tthis.nodeMap4.set(node.item, newNode);\r\n\t\treturn newNode;\r\n\t}\r\n\r\n\tgetLevel4 = (node: LoadmoreFlatNode) => node.level;\r\n\tisExpandable4 = (node: LoadmoreFlatNode) => node.expandable;\r\n\thasChild4 = (_: number, _nodeData: LoadmoreFlatNode) => _nodeData.expandable;\r\n\tisLoadMore4 = (_: number, _nodeData: LoadmoreFlatNode) => _nodeData.item === LOAD_MORE;\r\n\r\n\t/** Load more nodes from data source */\r\n\tloadMore4(item: string) {\r\n\t\tthis.database4.loadMore(item);\r\n\t}\r\n\r\n\tloadChildren4(node: LoadmoreFlatNode) {\r\n\t\tthis.database4.loadMore(node.item, true);\r\n\t}\r\n}\r\n","<router-outlet></router-outlet>\r\n","import { Component, ChangeDetectionStrategy } from '@angular/core';\r\n\r\n@Component({\r\n\tselector: 'kt-material',\r\n\ttemplateUrl: './material.component.html',\r\n\tchangeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class MaterialComponent { }\r\n\r\n\r\n","import { MatRadioModule } from '@angular/material/radio';\r\nimport { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { MaterialComponent } from './material.component';\r\nimport { AutocompleteComponent } from './formcontrols/autocomplete/autocomplete.component';\r\nimport { CheckboxComponent } from './formcontrols/checkbox/checkbox.component';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { PartialsModule } from '../../partials/partials.module';\r\nimport { CoreModule } from '../../../core/core.module';\r\nimport { CodePreviewModule } from '../../partials/content/general/code-preview/code-preview.module';\r\nimport { MatSlideToggleModule } from '@angular/material/slide-toggle';\r\nimport { MatRippleModule, MatNativeDateModule, MAT_DATE_LOCALE } from '@angular/material/core';\r\nimport { MatDialogModule } from '@angular/material/dialog';\r\nimport { MatIconRegistry, MatIconModule } from '@angular/material/icon';\r\nimport { MatCheckboxModule } from '@angular/material/checkbox';\r\nimport { MatDatepickerModule, MatDatepickerIntl } from '@angular/material/datepicker';\r\n\r\n// Form controls\r\nimport { DatepickerComponent } from './formcontrols/datepicker/datepicker.component';\r\n\r\nimport { FormfieldComponent } from './formcontrols/formfield/formfield.component';\r\nimport { InputComponent } from './formcontrols/input/input.component';\r\nimport { RadiobuttonComponent } from './formcontrols/radiobutton/radiobutton.component';\r\nimport { SelectComponent } from './formcontrols/select/select.component';\r\nimport { SliderComponent } from './formcontrols/slider/slider.component';\r\nimport { SlidertoggleComponent } from './formcontrols/slidertoggle/slidertoggle.component';\r\n// Navigation\r\nimport { MenuComponent } from './navigation/menu/menu.component';\r\nimport { SidenavComponent } from './navigation/sidenav/sidenav.component';\r\nimport { ToolbarComponent } from './navigation/toolbar/toolbar.component';\r\n// Layout\r\nimport { CardComponent } from './layout/card/card.component';\r\nimport { DividerComponent } from './layout/divider/divider.component';\r\nimport { ExpansionPanelComponent } from './layout/expansion-panel/expansion-panel.component';\r\nimport { GridListComponent } from './layout/grid-list/grid-list.component';\r\nimport { ListComponent } from './layout/list/list.component';\r\nimport { MaterialTabsComponent } from './layout/material-tabs/material-tabs.component';\r\nimport { StepperComponent } from './layout/stepper/stepper.component';\r\nimport { TreeComponent } from './layout/tree/tree.component';\r\n// Buttons & indicators\r\nimport { ButtonComponent } from './buttons-and-indicators/button/button.component';\r\nimport { ButtonToggleComponent } from './buttons-and-indicators/button-toggle/button-toggle.component';\r\nimport { ChipsComponent } from './buttons-and-indicators/chips/chips.component';\r\nimport { IconComponent } from './buttons-and-indicators/icon/icon.component';\r\nimport { ProgressBarComponent } from './buttons-and-indicators/progress-bar/progress-bar.component';\r\nimport { ProgressSpinnerComponent } from './buttons-and-indicators/progress-spinner/progress-spinner.component';\r\nimport { RipplesComponent } from './buttons-and-indicators/ripples/ripples.component';\r\n// Popups & modals\r\nimport { DialogComponent, ModalComponent, Modal2Component, Modal3Component } from './popups-and-modals/dialog/dialog.component';\r\nimport { SnackbarComponent } from './popups-and-modals/snackbar/snackbar.component';\r\nimport { MaterialTooltipComponent } from './popups-and-modals/material-tooltip/material-tooltip.component';\r\nimport { BottomSheetComponent } from './popups-and-modals/bottom-sheet/bottom-sheet.component';\r\nimport { BottomSheetExampleComponent } from './popups-and-modals/bottom-sheet/bottom-sheet-example/bottom-sheet-example.component';\r\nimport { PizzaPartyComponent } from './popups-and-modals/snackbar/pizza-party.component';\r\n// Data table\r\nimport { PaginatorComponent } from './data-table/paginator/paginator.component';\r\nimport { SortHeaderComponent } from './data-table/sort-header/sort-header.component';\r\nimport { MaterialTableComponent } from './data-table/material-table/material-table.component';\r\nimport { MAT_MOMENT_DATE_ADAPTER_OPTIONS } from '@angular/material-moment-adapter';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatTabsModule } from '@angular/material/tabs';\r\nimport { MatTooltipModule } from '@angular/material/tooltip';\r\nimport { MatSelectModule } from '@angular/material/select';\r\nimport { MatCardModule } from '@angular/material/card';\r\nimport { MatMenuModule } from '@angular/material/menu';\r\nimport { MatProgressBarModule } from '@angular/material/progress-bar';\r\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\r\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\r\nimport { MatTableModule } from '@angular/material/table';\r\nimport { MatListModule } from '@angular/material/list';\r\nimport { MatSidenavModule } from '@angular/material/sidenav';\r\nimport { MatSliderModule } from '@angular/material/slider';\r\nimport { MatGridListModule } from '@angular/material/grid-list';\r\nimport { MatButtonToggleModule } from '@angular/material/button-toggle';\r\nimport { MatTreeModule } from '@angular/material/tree';\r\nimport { MatPaginatorModule } from '@angular/material/paginator';\r\nimport { MatChipsModule } from '@angular/material/chips';\r\nimport { MatStepperModule } from '@angular/material/stepper';\r\nimport { MatSortModule } from '@angular/material/sort';\r\nimport { MatToolbarModule } from '@angular/material/toolbar';\r\nimport { MatBottomSheetModule, MatBottomSheetRef, MAT_BOTTOM_SHEET_DATA } from '@angular/material/bottom-sheet';\r\nimport { MatExpansionModule } from '@angular/material/expansion';\r\nimport { MatDividerModule } from '@angular/material/divider';\r\n\r\nconst routes: Routes = [\r\n\t{\r\n\t\tpath: '',\r\n\t\tcomponent: MaterialComponent,\r\n\t\tchildren: [\r\n\t\t\t{\r\n\t\t\t\tpath: 'form-controls/autocomplete',\r\n\t\t\t\tcomponent: AutocompleteComponent\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tpath: 'form-controls/checkbox',\r\n\t\t\t\tcomponent: CheckboxComponent\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tpath: 'form-controls/datepicker',\r\n\t\t\t\tcomponent: DatepickerComponent\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tpath: 'form-controls/formfield',\r\n\t\t\t\tcomponent: FormfieldComponent\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tpath: 'form-controls/input',\r\n\t\t\t\tcomponent: InputComponent\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tpath: 'form-controls/radiobutton',\r\n\t\t\t\tcomponent: RadiobuttonComponent\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tpath: 'form-controls/select',\r\n\t\t\t\tcomponent: SelectComponent\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tpath: 'form-controls/slider',\r\n\t\t\t\tcomponent: SliderComponent\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tpath: 'form-controls/slidertoggle',\r\n\t\t\t\tcomponent: SlidertoggleComponent\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tpath: 'navigation/menu',\r\n\t\t\t\tcomponent: MenuComponent\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tpath: 'navigation/sidenav',\r\n\t\t\t\tcomponent: SidenavComponent\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tpath: 'navigation/toolbar',\r\n\t\t\t\tcomponent: ToolbarComponent\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tpath: 'layout/card',\r\n\t\t\t\tcomponent: CardComponent\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tpath: 'layout/divider',\r\n\t\t\t\tcomponent: DividerComponent\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tpath: 'layout/expansion-panel',\r\n\t\t\t\tcomponent: ExpansionPanelComponent\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tpath: 'layout/grid-list',\r\n\t\t\t\tcomponent: GridListComponent\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tpath: 'layout/list',\r\n\t\t\t\tcomponent: ListComponent\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tpath: 'layout/tabs',\r\n\t\t\t\tcomponent: MaterialTabsComponent\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tpath: 'layout/stepper',\r\n\t\t\t\tcomponent: StepperComponent\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tpath: 'layout/tree',\r\n\t\t\t\tcomponent: TreeComponent\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tpath: 'buttons-and-indicators/button',\r\n\t\t\t\tcomponent: ButtonComponent\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tpath: 'buttons-and-indicators/button-toggle',\r\n\t\t\t\tcomponent: ButtonToggleComponent\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tpath: 'buttons-and-indicators/chips',\r\n\t\t\t\tcomponent: ChipsComponent\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tpath: 'buttons-and-indicators/icon',\r\n\t\t\t\tcomponent: IconComponent\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tpath: 'buttons-and-indicators/progress-bar',\r\n\t\t\t\tcomponent: ProgressBarComponent\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tpath: 'buttons-and-indicators/progress-spinner',\r\n\t\t\t\tcomponent: ProgressSpinnerComponent\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tpath: 'buttons-and-indicators/ripples',\r\n\t\t\t\tcomponent: RipplesComponent\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tpath: 'popups-and-modals/bottom-sheet',\r\n\t\t\t\tcomponent: BottomSheetComponent\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tpath: 'popups-and-modals/dialog',\r\n\t\t\t\tcomponent: DialogComponent\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tpath: 'popups-and-modals/snackbar',\r\n\t\t\t\tcomponent: SnackbarComponent\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tpath: 'popups-and-modals/tooltip',\r\n\t\t\t\tcomponent: MaterialTooltipComponent\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tpath: 'data'\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tpath: 'data-table/paginator',\r\n\t\t\t\tcomponent: PaginatorComponent\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tpath: 'data-table/sort-header',\r\n\t\t\t\tcomponent: SortHeaderComponent\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tpath: 'data-table/table',\r\n\t\t\t\tcomponent: MaterialTableComponent\r\n\t\t\t}\r\n\t\t]\r\n\t}\r\n];\r\n\r\n@NgModule({\r\n\timports: [\r\n\t\tCommonModule,\r\n\t\t// material modules\r\n\t\tMatInputModule,\r\n\t\tMatFormFieldModule,\r\n\t\tMatDatepickerModule,\r\n\t\tMatAutocompleteModule,\r\n\t\tMatListModule,\r\n\t\tMatSliderModule,\r\n\t\tMatCardModule,\r\n\t\tMatSelectModule,\r\n\t\tMatButtonModule,\r\n\t\tMatIconModule,\r\n\t\tMatNativeDateModule,\r\n\t\tMatSlideToggleModule,\r\n\t\tMatCheckboxModule,\r\n\t\tMatMenuModule,\r\n\t\tMatTabsModule,\r\n\t\tMatTooltipModule,\r\n\t\tMatSidenavModule,\r\n\t\tMatProgressBarModule,\r\n\t\tMatProgressSpinnerModule,\r\n\t\tMatSnackBarModule,\r\n\t\tMatTableModule,\r\n\t\tMatGridListModule,\r\n\t\tMatToolbarModule,\r\n\t\tMatBottomSheetModule,\r\n\t\tMatExpansionModule,\r\n\t\tMatDividerModule,\r\n\t\tMatSortModule,\r\n\t\tMatStepperModule,\r\n\t\tMatChipsModule,\r\n\t\tMatPaginatorModule,\r\n\t\tMatDialogModule,\r\n\t\tMatRippleModule,\r\n\t\tCoreModule,\r\n\t\tMatRadioModule,\r\n\t\tMatTreeModule,\r\n\t\tMatButtonToggleModule,\r\n\t\tPartialsModule,\r\n\t\tCodePreviewModule,\r\n\t\tFormsModule,\r\n\t\tReactiveFormsModule,\r\n\t\tRouterModule.forChild(routes)\r\n\t],\r\n\texports: [RouterModule],\r\n\tentryComponents: [\r\n\t\tPizzaPartyComponent,\r\n\t\tDialogComponent,\r\n\t\tModalComponent,\r\n\t\tModal2Component,\r\n\t\tModal3Component,\r\n\t\tIconComponent,\r\n\t\tTreeComponent,\r\n\t\tBottomSheetExampleComponent\r\n\t],\r\n\tproviders: [\r\n\t\tMatIconRegistry,\r\n\t\t{ provide: MatBottomSheetRef, useValue: {} },\r\n\t\t{ provide: MAT_BOTTOM_SHEET_DATA, useValue: {} },\r\n\t\t{ provide: MAT_DATE_LOCALE, useValue: 'en-GB'},\r\n\t\t{ provide: MAT_MOMENT_DATE_ADAPTER_OPTIONS, useValue: { useUtc: true } },\r\n\r\n\t],\r\n\tdeclarations: [\r\n\t\tMaterialComponent,\r\n\t\tAutocompleteComponent,\r\n\t\tCheckboxComponent,\r\n\t\tDatepickerComponent,\r\n\t\tFormfieldComponent,\r\n\t\tInputComponent,\r\n\t\tRadiobuttonComponent,\r\n\t\tSelectComponent,\r\n\t\tSliderComponent,\r\n\t\tSlidertoggleComponent,\r\n\t\tMenuComponent,\r\n\t\tSidenavComponent,\r\n\t\tToolbarComponent,\r\n\t\tCardComponent,\r\n\t\tDividerComponent,\r\n\t\tExpansionPanelComponent,\r\n\t\tGridListComponent,\r\n\t\tListComponent,\r\n\t\tMaterialTabsComponent,\r\n\t\tStepperComponent,\r\n\t\tButtonComponent,\r\n\t\tButtonToggleComponent,\r\n\t\tChipsComponent,\r\n\t\tIconComponent,\r\n\t\tProgressBarComponent,\r\n\t\tProgressSpinnerComponent,\r\n\t\tDialogComponent,\r\n\t\tModalComponent,\r\n\t\tModal2Component,\r\n\t\tModal3Component,\r\n\t\tPizzaPartyComponent,\r\n\t\tSnackbarComponent,\r\n\t\tMaterialTooltipComponent,\r\n\t\tPaginatorComponent,\r\n\t\tSortHeaderComponent,\r\n\t\tMaterialTableComponent,\r\n\t\tTreeComponent,\r\n\t\tBottomSheetComponent,\r\n\t\tBottomSheetExampleComponent,\r\n\t\tRipplesComponent\r\n\t]\r\n})\r\nexport class MaterialModule {}\r\n","<kt-notice [svg]=\"'assets/media/svg/icons/Tools/Compass.svg'\">\r\n\tFor more info please check the components's official demos & documentation\r\n\t<a class=\"font-weight-bold\" href=\"https://material.angular.io/components/menu/overview\" target=\"_blank\">demos & documentation</a>\r\n</kt-notice>\r\n\r\n<div class=\"row\">\r\n\t<div class=\"col-xl-6\">\r\n\t\t<kt-code-preview [viewItem]=\"exampleBasicMenu\">\r\n\t\t\t<div class=\"example-preview\">\r\n\t\t\t\t<p>\r\n\t\t\t\t\t<code>&lt;mat-menu&gt;</code> is a floating panel containing list of options.\r\n\t\t\t\t</p>\r\n\t\t\t\t<div class=\"separator separator-dashed my-6\"></div>\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<button mat-button [matMenuTriggerFor]=\"menu10\">Menu</button>\r\n\t\t\t\t\t<mat-menu #menu10=\"matMenu\">\r\n\t\t\t\t\t\t<button mat-menu-item>Item 1</button>\r\n\t\t\t\t\t\t<button mat-menu-item>Item 2</button>\r\n\t\t\t\t\t</mat-menu>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</kt-code-preview>\r\n\r\n\t\t<kt-code-preview [viewItem]=\"exampleMenuWithIcons\">\r\n\t\t\t<div class=\"example-preview\">\r\n\t\t\t\t<p>\r\n\t\t\t\t\tMenus support displaying\r\n\t\t\t\t\t<code>&ltmat-icon&gt;</code> elements before the menu item text.\r\n\t\t\t\t</p>\r\n\t\t\t\t<div class=\"separator separator-dashed my-6\"></div>\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<button mat-icon-button [matMenuTriggerFor]=\"menu32\">\r\n\t\t\t\t\t\t<mat-icon>more_vert</mat-icon>\r\n\t\t\t\t\t</button>\r\n\t\t\t\t\t<mat-menu #menu32=\"matMenu\">\r\n\t\t\t\t\t\t<button mat-menu-item>\r\n\t\t\t\t\t\t\t<mat-icon>dialpad</mat-icon>\r\n\t\t\t\t\t\t\t<span>Redial</span>\r\n\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t<button mat-menu-item disabled>\r\n\t\t\t\t\t\t\t<mat-icon>voicemail</mat-icon>\r\n\t\t\t\t\t\t\t<span>Check voicemail</span>\r\n\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t<button mat-menu-item>\r\n\t\t\t\t\t\t\t<mat-icon>notifications_off</mat-icon>\r\n\t\t\t\t\t\t\t<span>Disable alerts</span>\r\n\t\t\t\t\t\t</button>\r\n\t\t\t\t\t</mat-menu>\r\n\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</kt-code-preview>\r\n\t</div>\r\n\t<div class=\"col-xl-6\">\r\n\t\t<kt-code-preview [viewItem]=\"exampleNestedMenu\">\r\n\t\t\t<div class=\"example-preview\">\r\n\t\t\t\t<p>\r\n\t\t\t\t\tMaterial supports the ability for an\r\n\t\t\t\t\t<mark>mat-menu-item</mark> to open a\r\n\t\t\t\t\t<mark>sub-menu</mark>. To do so, you have to define your root menu and sub-menus, in addition to setting the\r\n\t\t\t\t\t<mark>[matMenuTriggerFor]</mark> on the mat-menu-item that should trigger the sub-menu\r\n\t\t\t\t</p>\r\n\t\t\t\t<div class=\"separator separator-dashed my-6\"></div>\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<button mat-button [matMenuTriggerFor]=\"animals\">Animal index</button>\r\n\r\n\t\t\t\t\t<mat-menu #animals=\"matMenu\">\r\n\t\t\t\t\t\t<button mat-menu-item [matMenuTriggerFor]=\"vertebrates\">Vertebrates</button>\r\n\t\t\t\t\t\t<button mat-menu-item [matMenuTriggerFor]=\"invertebrates\">Invertebrates</button>\r\n\t\t\t\t\t</mat-menu>\r\n\r\n\t\t\t\t\t<mat-menu #vertebrates=\"matMenu\">\r\n\t\t\t\t\t\t<button mat-menu-item [matMenuTriggerFor]=\"fish\">Fishes</button>\r\n\t\t\t\t\t\t<button mat-menu-item [matMenuTriggerFor]=\"amphibians\">Amphibians</button>\r\n\t\t\t\t\t\t<button mat-menu-item [matMenuTriggerFor]=\"reptiles\">Reptiles</button>\r\n\t\t\t\t\t\t<button mat-menu-item>Birds</button>\r\n\t\t\t\t\t\t<button mat-menu-item>Mammals</button>\r\n\t\t\t\t\t</mat-menu>\r\n\r\n\t\t\t\t\t<mat-menu #invertebrates=\"matMenu\">\r\n\t\t\t\t\t\t<button mat-menu-item>Insects</button>\r\n\t\t\t\t\t\t<button mat-menu-item>Molluscs</button>\r\n\t\t\t\t\t\t<button mat-menu-item>Crustaceans</button>\r\n\t\t\t\t\t\t<button mat-menu-item>Corals</button>\r\n\t\t\t\t\t\t<button mat-menu-item>Arachnids</button>\r\n\t\t\t\t\t\t<button mat-menu-item>Velvet worms</button>\r\n\t\t\t\t\t\t<button mat-menu-item>Horseshoe crabs</button>\r\n\t\t\t\t\t</mat-menu>\r\n\r\n\t\t\t\t\t<mat-menu #fish=\"matMenu\">\r\n\t\t\t\t\t\t<button mat-menu-item>Baikal oilfish</button>\r\n\t\t\t\t\t\t<button mat-menu-item>Bala shark</button>\r\n\t\t\t\t\t\t<button mat-menu-item>Ballan wrasse</button>\r\n\t\t\t\t\t\t<button mat-menu-item>Bamboo shark</button>\r\n\t\t\t\t\t\t<button mat-menu-item>Banded killifish</button>\r\n\t\t\t\t\t</mat-menu>\r\n\r\n\t\t\t\t\t<mat-menu #amphibians=\"matMenu\">\r\n\t\t\t\t\t\t<button mat-menu-item>Sonoran desert toad</button>\r\n\t\t\t\t\t\t<button mat-menu-item>Western toad</button>\r\n\t\t\t\t\t\t<button mat-menu-item>Arroyo toad</button>\r\n\t\t\t\t\t\t<button mat-menu-item>Yosemite toad</button>\r\n\t\t\t\t\t</mat-menu>\r\n\r\n\t\t\t\t\t<mat-menu #reptiles=\"matMenu\">\r\n\t\t\t\t\t\t<button mat-menu-item>Banded Day Gecko</button>\r\n\t\t\t\t\t\t<button mat-menu-item>Banded Gila Monster</button>\r\n\t\t\t\t\t\t<button mat-menu-item>Black Tree Monitor</button>\r\n\t\t\t\t\t\t<button mat-menu-item>Blue Spiny Lizard</button>\r\n\t\t\t\t\t\t<button mat-menu-item disabled>Velociraptor</button>\r\n\t\t\t\t\t</mat-menu>\r\n\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</kt-code-preview>\r\n\t\t<kt-code-preview [viewItem]=\"exampleToggling\">\r\n\t\t\t<div class=\"example-preview\">\r\n\t\t\t\t<span>\r\n\t\t\t\t\tBy default, the menu will display below (y-axis), after (x-axis), and overlapping its trigger. The position can be changed using the\r\n\t\t\t\t\t<mark>xPosition</mark> (\r\n\t\t\t\t\t<mark>before | after</mark>) and\r\n\t\t\t\t\t<mark>yPosition</mark> (\r\n\t\t\t\t\t<mark>above | below</mark>) attributes. The menu can be be forced to not overlap the trigger using\r\n\t\t\t\t\t<code>[overlapTrigger]=\"false\"</code> attribute.\r\n\t\t\t\t</span>\r\n\t\t\t\t<div class=\"separator separator-dashed my-6\"></div>\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<mat-menu #appMenu=\"matMenu\" yPosition=\"above\">\r\n\t\t\t\t\t\t<button mat-menu-item>Settings</button>\r\n\t\t\t\t\t\t<button mat-menu-item>Help</button>\r\n\t\t\t\t\t</mat-menu>\r\n\r\n\t\t\t\t\t<button mat-icon-button [matMenuTriggerFor]=\"appMenu\">\r\n\t\t\t\t\t\t<mat-icon>more_vert</mat-icon>\r\n\t\t\t\t\t</button>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</kt-code-preview>\r\n\t</div>\r\n</div>\r\n","import { Component, OnInit, ChangeDetectionStrategy } from '@angular/core';\r\n\r\nconst basicMenu = {\r\n\t\tbeforeCodeTitle: 'Basic menu',\r\n\t\thtmlCode: `\r\n<button mat-button [matMenuTriggerFor]=\"menu\">Menu</button>\r\n<mat-menu #menu=\"matMenu\">\r\n  <button mat-menu-item>Item 1</button>\r\n  <button mat-menu-item>Item 2</button>\r\n</mat-menu>\r\n`,\r\n\t\ttsCode: `\r\nimport {Component} from '@angular/core';\\n\r\n/**\r\n* @title Basic menu\r\n */\r\n@Component({\r\n  selector: 'menu-overview-example',\r\n  templateUrl: 'menu-overview-example.html',\r\n  styleUrls: ['menu-overview-example.css'],\r\n})\r\nexport class MenuOverviewExample {}\r\n`,\r\n\t\tcssCode: ``,\r\n\t\tviewCode: ``,\r\n\t\tisCodeVisible: false,\r\n\t\tisExampleExpanded: true\r\n\t};\r\n\r\n\r\nconst nestedMenu = {\r\n\tbeforeCodeTitle: 'Nested menu',\r\n\thtmlCode: `\r\n<button mat-button [matMenuTriggerFor]=\"animals\">Animal index</button>\r\n<mat-menu #animals=\"matMenu\">\r\n  <button mat-menu-item [matMenuTriggerFor]=\"vertebrates\">Vertebrates</button>\r\n  <button mat-menu-item [matMenuTriggerFor]=\"invertebrates\">Invertebrates</button>\r\n</mat-menu>\r\n<mat-menu #vertebrates=\"matMenu\">\r\n  <button mat-menu-item [matMenuTriggerFor]=\"fish\">Fishes</button>\r\n  <button mat-menu-item [matMenuTriggerFor]=\"amphibians\">Amphibians</button>\r\n  <button mat-menu-item [matMenuTriggerFor]=\"reptiles\">Reptiles</button>\r\n  <button mat-menu-item>Birds</button>\r\n  <button mat-menu-item>Mammals</button>\r\n</mat-menu>\r\n<mat-menu #invertebrates=\"matMenu\">\r\n  <button mat-menu-item>Insects</button>\r\n  <button mat-menu-item>Molluscs</button>\r\n  <button mat-menu-item>Crustaceans</button>\r\n  <button mat-menu-item>Corals</button>\r\n  <button mat-menu-item>Arachnids</button>\r\n  <button mat-menu-item>Velvet worms</button>\r\n  <button mat-menu-item>Horseshoe crabs</button>\r\n</mat-menu>\r\n<mat-menu #fish=\"matMenu\">\r\n  <button mat-menu-item>Baikal oilfish</button>\r\n  <button mat-menu-item>Bala shark</button>\r\n  <button mat-menu-item>Ballan wrasse</button>\r\n  <button mat-menu-item>Bamboo shark</button>\r\n  <button mat-menu-item>Banded killifish</button>\r\n</mat-menu>\r\n<mat-menu #amphibians=\"matMenu\">\r\n  <button mat-menu-item>Sonoran desert toad</button>\r\n  <button mat-menu-item>Western toad</button>\r\n  <button mat-menu-item>Arroyo toad</button>\r\n  <button mat-menu-item>Yosemite toad</button>\r\n</mat-menu>\r\n<mat-menu #reptiles=\"matMenu\">\r\n  <button mat-menu-item>Banded Day Gecko</button>\r\n  <button mat-menu-item>Banded Gila Monster</button>\r\n  <button mat-menu-item>Black Tree Monitor</button>\r\n  <button mat-menu-item>Blue Spiny Lizard</button>\r\n  <button mat-menu-item disabled>Velociraptor</button>\r\n</mat-menu>\r\n`,\r\n\ttsCode: `\r\nimport {Component} from '@angular/core';\\n\r\n/**\r\n* @title Nested menu\r\n*/\r\n@Component({\r\n  selector: 'nested-menu-example',\r\n  templateUrl: 'nested-menu-example.html',\r\n  styleUrls: ['nested-menu-example.css']\r\n})\r\nexport class NestedMenuExample {}\r\n`,\r\n\tcssCode: ``,\r\n\tviewCode: ``,\r\n\tisCodeVisible: false,\r\n\tisExampleExpanded: true\r\n};\r\n\r\nconst menuWithIcons = {\r\n\t\tbeforeCodeTitle: 'Menu with icons',\r\n\t\thtmlCode: `\r\n<button mat-icon-button [matMenuTriggerFor]=\"menu\">\r\n  <mat-icon>more_vert</mat-icon>\r\n</button>\r\n<mat-menu #menu=\"matMenu\">\r\n  <button mat-menu-item>\r\n    <mat-icon>dialpad</mat-icon>\r\n    <span>Redial</span>\r\n  </button>\r\n  <button mat-menu-item disabled>\r\n    <mat-icon>voicemail</mat-icon>\r\n    <span>Check voicemail</span>\r\n  </button>\r\n  <button mat-menu-item>\r\n    <mat-icon>notifications_off</mat-icon>\r\n    <span>Disable alerts</span>\r\n  </button>\r\n</mat-menu>\r\n`,\r\n\t\ttsCode: `\r\nimport {Component} from '@angular/core';\r\n\r\n/**\r\n* @title Menu with icons\r\n*/\r\n@Component({\r\n  selector: 'menu-icons-example',\r\n  templateUrl: 'menu-icons-example.html',\r\n  styleUrls: ['menu-icons-example.css'],\r\n})\r\nexport class MenuIconsExample {}\r\n`,\r\n\t\tcssCode: ``,\r\n\t\tviewCode: ``,\r\n\t\tisCodeVisible: false,\r\n\t\tisExampleExpanded: true\r\n\t};\r\n\r\n\r\nconst toggling = {\r\n\t\tbeforeCodeTitle: 'Customizing menu position',\r\n\t\thtmlCode: `\r\n<mat-menu #appMenu=\"matMenu\" yPosition=\"above\">\r\n  <button mat-menu-item>Settings</button>\r\n  <button mat-menu-item>Help</button>\r\n</mat-menu>\r\n<button mat-icon-button [matMenuTriggerFor]=\"appMenu\">\r\n  <mat-icon>more_vert</mat-icon>\r\n</button>\r\n`,\r\n\t\ttsCode: `\r\nimport {Component} from '@angular/core';\\n\r\n/**\r\n* @Customizing menu position\r\n */\r\n@Component({\r\n  selector: 'menu-customizing-example',\r\n  templateUrl: 'menu-customizing-example.html',\r\n  styleUrls: ['menu-customizing-example.css'],\r\n})\r\nexport class MenuCustomizingExample {}\r\n`,\r\n\t\tcssCode: ``,\r\n\t\tviewCode: ``,\r\n\t\tisCodeVisible: false,\r\n\t\tisExampleExpanded: true\r\n\t};\r\n\r\n@Component({\r\n\tselector: 'kt-menu',\r\n\ttemplateUrl: './menu.component.html',\r\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class MenuComponent implements OnInit {\r\n\r\n\texampleBasicMenu;\r\n\texampleNestedMenu;\r\n\texampleMenuWithIcons;\r\n\texampleToggling;\r\n\r\n\tngOnInit() {\r\n\t\tthis.exampleBasicMenu = basicMenu;\r\n\t\tthis.exampleNestedMenu = nestedMenu;\r\n\t\tthis.exampleMenuWithIcons = menuWithIcons;\r\n\t\tthis.exampleToggling = toggling;\r\n\t}\r\n}\r\n","<kt-notice [svg]=\"'assets/media/svg/icons/Tools/Compass.svg'\">\r\n\tFor more info please check the components's official demos & documentation\r\n\t<a class=\"font-weight-bold\" href=\"https://material.angular.io/components/sidenav/overview\" target=\"_blank\">demos & documentation</a>\r\n</kt-notice>\r\n\r\n<div class=\"row\">\r\n\t<div class=\"col-xl-6\">\r\n\t\t<kt-code-preview [viewItem]=\"exampleBasicSidenav\">\r\n\t\t\t<div class=\"example-preview\">\r\n\t\t\t\t<p>\r\n\t\t\t\t\tAngular Material provides two sets of components designed to add collapsible side content (often navigation, though it can be any content) alongside some primary content. These are the sidenav and drawer components.\r\n\t\t\t\t</p>\r\n\t\t\t\t<p>\r\n\t\t\t\t\tThe sidenav components are designed to add side content to a fullscreen app. To set up a sidenav we use three components:\r\n\t\t\t\t\t<code>&lt;mat-sidenav-container&gt;</code> which acts as a structural container for our content and sidenav,\r\n\t\t\t\t\t<code>&lt;mat-sidenav-content&gt;</code> which represents the main content, and\r\n\t\t\t\t\t<code>&lt;mat-sidenav&gt;</code> which represents the added side content.\r\n\t\t\t\t</p>\r\n\t\t\t\t<div class=\"separator separator-dashed my-6\"></div>\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<mat-sidenav-container class=\"example-container\" *ngIf=\"shouldRun\">\r\n\t\t\t\t\t\t<mat-sidenav mode=\"side\" opened>Sidenav content</mat-sidenav>\r\n\t\t\t\t\t\t<mat-sidenav-content>Main content</mat-sidenav-content>\r\n\t\t\t\t\t</mat-sidenav-container>\r\n\r\n\t\t\t\t\t<div>\r\n\t\t\t\t\t\t<a href=\"https://stackblitz.com/angular/vqvkrekvgga\" target=\"_blank\">\r\n\t\t\t\t\t\t\tPlease open on Stackblitz to see result\r\n\t\t\t\t\t\t</a>\r\n\t\t\t\t\t</div>\r\n\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</kt-code-preview>\r\n\t\t<kt-code-preview [viewItem]=\"exampleAutosizeSidenav\">\r\n\t\t\t<div class=\"example-preview\">\r\n\t\t\t\t<p>\r\n\t\t\t\t\tBy default, Material will only measure and resize the drawer container in a few key moments (on open, on window resize, on mode change) in order to avoid layout thrashing, however there are cases where this can be problematic. If your app requires for a drawer to change its width while it is open, you can use the\r\n\t\t\t\t\t<mark>autosize</mark> option to tell Material to continue measuring it. Note that you should use this option\r\n\t\t\t\t\t<b>at your own risk</b>, because it could cause performance issues.\r\n\t\t\t\t</p>\r\n\t\t\t\t<div class=\"separator separator-dashed my-6\"></div>\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<mat-drawer-container class=\"example-container\" autosize>\r\n\t\t\t\t\t\t<mat-drawer #drawer class=\"example-sidenav\" mode=\"side\">\r\n\t\t\t\t\t\t\t<p>Auto-resizing sidenav</p>\r\n\t\t\t\t\t\t\t<p *ngIf=\"showFiller\">Lorem, ipsum dolor sit amet consectetur.</p>\r\n\t\t\t\t\t\t\t<button (click)=\"showFiller = !showFiller\" mat-raised-button>\r\n\t\t\t\t\t\t\t\tToggle extra text\r\n\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t</mat-drawer>\r\n\r\n\t\t\t\t\t\t<div class=\"example-sidenav-content\">\r\n\t\t\t\t\t\t\t<button type=\"button\" mat-button (click)=\"drawer.toggle()\">\r\n\t\t\t\t\t\t\t\tToggle sidenav\r\n\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t</mat-drawer-container>\r\n\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</kt-code-preview>\r\n\t</div>\r\n\t<div class=\"col-xl-6\">\r\n\t\t<kt-code-preview [viewItem]=\"exampleBasicDrawer\">\r\n\t\t\t<div class=\"example-preview\">\r\n\t\t\t\t<p>\r\n\t\t\t\t\tThe drawer component is designed to add side content to a small section of your app. This is accomplished using the\r\n\t\t\t\t\t<code>&lt;mat-drawer-container&gt;</code>,\r\n\t\t\t\t\t<code>&lt;mat-drawer-content&gt;</code>, and\r\n\t\t\t\t\t<code>&lt;mat-drawer&gt;</code> components, which are analogous to their sidenav equivalents. Rather than adding side content to the app as a whole, these are designed to add side content to a small section of your app. They support almost all of the same features, but do not support fixed positioning.\r\n\t\t\t\t</p>\r\n\t\t\t\t<div class=\"separator separator-dashed my-6\"></div>\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<mat-drawer-container class=\"example-container\">\r\n\t\t\t\t\t\t<mat-drawer mode=\"side\" opened=\"true\">Drawer content</mat-drawer>\r\n\t\t\t\t\t\t<mat-drawer-content>Main content</mat-drawer-content>\r\n\t\t\t\t\t</mat-drawer-container>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</kt-code-preview>\r\n\t</div>\r\n</div>\r\n","import { Component, OnInit, ChangeDetectionStrategy } from '@angular/core';\r\n\r\nconst basicSidenav = {\r\n\t\tbeforeCodeTitle: 'Basic sidenav',\r\n\t\thtmlCode: `\r\n<mat-sidenav-container class=\"example-container\" *ngIf=\"shouldRun\">\r\n  <mat-sidenav mode=\"side\" opened>Sidenav content</mat-sidenav>\r\n  <mat-sidenav-content>Main content</mat-sidenav-content>\r\n</mat-sidenav-container>\r\n<div *ngIf=\"!shouldRun\">Please open on Stackblitz to see result</div>`,\r\n\t\ttsCode: `\r\nimport {Component} from '@angular/core';\\n\r\n/** @title Basic sidenav */\r\n@Component({\r\n  selector: 'sidenav-overview-example',\r\n  templateUrl: 'sidenav-overview-example.html',\r\n  styleUrls: ['sidenav-overview-example.css'],\r\n})\r\nexport class SidenavOverviewExample {\r\n  shouldRun = [/(^|\\.)plnkr\\.co$/, /(^|\\.)stackblitz\\.io$/].some(h => h.test(window.location.host));\r\n}\r\n`,\r\n\t\tcssCode: ``,\r\n\t\tviewCode: ``,\r\n\t\tisCodeVisible: false,\r\n\t\tisExampleExpanded: true\r\n\t};\r\n\r\nconst basicDrawer = {\r\n\t\tbeforeCodeTitle: 'Basic drawer',\r\n\t\thtmlCode: `\r\n<mat-drawer-container class=\"example-container\">\r\n  <mat-drawer mode=\"side\" opened=\"true\">Drawer content</mat-drawer>\r\n  <mat-drawer-content>Main content</mat-drawer-content>\r\n</mat-drawer-container>\r\n`,\r\n\t\ttsCode: `\r\nimport {Component} from '@angular/core';\\n\r\n/** @title Basic drawer */\r\n@Component({\r\n  selector: 'sidenav-drawer-overview-example',\r\n  templateUrl: 'sidenav-drawer-overview-example.html',\r\n  styleUrls: ['sidenav-drawer-overview-example.css'],\r\n})\r\nexport class SidenavDrawerOverviewExample {}\r\n`,\r\n\t\tcssCode: ``,\r\n\t\tviewCode: ``,\r\n\t\tisCodeVisible: false,\r\n\t\tisExampleExpanded: true\r\n\t};\r\n\r\nconst autosizeSidenav = {\r\n\t\tbeforeCodeTitle: 'Autosize sidenav',\r\n\t\thtmlCode: `\r\n<mat-drawer-container class=\"example-container\" autosize>\r\n  <mat-drawer #drawer class=\"example-sidenav\" mode=\"side\">\r\n    <p>Auto-resizing sidenav</p>\r\n    <p *ngIf=\"showFiller\">Lorem, ipsum dolor sit amet consectetur.</p>\r\n    <button (click)=\"showFiller = !showFiller\" mat-raised-button>\r\n      Toggle extra text\r\n    </button>\r\n  </mat-drawer>\\n\r\n  <div class=\"example-sidenav-content\">\r\n    <button type=\"button\" mat-button (click)=\"drawer.toggle()\">\r\n      Toggle sidenav\r\n    </button>\r\n  </div>\r\n</mat-drawer-container>\r\n`,\r\n\t\ttsCode: `\r\nimport {Component} from '@angular/core';\\n\r\n/**\r\n* @title Autosize sidenav\r\n*/\r\n@Component({\r\n  selector: 'sidenav-autosize-example',\r\n  templateUrl: 'sidenav-autosize-example.html',\r\n  styleUrls: ['sidenav-autosize-example.css'],\r\n})\r\nexport class SidenavAutosizeExample {\r\n  showFiller = false;\r\n}\r\n`,\r\n\t\t\tcssCode: `\r\n.example-container {\r\n  width: 500px;\r\n  height: 300px;\r\n  border: 1px solid rgba(0, 0, 0, 0.5);\r\n}\r\n.example-sidenav-content {\r\n  display: flex;\r\n  height: 100%;\r\n  align-items: center;\r\n  justify-content: center;\r\n}\r\n.example-sidenav {\r\n  padding: 20px;\r\n}\r\n\t\t\t`,\r\n\t\tviewCode: ``,\r\n\t\tisCodeVisible: false,\r\n\t\tisExampleExpanded: true\r\n\t};\r\n\r\n@Component({\r\n\tselector: 'kt-sidenav',\r\n\ttemplateUrl: './sidenav.component.html',\r\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\r\n\tstyles: [`\r\n\t.example-container {\r\n\t\twidth: 400px;\r\n\t\theight: 200px;\r\n\t\tmargin: 10px;\r\n\t\tborder: 1px solid #555;\r\n\t  }\r\n\t  .example-container {\r\n\t\twidth: 500px;\r\n\t\theight: 300px;\r\n\t\tborder: 1px solid rgba(0, 0, 0, 0.5);\r\n\t  }\r\n\t  .example-sidenav-content {\r\n\t\tdisplay: flex;\r\n\t\theight: 100%;\r\n\t\talign-items: center;\r\n\t\tjustify-content: center;\r\n\t  }\r\n\t  .example-sidenav {\r\n\t\tpadding: 20px;\r\n\t  }\r\n\t`]\r\n})\r\nexport class SidenavComponent implements OnInit {\r\n\r\n\texampleBasicSidenav;\r\n\texampleBasicDrawer;\r\n\texampleAutosizeSidenav;\r\n\r\n\tshouldRun = [/(^|\\.)plnkr\\.co$/, /(^|\\.)stackblitz\\.io$/].some(h => h.test(window.location.host));\r\n\tshowFiller = false;\r\n\r\n\tngOnInit() {\r\n\t\tthis.exampleBasicSidenav = basicSidenav;\r\n\t\tthis.exampleBasicDrawer = basicDrawer;\r\n\t\tthis.exampleAutosizeSidenav = autosizeSidenav;\r\n\t}\r\n}\r\n","<kt-notice [svg]=\"'assets/media/svg/icons/Tools/Compass.svg'\">\r\n\tFor more info please check the components's official demos & documentation\r\n\t<a class=\"font-weight-bold\" href=\"https://material.angular.io/components/toolbar/overview\" target=\"_blank\">demos & documentation</a>\r\n</kt-notice>\r\n\r\n<div class=\"row\">\r\n\t<div class=\"col-xl-6\">\r\n\t\t<kt-code-preview [viewItem]=\"exampleSingleRow\">\r\n\t\t\t<div class=\"example-preview\">\r\n\t\t\t\t<p>\r\n\t\t\t\t\t<code>&lt;mat-toolbar&gt;</code> is a container for headers, titles, or actions.\r\n\t\t\t\t</p>\r\n\t\t\t\t<p>\r\n\t\t\t\t\t<b>Single row:</b>\r\n\t\t\t\t\tIn the most situations, a toolbar will be placed at the top of your application and will only have a single row that includes the title of your application.\r\n\t\t\t\t</p>\r\n\t\t\t\t<div class=\"separator separator-dashed my-6\"></div>\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<mat-toolbar>\r\n\t\t\t\t\t\t<span>My Application</span>\r\n\t\t\t\t\t</mat-toolbar>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</kt-code-preview>\r\n\t\t<kt-code-preview [viewItem]=\"examplMultipleRows\">\r\n\t\t\t<div class=\"example-preview\">\r\n\t\t\t\t<span>\r\n\t\t\t\t\tThe Material Design specifications describe that toolbars can also have multiple rows. Creating toolbars with multiple rows in Angular Material can be done by placing\r\n\t\t\t\t\t<code>&lt;mat-toolbar-row&gt;</code> elements inside of a\r\n\t\t\t\t\t<code>&lt;mat-toolbar&gt;</code>.\r\n\t\t\t\t</span>\r\n\t\t\t\t<div class=\"separator separator-dashed my-6\"></div>\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<mat-toolbar>\r\n\t\t\t\t\t\t<mat-toolbar-row>\r\n\t\t\t\t\t\t\t<span>First Row</span>\r\n\t\t\t\t\t\t</mat-toolbar-row>\r\n\r\n\t\t\t\t\t\t<mat-toolbar-row>\r\n\t\t\t\t\t\t\t<span>Second Row</span>\r\n\t\t\t\t\t\t</mat-toolbar-row>\r\n\t\t\t\t\t</mat-toolbar>\r\n\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</kt-code-preview>\r\n\t</div>\r\n\t<div class=\"col-xl-6\">\r\n\t\t<kt-code-preview [viewItem]=\"examplMultipleRows2\">\r\n\t\t\t<div class=\"example-preview\">\r\n\t\t\t\t<span>\r\n\t\t\t\t\t<b>Note:</b> Placing content outside of a\r\n\t\t\t\t\t<code>&lt;mat-toolbar-row&gt;</code> when multiple rows are specified is not supported.\r\n\t\t\t\t</span>\r\n\t\t\t\t<div class=\"separator separator-dashed my-6\"></div>\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<mat-toolbar color=\"primary\">\r\n\t\t\t\t\t\t<mat-toolbar-row>\r\n\t\t\t\t\t\t\t<span>Custom Toolbar</span>\r\n\t\t\t\t\t\t</mat-toolbar-row>\r\n\r\n\t\t\t\t\t\t<mat-toolbar-row>\r\n\t\t\t\t\t\t\t<span>Second Line</span>\r\n\t\t\t\t\t\t\t<span class=\"example-spacer\"></span>\r\n\t\t\t\t\t\t\t<mat-icon class=\"example-icon\">verified_user</mat-icon>\r\n\t\t\t\t\t\t</mat-toolbar-row>\r\n\r\n\t\t\t\t\t\t<mat-toolbar-row>\r\n\t\t\t\t\t\t\t<span>Third Line</span>\r\n\t\t\t\t\t\t\t<span class=\"example-spacer\"></span>\r\n\t\t\t\t\t\t\t<mat-icon class=\"example-icon\">favorite</mat-icon>\r\n\t\t\t\t\t\t\t<mat-icon class=\"example-icon\">delete</mat-icon>\r\n\t\t\t\t\t\t</mat-toolbar-row>\r\n\t\t\t\t\t</mat-toolbar>\r\n\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</kt-code-preview>\r\n\t</div>\r\n</div>\r\n","import { Component, OnInit, ChangeDetectionStrategy } from '@angular/core';\r\n\r\nconst singleRow = {\r\n\t\tbeforeCodeTitle: 'Single row',\r\n\t\thtmlCode: `\r\n<mat-toolbar>\r\n  <span>My Application</span>\r\n</mat-toolbar>\r\n`,\r\n\t\ttsCode: `\r\nimport {Component} from '@angular/core';\\n\r\n/**\r\n* @title Basic toolbar : single row\r\n*/\r\n@Component({\r\n  selector: 'toolbar-overview-example',\r\n  templateUrl: 'toolbar-overview-example.html',\r\n  styleUrls: ['toolbar-overview-example.css'],\r\n})\r\nexport class ToolbarOverviewExample {}\r\n`,\r\n\t\tcssCode: ``,\r\n\t\tviewCode: ``,\r\n\t\tisCodeVisible: false,\r\n\t\tisExampleExpanded: true\r\n\t};\r\n\r\n\r\nconst multipleRows = {\r\n\tbeforeCodeTitle: 'Multiple rows',\r\n\t\thtmlCode: `\r\n<mat-toolbar>\r\n  <mat-toolbar-row>\r\n    <span>First Row</span>\r\n  </mat-toolbar-row>\r\n  <mat-toolbar-row>\r\n    <span>Second Row</span>\r\n  </mat-toolbar-row>\r\n</mat-toolbar>\r\n`,\r\n\ttsCode: `\r\nimport {Component} from '@angular/core';\\n\r\n/**\r\n* @title Basic toolbar : multiple rows\r\n*/\r\n@Component({\r\nselector: 'toolbar-multi-example',\r\ntemplateUrl: 'toolbar-multi-example.html',\r\nstyleUrls: ['toolbar-multi-example.css'],\r\n})\r\nexport class ToolbarMultiExample {}\r\n`,\r\n\tcssCode: ``,\r\n\tviewCode: ``,\r\n\tisCodeVisible: false,\r\n\tisExampleExpanded: true\r\n\t};\r\n\r\n\r\nconst multipleRows2 = {\r\n\tbeforeCodeTitle: 'Multi-row toolbar',\r\n\t\thtmlCode: `\r\n<mat-toolbar color=\"primary\">\r\n  <mat-toolbar-row>\r\n    <span>Custom Toolbar</span>\r\n  </mat-toolbar-row>\r\n  <mat-toolbar-row>\r\n    <span>Second Line</span>\r\n    <span class=\"example-spacer\"></span>\r\n    <mat-icon class=\"example-icon\">verified_user</mat-icon>\r\n  </mat-toolbar-row>\r\n  <mat-toolbar-row>\r\n    <span>Third Line</span>\r\n    <span class=\"example-spacer\"></span>\r\n    <mat-icon class=\"example-icon\">favorite</mat-icon>\r\n    <mat-icon class=\"example-icon\">delete</mat-icon>\r\n  </mat-toolbar-row>\r\n</mat-toolbar>\r\n`,\r\n\ttsCode: `\r\nimport {Component} from '@angular/core';\\n\r\n/**\r\n* @title Basic toolbar : Multi-row toolbar\r\n*/\r\n@Component({\r\nselector: 'toolbar-multi-example',\r\ntemplateUrl: 'toolbar-multi-example.html',\r\nstyleUrls: ['toolbar-multi-example.css'],\r\n})\r\nexport class ToolbarMultiExample {}\r\n`,\r\n\t\t\tcssCode: `\r\n.example-icon {\r\n  padding: 0 14px;\r\n}\r\n.example-spacer {\r\n  flex: 1 1 auto;\r\n}`,\r\n\tviewCode: ``,\r\n\tisCodeVisible: false,\r\n\tisExampleExpanded: true\r\n};\r\n@Component({\r\n\tselector: 'kt-toolbar',\r\n\ttemplateUrl: './toolbar.component.html',\r\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\r\n\tstyles: [`\r\n\t.example-icon {\r\n\t\tpadding: 0 14px;\r\n\t}\r\n\t.example-spacer {\r\n\t\tflex: 1 1 auto;\r\n\t}\r\n\t`]\r\n})\r\nexport class ToolbarComponent implements OnInit {\r\n\r\n\texampleSingleRow;\r\n\texamplMultipleRows;\r\n\texamplMultipleRows2;\r\n\r\n\tngOnInit() {\r\n\t\tthis.exampleSingleRow = singleRow;\r\n\t\tthis.examplMultipleRows = multipleRows;\r\n\t\tthis.examplMultipleRows2 = multipleRows2;\r\n\t}\r\n}\r\n","<mat-nav-list>\r\n\t\t<a href=\"https://keep.google.com/\" mat-list-item (click)=\"openLink($event)\">\r\n\t\t  <span mat-line>Google Keep</span>\r\n\t\t  <span mat-line>Add to a note</span>\r\n\t\t</a>\r\n\t  \r\n\t\t<a href=\"https://docs.google.com/\" mat-list-item (click)=\"openLink($event)\">\r\n\t\t  <span mat-line>Google Docs</span>\r\n\t\t  <span mat-line>Embed in a document</span>\r\n\t\t</a>\r\n\t  \r\n\t\t<a href=\"https://plus.google.com/\" mat-list-item (click)=\"openLink($event)\">\r\n\t\t  <span mat-line>Google Plus</span>\r\n\t\t  <span mat-line>Share with your friends</span>\r\n\t\t</a>\r\n\t  \r\n\t\t<a href=\"https://hangouts.google.com/\" mat-list-item (click)=\"openLink($event)\">\r\n\t\t  <span mat-line>Google Hangouts</span>\r\n\t\t  <span mat-line>Show to your coworkers</span>\r\n\t\t</a>\r\n\t  </mat-nav-list>\r\n\t  \r\n\t  \r\n\t  <!-- Copyright 2018 Google Inc. All Rights Reserved.\r\n\t\t  Use of this source code is governed by an MIT-style license that\r\n\t\t  can be found in the LICENSE file at http://angular.io/license -->","import { Component } from '@angular/core';\r\nimport { MatBottomSheet, MatBottomSheetRef } from '@angular/material/bottom-sheet';\r\n\r\n\r\n@Component({\r\n\tselector: 'kt-bottom-sheet-example',\r\n\ttemplateUrl: './bottom-sheet-example.component.html'\r\n})\r\nexport class BottomSheetExampleComponent {\r\n\tconstructor(private bottomSheetRef: MatBottomSheetRef<BottomSheetExampleComponent>) {}\r\n\r\n\topenLink(event: MouseEvent): void {\r\n\t  this.bottomSheetRef.dismiss();\r\n\t  event.preventDefault();\r\n\t}\r\n}\r\n","<kt-notice [svg]=\"'assets/media/svg/icons/Tools/Compass.svg'\">\r\n\tFor more info please check the components's official demos & documentation\r\n\t<a class=\"font-weight-bold\" href=\"https://material.angular.io/components/bottom-sheet/\" target=\"_blank\">demos & documentation</a>\r\n</kt-notice>\r\n\r\n<div class=\"row\">\r\n\t<div class=\"col-xl-12\">\r\n\t\t<kt-code-preview [viewItem]=\"exampleBasic\">\r\n\t\t\t<div class=\"example-preview\">\r\n\t\t\t\t<span>\r\n\t\t\t\t\tThe\r\n\t\t\t\t\t<code>MatBottomSheet</code> service can be used to open Material Design panels to the bottom of the screen. These panels are intended primarily as an interaction on mobile devices where they can be used as an alternative to dialogs and menus.\r\n\t\t\t\t</span>\r\n\t\t\t\t<span>\r\n\t\t\t\t\t\tYou can open a bottom sheet by calling the <code>open</code> method with a component to be loaded and an optional config object. The <code>open</code> method will return an instance of <code>MatBottomSheetRef</code></span>\r\n\t\t\t\t<div class=\"separator separator-dashed my-6\"></div>\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<p>You have receive a file called \"cat-picture.jpeg\".</p>\r\n\t\t\t\t\t<button mat-raised-button (click)=\"openBottomSheet()\">Open file</button>\r\n\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</kt-code-preview>\r\n\t</div>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { MatBottomSheetRef, MatBottomSheet } from '@angular/material/bottom-sheet';\r\nimport { BottomSheetExampleComponent } from './bottom-sheet-example/bottom-sheet-example.component';\r\n\r\nconst basic = {\r\n\t\tbeforeCodeTitle: 'Bottom Sheet Overview',\r\n\t\thtmlCode: `\r\nimport {Component} from '@angular/core';\r\nimport {MatBottomSheet, MatBottomSheetRef} from '@angular/material';\\n\r\n/**\r\n* @title Bottom Sheet Overview\r\n@Component({\r\n  selector: 'bottom-sheet-overview-example',\r\n  templateUrl: 'bottom-sheet-overview-example.html',\r\n  styleUrls: ['bottom-sheet-overview-example.css'],\r\n})\r\nexport class BottomSheetOverviewExample {\r\n  constructor(private bottomSheet: MatBottomSheet) {}\r\n\r\n  openBottomSheet(): void {\r\n    this.bottomSheet.open(BottomSheetOverviewExampleSheet);\r\n  }\r\n}\\n\r\n\r\n@Component({\r\n  selector: 'bottom-sheet-overview-example-sheet',\r\n  templateUrl: 'bottom-sheet-overview-example-sheet.html',\r\n})\r\nexport class BottomSheetOverviewExampleSheet {\r\n  constructor(private bottomSheetRef: MatBottomSheetRef<BottomSheetOverviewExampleSheet>) {}\r\n\r\n  openLink(event: MouseEvent): void {\r\n    this.bottomSheetRef.dismiss();\r\n    event.preventDefault();\r\n  }\r\n}`,\r\n\t\tcssCode: ``,\r\n\t\tviewCode: ``,\r\n\t\tisCodeVisible: false,\r\n\t\tisExampleExpanded: true\r\n\t};\r\n\r\n\r\n@Component({\r\n\tselector: 'kt-bottom-sheet',\r\n\ttemplateUrl: './bottom-sheet.component.html'\r\n})\r\nexport class BottomSheetComponent implements OnInit {\r\n\r\n\texampleBasic;\r\n\tconstructor(private bottomSheet: MatBottomSheet) {}\r\n\r\n\topenBottomSheet(): void {\r\n\t  this.bottomSheet.open(BottomSheetExampleComponent);\r\n\t}\r\n\r\n\tngOnInit() {\r\n\t\tthis.exampleBasic = basic;\r\n\t}\r\n}\r\n","\n\t\t<div class=\"col-xl-12\">\n\t\t\t<div class=\"col-xl-12\">\n\t\t\t\t<div class=\"modal3-container\">\n\t\t\t\t\t<h1 mat-dialog-title>Favorite Animal</h1>\n\t\t\t\t\t<h2 mat-dialog-title>Install Angular</h2>\n\t\t\t\t\t<mat-dialog-content>\n\t\t\t\t\t\t<h3>DEVELOP ACROSS ALL PLATFORMS</h3>\n\t\t\t\t\t\t<p>Learn one way to build applications with Angular and reuse your code and abilities to build\n\t\t\t\t\t\t\tapps for any deployment target. For web, mobile web, native mobile and native desktop.</p>\n\t\t\t\t\t\t<h3>SPEED &amp; PERFORMANCE</h3>\n\t\t\t\t\t\t<p>Achieve the maximum speed possible on the Web Platform today, and take it further, via Web\n\t\t\t\t\t\t\tWorkers and server-side rendering. Angular puts you in control over scalability. Meet huge data requirements\n\t\t\t\t\t\t\tby building data models on RxJS, Immutable.js or another push-model.</p>\n\t\t\t\t\t\t<h3>INCREDIBLE TOOLING</h3>\n\t\t\t\t\t\t<p>Build features quickly with simple, declarative templates. Extend the template language with your own\n\t\t\t\t\t\t\tcomponents and use a wide array of existing components. Get immediate Angular-specific help and feedback\n\t\t\t\t\t\t\twith nearly every IDE and editor. All this comes together so you can focus on building amazing apps rather\n\t\t\t\t\t\t\tthan trying to make the code work.</p>\n\t\t\t\t\t\t<h3>LOVED BY MILLIONS</h3>\n\t\t\t\t\t\t<p>From prototype through global deployment, Angular delivers the productivity and scalable infrastructure\n\t\t\t\t\t\t\tthat supports Google's largest applications.</p>\n\t\t\t\t\t</mat-dialog-content>\n\t\t\t\t\t<mat-dialog-actions>\n\t\t\t\t\t\t<button mat-button mat-dialog-close>Cancel</button>\n\t\t\t\t\t\t<button mat-button [mat-dialog-close]=\"true\" cdkFocusInitial>Install</button>\n\t\t\t\t\t</mat-dialog-actions>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>","\n\t\t<div class=\"col-xl-12\">\n\t\t\t<div class=\"col-xl-12\">\n\t\t\t\t<div class=\"modal2-container\">\n\t\t\t\t\t<h1 mat-dialog-title>Favorite Animal</h1>\n\t\t\t\t\t<div mat-dialog-content>\n\t\t\t\t\t\tMy favorite animal is:\n\t\t\t\t\t\t<ul>\n\t\t\t\t\t\t\t<li>\n\t\t\t\t\t\t\t\t<span *ngIf=\"data.animal === 'panda'\">&#10003;</span> Panda\n\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t\t<li>\n\t\t\t\t\t\t\t\t<span *ngIf=\"data.animal === 'unicorn'\">&#10003;</span> Unicorn\n\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t\t<li>\n\t\t\t\t\t\t\t\t<span *ngIf=\"data.animal === 'lion'\">&#10003;</span> Lion\n\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t</ul>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t","\n\t\t<div class=\"col-xl-12\">\n\t\t\t<div class=\"col-xl-12\">\n\t\t\t\t<br/>\n\t\t\t\t<h1 mat-dialog-title>Hi {{data.name}}</h1>\n\t\t\t\t<div mat-dialog-content>\n\t\t\t\t\t<p>What's your favorite animal?</p>\n\t\t\t\t\t<mat-form-field>\n\t\t\t\t\t\t<input matInput [(ngModel)]=\"data.animal\">\n\t\t\t\t\t</mat-form-field>\n\t\t\t\t</div>\n\t\t\t\t<div mat-dialog-actions>\n\t\t\t\t\t<button mat-button (click)=\"onNoClick()\">No Thanks</button>\n\t\t\t\t\t<button mat-button [mat-dialog-close]=\"data.animal\" cdkFocusInitial>Ok</button>\n\t\t\t\t</div>\n\t\t\t\t<br/>\n\t\t\t</div>\n\t\t</div>","<kt-notice [svg]=\"'assets/media/svg/icons/Tools/Compass.svg'\">\r\n\tFor more info please check the components's official demos & documentation\r\n\t<a class=\"font-weight-bold\" href=\"https://material.angular.io/components/dialog/overview\" target=\"_blank\">demos & documentation</a>\r\n</kt-notice>\r\n\r\n<div class=\"row\">\r\n\t<div class=\"col-xl-6\">\r\n\t\t<kt-code-preview [viewItem]=\"exampleBasic\">\r\n\t\t\t<div class=\"example-preview\">\r\n\t\t\t\t<span>\r\n\t\t\t\t\tThe\r\n\t\t\t\t\t<mark>MatDialog</mark> service can be used to open modal dialogs with Material Design styling and animations.\r\n\t\t\t\t</span>\r\n\t\t\t\t<div class=\"separator separator-dashed my-6\"></div>\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<ol>\r\n\t\t\t\t\t\t<li>\r\n\t\t\t\t\t\t  <mat-form-field>\r\n\t\t\t\t\t\t\t<input matInput [(ngModel)]=\"name\" placeholder=\"What's your name?\">\r\n\t\t\t\t\t\t  </mat-form-field>\r\n\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t<li>\r\n\t\t\t\t\t\t  <button mat-raised-button (click)=\"openDialog()\">Pick one</button>\r\n\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t<li *ngIf=\"animal$ | async as anim\">\r\n\t\t\t\t\t\t  You chose: {{anim}}\r\n\t\t\t\t\t\t</li>\r\n\t\t\t\t\t  </ol>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</kt-code-preview>\r\n\t\t<kt-code-preview [viewItem]=\"exampleInjecting\">\r\n\t\t\t<div class=\"example-preview\">\r\n\t\t\t\t<span>\r\n\t\t\t\t\tTo access the data in your dialog component, you have to use the\r\n\t\t\t\t\t<mark>MAT_DIALOG_DATA</mark> injection token\r\n\t\t\t\t</span>\r\n\t\t\t\t<div class=\"separator separator-dashed my-6\"></div>\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<button mat-button (click)=\"openDialog2()\">Open dialog</button>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</kt-code-preview>\r\n\t</div>\r\n\t<div class=\"col-xl-6\">\r\n\t\t<kt-code-preview [viewItem]=\"examplHeader\">\r\n\t\t\t<div class=\"example-preview\">\r\n\t\t\t\t<p>\r\n\t\t\t\t\tOnce a dialog opens, the dialog will automatically focus the first tabbable element.\r\n\t\t\t\t</p>\r\n\t\t\t\t<p>\r\n\t\t\t\t\tYou can control which elements are tab stops with the\r\n\t\t\t\t\t<mark>tabindex</mark> attribute\r\n\t\t\t\t</p>\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<button mat-button (click)=\"openDialog3()\">Open dialog</button>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</kt-code-preview>\r\n\t</div>\r\n</div>\r\n","import { ChangeDetectionStrategy, Component, Inject, OnInit } from '@angular/core';\r\nimport { MAT_DIALOG_DATA, MatDialog, MatDialogRef } from '@angular/material/dialog';\r\nimport { BehaviorSubject, Observable } from 'rxjs';\r\n\r\n@Component({\r\n\tselector: 'kt-modal3',\r\n\ttemplate: `\r\n\t\t<div class=\"col-xl-12\">\r\n\t\t\t<div class=\"col-xl-12\">\r\n\t\t\t\t<div class=\"modal3-container\">\r\n\t\t\t\t\t<h1 mat-dialog-title>Favorite Animal</h1>\r\n\t\t\t\t\t<h2 mat-dialog-title>Install Angular</h2>\r\n\t\t\t\t\t<mat-dialog-content>\r\n\t\t\t\t\t\t<h3>DEVELOP ACROSS ALL PLATFORMS</h3>\r\n\t\t\t\t\t\t<p>Learn one way to build applications with Angular and reuse your code and abilities to build\r\n\t\t\t\t\t\t\tapps for any deployment target. For web, mobile web, native mobile and native desktop.</p>\r\n\t\t\t\t\t\t<h3>SPEED &amp; PERFORMANCE</h3>\r\n\t\t\t\t\t\t<p>Achieve the maximum speed possible on the Web Platform today, and take it further, via Web\r\n\t\t\t\t\t\t\tWorkers and server-side rendering. Angular puts you in control over scalability. Meet huge data requirements\r\n\t\t\t\t\t\t\tby building data models on RxJS, Immutable.js or another push-model.</p>\r\n\t\t\t\t\t\t<h3>INCREDIBLE TOOLING</h3>\r\n\t\t\t\t\t\t<p>Build features quickly with simple, declarative templates. Extend the template language with your own\r\n\t\t\t\t\t\t\tcomponents and use a wide array of existing components. Get immediate Angular-specific help and feedback\r\n\t\t\t\t\t\t\twith nearly every IDE and editor. All this comes together so you can focus on building amazing apps rather\r\n\t\t\t\t\t\t\tthan trying to make the code work.</p>\r\n\t\t\t\t\t\t<h3>LOVED BY MILLIONS</h3>\r\n\t\t\t\t\t\t<p>From prototype through global deployment, Angular delivers the productivity and scalable infrastructure\r\n\t\t\t\t\t\t\tthat supports Google's largest applications.</p>\r\n\t\t\t\t\t</mat-dialog-content>\r\n\t\t\t\t\t<mat-dialog-actions>\r\n\t\t\t\t\t\t<button mat-button mat-dialog-close>Cancel</button>\r\n\t\t\t\t\t\t<button mat-button [mat-dialog-close]=\"true\" cdkFocusInitial>Install</button>\r\n\t\t\t\t\t</mat-dialog-actions>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>`,\r\n})\r\nexport class Modal3Component {\r\n}\r\n\r\n@Component({\r\n\tselector: 'kt-modal2',\r\n\ttemplate: `\r\n\t\t<div class=\"col-xl-12\">\r\n\t\t\t<div class=\"col-xl-12\">\r\n\t\t\t\t<div class=\"modal2-container\">\r\n\t\t\t\t\t<h1 mat-dialog-title>Favorite Animal</h1>\r\n\t\t\t\t\t<div mat-dialog-content>\r\n\t\t\t\t\t\tMy favorite animal is:\r\n\t\t\t\t\t\t<ul>\r\n\t\t\t\t\t\t\t<li>\r\n\t\t\t\t\t\t\t\t<span *ngIf=\"data.animal === 'panda'\">&#10003;</span> Panda\r\n\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t\t<li>\r\n\t\t\t\t\t\t\t\t<span *ngIf=\"data.animal === 'unicorn'\">&#10003;</span> Unicorn\r\n\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t\t<li>\r\n\t\t\t\t\t\t\t\t<span *ngIf=\"data.animal === 'lion'\">&#10003;</span> Lion\r\n\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t</ul>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t`,\r\n})\r\nexport class Modal2Component {\r\n\tconstructor(@Inject(MAT_DIALOG_DATA) public data: any) {\r\n\t}\r\n}\r\n\r\n@Component({\r\n\tselector: 'kt-modal',\r\n\ttemplate: `\r\n\t\t<div class=\"col-xl-12\">\r\n\t\t\t<div class=\"col-xl-12\">\r\n\t\t\t\t<br/>\r\n\t\t\t\t<h1 mat-dialog-title>Hi {{data.name}}</h1>\r\n\t\t\t\t<div mat-dialog-content>\r\n\t\t\t\t\t<p>What's your favorite animal?</p>\r\n\t\t\t\t\t<mat-form-field>\r\n\t\t\t\t\t\t<input matInput [(ngModel)]=\"data.animal\">\r\n\t\t\t\t\t</mat-form-field>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div mat-dialog-actions>\r\n\t\t\t\t\t<button mat-button (click)=\"onNoClick()\">No Thanks</button>\r\n\t\t\t\t\t<button mat-button [mat-dialog-close]=\"data.animal\" cdkFocusInitial>Ok</button>\r\n\t\t\t\t</div>\r\n\t\t\t\t<br/>\r\n\t\t\t</div>\r\n\t\t</div>`,\r\n})\r\nexport class ModalComponent {\r\n\r\n\tconstructor(\r\n\t\tpublic dialogRef: MatDialogRef<ModalComponent>,\r\n\t\t@Inject(MAT_DIALOG_DATA) public data: DialogData) {\r\n\t}\r\n\r\n\tonNoClick(): void {\r\n\t\tthis.dialogRef.close();\r\n\t}\r\n}\r\n\r\nconst basic = {\r\n\tbeforeCodeTitle: 'Dialog Overview',\r\n\thtmlCode: `\r\n\t\t<h1 mat-dialog-title>Hi {{data.name}}</h1>\r\n\t\t<div mat-dialog-content>\r\n\t\t  <p>What's your favorite animal?</p>\r\n\t\t  <mat-form-field>\r\n\t\t\t<input matInput [(ngModel)]=\"data.animal\">\r\n\t\t  </mat-form-field>\r\n\t\t</div>\r\n\t\t<div mat-dialog-actions>\r\n\t\t  <button mat-button (click)=\"onNoClick()\">No Thanks</button>\r\n\t\t  <button mat-button [mat-dialog-close]=\"data.animal\" cdkFocusInitial>Ok</button>\r\n\t\t</div>\r\n`,\r\n\ttsCode: `\r\nimport {Component, Inject} from '@angular/core';\r\nimport {MatDialog, MatDialogRef, MAT_DIALOG_DATA} from '@angular/material';\\n\r\n/**\r\n* @title Dialog Overview\r\n*/\r\n@Component({\r\n  selector: 'dialog-overview-example',\r\n  templateUrl: 'dialog-overview-example.html',\r\n  styleUrls: ['dialog-overview-example.css'],\r\n})\r\nexport class DialogOverviewExample {\\n\r\n  animal: string;\r\n  name: string;\\n\r\n  constructor(public dialog: MatDialog) {}\\n\r\n  openDialog(): void {\r\n    let dialogRef = this.dialog.open(DialogOverviewExampleDialog, {\r\n      width: '250px',\r\n      data: { name: this.name, animal: this.animal }\r\n    });\\n\r\n    dialogRef.afterClosed().subscribe(result => {\r\n      console.log('The dialog was closed');\r\n      this.animal = result;\r\n    });\r\n  }\r\n}\\n\r\n@Component({\r\n  selector: 'dialog-overview-example-dialog',\r\n  template: \\`\r\n    <h1 mat-dialog-title>Hi {{data.name}}</h1>\r\n    <div mat-dialog-content>\r\n      <p>What's your favorite animal?</p>\r\n      <mat-form-field>\r\n        <input matInput [(ngModel)]=\"data.animal\">\r\n      </mat-form-field>\r\n    </div>\r\n    <div mat-dialog-actions>\r\n      <button mat-button (click)=\"onNoClick()\">No Thanks</button>\r\n      <button mat-button [mat-dialog-close]=\"data.animal\" cdkFocusInitial>Ok</button>\r\n    </div>\\`\r\n})\r\nexport class DialogOverviewExampleDialog {\\n\r\n  constructor(\r\n    public dialogRef: MatDialogRef<DialogOverviewExampleDialog>,\r\n      @Inject(MAT_DIALOG_DATA) public data: any) { }\\n\r\n  onNoClick(): void {\r\n    this.dialogRef.close();\r\n  }\\n\r\n}\r\n`,\r\n\tcssCode: ``,\r\n\tviewCode: ``,\r\n\tisCodeVisible: false,\r\n\tisExampleExpanded: true\r\n};\r\n\r\nconst injecting = {\r\n\tbeforeCodeTitle: 'Injecting data when opening a dialog',\r\n\thtmlCode: '<button mat-button (click)=\"openDialog()\">Open dialog</button>',\r\n\ttsCode: `\r\nimport {Component, Inject} from '@angular/core';\r\nimport {MatDialog, MAT_DIALOG_DATA} from '@angular/material';\\n\r\n/**\r\n* @title Injecting data when opening a dialog\r\n*/\r\n@Component({\r\n  selector: 'dialog-data-example',\r\n  templateUrl: 'dialog-data-example.html',\r\n  styleUrls: ['dialog-data-example.css']\r\n})\r\nexport class DialogDataExample {\r\n  constructor(public dialog: MatDialog) {}\\n\r\n  openDialog() {\r\n    this.dialog.open(DialogDataExampleDialog, {\r\n      data: {\r\n        animal: 'panda'\r\n     }\r\n    });\r\n  }\r\n}\\n\r\n@Component({\r\n  selector: 'dialog-data-example-dialog',\r\n  template: \\`\r\n    <h1 mat-dialog-title>Favorite Animal</h1>\r\n    <div mat-dialog-content>\r\n      My favorite animal is:\r\n      <ul>\r\n        <li>\r\n          <span *ngIf=\"data.animal === 'panda'\">&#10003;</span> Panda\r\n        </li>\r\n        <li>\r\n          <span *ngIf=\"data.animal === 'unicorn'\">&#10003;</span> Unicorn\r\n        </li>\r\n        <li>\r\n          <span *ngIf=\"data.animal === 'lion'\">&#10003;</span> Lion\r\n        </li>\r\n      </ul>\r\n    </div>\r\n\t\\`,\r\n})\r\nexport class DialogDataExampleDialog {\r\n  constructor(@Inject(MAT_DIALOG_DATA) public data: any) {}\r\n}\r\n`,\r\n\tcssCode: ``,\r\n\tviewCode: ``,\r\n\tisCodeVisible: false,\r\n\tisExampleExpanded: true\r\n};\r\n\r\n\r\nconst header = {\r\n\tbeforeCodeTitle: 'Dialog with header, scrollable content and actions',\r\n\thtmlCode: `\r\n<button mat-button (click)=\"openDialog()\">Open dialog</button>\r\n`,\r\n\ttsCode: `\r\nimport {Component} from '@angular/core';\r\nimport {MatDialog} from '@angular/material';\\n\r\n/**\r\n* @title Dialog with header, scrollable content and actions\r\n*/\r\n@Component({\r\n  selector: 'dialog-content-example',\r\n  templateUrl: 'dialog-content-example.html',\r\n  styleUrls: ['dialog-content-example.css'],\r\n})\r\nexport class DialogContentExample {\r\n  constructor(public dialog: MatDialog) {}\\n\r\n  openDialog() {\r\n    const dialogRef = this.dialog.open(DialogContentExampleDialog, {\r\n      height: '350px'\r\n    });\\n\r\n    dialogRef.afterClosed().subscribe(result => {\r\n      console.log(\\`Dialog result: \\${result}\\`);\r\n    });\r\n  }\r\n}\\n\r\n@Component({\r\n  selector: 'dialog-content-example-dialog',\r\n  templateUrl: 'dialog-content-example-dialog.html',\r\n})\r\nexport class DialogContentExampleDialog {}\r\n`,\r\n\tcssCode: ``,\r\n\tviewCode: ``,\r\n\tisCodeVisible: false,\r\n\tisExampleExpanded: true\r\n};\r\n\r\nexport interface DialogData {\r\n\tanimal: string;\r\n\tname: string;\r\n}\r\n\r\n@Component({\r\n\tselector: 'kt-dialog',\r\n\ttemplateUrl: './dialog.component.html',\r\n\tchangeDetection: ChangeDetectionStrategy.Default,\r\n\r\n})\r\nexport class DialogComponent implements OnInit {\r\n\tanimal2 = '';\r\n\tanimalSubject = new BehaviorSubject<string>('');\r\n\tanimal$: Observable<string>;\r\n\tanimal: string;\r\n\tname: string;\r\n\r\n\texampleBasic;\r\n\texampleInjecting;\r\n\texamplHeader;\r\n\r\n\tconstructor(public dialog: MatDialog) {\r\n\t}\r\n\r\n\tngOnInit() {\r\n\t\tthis.animal$ = this.animalSubject.asObservable();\r\n\t\tthis.animal$.subscribe(result => {\r\n\t\t\tthis.animal = result;\r\n\t\t});\r\n\t\tthis.exampleBasic = basic;\r\n\t\tthis.exampleInjecting = injecting;\r\n\t\tthis.examplHeader = header;\r\n\t}\r\n\r\n\topenDialog(): void {\r\n\t\tconst dialogRef = this.dialog.open(ModalComponent, {\r\n\t\t\twidth: '280px',\r\n\t\t\tdata: {name: this.name, animal: this.animal}\r\n\t\t});\r\n\r\n\t\tdialogRef.afterClosed().subscribe(result => {\r\n\t\t\tif (result) {\r\n\t\t\t\tthis.animalSubject.next(result);\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\topenDialog2() {\r\n\t\tthis.dialog.open(Modal2Component, {\r\n\t\t\tdata: {\r\n\t\t\t\tanimal: 'panda'\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\topenDialog3() {\r\n\t\tconst dialogRef = this.dialog.open(Modal3Component, {\r\n\t\t\theight: '350px'\r\n\t\t});\r\n\r\n\t\tdialogRef.afterClosed().subscribe(result => {\r\n\t\t\tconsole.log(`Dialog result: ${result}`);\r\n\t\t});\r\n\t}\r\n}\r\n","<kt-notice [svg]=\"'assets/media/svg/icons/Tools/Compass.svg'\">\r\n\tFor more info please check the components's official demos & documentation\r\n\t<a class=\"font-weight-bold\" href=\"https://material.angular.io/components/tooltip/overview\" target=\"_blank\">demos & documentation</a>\r\n</kt-notice>\r\n\r\n<div class=\"row\">\r\n\t<div class=\"col-xl-6\">\r\n\t\t<kt-code-preview [viewItem]=\"exampleBasic\">\r\n\t\t\t<div class=\"example-preview\">\r\n\t\t\t\t<span>\r\n\t\t\t\t\tThe Angular Material tooltip provides a text label that is displayed when the user hovers over or longpresses an element.\r\n\t\t\t\t</span>\r\n\t\t\t\t<div class=\"separator separator-dashed my-6\"></div>\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<span matTooltip=\"Tooltip!\">I have a tooltip</span>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</kt-code-preview>\r\n\r\n\t\t<kt-code-preview [viewItem]=\"exampleCustomPosition\">\r\n\t\t\t<div class=\"example-preview\">\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<div class=\"example-tooltip-host\" matTooltip=\"Tooltip!\" [matTooltipPosition]=\"position\">\r\n\t\t\t\t\t\t<span>Show tooltip:</span>&nbsp;&nbsp;\r\n\t\t\t\t\t\t<mat-form-field>\r\n\t\t\t\t\t\t\t<mat-select class=\"example-select\" [(ngModel)]=\"position\">\r\n\t\t\t\t\t\t\t\t<mat-option value=\"before\">Before</mat-option>\r\n\t\t\t\t\t\t\t\t<mat-option value=\"after\">After</mat-option>\r\n\t\t\t\t\t\t\t\t<mat-option value=\"above\">Above</mat-option>\r\n\t\t\t\t\t\t\t\t<mat-option value=\"below\">Below</mat-option>\r\n\t\t\t\t\t\t\t\t<mat-option value=\"left\">Left</mat-option>\r\n\t\t\t\t\t\t\t\t<mat-option value=\"right\">Right</mat-option>\r\n\t\t\t\t\t\t\t</mat-select>\r\n\t\t\t\t\t\t</mat-form-field>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</kt-code-preview>\r\n\t\t<kt-code-preview [viewItem]=\"exampleShowHigh\">\r\n\t\t\t<div class=\"example-preview\">\r\n\t\t\t\t<span>\r\n\t\t\t\t\t<b>Show and hide delays:</b>\r\n\t\t\t\t\tTo add a delay before showing or hiding the tooltip, you can use the inputs\r\n\t\t\t\t\t<mark>matTooltipShowDelay</mark> and\r\n\t\t\t\t\t<mark>matTooltipHideDelay</mark> to provide a delay time in milliseconds.\r\n\t\t\t\t</span>\r\n\t\t\t\t<div class=\"separator separator-dashed my-6\"></div>\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<button class=\"mr-3\" color=\"primary\" mat-raised-button matTooltip=\"Tooltip!\" matTooltipShowDelay=\"1000\">\r\n\t\t\t\t\t\tMy tooltip waits one second to show\r\n\t\t\t\t\t</button>\r\n\r\n\t\t\t\t\t<button color=\"accent\" mat-raised-button matTooltip=\"Tooltip!\" matTooltipHideDelay=\"2000\">\r\n\t\t\t\t\t\tMy tooltip waits two seconds to hide\r\n\t\t\t\t\t</button>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</kt-code-preview>\r\n\t</div>\r\n\r\n\t<div class=\"col-xl-6\">\r\n\r\n\t\t <kt-code-preview [viewItem]=\"exampleDelay\">\r\n\t\t\t<div class=\"example-preview\">\r\n\t\t\t\t<span>\r\n\t\t\t\t\t\t<b>Changing the default delay behavior:</b>\r\n\t\t\t\t\t\tYou can configure your app's tooltip default show/hide delays by configuring and providing your options using the <mark>MAT_TOOLTIP_DEFAULT_OPTIONS</mark> injection token.\r\n\t\t\t\t</span>\r\n\t\t\t\t<div class=\"separator separator-dashed my-6\"></div>\r\n\r\n\t\t\t\t<div>\r\n\t\t\t\t\t\t<button mat-raised-button matTooltip=\"By default, I delay\">\r\n\t\t\t\t\t\t\t\tButton with delay-default tooltip\r\n\t\t\t\t\t\t\t  </button>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</kt-code-preview>\r\n\r\n\t\t<kt-code-preview [viewItem]=\"exampleManually\">\r\n\t\t\t<div class=\"example-preview\">\r\n\t\t\t\t<span>\r\n\t\t\t\t\t\t<b>Manually calling show() and hide():</b>\r\n\t\t\t\t\t\tTo manually cause the tooltip to show or hide, you can call the <mark>show</mark> and <mark>hide</mark> directive methods, which both accept a number in milliseconds to delay before applying the display change.\r\n\t\t\t\t</span>\r\n\t\t\t\t<div class=\"separator separator-dashed my-6\"></div>\r\n\t\t\t\t<div>\r\n\t\t\t\t\t\t<button class=\"mr-2\" mat-raised-button (click)=\"tooltip.show()\"> Show tooltip </button>\r\n\r\n\t\t\t\t\t\t<span matTooltip=\"This is the tooltip message\" #tooltip=\"matTooltip\">\r\n\t\t\t\t\t\t  I have a tooltip\r\n\t\t\t\t\t\t</span>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\r\n\t\t</kt-code-preview>\r\n\t</div>\r\n</div>\r\n","import { Component, OnInit, ChangeDetectionStrategy } from '@angular/core';\r\n\r\nconst basic = {\r\n\t\tbeforeCodeTitle: 'Basic table',\r\n\t\thtmlCode: `\r\n<div class=\"example-container mat-elevation-z8\">\r\n  <mat-table #table [dataSource]=\"dataSource\">\r\n    <!--- Note that these columns can be defined in any order.\r\n\t\t\t\tThe actual rendered columns are set as a property on the row definition\" -->\r\n    <!-- Position Column -->\r\n    <ng-container matColumnDef=\"position\">\r\n      <mat-header-cell *matHeaderCellDef> No. </mat-header-cell>\r\n      <mat-cell *matCellDef=\"let element\"> {{element.position}} </mat-cell>\r\n    </ng-container>\r\n    <!-- Name Column -->\r\n    <ng-container matColumnDef=\"name\">\r\n      <mat-header-cell *matHeaderCellDef> Name </mat-header-cell>\r\n      <mat-cell *matCellDef=\"let element\"> {{element.name}} </mat-cell>\r\n    </ng-container>\r\n    <!-- Weight Column -->\r\n    <ng-container matColumnDef=\"weight\">\r\n      <mat-header-cell *matHeaderCellDef> Weight </mat-header-cell>\r\n      <mat-cell *matCellDef=\"let element\"> {{element.weight}} </mat-cell>\r\n    </ng-container>\r\n    <!-- Symbol Column -->\r\n    <ng-container matColumnDef=\"symbol\">\r\n      <mat-header-cell *matHeaderCellDef> Symbol </mat-header-cell>\r\n      <mat-cell *matCellDef=\"let element\"> {{element.symbol}} </mat-cell>\r\n    </ng-container>\r\n    <mat-header-row *matHeaderRowDef=\"displayedColumns\"></mat-header-row>\r\n    <mat-row *matRowDef=\"let row; columns: displayedColumns;\"></mat-row>\r\n  </mat-table>\r\n</div>\r\n`,\r\n\t\ttsCode: `\r\nimport {Component} from '@angular/core';\r\n/**\r\n* @title Basic tooltip\r\n*/\r\n@Component({\r\n  selector: 'tooltip-overview-example',\r\n  templateUrl: 'tooltip-overview-example.html',\r\n  styleUrls: ['tooltip-overview-example.css'],\r\n})\r\nexport class TooltipOverviewExample {}\r\n\t\t`,\r\n\t\tcssCode: ``,\r\n\t\tviewCode: ``,\r\n\t\tisCodeVisible: false,\r\n\t\tisExampleExpanded: true\r\n\t};\r\n\r\nconst customPosition = {\r\n\t\tbeforeCodeTitle: 'Tooltip with custom position',\r\n\t\thtmlCode: `\r\n<div class=\"example-tooltip-host\" matTooltip=\"Tooltip!\" [matTooltipPosition]=\"position\">\r\n  <span>Show tooltip</span>\r\n  <mat-form-field>\r\n    <mat-select class=\"example-select\" [(ngModel)]=\"position\">\r\n      <mat-option value=\"before\">Before</mat-option>\r\n      <mat-option value=\"after\">After</mat-option>\r\n      <mat-option value=\"above\">Above</mat-option>\r\n      <mat-option value=\"below\">Below</mat-option>\r\n      <mat-option value=\"left\">Left</mat-option>\r\n      <mat-option value=\"right\">Right</mat-option>\r\n    </mat-select>\r\n  </mat-form-field>\r\n</div>\r\n\t\t`,\r\n\t\ttsCode: `\r\nimport {Component} from '@angular/core';\\n\r\n/**\r\n* @title Tooltip with custom position\r\n*/\r\n@Component({\r\n  selector: 'tooltip-position-example',\r\n  templateUrl: 'tooltip-position-example.html',\r\n  styleUrls: ['tooltip-position-example.css'],\r\n})\r\nexport class TooltipPositionExample {\r\n  position = 'before';\r\n}\r\n\t\t`,\r\n\t\tcssCode: `\r\n.example-tooltip-host {\r\n  display: inline-flex;\r\n  align-items: center;\r\n  margin: 50px;\r\n}\r\n.example-select {\r\n  margin: 0 10px;\r\n}\r\n\t\t`,\r\n\t\tviewCode: ``,\r\n\t\tisCodeVisible: false\r\n\t};\r\n\r\nconst showHigh = {\r\n\t\tbeforeCodeTitle: 'Tooltip with a show and hide delay',\r\n\t\tbeforeCodeDescription: ``,\r\n\t\thtmlCode: `\r\n<button mat-raised-button matTooltip=\"Tooltip!\" matTooltipShowDelay=\"1000\">\r\n  My tooltip waits one second to show\r\n</button>\r\n<button mat-raised-button matTooltip=\"Tooltip!\" matTooltipHideDelay=\"2000\">\r\n  My tooltip waits two seconds to hide\r\n</button>`,\r\n\t\ttsCode: `\r\nimport {Component} from '@angular/core';\\n\r\n/**\r\n* @title Tooltip with a show and hide delay\r\n*/\r\n@Component({\r\n  selector: 'tooltip-delay-example',\r\n  templateUrl: 'tooltip-delay-example.html',\r\n  styleUrls: ['tooltip-delay-example.css'],\r\n})\r\nexport class TooltipDelayExample {}\r\n`,\r\n\t\tcssCode: `\r\nbutton {\r\n  margin: 8px;\r\n}\r\n\t\t`,\r\n\t\tviewCode: ``,\r\n\t\tisCodeVisible: false\r\n\t};\r\n\r\nconst delay = {\r\n\t\tbeforeCodeTitle: 'Tooltip with a show and hide delay',\r\n\t\thtmlCode: `\r\n<button mat-raised-button matTooltip=\"By default, I delay\">\r\n  Button with delay-default tooltip\r\n</button>\r\n\t\t`,\r\n\t\ttsCode: `\r\nimport {Component} from '@angular/core';\r\nimport {MAT_TOOLTIP_DEFAULT_OPTIONS, MatTooltipDefaultOptions} from '@angular/material';\\n\r\n/** Custom options the configure the tooltip's default show/hide delays. */\r\nexport const myCustomTooltipDefaults: MatTooltipDefaultOptions = {\r\n  showDelay: 1000,\r\n  hideDelay: 1000,\r\n  touchendHideDelay: 1000,\r\n};\\n\r\n/**\r\n* @title Tooltip with a show and hide delay\r\n*/\r\n@Component({\r\n  selector: 'tooltip-modified-defaults-example',\r\n  templateUrl: 'tooltip-modified-defaults-example.html',\r\n  styleUrls: ['tooltip-modified-defaults-example.css'],\r\n  providers: [\r\n    {provide: MAT_TOOLTIP_DEFAULT_OPTIONS, useValue: myCustomTooltipDefaults}\r\n  ],\r\n})\r\nexport class TooltipModifiedDefaultsExample {}\r\n\t\t`,\r\n\t\tcssCode: ``,\r\n\t\tviewCode: ``,\r\n\t\tisCodeVisible: false\r\n\t};\r\n\r\nconst manually = {\r\n\t\tbeforeCodeTitle: 'Tooltip that can be manually shown/hidden.',\r\n\t\thtmlCode: `\r\n<button mat-raised-button (click)=\"tooltip.show()\"> Show tooltip </button>\r\n<span matTooltip=\"This is the tooltip message\" #tooltip=\"matTooltip\">\r\n  I have a tooltip\r\n</span>\r\n\t\t`,\r\n\t\ttsCode: `\r\nimport {Component} from '@angular/core';\\n\r\n/**\r\n* @title Tooltip that can be manually shown/hidden.\r\n*/\r\n@Component({\r\n  selector: 'tooltip-manual-example',\r\n  templateUrl: 'tooltip-manual-example.html',\r\n  styleUrls: ['tooltip-manual-example.css'],\r\n})\r\nexport class TooltipManualExample {}\r\n\t\t`,\r\n\t\tviewCode: ``,\r\n\t\tisCodeVisible: false\r\n\t};\r\n\r\n@Component({\r\n\tselector: 'kt-material-tooltip',\r\n\ttemplateUrl: './material-tooltip.component.html',\r\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class MaterialTooltipComponent implements OnInit {\r\n\r\n\texampleBasic;\r\n\texampleCustomPosition;\r\n\texampleShowHigh;\r\n\texampleDelay;\r\n\texampleManually;\r\n\r\n\tposition = 'before';\r\n\r\n\tngOnInit() {\r\n\r\n\t\tthis.exampleBasic = basic;\r\n\t\tthis.exampleCustomPosition = customPosition;\r\n\t\tthis.exampleShowHigh = showHigh;\r\n\t\tthis.exampleDelay = delay;\r\n\t\tthis.exampleManually = manually;\r\n\t}\r\n}\r\n","\n\t<span class=\"example-pizza-party\">Pizza party!!! 🍕</span>\n\t","import {Component} from '@angular/core';\r\n\r\n@Component({\r\n\tselector: 'kt-snack-bar-component-example-snack',\r\n\ttemplate: `\r\n\t<span class=\"example-pizza-party\">Pizza party!!! 🍕</span>\r\n\t`,\r\n\tstyles: [`.example-pizza-party { color: hotpink; }`],\r\n  })\r\nexport class PizzaPartyComponent { }\r\n","<kt-notice [svg]=\"'assets/media/svg/icons/Tools/Compass.svg'\">\r\n\tFor more info please check the components's official demos & documentation\r\n\t<a class=\"font-weight-bold\" href=\"https://material.angular.io/components/snack-bar/overview\" target=\"_blank\">demos & documentation</a>\r\n</kt-notice>\r\n\r\n<div class=\"row\">\r\n\t<div class=\"col-xl-6\">\r\n\t\t<kt-code-preview [viewItem]=\"exampleBasic\">\r\n\t\t\t<div class=\"example-preview\">\r\n\t\t\t\t<span>\r\n\t\t\t\t\t<mark>MatSnackBar</mark> is a service for displaying snack-bar notifications.\r\n\t\t\t\t</span>\r\n\t\t\t\t<div class=\"separator separator-dashed my-6\"></div>\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<mat-form-field>\r\n\t\t\t\t\t\t<input matInput value=\"Disco party!\" placeholder=\"Message\" #message>\r\n\t\t\t\t\t</mat-form-field>\r\n\r\n\t\t\t\t\t<mat-form-field>\r\n\t\t\t\t\t\t<input matInput value=\"Dance\" placeholder=\"Action\" #action>\r\n\t\t\t\t\t</mat-form-field>\r\n\r\n\t\t\t\t\t<button mat-button (click)=\"openSnackBar(message.value, action.value)\">Show snack-bar</button>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</kt-code-preview>\r\n\t\t<kt-code-preview [viewItem]=\"exampleCustom\">\r\n\t\t\t<div class=\"example-preview\">\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<button mat-button (click)=\"openSnackBar2()\" aria-label=\"Show an example snack-bar\">\r\n\t\t\t\t\t\tPizza party\r\n\t\t\t\t\t</button>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</kt-code-preview>\r\n\t</div>\r\n\t<div class=\"col-xl-6\">\r\n\t\t<kt-code-preview [viewItem]=\"exampleDismissal\">\r\n\t\t\t<div class=\"example-preview\">\r\n\t\t\t\t<span>\r\n\t\t\t\t\t<mark>Dismissal</mark> example with 6 seconds duration\r\n\t\t\t\t</span>\r\n\t\t\t\t<div class=\"separator separator-dashed my-6\"></div>\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<mat-form-field>\r\n\t\t\t\t\t\t<input matInput value=\"Disco party!\" placeholder=\"Message\" #message>\r\n\t\t\t\t\t</mat-form-field>\r\n\r\n\t\t\t\t\t<mat-form-field>\r\n\t\t\t\t\t\t<input matInput value=\"Dance\" placeholder=\"Action\" #action>\r\n\t\t\t\t\t</mat-form-field>\r\n\r\n\t\t\t\t\t<button mat-button (click)=\"openSnackBar3(message.value, action.value)\">Show snack-bar</button>\r\n\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</kt-code-preview>\r\n\t</div>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { PizzaPartyComponent } from './pizza-party.component';\r\n\r\n\r\nconst basic = {\r\n\t\tbeforeCodeTitle: 'Basic snack-bar',\r\n\t\thtmlCode: `\r\n<mat-form-field>\r\n  <input matInput value=\"Disco party!\" placeholder=\"Message\" #message>\r\n</mat-form-field>\r\n<mat-form-field>\r\n  <input matInput value=\"Dance\" placeholder=\"Action\" #action>\r\n</mat-form-field>\r\n<button mat-button (click)=\"openSnackBar(message.value, action.value)\">Show snack-bar</button>\r\n`,\r\n\t\ttsCode: `\r\nimport {Component} from '@angular/core';\r\nimport {MatSnackBar} from '@angular/material';\\n\r\n/**\r\n* @title Basic snack-bar\r\n*/\r\n@Component({\r\n  selector: 'snack-bar-overview-example',\r\n  templateUrl: 'snack-bar-overview-example.html',\r\n  styleUrls: ['snack-bar-overview-example.css'],\r\n})\r\nexport class SnackBarOverviewExample {\r\n  constructor(public snackBar: MatSnackBar) {}\\n\r\n  openSnackBar(message: string, action: string) {\r\n    this.snackBar.open(message, action, {\r\n      duration: 2000,\r\n    });\r\n  }\r\n}\r\n`,\r\n\t\tcssCode: ``,\r\n\t\tviewCode: ``,\r\n\t\tisCodeVisible: false,\r\n\t\tisExampleExpanded: true\r\n\t};\r\n\r\n\r\n\r\nconst custom = {\r\n\t\tbeforeCodeTitle: 'Snack-bar with a custom component',\r\n\t\thtmlCode: `\r\n<button mat-button (click)=\"openSnackBar()\" aria-label=\"Show an example snack-bar\">\r\n  Pizza party\r\n</button>\r\n`,\r\n\t\ttsCode: `\r\nimport {Component} from '@angular/core';\r\nimport {MatSnackBar} from '@angular/material';\\n\r\n/**\r\n* @title Snack-bar with a custom component\r\n*/\r\n@Component({\r\n  selector: 'snack-bar-component-example',\r\n  templateUrl: 'snack-bar-component-example.html',\r\n})\r\nexport class SnackBarComponentExample {\r\n  constructor(public snackBar: MatSnackBar) {}\\n\r\n  openSnackBar() {\r\n    this.snackBar.openFromComponent(PizzaPartyComponent, {\r\n      duration: 500,\r\n    });\r\n  }\r\n}\\n\r\n@Component({\r\n  selector: 'snack-bar-component-example-snack',\r\n  template: \\`\r\n\t<span _ngcontent-c3=\"\" class=\"example-pizza-party\">\r\n      Pizza party!!! 🍕\r\n    </span>\\`,\r\n  styles: [\\`.example-pizza-party { color: hotpink; }\\`],\r\n})\r\nexport class PizzaPartyComponent {}\r\n`,\r\n\t\tcssCode: ``,\r\n\t\tviewCode: ``,\r\n\t\tisCodeVisible: false,\r\n\t\tisExampleExpanded: true\r\n\t};\r\n\r\nconst dismissal = {\r\n\tbeforeCodeTitle: 'Dismissal example with 6 seconds duration',\r\n\thtmlCode: `\r\n<mat-form-field>\r\n  <input matInput value=\"Disco party!\" placeholder=\"Message\" #message>\r\n</mat-form-field>\r\n<mat-form-field>\r\n  <input matInput value=\"Dance\" placeholder=\"Action\" #action>\r\n</mat-form-field>\r\n<button mat-button (click)=\"openSnackBar(message.value, action.value)\">Show snack-bar</button>\r\n`,\r\n\ttsCode: `\r\nimport {Component} from '@angular/core';\r\nimport {MatSnackBar} from '@angular/material';\\n\r\n/**\r\n* @title Basic snack-bar\r\n*/\r\n@Component({\r\n  selector: 'snack-bar-overview-example',\r\n  templateUrl: 'snack-bar-overview-example.html',\r\n  styleUrls: ['snack-bar-overview-example.css'],\r\n})\r\nexport class SnackBarOverviewExample {\r\n  constructor(public snackBar: MatSnackBar) {}\\n\r\n  openSnackBar(message: string, action: string) {\r\n    this.snackBar.open(message, action, {\r\n      duration: 2000,\r\n    });\r\n  }\r\n}\r\n`,\r\n\tcssCode: ``,\r\n\tviewCode: ``,\r\n\tisCodeVisible: false,\r\n\tisExampleExpanded: true\r\n};\r\n\r\n@Component({\r\n\tselector: 'kt-snackbar',\r\n\ttemplateUrl: './snackbar.component.html',\r\n\tstyles: [`\r\n\t`]\r\n})\r\nexport class SnackbarComponent implements OnInit {\r\n\r\n\texampleBasic;\r\n\texampleCustom;\r\n\texampleDismissal;\r\n\r\n\tconstructor(public snackBar: MatSnackBar) { }\r\n\r\n\topenSnackBar(message: string, action: string) {\r\n\t\tthis.snackBar.open(message, action, {\r\n\t\t\tduration: 2000,\r\n\t\t});\r\n\t}\r\n\r\n\topenSnackBar2() {\r\n\t\tthis.snackBar.openFromComponent(PizzaPartyComponent, {\r\n\t\t  duration: 500,\r\n\t\t});\r\n\t}\r\n\r\n\topenSnackBar3(message: string, action: string) {\r\n\t\tthis.snackBar.open(message, action, {\r\n\t\t  duration: 6500,\r\n\t\t});\r\n\t  }\r\n\r\n\tngOnInit() {\r\n\t\tthis.exampleBasic = basic;\r\n\t\tthis.exampleCustom = custom;\r\n\t\tthis.exampleDismissal = dismissal;\r\n\t}\r\n}\r\n"],"sourceRoot":"webpack:///"}