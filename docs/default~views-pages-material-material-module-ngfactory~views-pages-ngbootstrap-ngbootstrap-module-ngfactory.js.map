{"version":3,"sources":["./node_modules/ngx-clipboard/fesm2015/ngx-clipboard.js","./node_modules/ngx-window-token/fesm2015/ngx-window-token.js","./src/app/views/partials/content/general/code-preview/code-preview.component.html","./src/app/views/partials/content/general/code-preview/code-preview.component.ts","./src/app/views/partials/content/general/code-preview/code-preview.module.ts","./src/app/views/partials/content/general/notice/notice.component.html","./src/app/views/partials/content/general/notice/notice.component.ts"],"names":[],"mappings":"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","file":"default~views-pages-material-material-module-ngfactory~views-pages-ngbootstrap-ngbootstrap-module-ngfactory.js","sourcesContent":["import { __decorate, __param } from 'tslib';\nimport { DOCUMENT, CommonModule } from '@angular/common';\nimport { Inject, Optional, ɵɵdefineInjectable, ɵɵinject, Injectable, EventEmitter, Input, Output, HostListener, Directive, ViewContainerRef, TemplateRef, NgModule } from '@angular/core';\nimport { WINDOW } from 'ngx-window-token';\nimport { Subject } from 'rxjs';\n\n/**\r\n * The following code is heavily copied from https://github.com/zenorocha/clipboard.js\r\n */\r\nlet ClipboardService = class ClipboardService {\r\n    constructor(document, window) {\r\n        this.document = document;\r\n        this.window = window;\r\n        this.copySubject = new Subject();\r\n        this.copyResponse$ = this.copySubject.asObservable();\r\n        this.config = {};\r\n    }\r\n    configure(config) {\r\n        this.config = config;\r\n    }\r\n    copy(content) {\r\n        if (!this.isSupported || !content) {\r\n            return this.pushCopyResponse({ isSuccess: false, content });\r\n        }\r\n        const copyResult = this.copyFromContent(content);\r\n        if (copyResult) {\r\n            return this.pushCopyResponse({ content, isSuccess: copyResult });\r\n        }\r\n        return this.pushCopyResponse({ isSuccess: false, content });\r\n    }\r\n    get isSupported() {\r\n        return !!this.document.queryCommandSupported && !!this.document.queryCommandSupported('copy') && !!this.window;\r\n    }\r\n    isTargetValid(element) {\r\n        if (element instanceof HTMLInputElement || element instanceof HTMLTextAreaElement) {\r\n            if (element.hasAttribute('disabled')) {\r\n                throw new Error('Invalid \"target\" attribute. Please use \"readonly\" instead of \"disabled\" attribute');\r\n            }\r\n            return true;\r\n        }\r\n        throw new Error('Target should be input or textarea');\r\n    }\r\n    /**\r\n     * Attempts to copy from an input `targetElm`\r\n     */\r\n    copyFromInputElement(targetElm, isFocus = true) {\r\n        try {\r\n            this.selectTarget(targetElm);\r\n            const re = this.copyText();\r\n            this.clearSelection(isFocus ? targetElm : undefined, this.window);\r\n            return re && this.isCopySuccessInIE11();\r\n        }\r\n        catch (error) {\r\n            return false;\r\n        }\r\n    }\r\n    /**\r\n     * This is a hack for IE11 to return `true` even if copy fails.\r\n     */\r\n    isCopySuccessInIE11() {\r\n        const clipboardData = this.window['clipboardData'];\r\n        if (clipboardData && clipboardData.getData) {\r\n            if (!clipboardData.getData('Text')) {\r\n                return false;\r\n            }\r\n        }\r\n        return true;\r\n    }\r\n    /**\r\n     * Creates a fake textarea element, sets its value from `text` property,\r\n     * and makes a selection on it.\r\n     */\r\n    copyFromContent(content, container = this.document.body) {\r\n        // check if the temp textarea still belongs to the current container.\r\n        // In case we have multiple places using ngx-clipboard, one is in a modal using container but the other one is not.\r\n        if (this.tempTextArea && !container.contains(this.tempTextArea)) {\r\n            this.destroy(this.tempTextArea.parentElement);\r\n        }\r\n        if (!this.tempTextArea) {\r\n            this.tempTextArea = this.createTempTextArea(this.document, this.window);\r\n            try {\r\n                container.appendChild(this.tempTextArea);\r\n            }\r\n            catch (error) {\r\n                throw new Error('Container should be a Dom element');\r\n            }\r\n        }\r\n        this.tempTextArea.value = content;\r\n        const toReturn = this.copyFromInputElement(this.tempTextArea, false);\r\n        if (this.config.cleanUpAfterCopy) {\r\n            this.destroy(this.tempTextArea.parentElement);\r\n        }\r\n        return toReturn;\r\n    }\r\n    /**\r\n     * Remove temporary textarea if any exists.\r\n     */\r\n    destroy(container = this.document.body) {\r\n        if (this.tempTextArea) {\r\n            container.removeChild(this.tempTextArea);\r\n            // removeChild doesn't remove the reference from memory\r\n            this.tempTextArea = undefined;\r\n        }\r\n    }\r\n    /**\r\n     * Select the target html input element.\r\n     */\r\n    selectTarget(inputElement) {\r\n        inputElement.select();\r\n        inputElement.setSelectionRange(0, inputElement.value.length);\r\n        return inputElement.value.length;\r\n    }\r\n    copyText() {\r\n        return this.document.execCommand('copy');\r\n    }\r\n    /**\r\n     * Moves focus away from `target` and back to the trigger, removes current selection.\r\n     */\r\n    clearSelection(inputElement, window) {\r\n        inputElement && inputElement.focus();\r\n        window.getSelection().removeAllRanges();\r\n    }\r\n    /**\r\n     * Creates a fake textarea for copy command.\r\n     */\r\n    createTempTextArea(doc, window) {\r\n        const isRTL = doc.documentElement.getAttribute('dir') === 'rtl';\r\n        let ta;\r\n        ta = doc.createElement('textarea');\r\n        // Prevent zooming on iOS\r\n        ta.style.fontSize = '12pt';\r\n        // Reset box model\r\n        ta.style.border = '0';\r\n        ta.style.padding = '0';\r\n        ta.style.margin = '0';\r\n        // Move element out of screen horizontally\r\n        ta.style.position = 'absolute';\r\n        ta.style[isRTL ? 'right' : 'left'] = '-9999px';\r\n        // Move element to the same position vertically\r\n        const yPosition = window.pageYOffset || doc.documentElement.scrollTop;\r\n        ta.style.top = yPosition + 'px';\r\n        ta.setAttribute('readonly', '');\r\n        return ta;\r\n    }\r\n    /**\r\n     * Pushes copy operation response to copySubject, to provide global access\r\n     * to the response.\r\n     */\r\n    pushCopyResponse(response) {\r\n        this.copySubject.next(response);\r\n    }\r\n    /**\r\n     * @deprecated use pushCopyResponse instead.\r\n     */\r\n    pushCopyReponse(response) {\r\n        this.pushCopyResponse(response);\r\n    }\r\n};\r\nClipboardService.ctorParameters = () => [\r\n    { type: undefined, decorators: [{ type: Inject, args: [DOCUMENT,] }] },\r\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [WINDOW,] }] }\r\n];\r\nClipboardService.ɵprov = ɵɵdefineInjectable({ factory: function ClipboardService_Factory() { return new ClipboardService(ɵɵinject(DOCUMENT), ɵɵinject(WINDOW, 8)); }, token: ClipboardService, providedIn: \"root\" });\r\nClipboardService = __decorate([\r\n    Injectable({ providedIn: 'root' }),\r\n    __param(0, Inject(DOCUMENT)), __param(1, Optional()), __param(1, Inject(WINDOW))\r\n], ClipboardService);\n\nlet ClipboardDirective = class ClipboardDirective {\r\n    constructor(clipboardSrv) {\r\n        this.clipboardSrv = clipboardSrv;\r\n        this.cbOnSuccess = new EventEmitter();\r\n        this.cbOnError = new EventEmitter();\r\n    }\r\n    // tslint:disable-next-line:no-empty\r\n    ngOnInit() { }\r\n    ngOnDestroy() {\r\n        this.clipboardSrv.destroy(this.container);\r\n    }\r\n    onClick(event) {\r\n        if (!this.clipboardSrv.isSupported) {\r\n            this.handleResult(false, undefined, event);\r\n        }\r\n        else if (this.targetElm && this.clipboardSrv.isTargetValid(this.targetElm)) {\r\n            this.handleResult(this.clipboardSrv.copyFromInputElement(this.targetElm), this.targetElm.value, event);\r\n        }\r\n        else if (this.cbContent) {\r\n            this.handleResult(this.clipboardSrv.copyFromContent(this.cbContent, this.container), this.cbContent, event);\r\n        }\r\n    }\r\n    /**\r\n     * Fires an event based on the copy operation result.\r\n     * @param succeeded\r\n     */\r\n    handleResult(succeeded, copiedContent, event) {\r\n        let response = {\r\n            isSuccess: succeeded,\r\n            event\r\n        };\r\n        if (succeeded) {\r\n            response = Object.assign(response, {\r\n                content: copiedContent,\r\n                successMessage: this.cbSuccessMsg\r\n            });\r\n            this.cbOnSuccess.emit(response);\r\n        }\r\n        else {\r\n            this.cbOnError.emit(response);\r\n        }\r\n        this.clipboardSrv.pushCopyResponse(response);\r\n    }\r\n};\r\nClipboardDirective.ctorParameters = () => [\r\n    { type: ClipboardService }\r\n];\r\n__decorate([\r\n    Input('ngxClipboard')\r\n], ClipboardDirective.prototype, \"targetElm\", void 0);\r\n__decorate([\r\n    Input()\r\n], ClipboardDirective.prototype, \"container\", void 0);\r\n__decorate([\r\n    Input()\r\n], ClipboardDirective.prototype, \"cbContent\", void 0);\r\n__decorate([\r\n    Input()\r\n], ClipboardDirective.prototype, \"cbSuccessMsg\", void 0);\r\n__decorate([\r\n    Output()\r\n], ClipboardDirective.prototype, \"cbOnSuccess\", void 0);\r\n__decorate([\r\n    Output()\r\n], ClipboardDirective.prototype, \"cbOnError\", void 0);\r\n__decorate([\r\n    HostListener('click', ['$event.target'])\r\n], ClipboardDirective.prototype, \"onClick\", null);\r\nClipboardDirective = __decorate([\r\n    Directive({\r\n        selector: '[ngxClipboard]'\r\n    })\r\n], ClipboardDirective);\n\nlet ClipboardIfSupportedDirective = class ClipboardIfSupportedDirective {\r\n    constructor(_clipboardService, _viewContainerRef, _templateRef) {\r\n        this._clipboardService = _clipboardService;\r\n        this._viewContainerRef = _viewContainerRef;\r\n        this._templateRef = _templateRef;\r\n    }\r\n    ngOnInit() {\r\n        if (this._clipboardService.isSupported) {\r\n            this._viewContainerRef.createEmbeddedView(this._templateRef);\r\n        }\r\n    }\r\n};\r\nClipboardIfSupportedDirective.ctorParameters = () => [\r\n    { type: ClipboardService },\r\n    { type: ViewContainerRef },\r\n    { type: TemplateRef }\r\n];\r\nClipboardIfSupportedDirective = __decorate([\r\n    Directive({\r\n        selector: '[ngxClipboardIfSupported]'\r\n    })\r\n], ClipboardIfSupportedDirective);\n\nlet ClipboardModule = class ClipboardModule {\r\n};\r\nClipboardModule = __decorate([\r\n    NgModule({\r\n        imports: [CommonModule],\r\n        declarations: [ClipboardDirective, ClipboardIfSupportedDirective],\r\n        exports: [ClipboardDirective, ClipboardIfSupportedDirective]\r\n    })\r\n], ClipboardModule);\n\n/*\r\n * Public API Surface of ngx-clipboard\r\n */\n\n/**\r\n * Generated bundle index. Do not edit.\r\n */\n\nexport { ClipboardDirective, ClipboardIfSupportedDirective, ClipboardModule, ClipboardService };\n//# sourceMappingURL=ngx-clipboard.js.map\n","import { InjectionToken } from '@angular/core';\n\nconst WINDOW = new InjectionToken('WindowToken', typeof window !== 'undefined' && window.document ? { providedIn: 'root', factory: () => window } : undefined);\n\n/*\r\n * Public API Surface of ngx-window-token\r\n */\n\n/**\r\n * Generated bundle index. Do not edit.\r\n */\n\nexport { WINDOW };\n//# sourceMappingURL=ngx-window-token.js.map\n","<div class=\"card card-custom example example-compact gutter-b\" *ngIf=\"viewItem\">\r\n\t<div class=\"card-header\">\r\n\t\t<div class=\"card-title\">\r\n\t\t\t<h3 class=\"card-label\">{{ viewItem.beforeCodeTitle }}</h3>\r\n\t\t</div>\r\n\t\t<div class=\"card-toolbar\">\r\n\t\t\t<div class=\"example-tools justify-content-center\">\r\n\t\t\t\t<span class=\"example-toggle\" ngbTooltip=\"View code\"></span>\r\n\t\t\t\t<span class=\"example-copy\" ngbTooltip=\"Copy code\"></span>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t</div>\r\n\t<div class=\"card-body\">\r\n\t\t<div>\r\n\t\t\t<!--begin::Code example-->\r\n\t\t\t<div class=\"example-code mb-5\">\r\n\t\t\t\t<ul ktTabClickEvent class=\"example-nav nav nav-tabs nav-bold nav-tabs-line nav-tabs-line-2x\" role=\"tablist\">\r\n\t\t\t\t\t<li class=\"nav-item\" *ngIf=\"viewItem.htmlCode\">\r\n\t\t\t\t\t\t<a (click)=\"tab.select('tab-id-1')\" class=\"nav-link active\" data-toggle=\"tab\" href=\"javascript:;\" role=\"tab\">HTML</a>\r\n\t\t\t\t\t</li>\r\n\t\t\t\t\t<li class=\"nav-item\" *ngIf=\"viewItem.tsCode\">\r\n\t\t\t\t\t\t<a (click)=\"tab.select('tab-id-2')\" class=\"nav-link\" data-toggle=\"tab\" href=\"javascript:;\" role=\"tab\">TS</a>\r\n\t\t\t\t\t</li>\r\n\t\t\t\t\t<li class=\"nav-item\" *ngIf=\"viewItem.cssCode\">\r\n\t\t\t\t\t\t<a (click)=\"tab.select('tab-id-3')\" class=\"nav-link\" data-toggle=\"tab\" href=\"javascript:;\" role=\"tab\">CSS</a>\r\n\t\t\t\t\t</li>\r\n\t\t\t\t\t<li class=\"nav-item\" *ngIf=\"viewItem.scssCode\">\r\n\t\t\t\t\t\t<a (click)=\"tab.select('tab-id-4')\" class=\"nav-link\" data-toggle=\"tab\" href=\"javascript:;\" role=\"tab\">SCSS</a>\r\n\t\t\t\t\t</li>\r\n\t\t\t\t</ul>\r\n\t\t\t\t<ngb-tabset #tab=\"ngbTabset\">\r\n\t\t\t\t\t<ngb-tab id=\"tab-id-1\" *ngIf=\"viewItem.htmlCode\">\r\n\t\t\t\t\t\t<ng-template ngbTabContent>\r\n\t\t\t\t\t\t\t<div class=\"example-highlight\">\r\n\t\t\t\t\t\t\t\t<pre><code [highlight]=\"viewItem.htmlCode\"></code></pre>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</ng-template>\r\n\t\t\t\t\t</ngb-tab>\r\n\t\t\t\t\t<ngb-tab id=\"tab-id-2\" *ngIf=\"viewItem.tsCode\">\r\n\t\t\t\t\t\t<ng-template ngbTabContent>\r\n\t\t\t\t\t\t\t<div class=\"example-highlight\">\r\n\t\t\t\t\t\t\t\t<pre><code [highlight]=\"viewItem.tsCode\"></code></pre>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</ng-template>\r\n\t\t\t\t\t</ngb-tab>\r\n\t\t\t\t\t<ngb-tab id=\"tab-id-3\" *ngIf=\"viewItem.cssCode\">\r\n\t\t\t\t\t\t<ng-template ngbTabContent>\r\n\t\t\t\t\t\t\t<div class=\"example-highlight\">\r\n\t\t\t\t\t\t\t\t<pre><code [highlight]=\"viewItem.cssCode\"></code></pre>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</ng-template>\r\n\t\t\t\t\t</ngb-tab>\r\n\t\t\t\t\t<ngb-tab id=\"tab-id-4\" *ngIf=\"viewItem.scssCode\">\r\n\t\t\t\t\t\t<ng-template ngbTabContent>\r\n\t\t\t\t\t\t\t<div class=\"example-highlight\">\r\n\t\t\t\t\t\t\t\t<pre><code [highlight]=\"viewItem.scssCode\"></code></pre>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</ng-template>\r\n\t\t\t\t\t</ngb-tab>\r\n\t\t\t\t</ngb-tabset>\r\n\t\t\t</div>\r\n\t\t\t<!--end::Code example-->\r\n\r\n\t\t\t<!-- view -->\r\n\t\t\t<ng-content></ng-content>\r\n\t\t\t<!-- / view -->\r\n\r\n\t\t\t<!-- after Code Title -->\r\n\t\t\t<div *ngIf=\"viewItem.afterCodeTitle\" class=\"kt-portlet__preview\" [innerHTML]=\"viewItem.afterCodeTitle | safe: 'html'\">\r\n\t\t\t</div>\r\n\t\t\t<!-- / after Code Title -->\r\n\r\n\t\t\t<!-- after Code Description -->\r\n\t\t\t<div *ngIf=\"viewItem.afterCodeDescription\" class=\"kt-portlet__preview\" [innerHTML]=\"viewItem.afterCodeDescription | safe: 'html'\">\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t</div>\r\n</div>\r\n","// Angular\r\nimport { AfterViewInit, Component, ElementRef, Input, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n\tselector: 'kt-code-preview',\r\n\ttemplateUrl: './code-preview.component.html',\r\n\tstyleUrls: ['./code-preview.component.scss'],\r\n})\r\nexport class CodePreviewComponent implements OnInit, AfterViewInit {\r\n\t// Public properties\r\n\t@Input() viewItem: any;\r\n\r\n\t/**\r\n\t * Component constructor\r\n\t */\r\n\tconstructor(private el: ElementRef) {\r\n\t}\r\n\r\n\t/**\r\n\t * @ Lifecycle sequences => https://angular.io/guide/lifecycle-hooks\r\n\t */\r\n\r\n\t/**\r\n\t * On init\r\n\t */\r\n\tngOnInit() {\r\n\t}\r\n\r\n\tngAfterViewInit() {\r\n\t\t// init code preview examples\r\n\t\t// see /src/assets/js/layout/extended/examples.js\r\n\t\tconst elements = this.el.nativeElement.querySelectorAll('.example.example-compact');\r\n\t\tKTLayoutExamples.init(elements);\r\n\t}\r\n}\r\n","// Angular\r\nimport { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { ClipboardModule } from 'ngx-clipboard';\r\nimport { NgbTabsetModule, NgbTooltipModule } from '@ng-bootstrap/ng-bootstrap';\r\n// Perfect ScrollBar\r\nimport { PerfectScrollbarModule } from 'ngx-perfect-scrollbar';\r\nimport { CodePreviewComponent } from './code-preview.component';\r\n// Core Module\r\nimport { CoreModule } from '../../../../../core/core.module';\r\n// Highlight JS\r\nimport { HighlightModule } from 'ngx-highlightjs';\r\n\r\n@NgModule({\r\n\timports: [\r\n\t\tCommonModule,\r\n\t\tCoreModule,\r\n\t\tHighlightModule,\r\n\t\tPerfectScrollbarModule,\r\n\t\tClipboardModule,\r\n\r\n\t\t// ngbootstrap\r\n\t\tNgbTabsetModule,\r\n\t\tNgbTooltipModule,\r\n\t],\r\n\texports: [CodePreviewComponent],\r\n\tdeclarations: [CodePreviewComponent]\r\n})\r\nexport class CodePreviewModule {\r\n}\r\n","<!--begin::Notice-->\r\n<div class=\"alert alert-custom alert-white alert-shadow gutter-b\"\r\n     [ngClass]=\"classes\" role=\"alert\">\r\n\t<ng-container *ngIf=\"icon || svg\">\r\n    <div class=\"alert-icon alert-icon-top\">\r\n      <ng-container *ngIf=\"svg\">\r\n        <span class=\"svg-icon svg-icon-3x svg-icon-primary mt-4\" [inlineSVG]=\"svg\"></span>\r\n      </ng-container>\r\n      <ng-container *ngIf=\"icon\">\r\n        <i [ngClass]=\"icon\"></i>\r\n      </ng-container>\r\n    </div>\r\n  </ng-container>\r\n\t<div class=\"alert-text\">\r\n\t\t<ng-content></ng-content>\r\n\t</div>\r\n</div>\r\n<!--end::Notice-->\r\n","// Angular\r\nimport { Component, OnInit, Input, ChangeDetectionStrategy } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'kt-notice',\r\n  templateUrl: './notice.component.html',\r\n  changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class NoticeComponent implements OnInit {\r\n  // Public properties\r\n  @Input() classes: string;\r\n  @Input() icon: string;\r\n  @Input() svg: string;\r\n\r\n  /**\r\n   * Component constructor\r\n   */\r\n  constructor() {\r\n  }\r\n\r\n  /**\r\n   * On init\r\n   */\r\n  ngOnInit() {\r\n  }\r\n}\r\n"],"sourceRoot":"webpack:///"}